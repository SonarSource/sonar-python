[
  {
    "key": "attr-defined",
    "name": "Check that attribute exists",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-attribute-exists-attr-defined"
  },
  {
    "key": "union-attr",
    "name": "Check that attribute exists in each union item",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-attribute-exists-in-each-union-item-union-attr"
  },
  {
    "key": "name-defined",
    "name": "Check that name is defined",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-name-is-defined-name-defined"
  },
  {
    "key": "used-before-def",
    "name": "Check that a variable is not used before it’s defined",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-a-variable-is-not-used-before-it-s-defined-used-before-def"
  },
  {
    "key": "call-arg",
    "name": "Check arguments in calls",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-arguments-in-calls-call-arg"
  },
  {
    "key": "arg-type",
    "name": "Check argument types",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-argument-types-arg-type"
  },
  {
    "key": "call-overload",
    "name": "Check calls to overloaded functions",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-calls-to-overloaded-functions-call-overload"
  },
  {
    "key": "valid-type",
    "name": "Check validity of types",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-validity-of-types-valid-type"
  },
  {
    "key": "var-annotated",
    "name": "Require annotation if variable type is unclear",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#require-annotation-if-variable-type-is-unclear-var-annotated"
  },
  {
    "key": "override",
    "name": "Check validity of overrides",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-validity-of-overrides-override"
  },
  {
    "key": "return",
    "name": "Check that function returns a value",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-function-returns-a-value-return"
  },
  {
    "key": "return-value",
    "name": "Check that return value is compatible",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-return-value-is-compatible-return-value"
  },
  {
    "key": "assignment",
    "name": "Check types in assignment statement",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-types-in-assignment-statement-assignment"
  },
  {
    "key": "method-assign",
    "name": "Check that assignment target is not a method",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-assignment-target-is-not-a-method-method-assign"
  },
  {
    "key": "type-var",
    "name": "Check type variable values",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-type-variable-values-type-var"
  },
  {
    "key": "operator",
    "name": "Check uses of various operators",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-uses-of-various-operators-operator"
  },
  {
    "key": "index",
    "name": "Check indexing operations",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-indexing-operations-index"
  },
  {
    "key": "list-item",
    "name": "Check list items",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-list-items-list-item"
  },
  {
    "key": "dict-item",
    "name": "Check dict items",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-dict-items-dict-item"
  },
  {
    "key": "typeddict-item",
    "name": "Check TypedDict items",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-typeddict-items-typeddict-item"
  },
  {
    "key": "typeddict-unknown-key",
    "name": "Check TypedDict Keys",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-typeddict-keys-typeddict-unknown-key"
  },
  {
    "key": "has-type",
    "name": "Check that type of target is known",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-type-of-target-is-known-has-type"
  },
  {
    "key": "import",
    "name": "Check that import target can be found",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-import-target-can-be-found-import"
  },
  {
    "key": "no-redef",
    "name": "Check that each name is defined once",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-each-name-is-defined-once-no-redef"
  },
  {
    "key": "func-returns-value",
    "name": "Check that called function returns a value",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-called-function-returns-a-value-func-returns-value"
  },
  {
    "key": "abstract",
    "name": "Check instantiation of abstract classes",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-instantiation-of-abstract-classes-abstract"
  },
  {
    "key": "type-abstract",
    "name": "Safe handling of abstract type object types",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#safe-handling-of-abstract-type-object-types-type-abstract"
  },
  {
    "key": "safe-super",
    "name": "Check that call to an abstract method via super is valid",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-call-to-an-abstract-method-via-super-is-valid-safe-super"
  },
  {
    "key": "valid-newtype",
    "name": "Check the target of NewType",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-the-target-of-newtype-valid-newtype"
  },
  {
    "key": "exit-return",
    "name": "Check the return type of __exit__",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-the-return-type-of-exit-exit-return"
  },
  {
    "key": "name-match",
    "name": "Check that naming is consistent",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-naming-is-consistent-name-match"
  },
  {
    "key": "literal-required",
    "name": "Check that literal is used where expected",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-literal-is-used-where-expected-literal-required"
  },
  {
    "key": "no-overload-impl",
    "name": "Check that overloaded functions have an implementation",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-overloaded-functions-have-an-implementation-no-overload-impl"
  },
  {
    "key": "unused-coroutine",
    "name": "Check that coroutine return value is used",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-coroutine-return-value-is-used-unused-coroutine"
  },
  {
    "key": "assert-type",
    "name": "Check types in assert_type",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-types-in-assert-type-assert-type"
  },
  {
    "key": "truthy-function",
    "name": "Check that function isn’t used in boolean context",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#check-that-function-isn-t-used-in-boolean-context-truthy-function"
  },
  {
    "key": "syntax",
    "name": "Report syntax errors",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#report-syntax-errors-syntax"
  },
  {
    "key": "misc",
    "name": "Miscellaneous checks",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list.html#miscellaneous-checks-misc"
  },
  {
    "key": "type-arg",
    "name": "Check that type arguments exist",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-type-arguments-exist-type-arg"
  },
  {
    "key": "no-untyped-def",
    "name": "Check that every function has an annotation",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-every-function-has-an-annotation-no-untyped-def"
  },
  {
    "key": "redundant-cast",
    "name": "Check that cast is not redundant",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-cast-is-not-redundant-redundant-cast"
  },
  {
    "key": "redundant-self",
    "name": "Check that methods do not have redundant Self annotations",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-methods-do-not-have-redundant-self-annotations-redundant-self"
  },
  {
    "key": "comparison-overlap",
    "name": "Check that comparisons are overlapping",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-comparisons-are-overlapping-comparison-overlap"
  },
  {
    "key": "no-untyped-call",
    "name": "Check that no untyped functions are called",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-no-untyped-functions-are-called-no-untyped-call"
  },
  {
    "key": "no-any-return",
    "name": "Check that function does not return Any value",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-function-does-not-return-any-value-no-any-return"
  },
  {
    "key": "no-any-unimported",
    "name": "Check that types have no Any components due to missing imports",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-types-have-no-any-components-due-to-missing-imports-no-any-unimported"
  },
  {
    "key": "unreachable",
    "name": "Check that statement or expression is unreachable",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-statement-or-expression-is-unreachable-unreachable"
  },
  {
    "key": "redundant-expr",
    "name": "Check that expression is redundant",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-expression-is-redundant-redundant-expr"
  },
  {
    "key": "truthy-bool",
    "name": "Check that expression is not implicitly true in boolean context",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-expression-is-not-implicitly-true-in-boolean-context-truthy-bool"
  },
  {
    "key": "truthy-iterable",
    "name": "Check that iterable is not implicitly true in boolean context",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-iterable-is-not-implicitly-true-in-boolean-context-truthy-iterable"
  },
  {
    "key": "ignore-without-code",
    "name": "Check that # type: ignore include an error code"
  },
  {
    "key": "unused-awaitable",
    "name": "Check that awaitable return value is used",
    "url": "https://mypy.readthedocs.io/en/stable/error_code_list2.html#check-that-awaitable-return-value-is-used-unused-awaitable"
  }
]
