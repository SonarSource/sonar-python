from typing import Any
from .module import Module

class BatchNorm1d(Module):
    def __init__(self, *args, **kwargs) -> None: ...
    def forward(self, *args, **kwargs) -> Any: ...

class LazyBatchNorm1d(Module):
    def __init__(self, *args, **kwargs) -> None: ...
    def forward(self, *args, **kwargs) -> Any: ...

class BatchNorm2d(Module):
    def __init__(self, *args, **kwargs) -> None: ...
    def forward(self, *args, **kwargs) -> Any: ...

class LazyBatchNorm2d(Module):
    def __init__(self, *args, **kwargs) -> None: ...
    def forward(self, *args, **kwargs) -> Any: ...

class BatchNorm3d(Module):
    def __init__(self, *args, **kwargs) -> None: ...
    def forward(self, *args, **kwargs) -> Any: ...

class LazyBatchNorm3d(Module):
    def __init__(self, *args, **kwargs) -> None: ...
    def forward(self, *args, **kwargs) -> Any: ...

class SyncBatchNorm(Module):
    def __init__(self, *args, **kwargs) -> None: ...
    def forward(self, *args, **kwargs) -> Any: ...