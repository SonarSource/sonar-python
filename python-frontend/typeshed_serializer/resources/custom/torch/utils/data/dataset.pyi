from typing import Any

class Dataset:
  def __init__(self, *args, **kwargs) -> None: ...
  def __getitem__(self, index) -> Any: ...
  def __add__(self, other: "Dataset") -> ConcatDataset: ...

class IterableDataset(Dataset):
  def __init__(self, *args, **kwargs) -> None: ...
  def __add__(self, other: Dataset) -> ChainDataset: ...

class TensorDataset(Dataset):
  def __init__(self, *args, **kwargs) -> None: ...
  def __getitem__(self, index) -> Any: ...
  def __len__(self) -> int: ...

class StackDataset(Dataset):
  def __init__(self, *args, **kwargs) -> None: ...
  def __getitem__(self, index) -> Any: ...
  def __getitems__(self, indices: list) -> Any: ...
  def __len__(self) -> int: ...

class ConcatDataset(Dataset):
  def __init__(self, *args, **kwargs) -> None: ...
  def __len__(self) -> int: ...
  def __getitem__(self, idx) -> Any: ...

class ChainDataset(Dataset):
  def __init__(self, *args, **kwargs) -> None: ...
  def __iter__(self) -> Dataset: ...
  def __len__(self) -> int: ...

class Subset(Dataset):
  def __init__(self, *args, **kwargs) -> None: ...
  def __getitem__(self, idx) -> Any: ...
  def __getitems__(self, indices: list) -> Any: ...
  def __len__(self) -> int: ...
