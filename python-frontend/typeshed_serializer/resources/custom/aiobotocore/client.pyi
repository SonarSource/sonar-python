from SonarPythonAnalyzerFakeStub import CustomStubBase
from typing import Any

class AioBaseClient(CustomStubBase):
    def put_metric_data(self, **kwargs) -> None: ...

    # S3 client 
    def copy_object(self, *args, **kwargs) -> Any: ...
    def create_bucket(self, *args, **kwargs) -> Any: ...
    def create_bucket_metadata_configuration(self, *args, **kwargs) -> Any: ...
    def create_bucket_metadata_table_configuration(self, *args, **kwargs) -> Any: ...
    def create_multipart_upload(self, *args, **kwargs) -> Any: ...
    def create_session(self, *args, **kwargs) -> Any: ...
    def delete_bucket(self, *args, **kwargs) -> Any: ...
    def delete_bucket_analytics_configuration(self, *args, **kwargs) -> Any: ...
    def delete_bucket_cors(self, *args, **kwargs) -> Any: ...
    def delete_bucket_encryption(self, *args, **kwargs) -> Any: ...
    def delete_bucket_intelligent_tiering_configuration(self, *args, **kwargs) -> Any: ...
    def delete_bucket_inventory_configuration(self, *args, **kwargs) -> Any: ...
    def delete_bucket_lifecycle(self, *args, **kwargs) -> Any: ...
    def delete_bucket_metadata_configuration(self, *args, **kwargs) -> Any: ...
    def delete_bucket_metadata_table_configuration(self, *args, **kwargs) -> Any: ...
    def delete_bucket_metrics_configuration(self, *args, **kwargs) -> Any: ...
    def delete_bucket_ownership_controls(self, *args, **kwargs) -> Any: ...
    def delete_bucket_policy(self, *args, **kwargs) -> Any: ...
    def delete_bucket_replication(self, *args, **kwargs) -> Any: ...
    def delete_bucket_tagging(self, *args, **kwargs) -> Any: ...
    def delete_bucket_website(self, *args, **kwargs) -> Any: ...
    def delete_object(self, *args, **kwargs) -> Any: ...
    def delete_object_tagging(self, *args, **kwargs) -> Any: ...
    def delete_objects(self, *args, **kwargs) -> Any: ...
    def delete_public_access_block(self, *args, **kwargs) -> Any: ...
    def download_file(self, *args, **kwargs) -> Any: ...
    def download_fileobj(self, *args, **kwargs) -> Any: ...
    def generate_presigned_post(self, *args, **kwargs) -> Any: ...
    def generate_presigned_url(self, *args, **kwargs) -> Any: ...
    def get_bucket_accelerate_configuration(self, *args, **kwargs) -> Any: ...
    def get_bucket_acl(self, *args, **kwargs) -> Any: ...
    def get_bucket_analytics_configuration(self, *args, **kwargs) -> Any: ...
    def get_bucket_cors(self, *args, **kwargs) -> Any: ...
    def get_bucket_encryption(self, *args, **kwargs) -> Any: ...
    def get_bucket_intelligent_tiering_configuration(self, *args, **kwargs) -> Any: ...
    def get_bucket_inventory_configuration(self, *args, **kwargs) -> Any: ...
    def get_bucket_lifecycle(self, *args, **kwargs) -> Any: ...
    def get_bucket_lifecycle_configuration(self, *args, **kwargs) -> Any: ...
    def get_bucket_location(self, *args, **kwargs) -> Any: ...
    def get_bucket_logging(self, *args, **kwargs) -> Any: ...
    def get_bucket_metadata_configuration(self, *args, **kwargs) -> Any: ...
    def get_bucket_metadata_table_configuration(self, *args, **kwargs) -> Any: ...
    def get_bucket_metrics_configuration(self, *args, **kwargs) -> Any: ...
    def get_bucket_notification(self, *args, **kwargs) -> Any: ...
    def get_bucket_notification_configuration(self, *args, **kwargs) -> Any: ...
    def get_bucket_ownership_controls(self, *args, **kwargs) -> Any: ...
    def get_bucket_policy(self, *args, **kwargs) -> Any: ...
    def get_bucket_policy_status(self, *args, **kwargs) -> Any: ...
    def get_bucket_replication(self, *args, **kwargs) -> Any: ...
    def get_bucket_request_payment(self, *args, **kwargs) -> Any: ...
    def get_bucket_tagging(self, *args, **kwargs) -> Any: ...
    def get_bucket_versioning(self, *args, **kwargs) -> Any: ...
    def get_bucket_website(self, *args, **kwargs) -> Any: ...
    def get_object(self, *args, **kwargs) -> Any: ...
    def get_object_acl(self, *args, **kwargs) -> Any: ...
    def get_object_attributes(self, *args, **kwargs) -> Any: ...
    def get_object_legal_hold(self, *args, **kwargs) -> Any: ...
    def get_object_lock_configuration(self, *args, **kwargs) -> Any: ...
    def get_object_retention(self, *args, **kwargs) -> Any: ...
    def get_object_tagging(self, *args, **kwargs) -> Any: ...
    def get_object_torrent(self, *args, **kwargs) -> Any: ...
    def get_paginator(self, *args, **kwargs) -> Any: ...
    def get_public_access_block(self, *args, **kwargs) -> Any: ...
    def get_waiter(self, *args, **kwargs) -> Any: ...
    def head_bucket(self, *args, **kwargs) -> Any: ...
    def head_object(self, *args, **kwargs) -> Any: ...
    def list_bucket_analytics_configurations(self, *args, **kwargs) -> Any: ...
    def list_bucket_intelligent_tiering_configurations(self, *args, **kwargs) -> Any: ...
    def list_bucket_inventory_configurations(self, *args, **kwargs) -> Any: ...
    def list_bucket_metrics_configurations(self, *args, **kwargs) -> Any: ...
    def list_buckets(self, *args, **kwargs) -> Any: ...
    def list_directory_buckets(self, *args, **kwargs) -> Any: ...
    def list_multipart_uploads(self, *args, **kwargs) -> Any: ...
    def list_object_versions(self, *args, **kwargs) -> Any: ...
    def list_objects(self, *args, **kwargs) -> Any: ...
    def list_objects_v2(self, *args, **kwargs) -> Any: ...
    def list_parts(self, *args, **kwargs) -> Any: ...
    def put_bucket_accelerate_configuration(self, *args, **kwargs) -> Any: ...
    def put_bucket_acl(self, *args, **kwargs) -> Any: ...
    def put_bucket_analytics_configuration(self, *args, **kwargs) -> Any: ...
    def put_bucket_cors(self, *args, **kwargs) -> Any: ...
    def put_bucket_encryption(self, *args, **kwargs) -> Any: ...
    def put_bucket_intelligent_tiering_configuration(self, *args, **kwargs) -> Any: ...
    def put_bucket_inventory_configuration(self, *args, **kwargs) -> Any: ...
    def put_bucket_lifecycle(self, *args, **kwargs) -> Any: ...
    def put_bucket_lifecycle_configuration(self, *args, **kwargs) -> Any: ...
    def put_bucket_logging(self, *args, **kwargs) -> Any: ...
    def put_bucket_metrics_configuration(self, *args, **kwargs) -> Any: ...
    def put_bucket_notification(self, *args, **kwargs) -> Any: ...
    def put_bucket_notification_configuration(self, *args, **kwargs) -> Any: ...
    def put_bucket_ownership_controls(self, *args, **kwargs) -> Any: ...
    def put_bucket_policy(self, *args, **kwargs) -> Any: ...
    def put_bucket_replication(self, *args, **kwargs) -> Any: ...
    def put_bucket_request_payment(self, *args, **kwargs) -> Any: ...
    def put_bucket_tagging(self, *args, **kwargs) -> Any: ...
    def put_bucket_versioning(self, *args, **kwargs) -> Any: ...
    def put_bucket_website(self, *args, **kwargs) -> Any: ...
    def put_object(self, *args, **kwargs) -> Any: ...
    def put_object_acl(self, *args, **kwargs) -> Any: ...
    def put_object_legal_hold(self, *args, **kwargs) -> Any: ...
    def put_object_lock_configuration(self, *args, **kwargs) -> Any: ...
    def put_object_retention(self, *args, **kwargs) -> Any: ...
    def put_object_tagging(self, *args, **kwargs) -> Any: ...
    def put_public_access_block(self, *args, **kwargs) -> Any: ...
    def rename_object(self, *args, **kwargs) -> Any: ...
    def restore_object(self, *args, **kwargs) -> Any: ...
    def select_object_content(self, *args, **kwargs) -> Any: ...
    def update_bucket_metadata_inventory_table_configuration(self, *args, **kwargs) -> Any: ...
    def update_bucket_metadata_journal_table_configuration(self, *args, **kwargs) -> Any: ...
    def upload_file(self, *args, **kwargs) -> Any: ...
    def upload_fileobj(self, *args, **kwargs) -> Any: ...
    def upload_part(self, *args, **kwargs) -> Any: ...
    def upload_part_copy(self, *args, **kwargs) -> Any: ...
    def write_get_object_response(self, *args, **kwargs) -> Any: ...

