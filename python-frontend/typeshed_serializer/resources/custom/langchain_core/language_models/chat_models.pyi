from typing import Iterator, AsyncIterator, List

from langchain_core.messages.base import BaseMessage
from langchain_core.outputs.llm_result import LLMResult

from SonarPythonAnalyzerFakeStub import CustomStubBase


class BaseChatModel(CustomStubBase):
    def invoke(self, *args, **kwargs) -> BaseMessage: ...
    async def ainvoke(self, *args, **kwargs) -> BaseMessage: ...
    def stream(self, *args, **kwargs) -> Iterator[BaseMessage]: ...
    async def astream(self, *args, **kwargs) -> AsyncIterator[BaseMessage]: ...
    def batch(self, *args, **kwargs) -> List[BaseMessage]: ...
    async def abatch(self, *args, **kwargs) -> List[BaseMessage]: ...
    def generate(self, *args, **kwargs) -> LLMResult: ...
    async def agenerate(self, *args, **kwargs) -> LLMResult: ...
    def bind_tools(self, *args, **kwargs) -> BaseChatModel: ...
