from typing import Iterator, AsyncIterator

from langchain_core.outputs.llm_result import LLMResult

from SonarPythonAnalyzerFakeStub import CustomStubBase


class BaseLLM(CustomStubBase):
    def generate(self, *args, **kwargs) -> LLMResult: ...
    async def agenerate(self, *args, **kwargs) -> LLMResult: ...
    def invoke(self, *args, **kwargs) -> str: ...
    async def ainvoke(self, *args, **kwargs) -> str: ...
    def batch(self, *args, **kwargs) -> list[str]: ...
    async def abatch(self, *args, **kwargs) -> list[str]: ...
    def stream(self, *args, **kwargs) -> Iterator[str]: ...
    async def astream(self, *args, **kwargs) -> AsyncIterator[str]: ...
