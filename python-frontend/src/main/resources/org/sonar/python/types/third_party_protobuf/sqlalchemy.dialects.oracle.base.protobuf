
sqlalchemy.dialects.oracle.baseﬁ
BLOBsqlalchemy.sql.sqltypes.BLOB"#sqlalchemy.sql.sqltypes.LargeBinaryj38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.BLOB.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Ÿ
CHARsqlalchemy.sql.sqltypes.CHAR"sqlalchemy.sql.sqltypes.Stringj38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.CHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313◊
CLOBsqlalchemy.sql.sqltypes.CLOB"sqlalchemy.sql.sqltypes.Textj38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.CLOB.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313€
FLOATsqlalchemy.sql.sqltypes.FLOAT"sqlalchemy.sql.sqltypes.Floatj38j39j310j311j312j313rx
__visit_name__,sqlalchemy.sql.sqltypes.FLOAT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313„
INTEGERsqlalchemy.sql.sqltypes.INTEGER"sqlalchemy.sql.sqltypes.Integerj38j39j310j311j312j313rz
__visit_name__.sqlalchemy.sql.sqltypes.INTEGER.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313›
NCHARsqlalchemy.sql.sqltypes.NCHAR"sqlalchemy.sql.sqltypes.Unicodej38j39j310j311j312j313rx
__visit_name__,sqlalchemy.sql.sqltypes.NCHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Ê
NVARCHAR sqlalchemy.sql.sqltypes.NVARCHAR"sqlalchemy.sql.sqltypes.Unicodej38j39j310j311j312j313r{
__visit_name__/sqlalchemy.sql.sqltypes.NVARCHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313¿
	TIMESTAMP!sqlalchemy.sql.sqltypes.TIMESTAMP" sqlalchemy.sql.sqltypes.DateTime*ﬁ
__init__*sqlalchemy.sql.sqltypes.TIMESTAMP.__init__"
None*P
selfF
!sqlalchemy.sql.sqltypes.TIMESTAMP"!sqlalchemy.sql.sqltypes.TIMESTAMP*.
timezone
builtins.bool"builtins.bool z38z39z310z311z312z313*s
get_dbapi_type0sqlalchemy.sql.sqltypes.TIMESTAMP.get_dbapi_type*
self*	
dbapiz38z39z310z311z312z313j38j39j310j311j312j313r|
__visit_name__0sqlalchemy.sql.sqltypes.TIMESTAMP.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313‚
VARCHARsqlalchemy.sql.sqltypes.VARCHAR"sqlalchemy.sql.sqltypes.Stringj38j39j310j311j312j313rz
__visit_name__.sqlalchemy.sql.sqltypes.VARCHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Á
RAW#sqlalchemy.dialects.oracle.base.RAW"sqlalchemy.sql.sqltypes._Binaryj38j39j310j311j312j313r~
__visit_name__2sqlalchemy.dialects.oracle.base.RAW.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Î
NCLOB%sqlalchemy.dialects.oracle.base.NCLOB"sqlalchemy.sql.sqltypes.Textj38j39j310j311j312j313rÄ
__visit_name__4sqlalchemy.dialects.oracle.base.NCLOB.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313˜
VARCHAR2(sqlalchemy.dialects.oracle.base.VARCHAR2"sqlalchemy.sql.sqltypes.VARCHARj38j39j310j311j312j313rÉ
__visit_name__7sqlalchemy.dialects.oracle.base.VARCHAR2.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313É
NUMBER&sqlalchemy.dialects.oracle.base.NUMBER"sqlalchemy.sql.sqltypes.Numeric"sqlalchemy.sql.sqltypes.Integer*É
__init__/sqlalchemy.dialects.oracle.base.NUMBER.__init__"
None*Z
selfP
&sqlalchemy.dialects.oracle.base.NUMBER"&sqlalchemy.dialects.oracle.base.NUMBER*l
	precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
scale[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	asdecimal[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*i
adapt,sqlalchemy.dialects.oracle.base.NUMBER.adapt*
self*
impltypez38z39z310z311z312z313j38j39j310j311j312j313rÅ
__visit_name__5sqlalchemy.dialects.oracle.base.NUMBER.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313ç
DOUBLE_PRECISION0sqlalchemy.dialects.oracle.base.DOUBLE_PRECISION"sqlalchemy.sql.sqltypes.Floatj38j39j310j311j312j313rã
__visit_name__?sqlalchemy.dialects.oracle.base.DOUBLE_PRECISION.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Ñ
BINARY_DOUBLE-sqlalchemy.dialects.oracle.base.BINARY_DOUBLE"sqlalchemy.sql.sqltypes.Floatj38j39j310j311j312j313rà
__visit_name__<sqlalchemy.dialects.oracle.base.BINARY_DOUBLE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Å
BINARY_FLOAT,sqlalchemy.dialects.oracle.base.BINARY_FLOAT"sqlalchemy.sql.sqltypes.Floatj38j39j310j311j312j313rá
__visit_name__;sqlalchemy.dialects.oracle.base.BINARY_FLOAT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Ú
BFILE%sqlalchemy.dialects.oracle.base.BFILE"#sqlalchemy.sql.sqltypes.LargeBinaryj38j39j310j311j312j313rÄ
__visit_name__4sqlalchemy.dialects.oracle.base.BFILE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Á
LONG$sqlalchemy.dialects.oracle.base.LONG"sqlalchemy.sql.sqltypes.Textj38j39j310j311j312j313r
__visit_name__3sqlalchemy.dialects.oracle.base.LONG.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Î
DATE$sqlalchemy.dialects.oracle.base.DATE" sqlalchemy.sql.sqltypes.DateTimej38j39j310j311j312j313r
__visit_name__3sqlalchemy.dialects.oracle.base.DATE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Õ

INTERVAL(sqlalchemy.dialects.oracle.base.INTERVAL")sqlalchemy.sql.type_api.NativeForEmulated")sqlalchemy.sql.sqltypes._AbstractInterval*™
__init__1sqlalchemy.dialects.oracle.base.INTERVAL.__init__"
None*^
selfT
(sqlalchemy.dialects.oracle.base.INTERVAL"(sqlalchemy.dialects.oracle.base.INTERVAL*p
day_precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *s
second_precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*¸

as_generic3sqlalchemy.dialects.oracle.base.INTERVAL.as_generic"
Any*^
selfT
(sqlalchemy.dialects.oracle.base.INTERVAL"(sqlalchemy.dialects.oracle.base.INTERVAL*4
allow_nulltype
builtins.bool"builtins.bool z38z39z310z311z312z313*ê
coerce_compared_value>sqlalchemy.dialects.oracle.base.INTERVAL.coerce_compared_value*
self*
op*	
valuez38z39z310z311z312z313j38j39j310j311j312j313rÉ
__visit_name__7sqlalchemy.dialects.oracle.base.INTERVAL.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313rl
day_precision6sqlalchemy.dialects.oracle.base.INTERVAL.day_precision
Any*38*39*310*311*312*313rr
second_precision9sqlalchemy.dialects.oracle.base.INTERVAL.second_precision
Any*38*39*310*311*312*313Ò
ROWID%sqlalchemy.dialects.oracle.base.ROWID""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313rÄ
__visit_name__4sqlalchemy.dialects.oracle.base.ROWID.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Ä
_OracleBoolean.sqlalchemy.dialects.oracle.base._OracleBoolean"sqlalchemy.sql.sqltypes.Boolean*Ä
get_dbapi_type=sqlalchemy.dialects.oracle.base._OracleBoolean.get_dbapi_type*
self*	
dbapiz38z39z310z311z312z313j38j39j310j311j312j313◊
OracleTypeCompiler2sqlalchemy.dialects.oracle.base.OracleTypeCompiler"+sqlalchemy.sql.compiler.GenericTypeCompiler*å
visit_datetimeAsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_datetime*
self*	
type_*
kwz38z39z310z311z312z313*Ü
visit_float>sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_float*
self*	
type_*
kwz38z39z310z311z312z313*ä
visit_unicode@sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_unicode*
self*	
type_*
kwz38z39z310z311z312z313*å
visit_INTERVALAsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_INTERVAL*
self*	
type_*
kwz38z39z310z311z312z313*Ñ

visit_LONG=sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_LONG*
self*	
type_*
kwz38z39z310z311z312z313*é
visit_TIMESTAMPBsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_TIMESTAMP*
self*	
type_*
kwz38z39z310z311z312z313*ú
visit_DOUBLE_PRECISIONIsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_DOUBLE_PRECISION*
self*	
type_*
kwz38z39z310z311z312z313*ñ
visit_BINARY_DOUBLEFsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_BINARY_DOUBLE*
self*	
type_*
kwz38z39z310z311z312z313*î
visit_BINARY_FLOATEsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_BINARY_FLOAT*
self*	
type_*
kwz38z39z310z311z312z313*Ü
visit_FLOAT>sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_FLOAT*
self*	
type_*
kwz38z39z310z311z312z313*à
visit_NUMBER?sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_NUMBER*
self*	
type_*
kwz38z39z310z311z312z313*à
visit_string?sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_string*
self*	
type_*
kwz38z39z310z311z312z313*å
visit_VARCHAR2Asqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_VARCHAR2*
self*	
type_*
kwz38z39z310z311z312z313*é
visit_NVARCHAR2Bsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_NVARCHAR2*
self*	
type_*
kwz38z39z310z311z312z313*ä
visit_VARCHAR@sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_VARCHAR*
self*	
type_*
kwz38z39z310z311z312z313*Ñ

visit_text=sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_text*
self*	
type_*
kwz38z39z310z311z312z313*î
visit_unicode_textEsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_unicode_text*
self*	
type_*
kwz38z39z310z311z312z313*î
visit_large_binaryEsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_large_binary*
self*	
type_*
kwz38z39z310z311z312z313*í
visit_big_integerDsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_big_integer*
self*	
type_*
kwz38z39z310z311z312z313*ä
visit_boolean@sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_boolean*
self*	
type_*
kwz38z39z310z311z312z313*Ç
	visit_RAW<sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_RAW*
self*	
type_*
kwz38z39z310z311z312z313*Ü
visit_ROWID>sqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_ROWID*
self*	
type_*
kwz38z39z310z311z312z313j38j39j310j311j312j313rx
visit_NVARCHARAsqlalchemy.dialects.oracle.base.OracleTypeCompiler.visit_NVARCHAR
Any*38*39*310*311*312*313ó&
OracleCompiler.sqlalchemy.dialects.oracle.base.OracleCompiler"#sqlalchemy.sql.compiler.SQLCompiler*˝
__init__7sqlalchemy.dialects.oracle.base.OracleCompiler.__init__"
None*j
self`
.sqlalchemy.dialects.oracle.base.OracleCompiler".sqlalchemy.dialects.oracle.base.OracleCompiler*
args
Any*
kwargs
Anyz38z39z310z311z312z313*õ
visit_mod_binary?sqlalchemy.dialects.oracle.base.OracleCompiler.visit_mod_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313*Ö
visit_now_func=sqlalchemy.dialects.oracle.base.OracleCompiler.visit_now_func*
self*
fn*
kwz38z39z310z311z312z313*ï
visit_char_length_funcEsqlalchemy.dialects.oracle.base.OracleCompiler.visit_char_length_func*
self*
fn*
kwz38z39z310z311z312z313*•
visit_match_op_binaryDsqlalchemy.dialects.oracle.base.OracleCompiler.visit_match_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313*

visit_true9sqlalchemy.dialects.oracle.base.OracleCompiler.visit_true*
self*
expr*
kwz38z39z310z311z312z313*Å
visit_false:sqlalchemy.dialects.oracle.base.OracleCompiler.visit_false*
self*
expr*
kwz38z39z310z311z312z313*à
get_cte_preamble?sqlalchemy.dialects.oracle.base.OracleCompiler.get_cte_preamble*
self*
	recursivez38z39z310z311z312z313*é
get_select_hint_textCsqlalchemy.dialects.oracle.base.OracleCompiler.get_select_hint_text*
self*
byfromsz38z39z310z311z312z313*â
function_argspec?sqlalchemy.dialects.oracle.base.OracleCompiler.function_argspec*
self*
fn*
kwz38z39z310z311z312z313*á
visit_function=sqlalchemy.dialects.oracle.base.OracleCompiler.visit_function*
self*
func*
kwz38z39z310z311z312z313*†
visit_table_valued_columnHsqlalchemy.dialects.oracle.base.OracleCompiler.visit_table_valued_column*
self*
element*
kwz38z39z310z311z312z313*q
default_from;sqlalchemy.dialects.oracle.base.OracleCompiler.default_from*
selfz38z39z310z311z312z313*

visit_join9sqlalchemy.dialects.oracle.base.OracleCompiler.visit_join"
Any*j
self`
.sqlalchemy.dialects.oracle.base.OracleCompiler".sqlalchemy.dialects.oracle.base.OracleCompiler*
join
Any*n
from_linter[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313*ó
visit_outer_join_columnFsqlalchemy.dialects.oracle.base.OracleCompiler.visit_outer_join_column*
self*
vc*
kwz38z39z310z311z312z313*Ü
visit_sequence=sqlalchemy.dialects.oracle.base.OracleCompiler.visit_sequence*
self*
seq*
kwz38z39z310z311z312z313*¢
get_render_as_alias_suffixIsqlalchemy.dialects.oracle.base.OracleCompiler.get_render_as_alias_suffix*
self*
alias_name_textz38z39z310z311z312z313*ó
returning_clause?sqlalchemy.dialects.oracle.base.OracleCompiler.returning_clause*
self*
stmt*
returning_colsz38z39z310z311z312z313*™
translate_select_structureIsqlalchemy.dialects.oracle.base.OracleCompiler.translate_select_structure*
self*
select_stmt*

kwargsz38z39z310z311z312z313*Ö
limit_clause;sqlalchemy.dialects.oracle.base.OracleCompiler.limit_clause*
self*

select*
kwz38z39z310z311z312z313*å
visit_empty_set_exprCsqlalchemy.dialects.oracle.base.OracleCompiler.visit_empty_set_expr*
self*	
type_z38z39z310z311z312z313*è
for_update_clause@sqlalchemy.dialects.oracle.base.OracleCompiler.for_update_clause*
self*

select*
kwz38z39z310z311z312z313*µ
visit_is_distinct_from_binaryLsqlalchemy.dialects.oracle.base.OracleCompiler.visit_is_distinct_from_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313*Ω
!visit_is_not_distinct_from_binaryPsqlalchemy.dialects.oracle.base.OracleCompiler.visit_is_not_distinct_from_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313*≥
visit_regexp_match_op_binaryKsqlalchemy.dialects.oracle.base.OracleCompiler.visit_regexp_match_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313*ª
 visit_not_regexp_match_op_binaryOsqlalchemy.dialects.oracle.base.OracleCompiler.visit_not_regexp_match_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313*∑
visit_regexp_replace_op_binaryMsqlalchemy.dialects.oracle.base.OracleCompiler.visit_regexp_replace_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313j38j39j310j311j312j313rz
compound_keywords@sqlalchemy.dialects.oracle.base.OracleCompiler.compound_keywords
Any*38*39*310*311*312*313rì
has_out_parametersAsqlalchemy.dialects.oracle.base.OracleCompiler.has_out_parameters
builtins.bool"builtins.bool*38*39*310*311*312*313≤	
OracleDDLCompiler1sqlalchemy.dialects.oracle.base.OracleDDLCompiler"#sqlalchemy.sql.compiler.DDLCompiler*†
define_constraint_cascadesLsqlalchemy.dialects.oracle.base.OracleDDLCompiler.define_constraint_cascades*
self*

constraintz38z39z310z311z312z313*ñ
visit_drop_table_commentJsqlalchemy.dialects.oracle.base.OracleDDLCompiler.visit_drop_table_comment*
self*
dropz38z39z310z311z312z313*å
visit_create_indexDsqlalchemy.dialects.oracle.base.OracleDDLCompiler.visit_create_index*
self*

createz38z39z310z311z312z313*â
post_create_tableCsqlalchemy.dialects.oracle.base.OracleDDLCompiler.post_create_table*
self*	
tablez38z39z310z311z312z313*ö
get_identity_optionsFsqlalchemy.dialects.oracle.base.OracleDDLCompiler.get_identity_options*
self*
identity_optionsz38z39z310z311z312z313*ï
visit_computed_columnGsqlalchemy.dialects.oracle.base.OracleDDLCompiler.visit_computed_column*
self*
	generatedz38z39z310z311z312z313*ú
visit_identity_columnGsqlalchemy.dialects.oracle.base.OracleDDLCompiler.visit_identity_column*
self*
identity*
kwz38z39z310z311z312z313j38j39j310j311j312j313 
OracleIdentifierPreparer8sqlalchemy.dialects.oracle.base.OracleIdentifierPreparer"*sqlalchemy.sql.compiler.IdentifierPreparer*í
format_savepointIsqlalchemy.dialects.oracle.base.OracleIdentifierPreparer.format_savepoint*
self*
	savepointz38z39z310z311z312z313j38j39j310j311j312j313r~
reserved_wordsGsqlalchemy.dialects.oracle.base.OracleIdentifierPreparer.reserved_words
Any*38*39*310*311*312*313rñ
illegal_initial_charactersSsqlalchemy.dialects.oracle.base.OracleIdentifierPreparer.illegal_initial_characters
Any*38*39*310*311*312*313è
OracleExecutionContext6sqlalchemy.dialects.oracle.base.OracleExecutionContext"builtins.object*è
fire_sequenceDsqlalchemy.dialects.oracle.base.OracleExecutionContext.fire_sequence*
self*
seq*	
type_z38z39z310z311z312z313j38j39j310j311j312j313ª_
OracleDialect-sqlalchemy.dialects.oracle.base.OracleDialect"builtins.object*®
__init__6sqlalchemy.dialects.oracle.base.OracleDialect.__init__"
None*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*.
use_ansi
builtins.bool"builtins.bool *5
optimize_limits
builtins.bool"builtins.bool *w
use_binds_for_limits[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *;
use_nchar_for_unicode
builtins.bool"builtins.bool *"
exclude_tablespaces
Any *
kwargs
Anyz38z39z310z311z312z313*Ô

initialize8sqlalchemy.dialects.oracle.base.OracleDialect.initialize"
None*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Anyz38z39z310z311z312z313*ñ
do_release_savepointBsqlalchemy.dialects.oracle.base.OracleDialect.do_release_savepoint"
None*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*
name
Anyz38z39z310z311z312z313*Å
get_isolation_levelAsqlalchemy.dialects.oracle.base.OracleDialect.get_isolation_level"
None*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Anyz38z39z310z311z312z313*û
get_default_isolation_levelIsqlalchemy.dialects.oracle.base.OracleDialect.get_default_isolation_level*
self*

dbapi_connz38z39z310z311z312z313*ï
set_isolation_levelAsqlalchemy.dialects.oracle.base.OracleDialect.set_isolation_level"
None*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*
level
Anyz38z39z310z311z312z313*
	has_table7sqlalchemy.dialects.oracle.base.OracleDialect.has_table"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*˘
has_sequence:sqlalchemy.dialects.oracle.base.OracleDialect.has_sequence"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*
sequence_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*ê
get_schema_names>sqlalchemy.dialects.oracle.base.OracleDialect.get_schema_names*
self*

connection*
kwz38z39z310z311z312z313*Ù
get_table_names=sqlalchemy.dialects.oracle.base.OracleDialect.get_table_names"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*ò
get_temp_table_namesBsqlalchemy.dialects.oracle.base.OracleDialect.get_temp_table_names*
self*

connection*
kwz38z39z310z311z312z313*Ú
get_view_names<sqlalchemy.dialects.oracle.base.OracleDialect.get_view_names"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*˙
get_sequence_names@sqlalchemy.dialects.oracle.base.OracleDialect.get_sequence_names"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*ë
get_table_options?sqlalchemy.dialects.oracle.base.OracleDialect.get_table_options"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*Ö
get_columns9sqlalchemy.dialects.oracle.base.OracleDialect.get_columns"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*ı
get_table_comment?sqlalchemy.dialects.oracle.base.OracleDialect.get_table_comment"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *6
resolve_synonyms
builtins.bool"builtins.bool **
dblink
builtins.str"builtins.str *
kw
Anyz38z39z310z311z312z313*È
get_indexes9sqlalchemy.dialects.oracle.base.OracleDialect.get_indexes"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *6
resolve_synonyms
builtins.bool"builtins.bool **
dblink
builtins.str"builtins.str *
kw
Anyz38z39z310z311z312z313*ë
get_pk_constraint?sqlalchemy.dialects.oracle.base.OracleDialect.get_pk_constraint"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*è
get_foreign_keys>sqlalchemy.dialects.oracle.base.OracleDialect.get_foreign_keys"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*õ
get_unique_constraintsDsqlalchemy.dialects.oracle.base.OracleDialect.get_unique_constraints"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*¯
get_view_definitionAsqlalchemy.dialects.oracle.base.OracleDialect.get_view_definition"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*
	view_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *6
resolve_synonyms
builtins.bool"builtins.bool **
dblink
builtins.str"builtins.str *
kw
Anyz38z39z310z311z312z313*Ã
get_check_constraintsCsqlalchemy.dialects.oracle.base.OracleDialect.get_check_constraints"
Any*h
self^
-sqlalchemy.dialects.oracle.base.OracleDialect"-sqlalchemy.dialects.oracle.base.OracleDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *1
include_all
builtins.bool"builtins.bool *
kw
Anyz38z39z310z311z312z313j38j39j310j311j312j313rt
name2sqlalchemy.dialects.oracle.base.OracleDialect.name
builtins.str"builtins.str*38*39*310*311*312*313rû
supports_statement_cacheFsqlalchemy.dialects.oracle.base.OracleDialect.supports_statement_cache
builtins.bool"builtins.bool*38*39*310*311*312*313rä
supports_alter<sqlalchemy.dialects.oracle.base.OracleDialect.supports_alter
builtins.bool"builtins.bool*38*39*310*311*312*313r§
supports_unicode_statementsIsqlalchemy.dialects.oracle.base.OracleDialect.supports_unicode_statements
builtins.bool"builtins.bool*38*39*310*311*312*313rö
supports_unicode_bindsDsqlalchemy.dialects.oracle.base.OracleDialect.supports_unicode_binds
builtins.bool"builtins.bool*38*39*310*311*312*313rñ
max_identifier_lengthCsqlalchemy.dialects.oracle.base.OracleDialect.max_identifier_length
builtins.int"builtins.int*38*39*310*311*312*313r™
supports_simple_order_by_labelLsqlalchemy.dialects.oracle.base.OracleDialect.supports_simple_order_by_label
builtins.bool"builtins.bool*38*39*310*311*312*313rí
cte_follows_insert@sqlalchemy.dialects.oracle.base.OracleDialect.cte_follows_insert
builtins.bool"builtins.bool*38*39*310*311*312*313rí
supports_sequences@sqlalchemy.dialects.oracle.base.OracleDialect.supports_sequences
builtins.bool"builtins.bool*38*39*310*311*312*313rí
sequences_optional@sqlalchemy.dialects.oracle.base.OracleDialect.sequences_optional
builtins.bool"builtins.bool*38*39*310*311*312*313rî
postfetch_lastrowidAsqlalchemy.dialects.oracle.base.OracleDialect.postfetch_lastrowid
builtins.bool"builtins.bool*38*39*310*311*312*313rê
default_paramstyle@sqlalchemy.dialects.oracle.base.OracleDialect.default_paramstyle
builtins.str"builtins.str*38*39*310*311*312*313rg
colspecs6sqlalchemy.dialects.oracle.base.OracleDialect.colspecs
Any*38*39*310*311*312*313rq
ischema_names;sqlalchemy.dialects.oracle.base.OracleDialect.ischema_names
Any*38*39*310*311*312*313rú
requires_name_normalizeEsqlalchemy.dialects.oracle.base.OracleDialect.requires_name_normalize
builtins.bool"builtins.bool*38*39*310*311*312*313rê
supports_comments?sqlalchemy.dialects.oracle.base.OracleDialect.supports_comments
builtins.bool"builtins.bool*38*39*310*311*312*313rú
supports_default_valuesEsqlalchemy.dialects.oracle.base.OracleDialect.supports_default_values
builtins.bool"builtins.bool*38*39*310*311*312*313r¢
supports_default_metavalueHsqlalchemy.dialects.oracle.base.OracleDialect.supports_default_metavalue
builtins.bool"builtins.bool*38*39*310*311*312*313rò
supports_empty_insertCsqlalchemy.dialects.oracle.base.OracleDialect.supports_empty_insert
builtins.bool"builtins.bool*38*39*310*311*312*313r†
supports_identity_columnsGsqlalchemy.dialects.oracle.base.OracleDialect.supports_identity_columns
builtins.bool"builtins.bool*38*39*310*311*312*313r{
statement_compiler@sqlalchemy.dialects.oracle.base.OracleDialect.statement_compiler
Any*38*39*310*311*312*313ro
ddl_compiler:sqlalchemy.dialects.oracle.base.OracleDialect.ddl_compiler
Any*38*39*310*311*312*313rq
type_compiler;sqlalchemy.dialects.oracle.base.OracleDialect.type_compiler
Any*38*39*310*311*312*313rg
preparer6sqlalchemy.dialects.oracle.base.OracleDialect.preparer
Any*38*39*310*311*312*313r{
reflection_options@sqlalchemy.dialects.oracle.base.OracleDialect.reflection_options
Any*38*39*310*311*312*313r}
construct_argumentsAsqlalchemy.dialects.oracle.base.OracleDialect.construct_arguments
Any*38*39*310*311*312*313rg
use_ansi6sqlalchemy.dialects.oracle.base.OracleDialect.use_ansi
Any*38*39*310*311*312*313ru
optimize_limits=sqlalchemy.dialects.oracle.base.OracleDialect.optimize_limits
Any*38*39*310*311*312*313r}
exclude_tablespacesAsqlalchemy.dialects.oracle.base.OracleDialect.exclude_tablespaces
Any*38*39*310*311*312*313r{
implicit_returning@sqlalchemy.dialects.oracle.base.OracleDialect.implicit_returning
Any*38*39*310*311*312*313
_OuterJoinColumn0sqlalchemy.dialects.oracle.base._OuterJoinColumn"%sqlalchemy.sql.elements.ClauseElement*
__init__9sqlalchemy.dialects.oracle.base._OuterJoinColumn.__init__"
None*n
selfd
0sqlalchemy.dialects.oracle.base._OuterJoinColumn"0sqlalchemy.dialects.oracle.base._OuterJoinColumn*
column
Anyz38z39z310z311z312z313j38j39j310j311j312j313rã
__visit_name__?sqlalchemy.dialects.oracle.base._OuterJoinColumn.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313rf
column7sqlalchemy.dialects.oracle.base._OuterJoinColumn.column
Any*38*39*310*311*312*313*∑
__annotations__/sqlalchemy.dialects.oracle.base.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*e
RESERVED_WORDS.sqlalchemy.dialects.oracle.base.RESERVED_WORDS
Any*38*39*310*311*312*313*]

NO_ARG_FNS*sqlalchemy.dialects.oracle.base.NO_ARG_FNS
Any*38*39*310*311*312*313*Y
colspecs(sqlalchemy.dialects.oracle.base.colspecs
Any*38*39*310*311*312*313*c
ischema_names-sqlalchemy.dialects.oracle.base.ischema_names
Any*38*39*310*311*312*313