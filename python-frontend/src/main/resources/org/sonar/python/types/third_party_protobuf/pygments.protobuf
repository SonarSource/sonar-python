
pygments·
	Formatterpygments.formatter.Formatter"builtins.object*º
get_style_defs+pygments.formatter.Formatter.get_style_defs"
Any*Æ
self£
3pygments.formatter.Formatter[pygments.formatter._T]N
pygments.formatter._T"
builtins.object"builtins.object"builtins.object"pygments.formatter.Formatter*'
arg
builtins.str"builtins.str z38z39z310z311z312z313*q
format#pygments.formatter.Formatter.format*
self*
tokensource*
outfilez38z39z310z311z312z3132π
__init__%pygments.formatter.Formatter.__init__ë
__init__%pygments.formatter.Formatter.__init__"
None*r
selfh
*pygments.formatter.Formatter[builtins.str]
builtins.str"builtins.str"pygments.formatter.Formatter*
encoding
None *
outencoding
None *
options
Any0:typing.overloadX©
__init__%pygments.formatter.Formatter.__init__"
None*x
selfn
,pygments.formatter.Formatter[builtins.bytes] 
builtins.bytes"builtins.bytes"pygments.formatter.Formatter**
encoding
builtins.str"builtins.str*
outencoding
None *
options
Any0:typing.overloadX©
__init__%pygments.formatter.Formatter.__init__"
None*x
selfn
,pygments.formatter.Formatter[builtins.bytes] 
builtins.bytes"builtins.bytes"pygments.formatter.Formatter*
encoding
None *-
outencoding
builtins.str"builtins.str*
options
Any0:typing.overloadX"38"39"310"311"312"313Pj38j39j310j311j312j313rN
name!pygments.formatter.Formatter.name
Any*38*39*310*311*312*313rT
aliases$pygments.formatter.Formatter.aliases
Any*38*39*310*311*312*313rX
	filenames&pygments.formatter.Formatter.filenames
Any*38*39*310*311*312*313rw
unicodeoutput*pygments.formatter.Formatter.unicodeoutput
builtins.bool"builtins.bool*38*39*310*311*312*313rP
style"pygments.formatter.Formatter.style
Any*38*39*310*311*312*313rN
full!pygments.formatter.Formatter.full
Any*38*39*310*311*312*313rP
title"pygments.formatter.Formatter.title
Any*38*39*310*311*312*313rV
encoding%pygments.formatter.Formatter.encoding
Any*38*39*310*311*312*313rT
options$pygments.formatter.Formatter.options
Any*38*39*310*311*312*313D
lexpygments.lex*
code*	
lexerz38z39z310z311z312z313"Ñ
formatpygments.formatÖ
formatpygments.format"
None*
tokens
Any*ü
	formatterè
)pygments.formatter.Formatter[pygments._T]D
pygments._T"
builtins.object"builtins.object"builtins.object"pygments.formatter.Formatter*ì
outfileÖ
$_typeshed.SupportsWrite[pygments._T]D
pygments._T"
builtins.object"builtins.object"builtins.object"_typeshed.SupportsWrite0:typing.overloadXƒ
formatpygments.format"D
pygments._T"
builtins.object"builtins.object"builtins.object*
tokens
Any*ü
	formatterè
)pygments.formatter.Formatter[pygments._T]D
pygments._T"
builtins.object"builtins.object"builtins.object"pygments.formatter.Formatter*
outfile
None 0:typing.overloadX"38"39"310"311"312"313"∫
	highlightpygments.highlightù
	highlightpygments.highlight"
None*
code
Any*
lexer
Any*ü
	formatterè
)pygments.formatter.Formatter[pygments._T]D
pygments._T"
builtins.object"builtins.object"builtins.object"pygments.formatter.Formatter*ì
outfileÖ
$_typeshed.SupportsWrite[pygments._T]D
pygments._T"
builtins.object"builtins.object"builtins.object"_typeshed.SupportsWrite0:typing.overloadX‹
	highlightpygments.highlight"D
pygments._T"
builtins.object"builtins.object"builtins.object*
code
Any*
lexer
Any*ü
	formatterè
)pygments.formatter.Formatter[pygments._T]D
pygments._T"
builtins.object"builtins.object"builtins.object"pygments.formatter.Formatter*
outfile
None 0:typing.overloadX"38"39"310"311"312"313*Ö
__path__pygments.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*†
__annotations__pygments.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*]
__version__pygments.__version__
builtins.str"builtins.str*38*39*310*311*312*313*É
__all__pygments.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313