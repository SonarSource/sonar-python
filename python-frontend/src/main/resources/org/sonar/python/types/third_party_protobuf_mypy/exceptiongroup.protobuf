
exceptiongroup“n
BaseExceptionGroup-exceptiongroup._exceptions.BaseExceptionGroup"builtins.BaseException*Ø
__new__5exceptiongroup._exceptions.BaseExceptionGroup.__new__"”
2exceptiongroup._exceptions._BaseExceptionGroupSelfl
2exceptiongroup._exceptions.BaseExceptionGroup[Any]
Any"-exceptiongroup._exceptions.BaseExceptionGroup"-exceptiongroup._exceptions.BaseExceptionGroup*¢
clsò
8Type[exceptiongroup._exceptions._BaseExceptionGroupSelf]”
2exceptiongroup._exceptions._BaseExceptionGroupSelfl
2exceptiongroup._exceptions.BaseExceptionGroup[Any]
Any"-exceptiongroup._exceptions.BaseExceptionGroup"-exceptiongroup._exceptions.BaseExceptionGroup"type*
builtins.str"builtins.str*—Œ
>typing.Sequence[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"typing.Sequence*å
add_note6exceptiongroup._exceptions.BaseExceptionGroup.add_note"
None*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*&
note
builtins.str"builtins.str*ç
message5exceptiongroup._exceptions.BaseExceptionGroup.message"
builtins.str"builtins.str*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup0:builtins.property`*œ

exceptions8exceptiongroup._exceptions.BaseExceptionGroup.exceptions"◊
°builtins.tuple[Union[exceptiongroup._exceptions._BaseExceptionT_co,exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]]]†
ëUnion[exceptiongroup._exceptions._BaseExceptionT_co,exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseExceptionä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup"builtins.tuple*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup0:builtins.property`*Ó
__str__5exceptiongroup._exceptions.BaseExceptionGroup.__str__"
builtins.str"builtins.str*çä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*
__repr__6exceptiongroup._exceptions.BaseExceptionGroup.__repr__"
builtins.str"builtins.str*çä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup2ô
subgroup6exceptiongroup._exceptions.BaseExceptionGroup.subgroupŸ	
subgroup6exceptiongroup._exceptions.BaseExceptionGroup.subgroup"÷
]Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT],None]Ë
Qexceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup
None*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*éã
pUnion[Type[exceptiongroup._exceptions._ExceptionT],builtins.tuple[Type[exceptiongroup._exceptions._ExceptionT]]]†
,Type[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception"typeÒ
<builtins.tuple[Type[exceptiongroup._exceptions._ExceptionT]]†
,Type[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception"type"builtins.tuple0:typing.overloadX±

subgroup6exceptiongroup._exceptions.BaseExceptionGroup.subgroup"˙
eUnion[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT],None]Ñ
Yexceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT]x
*exceptiongroup._exceptions._BaseExceptionT0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup
None*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*¬ø
xUnion[Type[exceptiongroup._exceptions._BaseExceptionT],builtins.tuple[Type[exceptiongroup._exceptions._BaseExceptionT]]]¥
0Type[exceptiongroup._exceptions._BaseExceptionT]x
*exceptiongroup._exceptions._BaseExceptionT0
builtins.BaseException"builtins.BaseException"builtins.BaseException"typeâ
@builtins.tuple[Type[exceptiongroup._exceptions._BaseExceptionT]]¥
0Type[exceptiongroup._exceptions._BaseExceptionT]x
*exceptiongroup._exceptions._BaseExceptionT0
builtins.BaseException"builtins.BaseException"builtins.BaseException"type"builtins.tuple0:typing.overloadXƒ
subgroup6exceptiongroup._exceptions.BaseExceptionGroup.subgroup"É
hUnion[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co],None]ä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup
None*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*MK
CallableType[builtins.function]&
builtins.function"builtins.function0:typing.overloadX2•)
split3exceptiongroup._exceptions.BaseExceptionGroup.splitÆ
split3exceptiongroup._exceptions.BaseExceptionGroup.split"±
ÕTuple[Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT],None],Union[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co],None]]÷
]Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT],None]Ë
Qexceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup
NoneÉ
hUnion[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co],None]ä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup
None*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*éã
pUnion[Type[exceptiongroup._exceptions._ExceptionT],builtins.tuple[Type[exceptiongroup._exceptions._ExceptionT]]]†
,Type[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception"typeÒ
<builtins.tuple[Type[exceptiongroup._exceptions._ExceptionT]]†
,Type[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception"type"builtins.tuple0:typing.overloadXé
split3exceptiongroup._exceptions.BaseExceptionGroup.split"›
’Tuple[Union[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT],None],Union[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co],None]]˙
eUnion[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT],None]Ñ
Yexceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT]x
*exceptiongroup._exceptions._BaseExceptionT0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup
NoneÉ
hUnion[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co],None]ä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup
None*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*¬ø
xUnion[Type[exceptiongroup._exceptions._BaseExceptionT],builtins.tuple[Type[exceptiongroup._exceptions._BaseExceptionT]]]¥
0Type[exceptiongroup._exceptions._BaseExceptionT]x
*exceptiongroup._exceptions._BaseExceptionT0
builtins.BaseException"builtins.BaseException"builtins.BaseException"typeâ
@builtins.tuple[Type[exceptiongroup._exceptions._BaseExceptionT]]¥
0Type[exceptiongroup._exceptions._BaseExceptionT]x
*exceptiongroup._exceptions._BaseExceptionT0
builtins.BaseException"builtins.BaseException"builtins.BaseException"type"builtins.tuple0:typing.overloadX§
split3exceptiongroup._exceptions.BaseExceptionGroup.split"È
ÿTuple[Union[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co],None],Union[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co],None]]É
hUnion[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co],None]ä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup
NoneÉ
hUnion[exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co],None]ä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup
None*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*MK
CallableType[builtins.function]&
builtins.function"builtins.function0:typing.overloadX2î
derive4exceptiongroup._exceptions.BaseExceptionGroup.deriveê
derive4exceptiongroup._exceptions.BaseExceptionGroup.derive"Ë
Qexceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*∑¥
7typing.Sequence[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception"typing.Sequence0:typing.overloadX¿
derive4exceptiongroup._exceptions.BaseExceptionGroup.derive"Ñ
Yexceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT]x
*exceptiongroup._exceptions._BaseExceptionT0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*ï
selfä
\exceptiongroup._exceptions.BaseExceptionGroup[exceptiongroup._exceptions._BaseExceptionT_co]{
-exceptiongroup._exceptions._BaseExceptionT_co0
builtins.BaseException"builtins.BaseException"builtins.BaseException"-exceptiongroup._exceptions.BaseExceptionGroup*À»
;typing.Sequence[exceptiongroup._exceptions._BaseExceptionT]x
*exceptiongroup._exceptions._BaseExceptionT0
builtins.BaseException"builtins.BaseException"builtins.BaseException"typing.Sequence0:typing.overloadXPrê
	__notes__7exceptiongroup._exceptions.BaseExceptionGroup.__notes__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list≥7
ExceptionGroup)exceptiongroup._exceptions.ExceptionGroup"-exceptiongroup._exceptions.BaseExceptionGroup"builtins.Exception*Û
__new__1exceptiongroup._exceptions.ExceptionGroup.__new__"√
.exceptiongroup._exceptions._ExceptionGroupSelfd
.exceptiongroup._exceptions.ExceptionGroup[Any]
Any")exceptiongroup._exceptions.ExceptionGroup")exceptiongroup._exceptions.ExceptionGroup*é
clsÑ
4Type[exceptiongroup._exceptions._ExceptionGroupSelf]√
.exceptiongroup._exceptions._ExceptionGroupSelfd
.exceptiongroup._exceptions.ExceptionGroup[Any]
Any")exceptiongroup._exceptions.ExceptionGroup")exceptiongroup._exceptions.ExceptionGroup"type*
builtins.str"builtins.str*Ω∫
:typing.Sequence[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception"typing.Sequence*Î

exceptions4exceptiongroup._exceptions.ExceptionGroup.exceptions"ì
ïbuiltins.tuple[Union[exceptiongroup._exceptions._ExceptionT_co,exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]]]Ë
ÖUnion[exceptiongroup._exceptions._ExceptionT_co,exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.ExceptionÓ
Texceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup"builtins.tuple*˘
selfÓ
Texceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup0:builtins.property`2˝
subgroup2exceptiongroup._exceptions.ExceptionGroup.subgroupπ	
subgroup2exceptiongroup._exceptions.ExceptionGroup.subgroup"÷
]Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT],None]Ë
Qexceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup
None*˘
selfÓ
Texceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup*éã
pUnion[Type[exceptiongroup._exceptions._ExceptionT],builtins.tuple[Type[exceptiongroup._exceptions._ExceptionT]]]†
,Type[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception"typeÒ
<builtins.tuple[Type[exceptiongroup._exceptions._ExceptionT]]†
,Type[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception"type"builtins.tuple0:typing.overloadXÄ
subgroup2exceptiongroup._exceptions.ExceptionGroup.subgroup"ﬂ
`Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co],None]Ó
Texceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup
None*˘
selfÓ
Texceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup*MK
CallableType[builtins.function]&
builtins.function"builtins.function0:typing.overloadX2Ã
split/exceptiongroup._exceptions.ExceptionGroup.split‚
split/exceptiongroup._exceptions.ExceptionGroup.split"Ö
≈Tuple[Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT],None],Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co],None]]÷
]Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT],None]Ë
Qexceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup
Noneﬂ
`Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co],None]Ó
Texceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup
None*˘
selfÓ
Texceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup*éã
pUnion[Type[exceptiongroup._exceptions._ExceptionT],builtins.tuple[Type[exceptiongroup._exceptions._ExceptionT]]]†
,Type[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception"typeÒ
<builtins.tuple[Type[exceptiongroup._exceptions._ExceptionT]]†
,Type[exceptiongroup._exceptions._ExceptionT]h
&exceptiongroup._exceptions._ExceptionT(
builtins.Exception"builtins.Exception"builtins.Exception"type"builtins.tuple0:typing.overloadX¨

split/exceptiongroup._exceptions.ExceptionGroup.split"ë
»Tuple[Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co],None],Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co],None]]ﬂ
`Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co],None]Ó
Texceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup
Noneﬂ
`Union[exceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co],None]Ó
Texceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup
None*˘
selfÓ
Texceptiongroup._exceptions.ExceptionGroup[exceptiongroup._exceptions._ExceptionT_co]k
)exceptiongroup._exceptions._ExceptionT_co(
builtins.Exception"builtins.Exception"builtins.Exception")exceptiongroup._exceptions.ExceptionGroup*MK
CallableType[builtins.function]&
builtins.function"builtins.function0:typing.overloadXP¥	
suppress!exceptiongroup._suppress.suppress"!contextlib.AbstractContextManager*¸
__init__*exceptiongroup._suppress.suppress.__init__"
None*P
selfF
!exceptiongroup._suppress.suppress"!exceptiongroup._suppress.suppress*h

exceptionsX
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type*å
	__enter__+exceptiongroup._suppress.suppress.__enter__"
None*HF
!exceptiongroup._suppress.suppress"!exceptiongroup._suppress.suppress*˘
__exit__*exceptiongroup._suppress.suppress.__exit__"
builtins.bool"builtins.bool*HF
!exceptiongroup._suppress.suppress"!exceptiongroup._suppress.suppress*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Noner◊
_exceptions-exceptiongroup._suppress.suppress._exceptionsò
,builtins.tuple[Type[builtins.BaseException]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type"builtins.tupleé
catchexceptiongroup._catch.catch"V
'contextlib.AbstractContextManager[None]
None"!contextlib.AbstractContextManager*èå
åtyping.Mapping[Union[Type[builtins.BaseException],typing.Iterable[Type[builtins.BaseException]]],TypeAlias[CallableType[builtins.function]]]Ã
QUnion[Type[builtins.BaseException],typing.Iterable[Type[builtins.BaseException]]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"typeö
-typing.Iterable[Type[builtins.BaseException]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type"typing.Iterableõ
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"exceptiongroup._catch._Handler"typing.Mapping€
format_exception+exceptiongroup._formatting.format_exception"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*20
builtins.BaseException"builtins.BaseException*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *+
chain
builtins.bool"builtins.bool 0:functools.singledispatchÂ
format_exception_only0exceptiongroup._formatting.format_exception_only"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*20
builtins.BaseException"builtins.BaseException0:functools.singledispatchÔ
	print_exc$exceptiongroup._formatting.print_exc"
None*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *2
file&
Union[Any,None]
Any
None *+
chain
builtins.bool"builtins.bool ¨
print_exception*exceptiongroup._formatting.print_exception"
None*20
builtins.BaseException"builtins.BaseException*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
file
Any *+
chain
builtins.bool"builtins.bool 0:functools.singledispatch*o
__path__exceptiongroup.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*ä
__annotations__exceptiongroup.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*m
__all__exceptiongroup.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*L
__version__exceptiongroup._version.version
builtins.str"builtins.str*+
_formattingexceptiongroup._formatting 