
jinja2.loaders£

BaseLoaderjinja2.loaders.BaseLoader"builtins.object*ø

get_source$jinja2.loaders.BaseLoader.get_source"…
XTuple[builtins.str,Union[builtins.str,None],Union[CallableType[builtins.function],None]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
NoneÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*@
self6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment**
template
builtins.str"builtins.str*»
list_templates(jinja2.loaders.BaseLoader.list_templates"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*@
self6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader*˘
loadjinja2.loaders.BaseLoader.load":
jinja2.environment.Template"jinja2.environment.Template*@
self6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment*&
name
builtins.str"builtins.str*∫
globals™
3Union[typing.MutableMapping[builtins.str,Any],None]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping
None 0:jinja2.utils.internalcoder`
has_source_access+jinja2.loaders.BaseLoader.has_source_access
builtins.bool"builtins.bool“
FileSystemLoaderjinja2.loaders.FileSystemLoader"jinja2.loaders.BaseLoader*‰
__init__(jinja2.loaders.FileSystemLoader.__init__"
None*L
selfB
jinja2.loaders.FileSystemLoader"jinja2.loaders.FileSystemLoader*Ù

searchpath„
ZUnion[builtins.str,os.PathLike[Any],typing.Sequence[Union[builtins.str,os.PathLike[Any]]]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike∫
5typing.Sequence[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"typing.Sequence*,
encoding
builtins.str"builtins.str *1
followlinks
builtins.bool"builtins.bool *’

get_source*jinja2.loaders.FileSystemLoader.get_source"Õ
@Tuple[builtins.str,builtins.str,CallableType[builtins.function]]
builtins.str"builtins.str
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function*L
selfB
jinja2.loaders.FileSystemLoader"jinja2.loaders.FileSystemLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment**
template
builtins.str"builtins.str*⁄
list_templates.jinja2.loaders.FileSystemLoader.list_templates"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*L
selfB
jinja2.loaders.FileSystemLoader"jinja2.loaders.FileSystemLoaderrµ

searchpath*jinja2.loaders.FileSystemLoader.searchpath{
&builtins.list[Union[builtins.str,Any]]B
Union[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.listrR
encoding(jinja2.loaders.FileSystemLoader.encoding
builtins.str"builtins.strrZ
followlinks+jinja2.loaders.FileSystemLoader.followlinks
builtins.bool"builtins.boolÅ
PackageLoaderjinja2.loaders.PackageLoader"jinja2.loaders.BaseLoader*ì
__init__%jinja2.loaders.PackageLoader.__init__"
None*F
self<
jinja2.loaders.PackageLoader"jinja2.loaders.PackageLoader*.
package_name
builtins.str"builtins.str*0
package_path
builtins.str"builtins.str *,
encoding
builtins.str"builtins.str *î

get_source'jinja2.loaders.PackageLoader.get_source"ï
LTuple[builtins.str,builtins.str,Union[CallableType[builtins.function],None]]
builtins.str"builtins.str
builtins.str"builtins.strÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*F
self<
jinja2.loaders.PackageLoader"jinja2.loaders.PackageLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment**
template
builtins.str"builtins.str*—
list_templates+jinja2.loaders.PackageLoader.list_templates"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*F
self<
jinja2.loaders.PackageLoader"jinja2.loaders.PackageLoaderrW
package_path)jinja2.loaders.PackageLoader.package_path
builtins.str"builtins.strrW
package_name)jinja2.loaders.PackageLoader.package_name
builtins.str"builtins.strrO
encoding%jinja2.loaders.PackageLoader.encoding
builtins.str"builtins.strr]
_loader$jinja2.loaders.PackageLoader._loader,
importlib.abc.Loader"importlib.abc.Loaderrw
_archive%jinja2.loaders.PackageLoader._archiveD
Union[builtins.str,None]
builtins.str"builtins.str
Noner[
_template_root+jinja2.loaders.PackageLoader._template_root
builtins.str"builtins.str„

DictLoaderjinja2.loaders.DictLoader"jinja2.loaders.BaseLoader*Å
__init__"jinja2.loaders.DictLoader.__init__"
None*@
self6
jinja2.loaders.DictLoader"jinja2.loaders.DictLoader*Ñ
mappingw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*ß

get_source$jinja2.loaders.DictLoader.get_source"±
8Tuple[builtins.str,None,CallableType[builtins.function]]
builtins.str"builtins.str
NoneK
CallableType[builtins.function]&
builtins.function"builtins.function*@
self6
jinja2.loaders.DictLoader"jinja2.loaders.DictLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment**
template
builtins.str"builtins.str*»
list_templates(jinja2.loaders.DictLoader.list_templates"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*@
self6
jinja2.loaders.DictLoader"jinja2.loaders.DictLoaderr•
mapping!jinja2.loaders.DictLoader.mappingw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.MappingÅ
FunctionLoaderjinja2.loaders.FunctionLoader"jinja2.loaders.BaseLoader*‚
__init__&jinja2.loaders.FunctionLoader.__init__"
None*H
self>
jinja2.loaders.FunctionLoader"jinja2.loaders.FunctionLoader*Z
	load_funcK
CallableType[builtins.function]&
builtins.function"builtins.function*À

get_source(jinja2.loaders.FunctionLoader.get_source"…
XTuple[builtins.str,Union[builtins.str,None],Union[CallableType[builtins.function],None]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
NoneÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*H
self>
jinja2.loaders.FunctionLoader"jinja2.loaders.FunctionLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment**
template
builtins.str"builtins.strrÅ
	load_func'jinja2.loaders.FunctionLoader.load_funcK
CallableType[builtins.function]&
builtins.function"builtins.functionô
PrefixLoaderjinja2.loaders.PrefixLoader"jinja2.loaders.BaseLoader*ﬁ
__init__$jinja2.loaders.PrefixLoader.__init__"
None*D
self:
jinja2.loaders.PrefixLoader"jinja2.loaders.PrefixLoader*¨
mappingû
6typing.Mapping[builtins.str,jinja2.loaders.BaseLoader]
builtins.str"builtins.str6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader"typing.Mapping*-
	delimiter
builtins.str"builtins.str *∞

get_loader&jinja2.loaders.PrefixLoader.get_loader"á
-Tuple[jinja2.loaders.BaseLoader,builtins.str]6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader
builtins.str"builtins.str*D
self:
jinja2.loaders.PrefixLoader"jinja2.loaders.PrefixLoader**
template
builtins.str"builtins.str*≈

get_source&jinja2.loaders.PrefixLoader.get_source"…
XTuple[builtins.str,Union[builtins.str,None],Union[CallableType[builtins.function],None]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
NoneÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*D
self:
jinja2.loaders.PrefixLoader"jinja2.loaders.PrefixLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment**
template
builtins.str"builtins.str*ˇ
load jinja2.loaders.PrefixLoader.load":
jinja2.environment.Template"jinja2.environment.Template*D
self:
jinja2.loaders.PrefixLoader"jinja2.loaders.PrefixLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment*&
name
builtins.str"builtins.str*∫
globals™
3Union[typing.MutableMapping[builtins.str,Any],None]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping
None 0:jinja2.utils.internalcode*Œ
list_templates*jinja2.loaders.PrefixLoader.list_templates"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*D
self:
jinja2.loaders.PrefixLoader"jinja2.loaders.PrefixLoaderrœ
mapping#jinja2.loaders.PrefixLoader.mappingû
6typing.Mapping[builtins.str,jinja2.loaders.BaseLoader]
builtins.str"builtins.str6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader"typing.MappingrP
	delimiter%jinja2.loaders.PrefixLoader.delimiter
builtins.str"builtins.strë
ChoiceLoaderjinja2.loaders.ChoiceLoader"jinja2.loaders.BaseLoader*Ö
__init__$jinja2.loaders.ChoiceLoader.__init__"
None*D
self:
jinja2.loaders.ChoiceLoader"jinja2.loaders.ChoiceLoader*Ç
loadersu
*typing.Sequence[jinja2.loaders.BaseLoader]6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader"typing.Sequence*≈

get_source&jinja2.loaders.ChoiceLoader.get_source"…
XTuple[builtins.str,Union[builtins.str,None],Union[CallableType[builtins.function],None]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
NoneÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*D
self:
jinja2.loaders.ChoiceLoader"jinja2.loaders.ChoiceLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment**
template
builtins.str"builtins.str*ˇ
load jinja2.loaders.ChoiceLoader.load":
jinja2.environment.Template"jinja2.environment.Template*D
self:
jinja2.loaders.ChoiceLoader"jinja2.loaders.ChoiceLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment*&
name
builtins.str"builtins.str*∫
globals™
3Union[typing.MutableMapping[builtins.str,Any],None]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping
None 0:jinja2.utils.internalcode*Œ
list_templates*jinja2.loaders.ChoiceLoader.list_templates"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*D
self:
jinja2.loaders.ChoiceLoader"jinja2.loaders.ChoiceLoaderr•
loaders#jinja2.loaders.ChoiceLoader.loadersu
*typing.Sequence[jinja2.loaders.BaseLoader]6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader"typing.SequenceC
_TemplateModulejinja2.loaders._TemplateModule"types.ModuleType∂
ModuleLoaderjinja2.loaders.ModuleLoader"jinja2.loaders.BaseLoader*Ò
__init__$jinja2.loaders.ModuleLoader.__init__"
None*D
self:
jinja2.loaders.ModuleLoader"jinja2.loaders.ModuleLoader*Ó
path„
ZUnion[builtins.str,os.PathLike[Any],typing.Sequence[Union[builtins.str,os.PathLike[Any]]]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike∫
5typing.Sequence[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"typing.Sequence*°
get_template_key,jinja2.loaders.ModuleLoader.get_template_key"
builtins.str"builtins.str*&
name
builtins.str"builtins.str0:builtins.staticmethodh*ß
get_module_filename/jinja2.loaders.ModuleLoader.get_module_filename"
builtins.str"builtins.str*&
name
builtins.str"builtins.str0:builtins.staticmethodh*ˇ
load jinja2.loaders.ModuleLoader.load":
jinja2.environment.Template"jinja2.environment.Template*D
self:
jinja2.loaders.ModuleLoader"jinja2.loaders.ModuleLoader*Q
environment@
jinja2.environment.Environment"jinja2.environment.Environment*&
name
builtins.str"builtins.str*∫
globals™
3Union[typing.MutableMapping[builtins.str,Any],None]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping
None 0:jinja2.utils.internalcoderb
has_source_access-jinja2.loaders.ModuleLoader.has_source_access
builtins.bool"builtins.boolrn
module"jinja2.loaders.ModuleLoader.module@
jinja2.loaders._TemplateModule"jinja2.loaders._TemplateModulerV
package_name(jinja2.loaders.ModuleLoader.package_name
builtins.str"builtins.strê
(<subclass of "Loader" and "zipimporter">7jinja2.loaders.<subclass of "Loader" and "zipimporter">"importlib.abc.Loader"zipimport.zipimporter±
split_template_path"jinja2.loaders.split_template_path"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list**
template
builtins.str"builtins.str*ä
__annotations__jinja2.loaders.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
	importlib	importlib *
ttyping 