
PyInstaller.compat˜
is_wine_dllPyInstaller.compat.is_wine_dll"
builtins.bool"builtins.bool*ã
filename¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPathz38z39z310z311z312z313ö
setenvPyInstaller.compat.setenv"
None*&
name
builtins.str"builtins.str*'
value
builtins.str"builtins.strz38z39z310z311z312z313u
unsetenvPyInstaller.compat.unsetenv"
None*&
name
builtins.str"builtins.strz38z39z310z311z312z313∑
exec_commandPyInstaller.compat.exec_command"
builtins.str"builtins.str*)
cmdargs
builtins.str"builtins.str*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *[
raise_enoentG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Ì
kwargs‡
DUnion[builtins.int,builtins.bool,typing.Iterable[builtins.int],None]
builtins.int"builtins.int
builtins.bool"builtins.boolN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable
Nonez38z39z310z311z312z313ê
exec_command_rc"PyInstaller.compat.exec_command_rc"
builtins.int"builtins.int*)
cmdargs
builtins.str"builtins.str*Û
kwargsÊ
FUnion[builtins.float,builtins.bool,typing.Iterable[builtins.int],None] 
builtins.float"builtins.float
builtins.bool"builtins.boolN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable
Nonez38z39z310z311z312z313œ
exec_command_stdout&PyInstaller.compat.exec_command_stdout"
builtins.str"builtins.str*.
command_args
builtins.str"builtins.str*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *œ
kwargs¬
bUnion[builtins.float,builtins.str,builtins.bytes,builtins.bool,typing.Iterable[builtins.int],None] 
builtins.float"builtins.float
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.bool"builtins.boolN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable
Nonez38z39z310z311z312z313“
exec_command_all#PyInstaller.compat.exec_command_all"ã
-Tuple[builtins.int,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str*)
cmdargs
builtins.str"builtins.str*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ì
kwargs‡
DUnion[builtins.int,builtins.bool,typing.Iterable[builtins.int],None]
builtins.int"builtins.int
builtins.bool"builtins.boolN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable
Nonez38z39z310z311z312z313·
exec_pythonPyInstaller.compat.exec_python"
builtins.str"builtins.str*&
args
builtins.str"builtins.str*P
kwargsD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez38z39z310z311z312z313Á
exec_python_rc!PyInstaller.compat.exec_python_rc"
builtins.int"builtins.int*&
args
builtins.str"builtins.str*P
kwargsD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez38z39z310z311z312z313Â
expand_pathPyInstaller.compat.expand_path"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*—
path∆
:TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]Ó
/Union[typing.AnyStr,os.PathLike[typing.AnyStr]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectq
os.PathLike[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.PathLike"_typeshed.GenericPathz38z39z310z311z312z313∏
getsitepackages"PyInstaller.compat.getsitepackages"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*ò
prefixesá
)Union[typing.Iterable[builtins.str],None]N
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable
None z38z39z310z311z312z313◊
importlib_load_source(PyInstaller.compat.importlib_load_source"$
types.ModuleType"types.ModuleType*&
name
builtins.str"builtins.str**
pathname
builtins.str"builtins.strz38z39z310z311z312z313a
check_requirements%PyInstaller.compat.check_requirements"
Nonez38z39z310z311z312z313"≠
getenvPyInstaller.compat.getenv©
getenvPyInstaller.compat.getenv"
builtins.str"builtins.str*&
name
builtins.str"builtins.str*)
default
builtins.str"builtins.str0:typing.overloadXø
getenvPyInstaller.compat.getenv"D
Union[builtins.str,None]
builtins.str"builtins.str
None*&
name
builtins.str"builtins.str*
default
None 0:typing.overloadX"38"39"310"311"312"313*™
__annotations__"PyInstaller.compat.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*y
strict_collect_mode&PyInstaller.compat.strict_collect_mode
builtins.bool"builtins.bool*38*39*310*311*312*313*e
	is_64bitsPyInstaller.compat.is_64bits
builtins.bool"builtins.bool*38*39*310*311*312*313*a
is_py35PyInstaller.compat.is_py35
builtins.bool"builtins.bool*38*39*310*311*312*313*a
is_py36PyInstaller.compat.is_py36
builtins.bool"builtins.bool*38*39*310*311*312*313*a
is_py37PyInstaller.compat.is_py37
builtins.bool"builtins.bool*38*39*310*311*312*313*a
is_py38PyInstaller.compat.is_py38
builtins.bool"builtins.bool*38*39*310*311*312*313*a
is_py39PyInstaller.compat.is_py39
builtins.bool"builtins.bool*38*39*310*311*312*313*c
is_py310PyInstaller.compat.is_py310
builtins.bool"builtins.bool*38*39*310*311*312*313*c
is_py311PyInstaller.compat.is_py311
builtins.bool"builtins.bool*38*39*310*311*312*313*_
is_winPyInstaller.compat.is_win
builtins.bool"builtins.bool*38*39*310*311*312*313*e
	is_win_10PyInstaller.compat.is_win_10
builtins.bool"builtins.bool*38*39*310*311*312*313*i
is_win_winePyInstaller.compat.is_win_wine
builtins.bool"builtins.bool*38*39*310*311*312*313*e
	is_cygwinPyInstaller.compat.is_cygwin
builtins.bool"builtins.bool*38*39*310*311*312*313*e
	is_darwinPyInstaller.compat.is_darwin
builtins.bool"builtins.bool*38*39*310*311*312*313*c
is_linuxPyInstaller.compat.is_linux
builtins.bool"builtins.bool*38*39*310*311*312*313*c
is_solarPyInstaller.compat.is_solar
builtins.bool"builtins.bool*38*39*310*311*312*313*_
is_aixPyInstaller.compat.is_aix
builtins.bool"builtins.bool*38*39*310*311*312*313*g

is_freebsdPyInstaller.compat.is_freebsd
builtins.bool"builtins.bool*38*39*310*311*312*313*g

is_openbsdPyInstaller.compat.is_openbsd
builtins.bool"builtins.bool*38*39*310*311*312*313*a
is_hpuxPyInstaller.compat.is_hpux
builtins.bool"builtins.bool*38*39*310*311*312*313*a
is_unixPyInstaller.compat.is_unix
builtins.bool"builtins.bool*38*39*310*311*312*313*a
is_muslPyInstaller.compat.is_musl
builtins.bool"builtins.bool*38*39*310*311*312*313*w
is_macos_11_compat%PyInstaller.compat.is_macos_11_compat
builtins.bool"builtins.bool*38*39*310*311*312*313*w
is_macos_11_native%PyInstaller.compat.is_macos_11_native
builtins.bool"builtins.bool*38*39*310*311*312*313*i
is_macos_11PyInstaller.compat.is_macos_11
builtins.bool"builtins.bool*38*39*310*311*312*313*ó
PYDYLIB_NAMES PyInstaller.compat.PYDYLIB_NAMESH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*38*39*310*311*312*313*g
base_prefixPyInstaller.compat.base_prefix
builtins.str"builtins.str*38*39*310*311*312*313*a
is_venvPyInstaller.compat.is_venv
builtins.bool"builtins.bool*38*39*310*311*312*313*m
is_virtualenv PyInstaller.compat.is_virtualenv
builtins.bool"builtins.bool*38*39*310*311*312*313*c
is_condaPyInstaller.compat.is_conda
builtins.bool"builtins.bool*38*39*310*311*312*313*m
is_pure_conda PyInstaller.compat.is_pure_conda
builtins.bool"builtins.bool*38*39*310*311*312*313*s
python_executable$PyInstaller.compat.python_executable
builtins.str"builtins.str*38*39*310*311*312*313*q
is_ms_app_store"PyInstaller.compat.is_ms_app_store
builtins.bool"builtins.bool*38*39*310*311*312*313*q
BYTECODE_MAGIC!PyInstaller.compat.BYTECODE_MAGIC 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*£
EXTENSION_SUFFIXES%PyInstaller.compat.EXTENSION_SUFFIXESJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*ó
ALL_SUFFIXESPyInstaller.compat.ALL_SUFFIXESJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*≈
architecturePyInstaller.compat.architecture˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*38*39*310*311*312*313*◊
systemPyInstaller.compat.systemï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*38*39*310*311*312*313*•
machinePyInstaller.compat.machine·
—Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None*38*39*310*311*312*313*ù
PY3_BASE_MODULES#PyInstaller.compat.PY3_BASE_MODULESH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*38*39*310*311*312*313*≠
PURE_PYTHON_MODULE_TYPES+PyInstaller.compat.PURE_PYTHON_MODULE_TYPESH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*38*39*310*311*312*313*•
SPECIAL_MODULE_TYPES'PyInstaller.compat.SPECIAL_MODULE_TYPESH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*38*39*310*311*312*313*£
BINARY_MODULE_TYPES&PyInstaller.compat.BINARY_MODULE_TYPESH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*38*39*310*311*312*313*°
VALID_MODULE_TYPES%PyInstaller.compat.VALID_MODULE_TYPESH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*38*39*310*311*312*313*ù
BAD_MODULE_TYPES#PyInstaller.compat.BAD_MODULE_TYPESH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*38*39*310*311*312*313*ù
ALL_MODULE_TYPES#PyInstaller.compat.ALL_MODULE_TYPESH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*38*39*310*311*312*313*⁄
MODULE_TYPES_TO_TOC_DICT+PyInstaller.compat.MODULE_TYPES_TO_TOC_DICTu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*38*39*310*311*312*313