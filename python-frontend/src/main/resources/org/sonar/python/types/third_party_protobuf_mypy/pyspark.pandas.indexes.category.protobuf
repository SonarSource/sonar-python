
pyspark.pandas.indexes.categoryÈ9
CategoricalIndex0pyspark.pandas.indexes.category.CategoricalIndex"!pyspark.pandas.indexes.base.Index*¶
__new__8pyspark.pandas.indexes.category.CategoricalIndex.__new__*
cls*

data *

categories *
ordered *
dtype *

copy *

name 0:typing.no_type_check* 
dtype6pyspark.pandas.indexes.category.CategoricalIndex.dtype"X
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex0:builtins.property`*Ž
codes6pyspark.pandas.indexes.category.CategoricalIndex.codes"F
!pyspark.pandas.indexes.base.Index"!pyspark.pandas.indexes.base.Index*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex0:builtins.property`*ê
ordered8pyspark.pandas.indexes.category.CategoricalIndex.ordered"
builtins.bool"builtins.bool*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex0:builtins.property`*‡
add_categories?pyspark.pandas.indexes.category.CategoricalIndex.add_categories"°
<Union[pyspark.pandas.indexes.category.CategoricalIndex,None]d
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex
None*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex*á
new_categoriesÌ
AUnion[pandas.core.indexes.base.Index[Any],Any,builtins.list[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index
Any,
builtins.list[Any]
Any"builtins.list*-
inplace
builtins.bool"builtins.bool *›

as_ordered;pyspark.pandas.indexes.category.CategoricalIndex.as_ordered"°
<Union[pyspark.pandas.indexes.category.CategoricalIndex,None]d
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex
None*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex*-
inplace
builtins.bool"builtins.bool *Ÿ
as_unordered=pyspark.pandas.indexes.category.CategoricalIndex.as_unordered"°
<Union[pyspark.pandas.indexes.category.CategoricalIndex,None]d
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex
None*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex*-
inplace
builtins.bool"builtins.bool *‡
remove_categoriesBpyspark.pandas.indexes.category.CategoricalIndex.remove_categories"°
<Union[pyspark.pandas.indexes.category.CategoricalIndex,None]d
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex
None*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex*Û
removalsÌ
AUnion[pandas.core.indexes.base.Index[Any],Any,builtins.list[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index
Any,
builtins.list[Any]
Any"builtins.list*-
inplace
builtins.bool"builtins.bool *·
remove_unused_categoriesIpyspark.pandas.indexes.category.CategoricalIndex.remove_unused_categories"°
<Union[pyspark.pandas.indexes.category.CategoricalIndex,None]d
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex
None*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex*-
inplace
builtins.bool"builtins.bool *Ë
rename_categoriesBpyspark.pandas.indexes.category.CategoricalIndex.rename_categories"°
<Union[pyspark.pandas.indexes.category.CategoricalIndex,None]d
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex
None*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex*Ÿ
new_categoriesŠ
PUnion[builtins.list[Any],builtins.dict[Any,Any],CallableType[builtins.function]],
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dictK
CallableType[builtins.function]&
builtins.function"builtins.function*-
inplace
builtins.bool"builtins.bool *ç
reorder_categoriesCpyspark.pandas.indexes.category.CategoricalIndex.reorder_categories"°
<Union[pyspark.pandas.indexes.category.CategoricalIndex,None]d
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex
None*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex*á
new_categoriesÌ
AUnion[pandas.core.indexes.base.Index[Any],Any,builtins.list[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index
Any,
builtins.list[Any]
Any"builtins.list*V
orderedG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
inplace
builtins.bool"builtins.bool *€
set_categories?pyspark.pandas.indexes.category.CategoricalIndex.set_categories"°
<Union[pyspark.pandas.indexes.category.CategoricalIndex,None]d
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex
None*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex*Ô
new_categories¿
=Union[pandas.core.indexes.base.Index[Any],builtins.list[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index,
builtins.list[Any]
Any"builtins.list*V
orderedG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
rename
builtins.bool"builtins.bool *-
inplace
builtins.bool"builtins.bool *±
map4pyspark.pandas.indexes.category.CategoricalIndex.map"F
!pyspark.pandas.indexes.base.Index"!pyspark.pandas.indexes.base.Index*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex*»
mapper®
\Union[builtins.dict[Any,Any],CallableType[builtins.function],pandas.core.series.Series[Any]]9
builtins.dict[Any,Any]
Any
Any"builtins.dictK
CallableType[builtins.function]&
builtins.function"builtins.functionD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*s
all4pyspark.pandas.indexes.category.CategoricalIndex.all*
self*
args*

kwargs0:typing.no_type_check2’

categories;pyspark.pandas.indexes.category.CategoricalIndex.categories¢

categories;pyspark.pandas.indexes.category.CategoricalIndex.categories"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex0:builtins.propertyX`¡

categories;pyspark.pandas.indexes.category.CategoricalIndex.categories"
None*n
selfd
0pyspark.pandas.indexes.category.CategoricalIndex"0pyspark.pandas.indexes.category.CategoricalIndex*Ð

categories¿
=Union[pandas.core.indexes.base.Index[Any],builtins.list[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index,
builtins.list[Any]
Any"builtins.list0:.setter8
_test%pyspark.pandas.indexes.category._test"
None*›
__annotations__/pyspark.pandas.indexes.category.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pdpandas *
pspyspark.pandas 