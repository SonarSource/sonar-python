
mmapœ9
mmap	mmap.mmap"typing.Iterable"typing.Sized*À
__init__mmap.mmap.__init__"
None* 
self
	mmap.mmap"	mmap.mmap*(
fileno
builtins.int"builtins.int*(
length
builtins.int"builtins.int*)
flags
builtins.int"builtins.int *(
prot
builtins.int"builtins.int **
access
builtins.int"builtins.int **
offset
builtins.int"builtins.int *D
closemmap.mmap.close"
None* 
self
	mmap.mmap"	mmap.mmap*ö
flushmmap.mmap.flush"
None* 
self
	mmap.mmap"	mmap.mmap**
offset
builtins.int"builtins.int *(
size
builtins.int"builtins.int *∫
movemmap.mmap.move"
None* 
self
	mmap.mmap"	mmap.mmap*&
dest
builtins.int"builtins.int*%
src
builtins.int"builtins.int*'
count
builtins.int"builtins.int*`
	read_bytemmap.mmap.read_byte"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*b
readlinemmap.mmap.readline" 
builtins.bytes"builtins.bytes* 
self
	mmap.mmap"	mmap.mmap*q
resizemmap.mmap.resize"
None* 
self
	mmap.mmap"	mmap.mmap*)
newsize
builtins.int"builtins.int*ï
seekmmap.mmap.seek"
None* 
self
	mmap.mmap"	mmap.mmap*%
pos
builtins.int"builtins.int**
whence
builtins.int"builtins.int *V
sizemmap.mmap.size"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*V
tellmmap.mmap.tell"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*v

write_bytemmap.mmap.write_byte"
None* 
self
	mmap.mmap"	mmap.mmap*&
byte
builtins.int"builtins.int*T
__len__mmap.mmap.__len__"
builtins.int"builtins.int*
	mmap.mmap"	mmap.mmap*…
madvisemmap.mmap.madvise"
None* 
self
	mmap.mmap"	mmap.mmap*(
option
builtins.int"builtins.int*)
start
builtins.int"builtins.int **
length
builtins.int"builtins.int *é
findmmap.mmap.find"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*‡
sub÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int *ê
rfindmmap.mmap.rfind"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*‡
sub÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
start
builtins.int"builtins.int *(
stop
builtins.int"builtins.int *©
readmmap.mmap.read" 
builtins.bytes"builtins.bytes* 
self
	mmap.mmap"	mmap.mmap*M
nD
Union[builtins.int,None]
builtins.int"builtins.int
None *Ω
writemmap.mmap.write"
builtins.int"builtins.int* 
self
	mmap.mmap"	mmap.mmap*‚
bytes÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*∂
__delitem__mmap.mmap.__delitem__"
NoReturn
*
	mmap.mmap"	mmap.mmap*hf
"Union[builtins.int,builtins.slice]
builtins.int"builtins.int 
builtins.slice"builtins.slice*Ü
__contains__mmap.mmap.__contains__"
builtins.bool"builtins.bool*
	mmap.mmap"	mmap.mmap*$"
builtins.object"builtins.object*à
__iter__mmap.mmap.__iter__"N
typing.Iterator[builtins.int]
builtins.int"builtins.int"typing.Iterator*
	mmap.mmap"	mmap.mmap*ê
	__enter__mmap.mmap.__enter__"5
mmap.mmap.Self
	mmap.mmap"	mmap.mmap"	mmap.mmap*75
mmap.mmap.Self
	mmap.mmap"	mmap.mmap"	mmap.mmap*j
__exit__mmap.mmap.__exit__"
None*
	mmap.mmap"	mmap.mmap*&"
builtins.object"builtins.object2‘
__getitem__mmap.mmap.__getitem__ë
__getitem__mmap.mmap.__getitem__"
builtins.int"builtins.int*
	mmap.mmap"	mmap.mmap*
builtins.int"builtins.int0:typing.overloadXô
__getitem__mmap.mmap.__getitem__" 
builtins.bytes"builtins.bytes*
	mmap.mmap"	mmap.mmap*" 
builtins.slice"builtins.slice0:typing.overloadX2§	
__setitem__mmap.mmap.__setitem__ù
__setitem__mmap.mmap.__setitem__"
None*
	mmap.mmap"	mmap.mmap*
builtins.int"builtins.int*
builtins.int"builtins.int0:typing.overloadX›
__setitem__mmap.mmap.__setitem__"
None*
	mmap.mmap"	mmap.mmap*" 
builtins.slice"builtins.slice*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer0:typing.overloadXr:
closedmmap.mmap.closed
builtins.bool"builtins.bool*Ä
__annotations__mmap.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*C
ACCESS_DEFAULTmmap.ACCESS_DEFAULT
builtins.int"builtins.int*=
ACCESS_READmmap.ACCESS_READ
builtins.int"builtins.int*?
ACCESS_WRITEmmap.ACCESS_WRITE
builtins.int"builtins.int*=
ACCESS_COPYmmap.ACCESS_COPY
builtins.int"builtins.int*Q
ALLOCATIONGRANULARITYmmap.ALLOCATIONGRANULARITY
builtins.int"builtins.int*A
MAP_DENYWRITEmmap.MAP_DENYWRITE
builtins.int"builtins.int*C
MAP_EXECUTABLEmmap.MAP_EXECUTABLE
builtins.int"builtins.int*7
MAP_ANONmmap.MAP_ANON
builtins.int"builtins.int*A
MAP_ANONYMOUSmmap.MAP_ANONYMOUS
builtins.int"builtins.int*=
MAP_PRIVATEmmap.MAP_PRIVATE
builtins.int"builtins.int*;

MAP_SHAREDmmap.MAP_SHARED
builtins.int"builtins.int*9
	PROT_EXECmmap.PROT_EXEC
builtins.int"builtins.int*9
	PROT_READmmap.PROT_READ
builtins.int"builtins.int*;

PROT_WRITEmmap.PROT_WRITE
builtins.int"builtins.int*7
PAGESIZEmmap.PAGESIZE
builtins.int"builtins.int*=
MADV_NORMALmmap.MADV_NORMAL
builtins.int"builtins.int*=
MADV_RANDOMmmap.MADV_RANDOM
builtins.int"builtins.int*E
MADV_SEQUENTIALmmap.MADV_SEQUENTIAL
builtins.int"builtins.int*A
MADV_WILLNEEDmmap.MADV_WILLNEED
builtins.int"builtins.int*A
MADV_DONTNEEDmmap.MADV_DONTNEED
builtins.int"builtins.int*9
	MADV_FREEmmap.MADV_FREE
builtins.int"builtins.int*=
MADV_REMOVEmmap.MADV_REMOVE
builtins.int"builtins.int*A
MADV_DONTFORKmmap.MADV_DONTFORK
builtins.int"builtins.int*=
MADV_DOFORKmmap.MADV_DOFORK
builtins.int"builtins.int*A
MADV_HWPOISONmmap.MADV_HWPOISON
builtins.int"builtins.int*C
MADV_MERGEABLEmmap.MADV_MERGEABLE
builtins.int"builtins.int*G
MADV_UNMERGEABLEmmap.MADV_UNMERGEABLE
builtins.int"builtins.int*A
MADV_HUGEPAGEmmap.MADV_HUGEPAGE
builtins.int"builtins.int*E
MADV_NOHUGEPAGEmmap.MADV_NOHUGEPAGE
builtins.int"builtins.int*A
MADV_DONTDUMPmmap.MADV_DONTDUMP
builtins.int"builtins.int*=
MADV_DODUMPmmap.MADV_DODUMP
builtins.int"builtins.int