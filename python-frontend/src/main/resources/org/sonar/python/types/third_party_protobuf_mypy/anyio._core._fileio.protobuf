
anyio._core._fileioπK
	AsyncFileanyio._core._fileio.AsyncFile""anyio.abc._resources.AsyncResource*÷
__init__&anyio._core._fileio.AsyncFile.__init__"
None*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFile*u
fpm
typing.IO[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"	typing.IO*ó
__getattr__)anyio._core._fileio.AsyncFile.__getattr__""
builtins.object"builtins.object*òï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFile*
builtins.str"builtins.str*Ÿ
wrapped%anyio._core._fileio.AsyncFile.wrapped"m
typing.IO[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"	typing.IO*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFile0:builtins.property`*ﬂ
	__aiter__'anyio._core._fileio.AsyncFile.__aiter__"É
#typing.AsyncIterator[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"typing.AsyncIterator*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFileH*£
aclose$anyio._core._fileio.AsyncFile.aclose"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFileH*ë
read"anyio._core._fileio.AsyncFile.read"ï
'typing.Coroutine[Any,Any,typing.AnyStr]
Any
AnyF
typing.AnyStr"
builtins.object"builtins.object"builtins.object"typing.Coroutine*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFile*(
size
builtins.int"builtins.int H*∆
read1#anyio._core._fileio.AsyncFile.read1"p
(typing.Coroutine[Any,Any,builtins.bytes]
Any
Any 
builtins.bytes"builtins.bytes"typing.Coroutine*z
selfp
-anyio._core._fileio.AsyncFile[builtins.bytes] 
builtins.bytes"builtins.bytes"anyio._core._fileio.AsyncFile*(
size
builtins.int"builtins.int H*Ô
readline&anyio._core._fileio.AsyncFile.readline"ï
'typing.Coroutine[Any,Any,typing.AnyStr]
Any
AnyF
typing.AnyStr"
builtins.object"builtins.object"builtins.object"typing.Coroutine*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFileH*Ø
	readlines'anyio._core._fileio.AsyncFile.readlines"”
6typing.Coroutine[Any,Any,builtins.list[typing.AnyStr]]
Any
Anyu
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list"typing.Coroutine*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFileH*ñ
readinto&anyio._core._fileio.AsyncFile.readinto"p
(typing.Coroutine[Any,Any,builtins.bytes]
Any
Any 
builtins.bytes"builtins.bytes"typing.Coroutine*z
selfp
-anyio._core._fileio.AsyncFile[builtins.bytes] 
builtins.bytes"builtins.bytes"anyio._core._fileio.AsyncFile*Ò
bÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBufferH*ò
	readinto1'anyio._core._fileio.AsyncFile.readinto1"p
(typing.Coroutine[Any,Any,builtins.bytes]
Any
Any 
builtins.bytes"builtins.bytes"typing.Coroutine*z
selfp
-anyio._core._fileio.AsyncFile[builtins.bytes] 
builtins.bytes"builtins.bytes"anyio._core._fileio.AsyncFile*Ò
bÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBufferH*ï
truncate&anyio._core._fileio.AsyncFile.truncate"j
&typing.Coroutine[Any,Any,builtins.int]
Any
Any
builtins.int"builtins.int"typing.Coroutine*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFile*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None H*π
seek"anyio._core._fileio.AsyncFile.seek"j
&typing.Coroutine[Any,Any,builtins.int]
Any
Any
builtins.int"builtins.int"typing.Coroutine*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFile*(
offset
builtins.int"builtins.int*R
whenceD
Union[builtins.int,None]
builtins.int"builtins.int
None H*ª
tell"anyio._core._fileio.AsyncFile.tell"j
&typing.Coroutine[Any,Any,builtins.int]
Any
Any
builtins.int"builtins.int"typing.Coroutine*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFileH*°
flush#anyio._core._fileio.AsyncFile.flush"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*†
selfï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFileH2à
write#anyio._core._fileio.AsyncFile.writeå	
write#anyio._core._fileio.AsyncFile.write"j
&typing.Coroutine[Any,Any,builtins.int]
Any
Any
builtins.int"builtins.int"typing.Coroutine*z
selfp
-anyio._core._fileio.AsyncFile[builtins.bytes] 
builtins.bytes"builtins.bytes"anyio._core._fileio.AsyncFile*ﬁ
b÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer0:typing.overloadHX 
write#anyio._core._fileio.AsyncFile.write"j
&typing.Coroutine[Any,Any,builtins.int]
Any
Any
builtins.int"builtins.int"typing.Coroutine*t
selfj
+anyio._core._fileio.AsyncFile[builtins.str]
builtins.str"builtins.str"anyio._core._fileio.AsyncFile*#
b
builtins.str"builtins.str0:typing.overloadHX2Ê

writelines(anyio._core._fileio.AsyncFile.writelinesº


writelines(anyio._core._fileio.AsyncFile.writelines"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*z
selfp
-anyio._core._fileio.AsyncFile[builtins.bytes] 
builtins.bytes"builtins.bytes"anyio._core._fileio.AsyncFile*†
linesî
ßtyping.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"typing.Iterable0:typing.overloadHXÓ

writelines(anyio._core._fileio.AsyncFile.writelines"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*t
selfj
+anyio._core._fileio.AsyncFile[builtins.str]
builtins.str"builtins.str"anyio._core._fileio.AsyncFile*Y
linesN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable0:typing.overloadHXPr1
_fp!anyio._core._fileio.AsyncFile._fp
Any¬
_PathIterator!anyio._core._fileio._PathIterator"typing.AsyncIterator*ù
	__anext__+anyio._core._fileio._PathIterator.__anext__"é
2typing.Coroutine[Any,Any,anyio._core._fileio.Path]
Any
Any4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.Coroutine*P
selfF
!anyio._core._fileio._PathIterator"!anyio._core._fileio._PathIteratorH*©
__init__*anyio._core._fileio._PathIterator.__init__"
None*P
selfF
!anyio._core._fileio._PathIterator"!anyio._core._fileio._PathIterator*î
iteratorÖ
*typing.Iterator[os.PathLike[builtins.str]]F
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"typing.Iterator8ræ
iterator*anyio._core._fileio._PathIterator.iteratorÖ
*typing.Iterator[os.PathLike[builtins.str]]F
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"typing.IteratorrË
__dataclass_fields__6anyio._core._fileio._PathIterator.__dataclass_fields__ó
2builtins.dict[builtins.str,dataclasses.Field[Any]]
builtins.str"builtins.str4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.dict‘è
Pathanyio._core._fileio.Path"builtins.object*ú
__init__!anyio._core._fileio.Path.__init__"
None*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*¢
argsó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike*è

__fspath__#anyio._core._fileio.Path.__fspath__"
builtins.str"builtins.str*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*Å
__str__ anyio._core._fileio.Path.__str__"
builtins.str"builtins.str*64
anyio._core._fileio.Path"anyio._core._fileio.Path*É
__repr__!anyio._core._fileio.Path.__repr__"
builtins.str"builtins.str*64
anyio._core._fileio.Path"anyio._core._fileio.Path*ë
	__bytes__"anyio._core._fileio.Path.__bytes__" 
builtins.bytes"builtins.bytes*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*ã
__hash__!anyio._core._fileio.Path.__hash__"
builtins.int"builtins.int*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*ß
__eq__anyio._core._fileio.Path.__eq__"
builtins.bool"builtins.bool*64
anyio._core._fileio.Path"anyio._core._fileio.Path*$"
builtins.object"builtins.object*π
__lt__anyio._core._fileio.Path.__lt__"
builtins.bool"builtins.bool*64
anyio._core._fileio.Path"anyio._core._fileio.Path*64
anyio._core._fileio.Path"anyio._core._fileio.Path*π
__le__anyio._core._fileio.Path.__le__"
builtins.bool"builtins.bool*64
anyio._core._fileio.Path"anyio._core._fileio.Path*64
anyio._core._fileio.Path"anyio._core._fileio.Path*π
__gt__anyio._core._fileio.Path.__gt__"
builtins.bool"builtins.bool*64
anyio._core._fileio.Path"anyio._core._fileio.Path*64
anyio._core._fileio.Path"anyio._core._fileio.Path*π
__ge__anyio._core._fileio.Path.__ge__"
builtins.bool"builtins.bool*64
anyio._core._fileio.Path"anyio._core._fileio.Path*64
anyio._core._fileio.Path"anyio._core._fileio.Path*¨
__truediv__$anyio._core._fileio.Path.__truediv__"4
anyio._core._fileio.Path"anyio._core._fileio.Path*64
anyio._core._fileio.Path"anyio._core._fileio.Path*	
Any*Æ
__rtruediv__%anyio._core._fileio.Path.__rtruediv__"4
anyio._core._fileio.Path"anyio._core._fileio.Path*64
anyio._core._fileio.Path"anyio._core._fileio.Path*	
Any*Ã
partsanyio._core._fileio.Path.parts"L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path0:builtins.property`*ú
driveanyio._core._fileio.Path.drive"
builtins.str"builtins.str*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path0:builtins.property`*ö
rootanyio._core._fileio.Path.root"
builtins.str"builtins.str*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path0:builtins.property`*û
anchoranyio._core._fileio.Path.anchor"
builtins.str"builtins.str*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path0:builtins.property`*ˆ
parents anyio._core._fileio.Path.parents"r
)typing.Sequence[anyio._core._fileio.Path]4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.Sequence*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path0:builtins.property`*∂
parentanyio._core._fileio.Path.parent"4
anyio._core._fileio.Path"anyio._core._fileio.Path*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path0:builtins.property`*ö
nameanyio._core._fileio.Path.name"
builtins.str"builtins.str*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path0:builtins.property`*û
suffixanyio._core._fileio.Path.suffix"
builtins.str"builtins.str*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path0:builtins.property`*–
suffixes!anyio._core._fileio.Path.suffixes"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path0:builtins.property`*ö
stemanyio._core._fileio.Path.stem"
builtins.str"builtins.str*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path0:builtins.property`*Ä
absolute!anyio._core._fileio.Path.absolute"é
2typing.Coroutine[Any,Any,anyio._core._fileio.Path]
Any
Any4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*ã
as_posix!anyio._core._fileio.Path.as_posix"
builtins.str"builtins.str*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*á
as_urianyio._core._fileio.Path.as_uri"
builtins.str"builtins.str*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*∑
matchanyio._core._fileio.Path.match"
builtins.bool"builtins.bool*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*.
path_pattern
builtins.str"builtins.str*ø
is_relative_to'anyio._core._fileio.Path.is_relative_to"
builtins.bool"builtins.bool*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*£
otheró
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike*‰
is_junction$anyio._core._fileio.Path.is_junction"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*ò
chmodanyio._core._fileio.Path.chmod"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*&
mode
builtins.int"builtins.int*5
follow_symlinks
builtins.bool"builtins.bool H*π
cwdanyio._core._fileio.Path.cwd"é
2typing.Coroutine[Any,Any,anyio._core._fileio.Path]
Any
Any4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.Coroutine*g
cls^
Type[anyio._core._fileio.Path]4
anyio._core._fileio.Path"anyio._core._fileio.Path"type0:builtins.classmethodHp*⁄
existsanyio._core._fileio.Path.exists"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*Ñ

expanduser#anyio._core._fileio.Path.expanduser"é
2typing.Coroutine[Any,Any,anyio._core._fileio.Path]
Any
Any4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*é
globanyio._core._fileio.Path.glob"|
.typing.AsyncIterator[anyio._core._fileio.Path]4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.AsyncIterator*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*)
pattern
builtins.str"builtins.str*’
groupanyio._core._fileio.Path.group"j
&typing.Coroutine[Any,Any,builtins.str]
Any
Any
builtins.str"builtins.str"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*Ñ
hardlink_to$anyio._core._fileio.Path.hardlink_to"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*º
targetØ
9Union[builtins.str,pathlib.Path,anyio._core._fileio.Path]
builtins.str"builtins.str
pathlib.Path"pathlib.Path4
anyio._core._fileio.Path"anyio._core._fileio.PathH*ª
homeanyio._core._fileio.Path.home"é
2typing.Coroutine[Any,Any,anyio._core._fileio.Path]
Any
Any4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.Coroutine*g
cls^
Type[anyio._core._fileio.Path]4
anyio._core._fileio.Path"anyio._core._fileio.Path"type0:builtins.classmethodHp*ì
is_absolute$anyio._core._fileio.Path.is_absolute"
builtins.bool"builtins.bool*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*Ï
is_block_device(anyio._core._fileio.Path.is_block_device"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*Í
is_char_device'anyio._core._fileio.Path.is_char_device"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*⁄
is_diranyio._core._fileio.Path.is_dir"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*‹
is_fifo anyio._core._fileio.Path.is_fifo"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*‹
is_file anyio._core._fileio.Path.is_file"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*ﬁ
is_mount!anyio._core._fileio.Path.is_mount"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*ì
is_reserved$anyio._core._fileio.Path.is_reserved"
builtins.bool"builtins.bool*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*‡
	is_socket"anyio._core._fileio.Path.is_socket"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*‚

is_symlink#anyio._core._fileio.Path.is_symlink"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*È
iterdir anyio._core._fileio.Path.iterdir"|
.typing.AsyncIterator[anyio._core._fileio.Path]4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.AsyncIterator*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*»
joinpath!anyio._core._fileio.Path.joinpath"4
anyio._core._fileio.Path"anyio._core._fileio.Path*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*¢
argsó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike*„
lchmodanyio._core._fileio.Path.lchmod"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*&
mode
builtins.int"builtins.intH*≈
lstatanyio._core._fileio.Path.lstat"Ÿ
≥typing.Coroutine[Any,Any,TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]]
Any
Any¸
ôTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]À
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*¬
mkdiranyio._core._fileio.Path.mkdir"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*(
mode
builtins.int"builtins.int *-
parents
builtins.bool"builtins.bool *.
exist_ok
builtins.bool"builtins.bool H*’
owneranyio._core._fileio.Path.owner"j
&typing.Coroutine[Any,Any,builtins.str]
Any
Any
builtins.str"builtins.str"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*Â

read_bytes#anyio._core._fileio.Path.read_bytes"p
(typing.Coroutine[Any,Any,builtins.bytes]
Any
Any 
builtins.bytes"builtins.bytes"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*á
	read_text"anyio._core._fileio.Path.read_text"j
&typing.Coroutine[Any,Any,builtins.str]
Any
Any
builtins.str"builtins.str"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None H*œ
relative_to$anyio._core._fileio.Path.relative_to"4
anyio._core._fileio.Path"anyio._core._fileio.Path*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*£
otheró
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike*Ä
readlink!anyio._core._fileio.Path.readlink"é
2typing.Coroutine[Any,Any,anyio._core._fileio.Path]
Any
Any4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*«
renameanyio._core._fileio.Path.rename"é
2typing.Coroutine[Any,Any,anyio._core._fileio.Path]
Any
Any4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*»
targetª
=Union[builtins.str,pathlib.PurePath,anyio._core._fileio.Path]
builtins.str"builtins.str$
pathlib.PurePath"pathlib.PurePath4
anyio._core._fileio.Path"anyio._core._fileio.PathH*…
replace anyio._core._fileio.Path.replace"é
2typing.Coroutine[Any,Any,anyio._core._fileio.Path]
Any
Any4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*»
targetª
=Union[builtins.str,pathlib.PurePath,anyio._core._fileio.Path]
builtins.str"builtins.str$
pathlib.PurePath"pathlib.PurePath4
anyio._core._fileio.Path"anyio._core._fileio.PathH*¨
resolve anyio._core._fileio.Path.resolve"é
2typing.Coroutine[Any,Any,anyio._core._fileio.Path]
Any
Any4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*,
strict
builtins.bool"builtins.bool H*ê
rglobanyio._core._fileio.Path.rglob"|
.typing.AsyncIterator[anyio._core._fileio.Path]4
anyio._core._fileio.Path"anyio._core._fileio.Path"typing.AsyncIterator*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*)
pattern
builtins.str"builtins.str*π
rmdiranyio._core._fileio.Path.rmdir"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.PathH*˝
samefile!anyio._core._fileio.Path.samefile"m
'typing.Coroutine[Any,Any,builtins.bool]
Any
Any
builtins.bool"builtins.bool"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*ú

other_pathã
UUnion[builtins.str,builtins.bytes,builtins.int,pathlib.Path,anyio._core._fileio.Path]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
builtins.int"builtins.int
pathlib.Path"pathlib.Path4
anyio._core._fileio.Path"anyio._core._fileio.PathH*˙
statanyio._core._fileio.Path.stat"Ÿ
≥typing.Coroutine[Any,Any,TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]]
Any
Any¸
ôTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]À
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*5
follow_symlinks
builtins.bool"builtins.bool H*Ω

symlink_to#anyio._core._fileio.Path.symlink_to"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*º
targetØ
9Union[builtins.str,pathlib.Path,anyio._core._fileio.Path]
builtins.str"builtins.str
pathlib.Path"pathlib.Path4
anyio._core._fileio.Path"anyio._core._fileio.Path*9
target_is_directory
builtins.bool"builtins.bool H*ì
touchanyio._core._fileio.Path.touch"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*(
mode
builtins.int"builtins.int *.
exist_ok
builtins.bool"builtins.bool H*Ì
unlinkanyio._core._fileio.Path.unlink"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*0

missing_ok
builtins.bool"builtins.bool H*Õ
	with_name"anyio._core._fileio.Path.with_name"4
anyio._core._fileio.Path"anyio._core._fileio.Path*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*&
name
builtins.str"builtins.str*Õ
	with_stem"anyio._core._fileio.Path.with_stem"4
anyio._core._fileio.Path"anyio._core._fileio.Path*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*&
stem
builtins.str"builtins.str*”
with_suffix$anyio._core._fileio.Path.with_suffix"4
anyio._core._fileio.Path"anyio._core._fileio.Path*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*(
suffix
builtins.str"builtins.str*›
with_segments&anyio._core._fileio.Path.with_segments"4
anyio._core._fileio.Path"anyio._core._fileio.Path*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*.
pathsegments
builtins.str"builtins.str*ç
write_bytes$anyio._core._fileio.Path.write_bytes"j
&typing.Coroutine[Any,Any,builtins.int]
Any
Any
builtins.int"builtins.int"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path**
data 
builtins.bytes"builtins.bytesH*Ü

write_text#anyio._core._fileio.Path.write_text"j
&typing.Coroutine[Any,Any,builtins.int]
Any
Any
builtins.int"builtins.int"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*&
data
builtins.str"builtins.str*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None H2‚w
openanyio._core._fileio.Path.open£3
openanyio._core._fileio.Path.open"ﬂ
Gtyping.Coroutine[Any,Any,anyio._core._fileio.AsyncFile[builtins.bytes]]
Any
Anyp
-anyio._core._fileio.AsyncFile[builtins.bytes] 
builtins.bytes"builtins.bytes"anyio._core._fileio.AsyncFile"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*î.
modeâ.
ãTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]‹&
ÄUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]æ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadHXîD
openanyio._core._fileio.Path.open"◊
Etyping.Coroutine[Any,Any,anyio._core._fileio.AsyncFile[builtins.str]]
Any
Anyj
+anyio._core._fileio.AsyncFile[builtins.str]
builtins.str"builtins.str"anyio._core._fileio.AsyncFile"typing.Coroutine*>
self4
anyio._core._fileio.Path"anyio._core._fileio.Path*ç?
modeÄ?
’	TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]ã5
 	Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]‰
—TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Î
∆Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeUpdating–
◊TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]“
ÃUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeWritingˇ	
ôTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ø
éUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeReading"_typeshed.OpenTextMode *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadHXrë
	__slots__"anyio._core._fileio.Path.__slots__`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strr<
__weakref__$anyio._core._fileio.Path.__weakref__
AnyrE
_pathanyio._core._fileio.Path._path
pathlib.Path"pathlib.Pathª
	wrap_fileanyio._core._fileio.wrap_file"ï
,anyio._core._fileio.AsyncFile[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"anyio._core._fileio.AsyncFile*w
filem
typing.IO[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"	typing.IO"ü}
	open_fileanyio._core._fileio.open_fileˇ5
	open_fileanyio._core._fileio.open_file"ﬂ
Gtyping.Coroutine[Any,Any,anyio._core._fileio.AsyncFile[builtins.bytes]]
Any
Anyp
-anyio._core._fileio.AsyncFile[builtins.bytes] 
builtins.bytes"builtins.bytes"anyio._core._fileio.AsyncFile"typing.Coroutine*Õ
file¬
:Union[builtins.str,os.PathLike[builtins.str],builtins.int]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
builtins.int"builtins.int*î.
modeâ.
ãTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]‹&
ÄUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]æ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *-
closefd
builtins.bool"builtins.bool *ï
openerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadHXF
	open_fileanyio._core._fileio.open_file"◊
Etyping.Coroutine[Any,Any,anyio._core._fileio.AsyncFile[builtins.str]]
Any
Anyj
+anyio._core._fileio.AsyncFile[builtins.str]
builtins.str"builtins.str"anyio._core._fileio.AsyncFile"typing.Coroutine*Õ
file¬
:Union[builtins.str,os.PathLike[builtins.str],builtins.int]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
builtins.int"builtins.int*ç?
modeÄ?
’	TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]ã5
 	Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]‰
—TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Î
∆Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeUpdating–
◊TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]“
ÃUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeWritingˇ	
ôTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ø
éUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeReading"_typeshed.OpenTextMode *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *-
closefd
builtins.bool"builtins.bool *ï
openerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadHX*è
__annotations__#anyio._core._fileio.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict