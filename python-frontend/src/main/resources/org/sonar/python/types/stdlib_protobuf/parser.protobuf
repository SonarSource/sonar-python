
parserV
ParserErrorparser.ParserError"builtins.Exceptionj38j39j310j311j312j313j314¹
STTypeparser.STType"builtins.object*×
compileparser.STType.compile" 
types.CodeType"types.CodeType*(
self
parser.STType"parser.STType*Ç
filename¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath z38z39z310z311z312z313z314*‰
isexprparser.STType.isexpr"
builtins.bool"builtins.bool*(
self
parser.STType"parser.STTypez38z39z310z311z312z313z314*‹
issuiteparser.STType.issuite"
builtins.bool"builtins.bool*(
self
parser.STType"parser.STTypez38z39z310z311z312z313z314*ø
tolistparser.STType.tolist",
builtins.list[Any]
Any"builtins.list*(
self
parser.STType"parser.STType*/
	line_info
builtins.bool"builtins.bool *.
col_info
builtins.bool"builtins.bool z38z39z310z311z312z313z314*ü
totupleparser.STType.totuple".
builtins.tuple[Any]
Any"builtins.tuple*(
self
parser.STType"parser.STType*/
	line_info
builtins.bool"builtins.bool *.
col_info
builtins.bool"builtins.bool z38z39z310z311z312z313z3148j38j39j310j311j312j313j314~
exprparser.expr"
parser.STType"parser.STType*(
source
builtins.str"builtins.strz38z39z310z311z312z313z314€
suiteparser.suite"
parser.STType"parser.STType*(
source
builtins.str"builtins.strz38z39z310z311z312z313z314¢
sequence2stparser.sequence2st"
parser.STType"parser.STType*>
sequence0
typing.Sequence[Any]
Any"typing.Sequencez38z39z310z311z312z313z314œ
tuple2stparser.tuple2st"
parser.STType"parser.STType*>
sequence0
typing.Sequence[Any]
Any"typing.Sequencez38z39z310z311z312z313z314ñ
st2listparser.st2list",
builtins.list[Any]
Any"builtins.list*&
st
parser.STType"parser.STType*/
	line_info
builtins.bool"builtins.bool *.
col_info
builtins.bool"builtins.bool z38z39z310z311z312z313z314õ
st2tupleparser.st2tuple".
builtins.tuple[Any]
Any"builtins.tuple*&
st
parser.STType"parser.STType*/
	line_info
builtins.bool"builtins.bool *.
col_info
builtins.bool"builtins.bool z38z39z310z311z312z313z314Ò
	compilestparser.compilest" 
types.CodeType"types.CodeType*&
st
parser.STType"parser.STType*Ç
filename¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath z38z39z310z311z312z313z314€
isexprparser.isexpr"
builtins.bool"builtins.bool*&
st
parser.STType"parser.STTypez38z39z310z311z312z313z314‚
issuiteparser.issuite"
builtins.bool"builtins.bool*&
st
parser.STType"parser.STTypez38z39z310z311z312z313z314*£
__annotations__parser.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314