
pyspark.utilª
VersionUtilspyspark.util.VersionUtils"builtins.object*í
majorMinorVersion+pyspark.util.VersionUtils.majorMinorVersion"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*.
sparkVersion
builtins.str"builtins.str0:builtins.staticmethodh’
InheritableThreadpyspark.util.InheritableThread"threading.Thread*Š
__init__'pyspark.util.InheritableThread.__init__"
None*J
self@
pyspark.util.InheritableThread"pyspark.util.InheritableThread*W
targetK
CallableType[builtins.function]&
builtins.function"builtins.function*
args
Any*
kwargs
Any*ƒ
start$pyspark.util.InheritableThread.start"
None*J
self@
pyspark.util.InheritableThread"pyspark.util.InheritableThreadr8
_props%pyspark.util.InheritableThread._props
Any[

print_execpyspark.util.print_exec"
None**
stream
typing.TextIO"typing.TextIOÜ
fail_on_stopiteration"pyspark.util.fail_on_stopiteration"K
CallableType[builtins.function]&
builtins.function"builtins.function*R
fK
CallableType[builtins.function]&
builtins.function"builtins.functionç
walk_tbpyspark.util.walk_tb"c
$typing.Iterator[types.TracebackType]*
types.TracebackType"types.TracebackType"typing.Iterator*a
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
NoneÌ
try_simplify_traceback#pyspark.util.try_simplify_traceback"Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*2
tb*
types.TracebackType"types.TracebackTypeô
_print_missing_jarpyspark.util._print_missing_jar"
None**
lib_name
builtins.str"builtins.str**
pkg_name
builtins.str"builtins.str**
jar_name
builtins.str"builtins.str*/
spark_version
builtins.str"builtins.strn
_parse_memorypyspark.util._parse_memory"
builtins.int"builtins.int*#
s
builtins.str"builtins.strä
inheritable_thread_target&pyspark.util.inheritable_thread_target"K
CallableType[builtins.function]&
builtins.function"builtins.function*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*ˆ
__annotations__pyspark.util.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*2
ClientServerpyspark.util.ClientServer
Any*k
__all__pyspark.util.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*.

JavaObjectpyspark.util.JavaObject
Any*t
globspyspark.util.globsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*I
failure_countpyspark.util.failure_count
builtins.int"builtins.int*C

test_countpyspark.util.test_count
builtins.int"builtins.int