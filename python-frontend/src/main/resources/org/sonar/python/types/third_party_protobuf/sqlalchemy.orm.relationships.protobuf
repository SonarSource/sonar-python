
sqlalchemy.orm.relationshipsßK
RelationshipProperty1sqlalchemy.orm.relationships.RelationshipProperty"-sqlalchemy.orm.interfaces.StrategizedProperty*Ó
__init__:sqlalchemy.orm.relationships.RelationshipProperty.__init__"
None*p
selff
1sqlalchemy.orm.relationships.RelationshipProperty"1sqlalchemy.orm.relationships.RelationshipProperty*
argument
Any*l
	secondary[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *n
primaryjoin[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *p
secondaryjoin[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *o
foreign_keys[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *j
uselist[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *.
order_by
builtins.bool"builtins.bool *j
backref[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *q
back_populates[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *k
overlaps[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *1
post_update
builtins.bool"builtins.bool *-
cascade
builtins.bool"builtins.bool *.
viewonly
builtins.bool"builtins.bool *(
lazy
builtins.str"builtins.str *s
collection_class[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
passive_deletes
Any *
passive_updates
Any *n
remote_side[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None * 
enable_typechecks
Any *m

join_depth[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *u
comparator_factory[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *3
single_parent
builtins.bool"builtins.bool */
	innerjoin
builtins.bool"builtins.bool *v
distinct_target_key[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *f
doc[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
active_history
Any *
cascade_backrefs
Any *5
load_on_pending
builtins.bool"builtins.bool *2
bake_queries
builtins.bool"builtins.bool *v
_local_remote_pairs[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *n
query_class[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *g
info[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	omit_join[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *o
sync_backref[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *D
_legacy_inactive_history_style
builtins.bool"builtins.bool z38z39z310z311z312z313*É
instrument_classBsqlalchemy.orm.relationships.RelationshipProperty.instrument_class"
None*p
selff
1sqlalchemy.orm.relationships.RelationshipProperty"1sqlalchemy.orm.relationships.RelationshipProperty*
mapper
Anyz38z39z310z311z312z313*§
merge7sqlalchemy.orm.relationships.RelationshipProperty.merge"
None*p
selff
1sqlalchemy.orm.relationships.RelationshipProperty"1sqlalchemy.orm.relationships.RelationshipProperty*
session
Any*
source_state
Any*
source_dict
Any*

dest_state
Any*
	dest_dict
Any*
load
Any*

_recursive
Any*"
_resolve_conflict_map
Anyz38z39z310z311z312z313*≥
cascade_iteratorBsqlalchemy.orm.relationships.RelationshipProperty.cascade_iterator"
None*p
selff
1sqlalchemy.orm.relationships.RelationshipProperty"1sqlalchemy.orm.relationships.RelationshipProperty*
type_
Any*
state
Any*
dict_
Any*
visited_states
Any*j
halt_on[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*ô
entity8sqlalchemy.orm.relationships.RelationshipProperty.entity*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*ô
mapper8sqlalchemy.orm.relationships.RelationshipProperty.mapper*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*‹
do_init9sqlalchemy.orm.relationships.RelationshipProperty.do_init"
None*p
selff
1sqlalchemy.orm.relationships.RelationshipProperty"1sqlalchemy.orm.relationships.RelationshipPropertyz38z39z310z311z312z3132≠
cascade9sqlalchemy.orm.relationships.RelationshipProperty.cascadeg
cascade9sqlalchemy.orm.relationships.RelationshipProperty.cascade*
self0:builtins.propertyX`·
cascade9sqlalchemy.orm.relationships.RelationshipProperty.cascade"
None*p
selff
1sqlalchemy.orm.relationships.RelationshipProperty"1sqlalchemy.orm.relationships.RelationshipProperty*
cascade
Any0:.setter"38"39"310"311"312"313j38j39j310j311j312j313rg
logger8sqlalchemy.orm.relationships.RelationshipProperty.logger
Any*38*39*310*311*312*313rö
strategy_wildcard_keyGsqlalchemy.orm.relationships.RelationshipProperty.strategy_wildcard_key
builtins.str"builtins.str*38*39*310*311*312*313rå
inherit_cache?sqlalchemy.orm.relationships.RelationshipProperty.inherit_cache
builtins.bool"builtins.bool*38*39*310*311*312*313ri
uselist9sqlalchemy.orm.relationships.RelationshipProperty.uselist
Any*38*39*310*311*312*313rk
argument:sqlalchemy.orm.relationships.RelationshipProperty.argument
Any*38*39*310*311*312*313rm
	secondary;sqlalchemy.orm.relationships.RelationshipProperty.secondary
Any*38*39*310*311*312*313rq
primaryjoin=sqlalchemy.orm.relationships.RelationshipProperty.primaryjoin
Any*38*39*310*311*312*313ru
secondaryjoin?sqlalchemy.orm.relationships.RelationshipProperty.secondaryjoin
Any*38*39*310*311*312*313rq
post_update=sqlalchemy.orm.relationships.RelationshipProperty.post_update
Any*38*39*310*311*312*313rm
	direction;sqlalchemy.orm.relationships.RelationshipProperty.direction
Any*38*39*310*311*312*313rk
viewonly:sqlalchemy.orm.relationships.RelationshipProperty.viewonly
Any*38*39*310*311*312*313rs
sync_backref>sqlalchemy.orm.relationships.RelationshipProperty.sync_backref
Any*38*39*310*311*312*313rc
lazy6sqlalchemy.orm.relationships.RelationshipProperty.lazy
Any*38*39*310*311*312*313ru
single_parent?sqlalchemy.orm.relationships.RelationshipProperty.single_parent
Any*38*39*310*311*312*313r{
collection_classBsqlalchemy.orm.relationships.RelationshipProperty.collection_class
Any*38*39*310*311*312*313ry
passive_deletesAsqlalchemy.orm.relationships.RelationshipProperty.passive_deletes
Any*38*39*310*311*312*313r{
cascade_backrefsBsqlalchemy.orm.relationships.RelationshipProperty.cascade_backrefs
Any*38*39*310*311*312*313ry
passive_updatesAsqlalchemy.orm.relationships.RelationshipProperty.passive_updates
Any*38*39*310*311*312*313rq
remote_side=sqlalchemy.orm.relationships.RelationshipProperty.remote_side
Any*38*39*310*311*312*313r}
enable_typechecksCsqlalchemy.orm.relationships.RelationshipProperty.enable_typechecks
Any*38*39*310*311*312*313rq
query_class=sqlalchemy.orm.relationships.RelationshipProperty.query_class
Any*38*39*310*311*312*313rm
	innerjoin;sqlalchemy.orm.relationships.RelationshipProperty.innerjoin
Any*38*39*310*311*312*313rÅ
distinct_target_keyEsqlalchemy.orm.relationships.RelationshipProperty.distinct_target_key
Any*38*39*310*311*312*313ra
doc5sqlalchemy.orm.relationships.RelationshipProperty.doc
Any*38*39*310*311*312*313rw
active_history@sqlalchemy.orm.relationships.RelationshipProperty.active_history
Any*38*39*310*311*312*313ro

join_depth<sqlalchemy.orm.relationships.RelationshipProperty.join_depth
Any*38*39*310*311*312*313rm
	omit_join;sqlalchemy.orm.relationships.RelationshipProperty.omit_join
Any*38*39*310*311*312*313r
local_remote_pairsDsqlalchemy.orm.relationships.RelationshipProperty.local_remote_pairs
Any*38*39*310*311*312*313rs
bake_queries>sqlalchemy.orm.relationships.RelationshipProperty.bake_queries
Any*38*39*310*311*312*313ry
load_on_pendingAsqlalchemy.orm.relationships.RelationshipProperty.load_on_pending
Any*38*39*310*311*312*313r
comparator_factoryDsqlalchemy.orm.relationships.RelationshipProperty.comparator_factory
Any*38*39*310*311*312*313ro

comparator<sqlalchemy.orm.relationships.RelationshipProperty.comparator
Any*38*39*310*311*312*313rc
info6sqlalchemy.orm.relationships.RelationshipProperty.info
Any*38*39*310*311*312*313rs
strategy_key>sqlalchemy.orm.relationships.RelationshipProperty.strategy_key
Any*38*39*310*311*312*313rk
order_by:sqlalchemy.orm.relationships.RelationshipProperty.order_by
Any*38*39*310*311*312*313rw
back_populates@sqlalchemy.orm.relationships.RelationshipProperty.back_populates
Any*38*39*310*311*312*313ri
backref9sqlalchemy.orm.relationships.RelationshipProperty.backref
Any*38*39*310*311*312*313≤'
JoinCondition*sqlalchemy.orm.relationships.JoinCondition"builtins.object*˙
__init__3sqlalchemy.orm.relationships.JoinCondition.__init__"
None*b
selfX
*sqlalchemy.orm.relationships.JoinCondition"*sqlalchemy.orm.relationships.JoinCondition*&
parent_persist_selectable
Any*%
child_persist_selectable
Any*$
parent_local_selectable
Any*#
child_local_selectable
Any*n
primaryjoin[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	secondary[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *p
secondaryjoin[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *u
parent_equivalents[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *t
child_equivalents[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *{
consider_as_foreign_keys[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *u
local_remote_pairs[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *n
remote_side[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *6
self_referential
builtins.bool"builtins.bool *g
prop[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *2
support_sync
builtins.bool"builtins.bool *
can_be_synced_fn
Any z38z39z310z311z312z313*ö
primaryjoin_minus_localBsqlalchemy.orm.relationships.JoinCondition.primaryjoin_minus_local*
self0:builtins.property`z38z39z310z311z312z313*û
secondaryjoin_minus_localDsqlalchemy.orm.relationships.JoinCondition.secondaryjoin_minus_local*
self0:builtins.property`z38z39z310z311z312z313*∫
primaryjoin_reverse_remoteEsqlalchemy.orm.relationships.JoinCondition.primaryjoin_reverse_remote*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*¢
remote_columns9sqlalchemy.orm.relationships.JoinCondition.remote_columns*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*†
local_columns8sqlalchemy.orm.relationships.JoinCondition.local_columns*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*¨
foreign_key_columns>sqlalchemy.orm.relationships.JoinCondition.foreign_key_columns*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*≥
join_targets7sqlalchemy.orm.relationships.JoinCondition.join_targets"
Any*b
selfX
*sqlalchemy.orm.relationships.JoinCondition"*sqlalchemy.orm.relationships.JoinCondition*
source_selectable
Any*
dest_selectable
Any*
aliased
Any*n
single_crit[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
extra_criteria
Any z38z39z310z311z312z313*ï
create_lazy_clause=sqlalchemy.orm.relationships.JoinCondition.create_lazy_clause"
Any*b
selfX
*sqlalchemy.orm.relationships.JoinCondition"*sqlalchemy.orm.relationships.JoinCondition*7
reverse_direction
builtins.bool"builtins.bool z38z39z310z311z312z313j38j39j310j311j312j313rÜ
parent_persist_selectableDsqlalchemy.orm.relationships.JoinCondition.parent_persist_selectable
Any*38*39*310*311*312*313rÇ
parent_local_selectableBsqlalchemy.orm.relationships.JoinCondition.parent_local_selectable
Any*38*39*310*311*312*313rÑ
child_persist_selectableCsqlalchemy.orm.relationships.JoinCondition.child_persist_selectable
Any*38*39*310*311*312*313rÄ
child_local_selectableAsqlalchemy.orm.relationships.JoinCondition.child_local_selectable
Any*38*39*310*311*312*313rx
parent_equivalents=sqlalchemy.orm.relationships.JoinCondition.parent_equivalents
Any*38*39*310*311*312*313rv
child_equivalents<sqlalchemy.orm.relationships.JoinCondition.child_equivalents
Any*38*39*310*311*312*313rj
primaryjoin6sqlalchemy.orm.relationships.JoinCondition.primaryjoin
Any*38*39*310*311*312*313rn
secondaryjoin8sqlalchemy.orm.relationships.JoinCondition.secondaryjoin
Any*38*39*310*311*312*313rf
	secondary4sqlalchemy.orm.relationships.JoinCondition.secondary
Any*38*39*310*311*312*313rÑ
consider_as_foreign_keysCsqlalchemy.orm.relationships.JoinCondition.consider_as_foreign_keys
Any*38*39*310*311*312*313r\
prop/sqlalchemy.orm.relationships.JoinCondition.prop
Any*38*39*310*311*312*313rt
self_referential;sqlalchemy.orm.relationships.JoinCondition.self_referential
Any*38*39*310*311*312*313rl
support_sync7sqlalchemy.orm.relationships.JoinCondition.support_sync
Any*38*39*310*311*312*313rt
can_be_synced_fn;sqlalchemy.orm.relationships.JoinCondition.can_be_synced_fn
Any*38*39*310*311*312*313Ø
_ColInAnnotations.sqlalchemy.orm.relationships._ColInAnnotations"builtins.object*Ë
__init__7sqlalchemy.orm.relationships._ColInAnnotations.__init__"
None*j
self`
.sqlalchemy.orm.relationships._ColInAnnotations".sqlalchemy.orm.relationships._ColInAnnotations*
name
Anyz38z39z310z311z312z313*p
__call__7sqlalchemy.orm.relationships._ColInAnnotations.__call__*
self*
cz38z39z310z311z312z313j38j39j310j311j312j313r`
name3sqlalchemy.orm.relationships._ColInAnnotations.name
Any*38*39*310*311*312*313S
remote#sqlalchemy.orm.relationships.remote*
exprz38z39z310z311z312z313U
foreign$sqlalchemy.orm.relationships.foreign*
exprz38z39z310z311z312z313*¥
__annotations__,sqlalchemy.orm.relationships.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313