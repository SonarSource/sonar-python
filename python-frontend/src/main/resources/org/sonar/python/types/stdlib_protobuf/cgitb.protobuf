
cgitbŸ
Hook
cgitb.Hook"builtins.object*¿
__init__cgitb.Hook.__init__"
None*"
self

cgitb.Hook"
cgitb.Hook*+
display
builtins.int"builtins.int *≈
logdir∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *+
context
builtins.int"builtins.int *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None **
format
builtins.str"builtins.str z38z39z310z311z312z313z314*·
__call__cgitb.Hook.__call__"
None*"
self

cgitb.Hook"
cgitb.Hook*ú
etypeê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*n
evalueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*b
etbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez38z39z310z311z312z313z314*Î
handlecgitb.Hook.handle"
None*"
self

cgitb.Hook"
cgitb.Hook*˛
infoÒ
çUnion[TypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]],None]“
ÅTypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]]≥
vUnion[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]˝
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]ä
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"_typeshed.ExcInfo7
Tuple[None,None,None]
None
None
None"_typeshed.OptExcInfo
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314S
resetcgitb.reset"
builtins.str"builtins.strz38z39z310z311z312z313z314{
smallcgitb.small"
builtins.str"builtins.str*&
text
builtins.str"builtins.strz38z39z310z311z312z313z314}
strongcgitb.strong"
builtins.str"builtins.str*&
text
builtins.str"builtins.strz38z39z310z311z312z313z314y
grey
cgitb.grey"
builtins.str"builtins.str*&
text
builtins.str"builtins.strz38z39z310z311z312z313z314Î
lookupcgitb.lookup"v
#Tuple[Union[builtins.str,None],Any]D
Union[builtins.str,None]
builtins.str"builtins.str
None
Any*&
name
builtins.str"builtins.str*-
frame"
types.FrameType"types.FrameType*c
localsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictz38z39z310z311z312z313z314ü
scanvarscgitb.scanvars"Ù
?builtins.list[Tuple[builtins.str,Union[builtins.str,None],Any]]°
0Tuple[builtins.str,Union[builtins.str,None],Any]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None
Any"builtins.list*W
readerK
CallableType[builtins.function]&
builtins.function"builtins.function*-
frame"
types.FrameType"types.FrameType*c
localsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictz38z39z310z311z312z313z314ﬂ
html
cgitb.html"
builtins.str"builtins.str*ﬁ
einfo“
ÅTypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]]≥
vUnion[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]˝
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]ä
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"_typeshed.ExcInfo7
Tuple[None,None,None]
None
None
None"_typeshed.OptExcInfo*+
context
builtins.int"builtins.int z38z39z310z311z312z313z314ﬂ
text
cgitb.text"
builtins.str"builtins.str*ﬁ
einfo“
ÅTypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]]≥
vUnion[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]˝
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]ä
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"_typeshed.ExcInfo7
Tuple[None,None,None]
None
None
None"_typeshed.OptExcInfo*+
context
builtins.int"builtins.int z38z39z310z311z312z313z314ƒ
handlercgitb.handler"
None*˛
infoÒ
çUnion[TypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]],None]“
ÅTypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]]≥
vUnion[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]˝
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]ä
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"_typeshed.ExcInfo7
Tuple[None,None,None]
None
None
None"_typeshed.OptExcInfo
None z38z39z310z311z312z313z314è
enablecgitb.enable"
None*+
display
builtins.int"builtins.int *≈
logdir∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *+
context
builtins.int"builtins.int **
format
builtins.str"builtins.str z38z39z310z311z312z313z314*¢
__annotations__cgitb.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*a
	__UNDEF__cgitb.__UNDEF__"
builtins.object"builtins.object*38*39*310*311*312*313*314