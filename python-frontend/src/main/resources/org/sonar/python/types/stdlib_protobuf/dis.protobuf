
disø•
Instructiondis.Instruction"builtins.tuple*˝

_replacedis.Instruction._replace"…
dis.Instruction._NTØ
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool*’
_self…
dis.Instruction._NTØ
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool**
opname
builtins.str"builtins.str **
opcode
builtins.int"builtins.int *O
argD
Union[builtins.int,None]
builtins.int"builtins.int
None *
argval
Any *+
argrepr
builtins.str"builtins.str **
offset
builtins.int"builtins.int *W
starts_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None *4
is_jump_target
builtins.bool"builtins.bool z38z39z310*ë
_replacedis.Instruction._replace"Û	
dis.Instruction._NTŸ	
ÄTuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None*ˇ	
_selfÛ	
dis.Instruction._NTŸ	
ÄTuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None**
opname
builtins.str"builtins.str **
opcode
builtins.int"builtins.int *O
argD
Union[builtins.int,None]
builtins.int"builtins.int
None *
argval
Any *+
argrepr
builtins.str"builtins.str **
offset
builtins.int"builtins.int *W
starts_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None *4
is_jump_target
builtins.bool"builtins.bool *∂
	positions§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None z311z312z313z314*ê
__new__dis.Instruction.__new__"…
dis.Instruction._NTØ
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool*˙
_clsÔ
Type[dis.Instruction._NT]…
dis.Instruction._NTØ
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool"type*(
opname
builtins.str"builtins.str*(
opcode
builtins.int"builtins.int*M
argD
Union[builtins.int,None]
builtins.int"builtins.int
None*
argval
Any*)
argrepr
builtins.str"builtins.str*(
offset
builtins.int"builtins.int*U
starts_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None*2
is_jump_target
builtins.bool"builtins.boolz38z39z310*§
__new__dis.Instruction.__new__"Û	
dis.Instruction._NTŸ	
ÄTuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None*§

_clsô

Type[dis.Instruction._NT]Û	
dis.Instruction._NTŸ	
ÄTuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None"type*(
opname
builtins.str"builtins.str*(
opcode
builtins.int"builtins.int*M
argD
Union[builtins.int,None]
builtins.int"builtins.int
None*
argval
Any*)
argrepr
builtins.str"builtins.str*(
offset
builtins.int"builtins.int*U
starts_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None*2
is_jump_target
builtins.bool"builtins.bool*∂
	positions§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None z311z312z313z314*‡
_asdictdis.Instruction._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*’
_self…
dis.Instruction._NTØ
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.boolz38z39z310*ë
_asdictdis.Instruction._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*ˇ	
_selfÛ	
dis.Instruction._NTŸ	
ÄTuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
Nonez311z312z313z314*‚
_makedis.Instruction._make"…
dis.Instruction._NTØ
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool*˙
_clsÔ
Type[dis.Instruction._NT]…
dis.Instruction._NTØ
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0: pz38z39z310*Ω
_makedis.Instruction._make"Û	
dis.Instruction._NTŸ	
ÄTuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None*§

_clsô

Type[dis.Instruction._NT]Û	
dis.Instruction._NTŸ	
ÄTuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0: pz311z312z313z314j38j39j310j311j312j313j314rÄ
opnamedis.Instruction.opname
builtins.str"builtins.str*38*38*39*39*310*310*311*311*312*312*313*313*314*314rÄ
opcodedis.Instruction.opcode
builtins.int"builtins.int*38*38*39*39*310*310*311*311*312*312*313*313*314*314r¢
argdis.Instruction.argD
Union[builtins.int,None]
builtins.int"builtins.int
None*38*38*39*39*310*310*311*311*312*312*313*313*314*314rk
argvaldis.Instruction.argval
Any*38*38*39*39*310*310*311*311*312*312*313*313*314*314rÇ
argreprdis.Instruction.argrepr
builtins.str"builtins.str*38*38*39*39*310*310*311*311*312*312*313*313*314*314rÄ
offsetdis.Instruction.offset
builtins.int"builtins.int*38*38*39*39*310*310*311*311*312*312*313*313*314*314r≤
starts_linedis.Instruction.starts_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None*38*38*39*39*310*310*311*311*312*312*313*313*314*314rí
is_jump_targetdis.Instruction.is_jump_target
builtins.bool"builtins.bool*38*38*39*39*310*310*311*311*312*312*313*313*314*314rî
_fieldsdis.Instruction._fields‚
nTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*38*39*310r∆
_fieldsdis.Instruction._fieldsç
{Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*311*312*313*314r¶
_field_typesdis.Instruction._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314r¨
_field_defaultsdis.Instruction._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314ra
_sourcedis.Instruction._source
builtins.str"builtins.str*38*39*310*311*312*313*314r¨
__annotations__dis.Instruction.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314rª
__match_args__dis.Instruction.__match_args__É
∂Tuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*310rô
__match_args__dis.Instruction.__match_args__“
ÃTuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*311*312*313*314rı
	positionsdis.Instruction.positions§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None*311*311*312*312*313*313*314*314é/
Bytecodedis.Bytecode"builtins.object*°
__init__dis.Bytecode.__init__"
None*&
self
dis.Bytecode"dis.Bytecode*ä
xÇ
ÜUnion[TypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str]÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType
builtins.str"builtins.str*V

first_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None *Z
current_offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None z38z39z310*ã
__init__dis.Bytecode.__init__"
None*&
self
dis.Bytecode"dis.Bytecode*ä
xÇ
ÜUnion[TypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str]÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType
builtins.str"builtins.str*V

first_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None *Z
current_offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None *1
show_caches
builtins.bool"builtins.bool *.
adaptive
builtins.bool"builtins.bool z311z312z313z314*∫
from_tracebackdis.Bytecode.from_traceback"A
dis.Bytecode.Self
dis.Bytecode"dis.Bytecode"dis.Bytecode*m
clsd
Type[dis.Bytecode.Self]A
dis.Bytecode.Self
dis.Bytecode"dis.Bytecode"dis.Bytecode"type*2
tb*
types.TracebackType"types.TracebackType0:builtins.classmethodpz38z39z310*§
from_tracebackdis.Bytecode.from_traceback"A
dis.Bytecode.Self
dis.Bytecode"dis.Bytecode"dis.Bytecode*m
clsd
Type[dis.Bytecode.Self]A
dis.Bytecode.Self
dis.Bytecode"dis.Bytecode"dis.Bytecode"type*2
tb*
types.TracebackType"types.TracebackType*1
show_caches
builtins.bool"builtins.bool *.
adaptive
builtins.bool"builtins.bool 0:builtins.classmethodpz311z312z313z314*”
__iter__dis.Bytecode.__iter__"Ç
ötyping.Iterator[TypeAlias[Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]]]—
âTypeAlias[Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]]Ø
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool"dis.Instruction"typing.Iterator*
dis.Bytecode"dis.Bytecodez38z39z310*à
__iter__dis.Bytecode.__iter__"∞
útyping.Iterator[TypeAlias[Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]]]˝
ãTypeAlias[Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]]Ÿ	
ÄTuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None"dis.Instruction"typing.Iterator*
dis.Bytecode"dis.Bytecodez311z312z313z314*Ä
infodis.Bytecode.info"
builtins.str"builtins.str*&
self
dis.Bytecode"dis.Bytecodez38z39z310z311z312z313z314*~
disdis.Bytecode.dis"
builtins.str"builtins.str*&
self
dis.Bytecode"dis.Bytecodez38z39z310z311z312z313z314j38j39j310j311j312j313j314rb
codeobjdis.Bytecode.codeobj 
types.CodeType"types.CodeType*38*39*310*311*312*313*314rd

first_linedis.Bytecode.first_line
builtins.int"builtins.int*38*39*310*311*312*313*314Ñ/
	Positionsdis.Positions"builtins.tuple*‰	
_replacedis.Positions._replace"û
dis.Positions._NTÜ
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None*™
_selfû
dis.Positions._NTÜ
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None*R
linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

end_linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

col_offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None *Z
end_col_offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None z311z312z313z314*Ö

__new__dis.Positions.__new__"û
dis.Positions._NTÜ
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None*Õ
_cls¬
Type[dis.Positions._NT]û
dis.Positions._NTÜ
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"type*R
linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

end_linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

col_offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None *Z
end_col_offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None z311z312z313z314*∫
_asdictdis.Positions._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*™
_selfû
dis.Positions._NTÜ
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
Nonez311z312z313z314*è
_makedis.Positions._make"û
dis.Positions._NTÜ
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None*Õ
_cls¬
Type[dis.Positions._NT]û
dis.Positions._NTÜ
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0: pz311z312z313z314j311j312j313j314rå
linenodis.Positions.linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None*311*311*312*312*313*313*314*314rî

end_linenodis.Positions.end_linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None*311*311*312*312*313*313*314*314rî

col_offsetdis.Positions.col_offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None*311*311*312*312*313*313*314*314rú
end_col_offsetdis.Positions.end_col_offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None*311*311*312*312*313*313*314*314rÌ
_fieldsdis.Positions._fields∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*311*312*313*314ró
_field_typesdis.Positions._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*311*312*313*314rù
_field_defaultsdis.Positions._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*311*312*313*314rR
_sourcedis.Positions._source
builtins.str"builtins.str*311*312*313*314rù
__annotations__dis.Positions.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*311*312*313*314rã
__match_args__dis.Positions.__match_args__∆
^Tuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*311*312*313*314°
stack_effectopcode.stack_effect"
builtins.int"builtins.int*
builtins.int"builtins.int*HD
Union[builtins.int,None]
builtins.int"builtins.int
None *S
jumpG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None z38z39z310z311z312z313z314Ì

findlabelsdis.findlabels"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*·
code÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeTypez38z39z310z311z312z313z314“
findlinestartsdis.findlinestarts"¶
1typing.Iterator[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"typing.Iterator*·
code÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeTypez38z39z310z311z312z313z314à
pretty_flagsdis.pretty_flags"
builtins.str"builtins.str*'
flags
builtins.int"builtins.intz38z39z310z311z312z313z314Ê
	code_infodis.code_info"
builtins.str"builtins.str*ä
xÇ
ÜUnion[TypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str]÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType
builtins.str"builtins.strz38z39z310z311z312z313z314à
disdis.dis"
None*â
xˇ
≠Union[TypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str,builtins.bytes,builtins.bytearray,None]÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray
None *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *Q
depthD
Union[builtins.int,None]
builtins.int"builtins.int
None z38z39z310Ú
disdis.dis"
None*â
xˇ
≠Union[TypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]],builtins.str,builtins.bytes,builtins.bytearray,None]÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray
None *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *Q
depthD
Union[builtins.int,None]
builtins.int"builtins.int
None *1
show_caches
builtins.bool"builtins.bool *.
adaptive
builtins.bool"builtins.bool z311z312z313z314∆
disassembledis.disassemble"
None*ﬂ
co÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType*)
lasti
builtins.int"builtins.int *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z38z39z310∞
disassembledis.disassemble"
None*ﬂ
co÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType*)
lasti
builtins.int"builtins.int *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *1
show_caches
builtins.bool"builtins.bool *.
adaptive
builtins.bool"builtins.bool z311z312z313z314∫
disco	dis.disco"
None*ﬂ
co÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType*)
lasti
builtins.int"builtins.int *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z38z39z310§
disco	dis.disco"
None*ﬂ
co÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType*)
lasti
builtins.int"builtins.int *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *1
show_caches
builtins.bool"builtins.bool *.
adaptive
builtins.bool"builtins.bool z311z312z313z314í
distb	dis.distb"
None*c
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z38z39z310¸
distb	dis.distb"
None*c
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None *Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *1
show_caches
builtins.bool"builtins.bool *.
adaptive
builtins.bool"builtins.bool z311z312z313z314Û

get_instructionsdis.get_instructions"Ç
ötyping.Iterator[TypeAlias[Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]]]—
âTypeAlias[Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]]Ø
~Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool"dis.Instruction"typing.Iterator*ﬁ
x÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType*V

first_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None z38z39z310ã
get_instructionsdis.get_instructions"∞
útyping.Iterator[TypeAlias[Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]]]˝
ãTypeAlias[Tuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]]Ÿ	
ÄTuple[builtins.str,builtins.int,Union[builtins.int,None],Any,builtins.str,builtins.int,Union[builtins.int,None],builtins.bool,Union[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]]
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
Any
builtins.str"builtins.str
builtins.int"builtins.intD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.bool"builtins.bool§
ÅUnion[TypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]],None]ë
uTypeAlias[Tuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]]Ü
jTuple[Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None],Union[builtins.int,None]]D
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
None"dis.Positions
None"dis.Instruction"typing.Iterator*ﬁ
x÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType*V

first_lineD
Union[builtins.int,None]
builtins.int"builtins.int
None *1
show_caches
builtins.bool"builtins.bool *.
adaptive
builtins.bool"builtins.bool z311z312z313z314´
	show_codedis.show_code"
None*ﬂ
co÷
rTypeAlias[Union[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]] 
gUnion[types.MethodType,types.FunctionType,types.CodeType,builtins.type,CallableType[builtins.function]]$
types.MethodType"types.MethodType(
types.FunctionType"types.FunctionType 
types.CodeType"types.CodeType
builtins.type"builtins.typeK
CallableType[builtins.function]&
builtins.function"builtins.function"dis._HaveCodeType*Å
fileu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z38z39z310z311z312z313z314*†
__annotations__dis.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*›
cmp_opopcode.cmp_opø
éTuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*38*ú
cmp_opopcode.cmp_opÂ
äTuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*39*310*311*312*313*314*à
hasconstopcode.hasconstJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*38*39*310*311*312*313*314*Ü
hasnameopcode.hasnameJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*38*39*310*311*312*313*314*Ü
hasjrelopcode.hasjrelJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*38*39*310*311*312*313*314*Ü
hasjabsopcode.hasjabsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*38*39*310*311*312*313*314*à
haslocalopcode.haslocalJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*38*39*310*311*312*313*314*å

hascompareopcode.hascompareJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*38*39*310*311*312*313*314*Ü
hasfreeopcode.hasfreeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*38*39*310*311*312*313*314*Ñ
opnameopcode.opnameJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*314*≠
opmapopcode.opmapu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*38*39*310*311*312*313*314*
HAVE_ARGUMENTopcode.HAVE_ARGUMENT7
Literal[builtins.int]	
builtins.int"builtins.int*38*39*310*311*312*313*314*}
EXTENDED_ARGopcode.EXTENDED_ARG7
Literal[builtins.int]	
builtins.int"builtins.int*38*39*310*311*312*313*314*à
hasnargsopcode.hasnargsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*38*39*310*311*312*313*314*É
__all__dis.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*314*∆
COMPILER_FLAG_NAMESdis.COMPILER_FLAG_NAMESu
(builtins.dict[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"builtins.dict*38*39*310*311*312*313*314