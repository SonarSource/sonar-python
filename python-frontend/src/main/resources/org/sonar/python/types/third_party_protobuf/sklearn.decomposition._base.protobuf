
sklearn.decomposition._baseâ
_BasePCA$sklearn.decomposition._base._BasePCA",sklearn.base.ClassNamePrefixFeaturesOutMixin"sklearn.base.TransformerMixin"sklearn.base.BaseEstimator*Ø
get_covariance3sklearn.decomposition._base._BasePCA.get_covariance"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*V
selfL
$sklearn.decomposition._base._BasePCA"$sklearn.decomposition._base._BasePCA*Ö
get_precision2sklearn.decomposition._base._BasePCA.get_precision"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*V
selfL
$sklearn.decomposition._base._BasePCA"$sklearn.decomposition._base._BasePCA*ã
fit(sklearn.decomposition._base._BasePCA.fit"¡
)sklearn.decomposition._base._BasePCA_SelfL
$sklearn.decomposition._base._BasePCA"$sklearn.decomposition._base._BasePCA"$sklearn.decomposition._base._BasePCA*¬
self¡
)sklearn.decomposition._base._BasePCA_SelfL
$sklearn.decomposition._base._BasePCA"$sklearn.decomposition._base._BasePCA"$sklearn.decomposition._base._BasePCA*´
X¬
HTypeAlias[Union[numpy.ndarray[Any,Any],pandas.core.frame.DataFrame,Any]]Á
=Union[numpy.ndarray[Any,Any],pandas.core.frame.DataFrame,Any]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
Any"sklearn._typing.MatrixLike*
y
Any 0:abc.abstractmethod@*…
	transform.sklearn.decomposition._base._BasePCA.transform"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*V
selfL
$sklearn.decomposition._base._BasePCA"$sklearn.decomposition._base._BasePCA*´
X¬
HTypeAlias[Union[numpy.ndarray[Any,Any],pandas.core.frame.DataFrame,Any]]Á
=Union[numpy.ndarray[Any,Any],pandas.core.frame.DataFrame,Any]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
Any"sklearn._typing.MatrixLike*•
inverse_transform6sklearn.decomposition._base._BasePCA.inverse_transform"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*V
selfL
$sklearn.decomposition._base._BasePCA"$sklearn.decomposition._base._BasePCA*´
X¬
HTypeAlias[Union[numpy.ndarray[Any,Any],pandas.core.frame.DataFrame,Any]]Á
=Union[numpy.ndarray[Any,Any],pandas.core.frame.DataFrame,Any]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
Any"sklearn._typing.MatrixLike@babc.ABCMeta²
check_is_fitted(sklearn.utils.validation.check_is_fitted"
None*G
	estimator8
sklearn.base.BaseEstimator"sklearn.base.BaseEstimator*ñ

attributesÞ
fUnion[builtins.tuple[builtins.str],None,typing.Sequence[Any],builtins.list[builtins.str],builtins.str]L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None0
typing.Sequence[Any]
Any"typing.SequenceJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
builtins.str"builtins.str *O
msgD
Union[None,builtins.str]
None
builtins.str"builtins.str *]

all_or_anyK
CallableType[builtins.function]&
builtins.function"builtins.function *—
__annotations__+sklearn.decomposition._base.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*5
linalg"sklearn.decomposition._base.linalg
Any*
npnumpy 