
torch.nn.modules.lossü
L1Losstorch.nn.modules.loss.L1Loss"torch.nn.modules.module.Module*´
__init__%torch.nn.modules.loss.L1Loss.__init__"
None*F
self<
torch.nn.modules.loss.L1Loss"torch.nn.modules.loss.L1Loss*
args
Any*
kwargs
Any*®
forward$torch.nn.modules.loss.L1Loss.forward"
Any*F
self<
torch.nn.modules.loss.L1Loss"torch.nn.modules.loss.L1Loss*
args
Any*
kwargs
Anyß
NLLLosstorch.nn.modules.loss.NLLLoss"torch.nn.modules.module.Module*Æ
__init__&torch.nn.modules.loss.NLLLoss.__init__"
None*H
self>
torch.nn.modules.loss.NLLLoss"torch.nn.modules.loss.NLLLoss*
args
Any*
kwargs
Any*´
forward%torch.nn.modules.loss.NLLLoss.forward"
Any*H
self>
torch.nn.modules.loss.NLLLoss"torch.nn.modules.loss.NLLLoss*
args
Any*
kwargs
Any∑
	NLLLoss2dtorch.nn.modules.loss.NLLLoss2d"torch.nn.modules.module.Module*¥
__init__(torch.nn.modules.loss.NLLLoss2d.__init__"
None*L
selfB
torch.nn.modules.loss.NLLLoss2d"torch.nn.modules.loss.NLLLoss2d*
args
Any*
kwargs
Any*±
forward'torch.nn.modules.loss.NLLLoss2d.forward"
Any*L
selfB
torch.nn.modules.loss.NLLLoss2d"torch.nn.modules.loss.NLLLoss2d*
args
Any*
kwargs
Anyﬂ
PoissonNLLLoss$torch.nn.modules.loss.PoissonNLLLoss"torch.nn.modules.module.Module*√
__init__-torch.nn.modules.loss.PoissonNLLLoss.__init__"
None*V
selfL
$torch.nn.modules.loss.PoissonNLLLoss"$torch.nn.modules.loss.PoissonNLLLoss*
args
Any*
kwargs
Any*¿
forward,torch.nn.modules.loss.PoissonNLLLoss.forward"
Any*V
selfL
$torch.nn.modules.loss.PoissonNLLLoss"$torch.nn.modules.loss.PoissonNLLLoss*
args
Any*
kwargs
AnyÁ
GaussianNLLLoss%torch.nn.modules.loss.GaussianNLLLoss"torch.nn.modules.module.Module*∆
__init__.torch.nn.modules.loss.GaussianNLLLoss.__init__"
None*X
selfN
%torch.nn.modules.loss.GaussianNLLLoss"%torch.nn.modules.loss.GaussianNLLLoss*
args
Any*
kwargs
Any*√
forward-torch.nn.modules.loss.GaussianNLLLoss.forward"
Any*X
selfN
%torch.nn.modules.loss.GaussianNLLLoss"%torch.nn.modules.loss.GaussianNLLLoss*
args
Any*
kwargs
Any∑
	KLDivLosstorch.nn.modules.loss.KLDivLoss"torch.nn.modules.module.Module*¥
__init__(torch.nn.modules.loss.KLDivLoss.__init__"
None*L
selfB
torch.nn.modules.loss.KLDivLoss"torch.nn.modules.loss.KLDivLoss*
args
Any*
kwargs
Any*±
forward'torch.nn.modules.loss.KLDivLoss.forward"
Any*L
selfB
torch.nn.modules.loss.KLDivLoss"torch.nn.modules.loss.KLDivLoss*
args
Any*
kwargs
Anyß
MSELosstorch.nn.modules.loss.MSELoss"torch.nn.modules.module.Module*Æ
__init__&torch.nn.modules.loss.MSELoss.__init__"
None*H
self>
torch.nn.modules.loss.MSELoss"torch.nn.modules.loss.MSELoss*
args
Any*
kwargs
Any*´
forward%torch.nn.modules.loss.MSELoss.forward"
Any*H
self>
torch.nn.modules.loss.MSELoss"torch.nn.modules.loss.MSELoss*
args
Any*
kwargs
Anyß
BCELosstorch.nn.modules.loss.BCELoss"torch.nn.modules.module.Module*Æ
__init__&torch.nn.modules.loss.BCELoss.__init__"
None*H
self>
torch.nn.modules.loss.BCELoss"torch.nn.modules.loss.BCELoss*
args
Any*
kwargs
Any*´
forward%torch.nn.modules.loss.BCELoss.forward"
Any*H
self>
torch.nn.modules.loss.BCELoss"torch.nn.modules.loss.BCELoss*
args
Any*
kwargs
Any˜
BCEWithLogitsLoss'torch.nn.modules.loss.BCEWithLogitsLoss"torch.nn.modules.module.Module*Ã
__init__0torch.nn.modules.loss.BCEWithLogitsLoss.__init__"
None*\
selfR
'torch.nn.modules.loss.BCEWithLogitsLoss"'torch.nn.modules.loss.BCEWithLogitsLoss*
args
Any*
kwargs
Any*…
forward/torch.nn.modules.loss.BCEWithLogitsLoss.forward"
Any*\
selfR
'torch.nn.modules.loss.BCEWithLogitsLoss"'torch.nn.modules.loss.BCEWithLogitsLoss*
args
Any*
kwargs
Anyˇ
HingeEmbeddingLoss(torch.nn.modules.loss.HingeEmbeddingLoss"torch.nn.modules.module.Module*œ
__init__1torch.nn.modules.loss.HingeEmbeddingLoss.__init__"
None*^
selfT
(torch.nn.modules.loss.HingeEmbeddingLoss"(torch.nn.modules.loss.HingeEmbeddingLoss*
args
Any*
kwargs
Any*Ã
forward0torch.nn.modules.loss.HingeEmbeddingLoss.forward"
Any*^
selfT
(torch.nn.modules.loss.HingeEmbeddingLoss"(torch.nn.modules.loss.HingeEmbeddingLoss*
args
Any*
kwargs
Anyè
MultiLabelMarginLoss*torch.nn.modules.loss.MultiLabelMarginLoss"torch.nn.modules.module.Module*’
__init__3torch.nn.modules.loss.MultiLabelMarginLoss.__init__"
None*b
selfX
*torch.nn.modules.loss.MultiLabelMarginLoss"*torch.nn.modules.loss.MultiLabelMarginLoss*
args
Any*
kwargs
Any*“
forward2torch.nn.modules.loss.MultiLabelMarginLoss.forward"
Any*b
selfX
*torch.nn.modules.loss.MultiLabelMarginLoss"*torch.nn.modules.loss.MultiLabelMarginLoss*
args
Any*
kwargs
Anyœ
SmoothL1Loss"torch.nn.modules.loss.SmoothL1Loss"torch.nn.modules.module.Module*Ω
__init__+torch.nn.modules.loss.SmoothL1Loss.__init__"
None*R
selfH
"torch.nn.modules.loss.SmoothL1Loss""torch.nn.modules.loss.SmoothL1Loss*
args
Any*
kwargs
Any*∫
forward*torch.nn.modules.loss.SmoothL1Loss.forward"
Any*R
selfH
"torch.nn.modules.loss.SmoothL1Loss""torch.nn.modules.loss.SmoothL1Loss*
args
Any*
kwargs
Any∑
	HuberLosstorch.nn.modules.loss.HuberLoss"torch.nn.modules.module.Module*¥
__init__(torch.nn.modules.loss.HuberLoss.__init__"
None*L
selfB
torch.nn.modules.loss.HuberLoss"torch.nn.modules.loss.HuberLoss*
args
Any*
kwargs
Any*±
forward'torch.nn.modules.loss.HuberLoss.forward"
Any*L
selfB
torch.nn.modules.loss.HuberLoss"torch.nn.modules.loss.HuberLoss*
args
Any*
kwargs
Anyﬂ
SoftMarginLoss$torch.nn.modules.loss.SoftMarginLoss"torch.nn.modules.module.Module*√
__init__-torch.nn.modules.loss.SoftMarginLoss.__init__"
None*V
selfL
$torch.nn.modules.loss.SoftMarginLoss"$torch.nn.modules.loss.SoftMarginLoss*
args
Any*
kwargs
Any*¿
forward,torch.nn.modules.loss.SoftMarginLoss.forward"
Any*V
selfL
$torch.nn.modules.loss.SoftMarginLoss"$torch.nn.modules.loss.SoftMarginLoss*
args
Any*
kwargs
AnyÔ
CrossEntropyLoss&torch.nn.modules.loss.CrossEntropyLoss"torch.nn.modules.module.Module*…
__init__/torch.nn.modules.loss.CrossEntropyLoss.__init__"
None*Z
selfP
&torch.nn.modules.loss.CrossEntropyLoss"&torch.nn.modules.loss.CrossEntropyLoss*
args
Any*
kwargs
Any*∆
forward.torch.nn.modules.loss.CrossEntropyLoss.forward"
Any*Z
selfP
&torch.nn.modules.loss.CrossEntropyLoss"&torch.nn.modules.loss.CrossEntropyLoss*
args
Any*
kwargs
AnyØ
MultiLabelSoftMarginLoss.torch.nn.modules.loss.MultiLabelSoftMarginLoss"torch.nn.modules.module.Module*·
__init__7torch.nn.modules.loss.MultiLabelSoftMarginLoss.__init__"
None*j
self`
.torch.nn.modules.loss.MultiLabelSoftMarginLoss".torch.nn.modules.loss.MultiLabelSoftMarginLoss*
args
Any*
kwargs
Any*ﬁ
forward6torch.nn.modules.loss.MultiLabelSoftMarginLoss.forward"
Any*j
self`
.torch.nn.modules.loss.MultiLabelSoftMarginLoss".torch.nn.modules.loss.MultiLabelSoftMarginLoss*
args
Any*
kwargs
Anyá
CosineEmbeddingLoss)torch.nn.modules.loss.CosineEmbeddingLoss"torch.nn.modules.module.Module*“
__init__2torch.nn.modules.loss.CosineEmbeddingLoss.__init__"
None*`
selfV
)torch.nn.modules.loss.CosineEmbeddingLoss")torch.nn.modules.loss.CosineEmbeddingLoss*
args
Any*
kwargs
Any*œ
forward1torch.nn.modules.loss.CosineEmbeddingLoss.forward"
Any*`
selfV
)torch.nn.modules.loss.CosineEmbeddingLoss")torch.nn.modules.loss.CosineEmbeddingLoss*
args
Any*
kwargs
Any˜
MarginRankingLoss'torch.nn.modules.loss.MarginRankingLoss"torch.nn.modules.module.Module*Ã
__init__0torch.nn.modules.loss.MarginRankingLoss.__init__"
None*\
selfR
'torch.nn.modules.loss.MarginRankingLoss"'torch.nn.modules.loss.MarginRankingLoss*
args
Any*
kwargs
Any*…
forward/torch.nn.modules.loss.MarginRankingLoss.forward"
Any*\
selfR
'torch.nn.modules.loss.MarginRankingLoss"'torch.nn.modules.loss.MarginRankingLoss*
args
Any*
kwargs
AnyÁ
MultiMarginLoss%torch.nn.modules.loss.MultiMarginLoss"torch.nn.modules.module.Module*∆
__init__.torch.nn.modules.loss.MultiMarginLoss.__init__"
None*X
selfN
%torch.nn.modules.loss.MultiMarginLoss"%torch.nn.modules.loss.MultiMarginLoss*
args
Any*
kwargs
Any*√
forward-torch.nn.modules.loss.MultiMarginLoss.forward"
Any*X
selfN
%torch.nn.modules.loss.MultiMarginLoss"%torch.nn.modules.loss.MultiMarginLoss*
args
Any*
kwargs
Any˜
TripletMarginLoss'torch.nn.modules.loss.TripletMarginLoss"torch.nn.modules.module.Module*Ã
__init__0torch.nn.modules.loss.TripletMarginLoss.__init__"
None*\
selfR
'torch.nn.modules.loss.TripletMarginLoss"'torch.nn.modules.loss.TripletMarginLoss*
args
Any*
kwargs
Any*…
forward/torch.nn.modules.loss.TripletMarginLoss.forward"
Any*\
selfR
'torch.nn.modules.loss.TripletMarginLoss"'torch.nn.modules.loss.TripletMarginLoss*
args
Any*
kwargs
Any◊
TripletMarginWithDistanceLoss3torch.nn.modules.loss.TripletMarginWithDistanceLoss"torch.nn.modules.module.Module*
__init__<torch.nn.modules.loss.TripletMarginWithDistanceLoss.__init__"
None*t
selfj
3torch.nn.modules.loss.TripletMarginWithDistanceLoss"3torch.nn.modules.loss.TripletMarginWithDistanceLoss*
args
Any*
kwargs
Any*Ì
forward;torch.nn.modules.loss.TripletMarginWithDistanceLoss.forward"
Any*t
selfj
3torch.nn.modules.loss.TripletMarginWithDistanceLoss"3torch.nn.modules.loss.TripletMarginWithDistanceLoss*
args
Any*
kwargs
Anyß
CTCLosstorch.nn.modules.loss.CTCLoss"torch.nn.modules.module.Module*Æ
__init__&torch.nn.modules.loss.CTCLoss.__init__"
None*H
self>
torch.nn.modules.loss.CTCLoss"torch.nn.modules.loss.CTCLoss*
args
Any*
kwargs
Any*´
forward%torch.nn.modules.loss.CTCLoss.forward"
Any*H
self>
torch.nn.modules.loss.CTCLoss"torch.nn.modules.loss.CTCLoss*
args
Any*
kwargs
Any*ë
__annotations__%torch.nn.modules.loss.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict