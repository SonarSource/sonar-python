
pandas.core.algorithms⁄
value_counts#pandas.core.algorithms.value_counts"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*–
values√
ôUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tuple**
sort
builtins.bool"builtins.bool */
	ascending
builtins.bool"builtins.bool */
	normalize
builtins.bool"builtins.bool *P
binsD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
dropna
builtins.bool"builtins.bool ¸	
takepandas.core.algorithms.take"
Any*
arr
Any*∂
indices®
ßTypeAlias[Union[typing.Sequence[builtins.int],typing.Sequence[numpy.integer[Any]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]›
úUnion[typing.Sequence[builtins.int],typing.Sequence[numpy.integer[Any]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]N
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequenced
#typing.Sequence[numpy.integer[Any]],
numpy.integer[Any]
Any"numpy.integer"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.TakeIndexer*µ
axis®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *0

allow_fill
builtins.bool"builtins.bool *

fill_value
Any "Â
uniquepandas.core.algorithms.uniqueÏ
uniquepandas.core.algorithms.unique"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*\
valuesP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadX§
uniquepandas.core.algorithms.unique"l
2pandas.core.indexes.category.CategoricalIndex[Any]
Any"-pandas.core.indexes.category.CategoricalIndex*x
valuesl
2pandas.core.indexes.category.CategoricalIndex[Any]
Any"-pandas.core.indexes.category.CategoricalIndex0:typing.overloadX—
uniquepandas.core.algorithms.unique"Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*é
valuesÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadX”
uniquepandas.core.algorithms.unique"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*Z
valuesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index0:typing.overloadX¸
uniquepandas.core.algorithms.unique"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*d
valuesX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical0:typing.overloadXÊ
uniquepandas.core.algorithms.unique"’
DUnion[numpy.ndarray[Any,Any],pandas.core.arrays.base.ExtensionArray]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayP
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray*P
valuesD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series0:typing.overloadX§
uniquepandas.core.algorithms.unique"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*™
valuesù
0Union[numpy.ndarray[Any,Any],builtins.list[Any]]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray,
builtins.list[Any]
Any"builtins.list0:typing.overloadXÏ
uniquepandas.core.algorithms.unique"P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray*\
valuesP
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray0:typing.overloadX"°
	factorize pandas.core.algorithms.factorize„
	factorize pandas.core.algorithms.factorize"Æ
4Tuple[numpy.ndarray[Any,Any],numpy.ndarray[Any,Any]]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*≥
values¶
3Union[typing.Sequence[Any],numpy.recarray[Any,Any]]0
typing.Sequence[Any]
Any"typing.Sequence;
numpy.recarray[Any,Any]
Any
Any"numpy.recarray**
sort
builtins.bool"builtins.bool *5
use_na_sentinel
builtins.bool"builtins.bool *U
	size_hintD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overloadX¬
	factorize pandas.core.algorithms.factorize"–
ATuple[numpy.ndarray[Any,Any],pandas.core.indexes.base.Index[Any]]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*
values„
IUnion[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series**
sort
builtins.bool"builtins.bool *5
use_na_sentinel
builtins.bool"builtins.bool *U
	size_hintD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overloadX∆
	factorize pandas.core.algorithms.factorize"·
HTuple[numpy.ndarray[Any,Any],pandas.core.arrays.categorical.Categorical]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*d
valuesX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical**
sort
builtins.bool"builtins.bool *5
use_na_sentinel
builtins.bool"builtins.bool *U
	size_hintD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overloadX*í
__annotations__&pandas.core.algorithms.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
npnumpy 