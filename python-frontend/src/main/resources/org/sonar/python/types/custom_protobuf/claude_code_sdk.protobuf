
claude_code_sdkµ
ClaudeCodeOptions'claude_code_sdk.types.ClaudeCodeOptions"*SonarPythonAnalyzerFakeStub.CustomStubBase*Ê
__init__0claude_code_sdk.types.ClaudeCodeOptions.__init__"R
'claude_code_sdk.types.ClaudeCodeOptions"'claude_code_sdk.types.ClaudeCodeOptions*\
selfR
'claude_code_sdk.types.ClaudeCodeOptions"'claude_code_sdk.types.ClaudeCodeOptions*]
allowed_toolsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*W
system_promptD
Union[builtins.str,None]
builtins.str"builtins.str
None*^
append_system_promptD
Union[builtins.str,None]
builtins.str"builtins.str
None*ë
mcp_serversÙ
@Union[builtins.dict[builtins.str,Any],builtins.str,pathlib.Path]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
builtins.str"builtins.str
pathlib.Path"pathlib.Path*ø
permission_modeâ
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]Ü
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Æ
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"$claude_code_sdk.types.PermissionMode
None*9
continue_conversation
builtins.bool"builtins.bool*P
resumeD
Union[builtins.str,None]
builtins.str"builtins.str
None*S
	max_turnsD
Union[builtins.int,None]
builtins.int"builtins.int
None*`
disallowed_toolsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*O
modelD
Union[builtins.str,None]
builtins.str"builtins.str
None*e
permission_prompt_tool_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*x
cwdo
%Union[builtins.str,pathlib.Path,None]
builtins.str"builtins.str
pathlib.Path"pathlib.Path
None*R
settingsD
Union[builtins.str,None]
builtins.str"builtins.str
None*±
add_dirs¢
/builtins.list[Union[builtins.str,pathlib.Path]]`
 Union[builtins.str,pathlib.Path]
builtins.str"builtins.str
pathlib.Path"pathlib.Path"builtins.list*~
envu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*º

extra_args©
4builtins.dict[builtins.str,Union[builtins.str,None]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None"builtins.dict*
debug_stderr
Any*8
can_use_tool&
Union[Any,None]
Any
None*º
hooks®
1Union[builtins.dict[Any,builtins.list[Any]],None]m
%builtins.dict[Any,builtins.list[Any]]
Any,
builtins.list[Any]
Any"builtins.list"builtins.dict
None*N
userD
Union[builtins.str,None]
builtins.str"builtins.str
None*<
include_partial_messages
builtins.bool"builtins.bool*p
__path__claude_code_sdk.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*‹
__annotations__claude_code_sdk.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict