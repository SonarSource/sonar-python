
string¯
_TemplateMetaclassstring._TemplateMetaclass"builtins.type*„
__init__"string._TemplateMetaclass.__init__"
None*?
cls6
string._TemplateMetaclass"string._TemplateMetaclass*&
name
builtins.str"builtins.str*Z
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*`
dctW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictz38j38rN
pattern!string._TemplateMetaclass.pattern
builtins.str"builtins.str*38Ñ
Templatestring.Template"builtins.object*§
__init__string.Template.__init__"
None*,
self"
string.Template"string.Template**
template
builtins.str"builtins.strz38z39z310z311z312z313*∆

substitutestring.Template.substitute"
builtins.str"builtins.str*,
self"
string.Template"string.Template*ÖÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping *,
kwds"
builtins.object"builtins.objectz38z39z310z311z312z313*–
safe_substitutestring.Template.safe_substitute"
builtins.str"builtins.str*,
self"
string.Template"string.Template*ÖÄ
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping *,
kwds"
builtins.object"builtins.objectz38z39z310z311z312z313*ª
get_identifiersstring.Template.get_identifiers"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*,
self"
string.Template"string.Templatez311z312z313*Å
is_validstring.Template.is_valid"
builtins.bool"builtins.bool*,
self"
string.Template"string.Templatez311z312z313@bstring._TemplateMetaclassj38j39j310j311j312j313r^
templatestring.Template.template
builtins.str"builtins.str*38*39*310*311*312*313r`
	delimiterstring.Template.delimiter
builtins.str"builtins.str*38*39*310*311*312*313r`
	idpatternstring.Template.idpattern
builtins.str"builtins.str*38*39*310*311*312*313rí
braceidpatternstring.Template.braceidpatternD
Union[builtins.str,None]
builtins.str"builtins.str
None*38*39*310*311*312*313rX
flagsstring.Template.flags
re.RegexFlag"re.RegexFlag*38*39*310*311*312*313rÑ
patternstring.Template.patternD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313æ%
	Formatterstring.Formatter"builtins.object*¡
_vformatstring.Formatter._vformat"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*.
self$
string.Formatter"string.Formatter*/
format_string
builtins.str"builtins.str*:
args0
typing.Sequence[Any]
Any"typing.Sequence*e
kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*∞
	used_args†
.builtins.set[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"builtins.set*1
recursion_depth
builtins.int"builtins.int*2
auto_arg_index
builtins.int"builtins.int z38z39z310z311z312z313*ò
parsestring.Formatter.parse"√
£typing.Iterable[Tuple[_typeshed.StrOrLiteralStr,Union[_typeshed.StrOrLiteralStr,None],Union[_typeshed.StrOrLiteralStr,None],Union[_typeshed.StrOrLiteralStr,None]]]â
íTuple[_typeshed.StrOrLiteralStr,Union[_typeshed.StrOrLiteralStr,None],Union[_typeshed.StrOrLiteralStr,None],Union[_typeshed.StrOrLiteralStr,None]]R
_typeshed.StrOrLiteralStr"
builtins.object"builtins.object"builtins.objectá
%Union[_typeshed.StrOrLiteralStr,None]R
_typeshed.StrOrLiteralStr"
builtins.object"builtins.object"builtins.object
Noneá
%Union[_typeshed.StrOrLiteralStr,None]R
_typeshed.StrOrLiteralStr"
builtins.object"builtins.object"builtins.object
Noneá
%Union[_typeshed.StrOrLiteralStr,None]R
_typeshed.StrOrLiteralStr"
builtins.object"builtins.object"builtins.object
None"typing.Iterable*.
self$
string.Formatter"string.Formatter*e
format_stringR
_typeshed.StrOrLiteralStr"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313*Õ
	get_fieldstring.Formatter.get_field"
Any*.
self$
string.Formatter"string.Formatter*,

field_name
builtins.str"builtins.str*:
args0
typing.Sequence[Any]
Any"typing.Sequence*e
kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz38z39z310z311z312z313*ä
	get_valuestring.Formatter.get_value"
Any*.
self$
string.Formatter"string.Formatter*i
key`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*:
args0
typing.Sequence[Any]
Any"typing.Sequence*e
kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz38z39z310z311z312z313*„
check_unused_args"string.Formatter.check_unused_args"
None*.
self$
string.Formatter"string.Formatter*∞
	used_args†
.builtins.set[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"builtins.set*:
args0
typing.Sequence[Any]
Any"typing.Sequence*e
kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz38z39z310z311z312z313*≈
format_fieldstring.Formatter.format_field"
Any*.
self$
string.Formatter"string.Formatter*
value
Any*-
format_spec
builtins.str"builtins.strz38z39z310z311z312z313*∆
convert_fieldstring.Formatter.convert_field"
Any*.
self$
string.Formatter"string.Formatter*
value
Any*,

conversion
builtins.str"builtins.strz38z39z310z311z312z3132Ö
formatstring.Formatter.formatˆ
formatstring.Formatter.format"
builtins.str"builtins.str*.
self$
string.Formatter"string.Formatter*
builtins.str"builtins.str*&
args
builtins.str"builtins.str*(
kwargs
builtins.str"builtins.str0:typing.overloadXÃ
formatstring.Formatter.format"
builtins.str"builtins.str*.
self$
string.Formatter"string.Formatter*
builtins.str"builtins.str*
args
Any*
kwargs
Any0:typing.overloadX"38"39"310"311"312"3132∂
vformatstring.Formatter.vformató
vformatstring.Formatter.vformat"
builtins.str"builtins.str*.
self$
string.Formatter"string.Formatter*/
format_string
builtins.str"builtins.str*X
argsN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*É
kwargsw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping0:typing.overloadX⁄
vformatstring.Formatter.vformat"
builtins.str"builtins.str*.
self$
string.Formatter"string.Formatter*/
format_string
builtins.str"builtins.str*:
args0
typing.Sequence[Any]
Any"typing.Sequence*e
kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping0:typing.overloadX"38"39"310"311"312"313j38j39j310j311j312j313¸
capwordsstring.capwords"R
_typeshed.StrOrLiteralStr"
builtins.object"builtins.object"builtins.object*Y
sR
_typeshed.StrOrLiteralStr"
builtins.object"builtins.object"builtins.object*ì
sepá
%Union[_typeshed.StrOrLiteralStr,None]R
_typeshed.StrOrLiteralStr"
builtins.object"builtins.object"builtins.object
None z38z39z310z311z312z313*û
__annotations__string.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*Å
__all__string.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*_
ascii_lettersstring.ascii_letters
builtins.str"builtins.str*38*39*310*311*312*313*c
ascii_lowercasestring.ascii_lowercase
builtins.str"builtins.str*38*39*310*311*312*313*c
ascii_uppercasestring.ascii_uppercase
builtins.str"builtins.str*38*39*310*311*312*313*Q
digitsstring.digits
builtins.str"builtins.str*38*39*310*311*312*313*W
	hexdigitsstring.hexdigits
builtins.str"builtins.str*38*39*310*311*312*313*W
	octdigitsstring.octdigits
builtins.str"builtins.str*38*39*310*311*312*313*[
punctuationstring.punctuation
builtins.str"builtins.str*38*39*310*311*312*313*W
	printablestring.printable
builtins.str"builtins.str*38*39*310*311*312*313*Y

whitespacestring.whitespace
builtins.str"builtins.str*38*39*310*311*312*313