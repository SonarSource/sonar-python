
commonmark.blocksŸ
Blockcommonmark.blocks.Block"builtins.object*Õ
	continue_!commonmark.blocks.Block.continue_"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*«
finalize commonmark.blocks.Block.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*à
can_contain#commonmark.blocks.Block.can_contain"
None*
t
Any0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314r`
accepts_lines%commonmark.blocks.Block.accepts_lines
Any*38*39*310*311*312*313*314ı
Documentcommonmark.blocks.Document"commonmark.blocks.Block*œ
	continue_$commonmark.blocks.Document.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314* 
finalize#commonmark.blocks.Document.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*x
can_contain&commonmark.blocks.Document.can_contain*
t0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314rz
accepts_lines(commonmark.blocks.Document.accepts_lines
builtins.bool"builtins.bool*38*39*310*311*312*313*314›
Listcommonmark.blocks.List"commonmark.blocks.Block*À
	continue_ commonmark.blocks.List.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*∆
finalizecommonmark.blocks.List.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*t
can_contain"commonmark.blocks.List.can_contain*
t0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314rv
accepts_lines$commonmark.blocks.List.accepts_lines
builtins.bool"builtins.bool*38*39*310*311*312*313*314Å

BlockQuotecommonmark.blocks.BlockQuote"commonmark.blocks.Block*—
	continue_&commonmark.blocks.BlockQuote.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*Ã
finalize%commonmark.blocks.BlockQuote.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*z
can_contain(commonmark.blocks.BlockQuote.can_contain*
t0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314r|
accepts_lines*commonmark.blocks.BlockQuote.accepts_lines
builtins.bool"builtins.bool*38*39*310*311*312*313*314›
Itemcommonmark.blocks.Item"commonmark.blocks.Block*À
	continue_ commonmark.blocks.Item.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*∆
finalizecommonmark.blocks.Item.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*t
can_contain"commonmark.blocks.Item.can_contain*
t0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314rv
accepts_lines$commonmark.blocks.Item.accepts_lines
builtins.bool"builtins.bool*38*39*310*311*312*313*314Ô
Headingcommonmark.blocks.Heading"commonmark.blocks.Block*Œ
	continue_#commonmark.blocks.Heading.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*…
finalize"commonmark.blocks.Heading.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*w
can_contain%commonmark.blocks.Heading.can_contain*
t0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314ry
accepts_lines'commonmark.blocks.Heading.accepts_lines
builtins.bool"builtins.bool*38*39*310*311*312*313*314ì
ThematicBreakcommonmark.blocks.ThematicBreak"commonmark.blocks.Block*‘
	continue_)commonmark.blocks.ThematicBreak.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*œ
finalize(commonmark.blocks.ThematicBreak.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*}
can_contain+commonmark.blocks.ThematicBreak.can_contain*
t0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314r
accepts_lines-commonmark.blocks.ThematicBreak.accepts_lines
builtins.bool"builtins.bool*38*39*310*311*312*313*314˚
	CodeBlockcommonmark.blocks.CodeBlock"commonmark.blocks.Block*–
	continue_%commonmark.blocks.CodeBlock.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*À
finalize$commonmark.blocks.CodeBlock.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*y
can_contain'commonmark.blocks.CodeBlock.can_contain*
t0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314r{
accepts_lines)commonmark.blocks.CodeBlock.accepts_lines
builtins.bool"builtins.bool*38*39*310*311*312*313*314˚
	HtmlBlockcommonmark.blocks.HtmlBlock"commonmark.blocks.Block*–
	continue_%commonmark.blocks.HtmlBlock.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*À
finalize$commonmark.blocks.HtmlBlock.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*y
can_contain'commonmark.blocks.HtmlBlock.can_contain*
t0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314r{
accepts_lines)commonmark.blocks.HtmlBlock.accepts_lines
builtins.bool"builtins.bool*38*39*310*311*312*313*314˚
	Paragraphcommonmark.blocks.Paragraph"commonmark.blocks.Block*–
	continue_%commonmark.blocks.Paragraph.continue_"
Any*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*À
finalize$commonmark.blocks.Paragraph.finalize"
None*i
parser[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
block[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*y
can_contain'commonmark.blocks.Paragraph.can_contain*
t0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314r{
accepts_lines)commonmark.blocks.Paragraph.accepts_lines
builtins.bool"builtins.bool*38*39*310*311*312*313*314Ù
BlockStartscommonmark.blocks.BlockStarts"builtins.object*Ä
block_quote)commonmark.blocks.BlockStarts.block_quote"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*Ä
atx_heading)commonmark.blocks.BlockStarts.atx_heading"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*å
fenced_code_block/commonmark.blocks.BlockStarts.fenced_code_block"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*˛

html_block(commonmark.blocks.BlockStarts.html_block"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*Ü
setext_heading,commonmark.blocks.BlockStarts.setext_heading"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*Ü
thematic_break,commonmark.blocks.BlockStarts.thematic_break"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*¸
	list_item'commonmark.blocks.BlockStarts.list_item"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314*ê
indented_code_block1commonmark.blocks.BlockStarts.indented_code_block"
Any*
parser
Any*l
	container[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None 0:builtins.staticmethodhz38z39z310z311z312z313z314j38j39j310j311j312j313j314rZ
METHODS%commonmark.blocks.BlockStarts.METHODS
Any*38*39*310*311*312*313*314˚
Parsercommonmark.blocks.Parser"builtins.object*∞
__init__!commonmark.blocks.Parser.__init__"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parser*
options
Any z38z39z310z311z312z313z314*ò
add_line!commonmark.blocks.Parser.add_line"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parserz38z39z310z311z312z313z314*o
	add_child"commonmark.blocks.Parser.add_child*
self*
tag*

offsetz38z39z310z311z312z313z314*¥
close_unmatched_blocks/commonmark.blocks.Parser.close_unmatched_blocks"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parserz38z39z310z311z312z313z314*¨
find_next_nonspace+commonmark.blocks.Parser.find_next_nonspace"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parserz38z39z310z311z312z313z314*≤
advance_next_nonspace.commonmark.blocks.Parser.advance_next_nonspace"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parserz38z39z310z311z312z313z314*Œ
advance_offset'commonmark.blocks.Parser.advance_offset"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parser*
count
Any*
columns
Anyz38z39z310z311z312z313z314*π
incorporate_line)commonmark.blocks.Parser.incorporate_line"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parser*
ln
Anyz38z39z310z311z312z313z314*∆
finalize!commonmark.blocks.Parser.finalize"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parser*
block
Any*
line_number
Anyz38z39z310z311z312z313z314*∫
process_inlines(commonmark.blocks.Parser.process_inlines"
None*>
self4
commonmark.blocks.Parser"commonmark.blocks.Parser*
block
Anyz38z39z310z311z312z313z314*`
parsecommonmark.blocks.Parser.parse*
self*
my_inputz38z39z310z311z312z313z314j38j39j310j311j312j313j314rM
doccommonmark.blocks.Parser.doc
Any*38*39*310*311*312*313*314r_
block_starts%commonmark.blocks.Parser.block_starts
Any*38*39*310*311*312*313*314rM
tipcommonmark.blocks.Parser.tip
Any*38*39*310*311*312*313*314rS
oldtipcommonmark.blocks.Parser.oldtip
Any*38*39*310*311*312*313*314rt
current_line%commonmark.blocks.Parser.current_line
builtins.str"builtins.str*38*39*310*311*312*313*314rr
line_number$commonmark.blocks.Parser.line_number
builtins.int"builtins.int*38*39*310*311*312*313*314rh
offsetcommonmark.blocks.Parser.offset
builtins.int"builtins.int*38*39*310*311*312*313*314rh
columncommonmark.blocks.Parser.column
builtins.int"builtins.int*38*39*310*311*312*313*314rv
next_nonspace&commonmark.blocks.Parser.next_nonspace
builtins.int"builtins.int*38*39*310*311*312*313*314rÑ
next_nonspace_column-commonmark.blocks.Parser.next_nonspace_column
builtins.int"builtins.int*38*39*310*311*312*313*314rh
indentcommonmark.blocks.Parser.indent
builtins.int"builtins.int*38*39*310*311*312*313*314rn
indented!commonmark.blocks.Parser.indented
builtins.bool"builtins.bool*38*39*310*311*312*313*314rh
blankcommonmark.blocks.Parser.blank
builtins.bool"builtins.bool*38*39*310*311*312*313*314rä
partially_consumed_tab/commonmark.blocks.Parser.partially_consumed_tab
builtins.bool"builtins.bool*38*39*310*311*312*313*314rr

all_closed#commonmark.blocks.Parser.all_closed
builtins.bool"builtins.bool*38*39*310*311*312*313*314rs
last_matched_container/commonmark.blocks.Parser.last_matched_container
Any*38*39*310*311*312*313*314rS
refmapcommonmark.blocks.Parser.refmap
Any*38*39*310*311*312*313*314r|
last_line_length)commonmark.blocks.Parser.last_line_length
builtins.int"builtins.int*38*39*310*311*312*313*314ra
inline_parser&commonmark.blocks.Parser.inline_parser
Any*38*39*310*311*312*313*314rU
options commonmark.blocks.Parser.options
Any*38*39*310*311*312*313*314N
is_blankcommonmark.blocks.is_blank*
sz38z39z310z311z312z313z314\
is_space_or_tab!commonmark.blocks.is_space_or_tab*
sz38z39z310z311z312z313z314P
peekcommonmark.blocks.peek*
ln*
posz38z39z310z311z312z313z314j
ends_with_blank_line&commonmark.blocks.ends_with_blank_line*	
blockz38z39z310z311z312z313z314t
parse_list_marker#commonmark.blocks.parse_list_marker*

parser*
	containerz38z39z310z311z312z313z314k
lists_matchcommonmark.blocks.lists_match*
	list_data*
	item_dataz38z39z310z311z312z313z314*Æ
__annotations__!commonmark.blocks.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*k
CODE_INDENTcommonmark.blocks.CODE_INDENT
builtins.int"builtins.int*38*39*310*311*312*313*314*^
reHtmlBlockOpen!commonmark.blocks.reHtmlBlockOpen
Any*38*39*310*311*312*313*314*`
reHtmlBlockClose"commonmark.blocks.reHtmlBlockClose
Any*38*39*310*311*312*313*314*^
reThematicBreak!commonmark.blocks.reThematicBreak
Any*38*39*310*311*312*313*314*\
reMaybeSpecial commonmark.blocks.reMaybeSpecial
Any*38*39*310*311*312*313*314*T

reNonSpacecommonmark.blocks.reNonSpace
Any*38*39*310*311*312*313*314*d
reBulletListMarker$commonmark.blocks.reBulletListMarker
Any*38*39*310*311*312*313*314*f
reOrderedListMarker%commonmark.blocks.reOrderedListMarker
Any*38*39*310*311*312*313*314*d
reATXHeadingMarker$commonmark.blocks.reATXHeadingMarker
Any*38*39*310*311*312*313*314*V
reCodeFencecommonmark.blocks.reCodeFence
Any*38*39*310*311*312*313*314*d
reClosingCodeFence$commonmark.blocks.reClosingCodeFence
Any*38*39*310*311*312*313*314*f
reSetextHeadingLine%commonmark.blocks.reSetextHeadingLine
Any*38*39*310*311*312*313*314*X
reLineEndingcommonmark.blocks.reLineEnding
Any*38*39*310*311*312*313*314*P
CAMEL_REcommonmark.blocks.CAMEL_RE
Any*38*39*310*311*312*313*314