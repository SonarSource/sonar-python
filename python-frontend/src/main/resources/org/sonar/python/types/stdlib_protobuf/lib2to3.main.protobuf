
lib2to3.main€$
StdoutRefactoringTool"lib2to3.main.StdoutRefactoringTool",lib2to3.refactor.MultiprocessRefactoringTool*þ
__init__+lib2to3.main.StdoutRefactoringTool.__init__"
None*R
selfH
"lib2to3.main.StdoutRefactoringTool""lib2to3.main.StdoutRefactoringTool*Z
fixersN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*×
optionsÉ
8Union[typing.Mapping[builtins.str,builtins.object],None]€
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None*™
explicitŠ
*Union[typing.Container[builtins.str],None]P
typing.Container[builtins.str]
builtins.str"builtins.str"typing.Container
None*-
	nobackups
builtins.bool"builtins.bool*.

show_diffs
builtins.bool"builtins.bool*2
input_base_dir
builtins.str"builtins.str *.

output_dir
builtins.str"builtins.str *1
append_suffix
builtins.str"builtins.str z38z39z310z311z312z313z314*›
	log_error,lib2to3.main.StdoutRefactoringTool.log_error"
None*R
selfH
"lib2to3.main.StdoutRefactoringTool""lib2to3.main.StdoutRefactoringTool*%
msg
builtins.str"builtins.str*X
argsN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*£	
exc_info’	
¾TypeAlias[Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]]¶
³Union[None,builtins.bool,TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]],builtins.BaseException]
None
builtins.bool"builtins.boolŸ
‚TypeAlias[Union[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]]ü
wUnion[Tuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]],Tuple[None,None,None]]Å
ZTuple[Type[builtins.BaseException],builtins.BaseException,Union[types.TracebackType,None]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseExceptionY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None7
Tuple[None,None,None]
None
None
None"logging._SysExcInfoType0
builtins.BaseException"builtins.BaseException"logging._ExcInfoType *0

stack_info
builtins.bool"builtins.bool *.

stacklevel
builtins.int"builtins.int *×
extraÉ
8Union[typing.Mapping[builtins.str,builtins.object],None]€
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping
None z38z39z310z311z312z313z314*ô

write_file-lib2to3.main.StdoutRefactoringTool.write_file"
None*R
selfH
"lib2to3.main.StdoutRefactoringTool""lib2to3.main.StdoutRefactoringTool**
new_text
builtins.str"builtins.str*‹
filenameü
‚TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]Ò
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath**
old_text
builtins.str"builtins.str*R
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
Nonez38z39z310z311z312z313z314*ã
print_output/lib2to3.main.StdoutRefactoringTool.print_output"
None*R
selfH
"lib2to3.main.StdoutRefactoringTool""lib2to3.main.StdoutRefactoringTool*%
old
builtins.str"builtins.str*%
new
builtins.str"builtins.str**
filename
builtins.str"builtins.str*)
equal
builtins.bool"builtins.boolz38z39z310z311z312z313z314j38j39j310j311j312j313j314rz
	nobackups,lib2to3.main.StdoutRefactoringTool.nobackups
builtins.bool"builtins.bool*38*39*310*311*312*313*314r|

show_diffs-lib2to3.main.StdoutRefactoringTool.show_diffs
builtins.bool"builtins.bool*38*39*310*311*312*313*314Œ

diff_textslib2to3.main.diff_texts"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*#
a
builtins.str"builtins.str*#
b
builtins.str"builtins.str**
filename
builtins.str"builtins.strz38z39z310z311z312z313z314q
warnlib2to3.main.warn"
None*+
msg"
builtins.object"builtins.objectz38z39z310z311z312z313z314¤
mainlib2to3.main.main"÷
HUnion[Literal[builtins.int],Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int*+
	fixer_pkg
builtins.str"builtins.str*À
args³
*Union[typing.Sequence[typing.AnyStr],None]y
typing.Sequence[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"typing.Sequence
None z38z39z310z311z312z313z314*©
__annotations__lib2to3.main.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*?
refactorlib2to3.refactor *38*39*310*311*312*313*314