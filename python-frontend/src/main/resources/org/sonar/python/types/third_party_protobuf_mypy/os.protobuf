
osÉ
_TextIOWrapperio.TextIOWrapper"io.TextIOBase"typing.TextIO*ü
__init__io.TextIOWrapper.__init__"
None*.
self$
io.TextIOWrapper"io.TextIOWrapper*T
bufferH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *4
line_buffering
builtins.bool"builtins.bool *3
write_through
builtins.bool"builtins.bool *å
bufferio.TextIOWrapper.buffer""
typing.BinaryIO"typing.BinaryIO*.
self$
io.TextIOWrapper"io.TextIOWrapper0:builtins.property`*à
closedio.TextIOWrapper.closed"
builtins.bool"builtins.bool*.
self$
io.TextIOWrapper"io.TextIOWrapper0:builtins.property`*ò
line_bufferingio.TextIOWrapper.line_buffering"
builtins.bool"builtins.bool*.
self$
io.TextIOWrapper"io.TextIOWrapper0:builtins.property`*ñ
write_throughio.TextIOWrapper.write_through"
builtins.bool"builtins.bool*.
self$
io.TextIOWrapper"io.TextIOWrapper0:builtins.property`*°
reconfigureio.TextIOWrapper.reconfigure"
None*.
self$
io.TextIOWrapper"io.TextIOWrapper*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *]
line_bufferingG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *\
write_throughG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *œ
	__enter__io.TextIOWrapper.__enter__"Q
io.TextIOWrapper.Self$
io.TextIOWrapper"io.TextIOWrapper"io.TextIOWrapper*SQ
io.TextIOWrapper.Self$
io.TextIOWrapper"io.TextIOWrapper"io.TextIOWrapper*ù
__iter__io.TextIOWrapper.__iter__"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*&$
io.TextIOWrapper"io.TextIOWrapper*s
__next__io.TextIOWrapper.__next__"
builtins.str"builtins.str*.
self$
io.TextIOWrapper"io.TextIOWrapper*µ

writelinesio.TextIOWrapper.writelines"
None*.
self$
io.TextIOWrapper"io.TextIOWrapper*PN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*ï
readlineio.TextIOWrapper.readline"
builtins.str"builtins.str*.
self$
io.TextIOWrapper"io.TextIOWrapper* 
builtins.int"builtins.int *≈
	readlinesio.TextIOWrapper.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*.
self$
io.TextIOWrapper"io.TextIOWrapper* 
builtins.int"builtins.int *≠
seekio.TextIOWrapper.seek"
builtins.int"builtins.int*.
self$
io.TextIOWrapper"io.TextIOWrapper*
builtins.int"builtins.int* 
builtins.int"builtins.int ‰!
_Environos._Environ"typing.MutableMapping*‘	
__init__os._Environ.__init__"
None*{
selfq
os._Environ[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._Environ*Ê
data€
2typing.MutableMapping[typing.AnyStr,typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectF
typing.AnyStr"
builtins.object"builtins.object"builtins.object"typing.MutableMapping*†
	encodekeyê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFunc*†
	decodekeyê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFunc*¢
encodevalueê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFunc*¢
decodevalueê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFunc*W
putenvK
CallableType[builtins.function]&
builtins.function"builtins.function*Y
unsetenvK
CallableType[builtins.function]&
builtins.function"builtins.function*ç

setdefaultos._Environ.setdefault"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*{
selfq
os._Environ[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._Environ*O
keyF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*Q
valueF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*„
copyos._Environ.copy"À
*builtins.dict[typing.AnyStr,typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectF
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.dict*{
selfq
os._Environ[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._Environ*Ô
__delitem__os._Environ.__delitem__"
None*sq
os._Environ[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._Environ*HF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*≠
__getitem__os._Environ.__getitem__"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*sq
os._Environ[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._Environ*HF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*π
__setitem__os._Environ.__setitem__"
None*sq
os._Environ[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._Environ*HF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*HF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*ê
__iter__os._Environ.__iter__"y
typing.Iterator[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"typing.Iterator*sq
os._Environ[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._Environ*±
__len__os._Environ.__len__"
builtins.int"builtins.int*sq
os._Environ[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._EnvironPrµ
	encodekeyos._Environ.encodekeyê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFuncrµ
	decodekeyos._Environ.decodekeyê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFuncrπ
encodevalueos._Environ.encodevalueê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFuncrπ
decodevalueos._Environ.decodevalueê
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._EnvironCodeFuncri
putenvos._Environ.putenvK
CallableType[builtins.function]&
builtins.function"builtins.functionrm
unsetenvos._Environ.unsetenvK
CallableType[builtins.function]&
builtins.function"builtins.functioníG
stat_resultos.stat_result"_typeshed.structseq"builtins.tuple*Ø
st_modeos.stat_result.st_mode"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*≠
st_inoos.stat_result.st_ino"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*≠
st_devos.stat_result.st_dev"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*±
st_nlinkos.stat_result.st_nlink"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*≠
st_uidos.stat_result.st_uid"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*≠
st_gidos.stat_result.st_gid"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*Ø
st_sizeos.stat_result.st_size"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*µ
st_atimeos.stat_result.st_atime" 
builtins.float"builtins.float*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*µ
st_mtimeos.stat_result.st_mtime" 
builtins.float"builtins.float*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*µ
st_ctimeos.stat_result.st_ctime" 
builtins.float"builtins.float*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*∑
st_atime_nsos.stat_result.st_atime_ns"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*∑
st_mtime_nsos.stat_result.st_mtime_ns"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*∑
st_ctime_nsos.stat_result.st_ctime_ns"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*≥
	st_blocksos.stat_result.st_blocks"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*µ

st_blksizeos.stat_result.st_blksize"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*Ø
st_rdevos.stat_result.st_rdev"
builtins.int"builtins.int*÷
selfÀ
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`8≈
PathLikeos.PathLike"builtins.object*î

__fspath__os.PathLike.__fspath__"L
_typeshed.AnyStr_co"
builtins.object"builtins.object"builtins.object*á
self}
 os.PathLike[_typeshed.AnyStr_co]L
_typeshed.AnyStr_co"
builtins.object"builtins.object"builtins.object"os.PathLike0:abc.abstractmethod@8PX∏
DirEntryos.DirEntry"builtins.object*Ù
nameos.DirEntry.name"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*{
selfq
os.DirEntry[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.DirEntry0:builtins.property`*Ù
pathos.DirEntry.path"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*{
selfq
os.DirEntry[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.DirEntry0:builtins.property`*µ
inodeos.DirEntry.inode"
builtins.int"builtins.int*{
selfq
os.DirEntry[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.DirEntry*
is_diros.DirEntry.is_dir"
builtins.bool"builtins.bool*{
selfq
os.DirEntry[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.DirEntry*5
follow_symlinks
builtins.bool"builtins.bool *Ú
is_fileos.DirEntry.is_file"
builtins.bool"builtins.bool*{
selfq
os.DirEntry[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.DirEntry*5
follow_symlinks
builtins.bool"builtins.bool *¡

is_symlinkos.DirEntry.is_symlink"
builtins.bool"builtins.bool*{
selfq
os.DirEntry[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.DirEntry*À
statos.DirEntry.stat"¸
ôTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]À
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result*{
selfq
os.DirEntry[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.DirEntry*5
follow_symlinks
builtins.bool"builtins.bool *È

__fspath__os.DirEntry.__fspath__"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*{
selfq
os.DirEntry[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.DirEntry8P¨3
statvfs_resultos.statvfs_result"_typeshed.structseq"builtins.tuple*À
f_bsizeos.statvfs_result.f_bsize"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*Õ
f_frsizeos.statvfs_result.f_frsize"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*Õ
f_blocksos.statvfs_result.f_blocks"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*À
f_bfreeos.statvfs_result.f_bfree"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*Õ
f_bavailos.statvfs_result.f_bavail"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*À
f_filesos.statvfs_result.f_files"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*À
f_ffreeos.statvfs_result.f_ffree"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*Õ
f_favailos.statvfs_result.f_favail"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*…
f_flagos.statvfs_result.f_flag"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*œ
	f_namemaxos.statvfs_result.f_namemax"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*…
f_fsidos.statvfs_result.f_fsid"
builtins.int"builtins.int*Ô
self‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`8µ
uname_resultos.uname_result"_typeshed.structseq"builtins.tuple*∆
sysnameos.uname_result.sysname"
builtins.str"builtins.str*Ï
self·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str0:builtins.property`*»
nodenameos.uname_result.nodename"
builtins.str"builtins.str*Ï
self·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str0:builtins.property`*∆
releaseos.uname_result.release"
builtins.str"builtins.str*Ï
self·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str0:builtins.property`*∆
versionos.uname_result.version"
builtins.str"builtins.str*Ï
self·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str0:builtins.property`*∆
machineos.uname_result.machine"
builtins.str"builtins.str*Ï
self·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str0:builtins.property`8“
terminal_sizeos.terminal_size"_typeshed.structseq"builtins.tuple*ƒ
columnsos.terminal_size.columns"
builtins.int"builtins.int*j
self`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*¿
linesos.terminal_size.lines"
builtins.int"builtins.int*j
self`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`8¨
_ScandirIteratoros._ScandirIterator"typing.Iterator"!contextlib.AbstractContextManager*™
__next__os._ScandirIterator.__next__"q
os.DirEntry[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.DirEntry*å
selfÅ
"os._ScandirIterator[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._ScandirIterator*·
__exit__os._ScandirIterator.__exit__"
None*ÑÅ
"os._ScandirIterator[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._ScandirIterator*&"
builtins.object"builtins.object*ª
closeos._ScandirIterator.close"
None*å
selfÅ
"os._ScandirIterator[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._ScandirIteratorP´
_wrap_closeos._wrap_close"io.TextIOWrapper*Á
__init__os._wrap_close.__init__"
None**
self 
os._wrap_close"os._wrap_close*0
stream$
io.TextIOWrapper"io.TextIOWrapper*Z
procP
subprocess.Popen[builtins.str]
builtins.str"builtins.str"subprocess.Popen*è
closeos._wrap_close.close"D
Union[builtins.int,None]
builtins.int"builtins.int
None**
self 
os._wrap_close"os._wrap_closeÒ
times_resultos.times_result"_typeshed.structseq"builtins.tuple*‚
useros.times_result.user" 
builtins.float"builtins.float*ä
selfˇ
QTuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*Ê
systemos.times_result.system" 
builtins.float"builtins.float*ä
selfˇ
QTuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*Ù
children_useros.times_result.children_user" 
builtins.float"builtins.float*ä
selfˇ
QTuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*¯
children_systemos.times_result.children_system" 
builtins.float"builtins.float*ä
selfˇ
QTuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`*Ë
elapsedos.times_result.elapsed" 
builtins.float"builtins.float*ä
selfˇ
QTuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float0:builtins.property`8º
waitid_resultos.waitid_result"_typeshed.structseq"builtins.tuple*≈
si_pidos.waitid_result.si_pid"
builtins.int"builtins.int*Ï
self·
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*≈
si_uidos.waitid_result.si_uid"
builtins.int"builtins.int*Ï
self·
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*…
si_signoos.waitid_result.si_signo"
builtins.int"builtins.int*Ï
self·
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*À
	si_statusos.waitid_result.si_status"
builtins.int"builtins.int*Ï
self·
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`*«
si_codeos.waitid_result.si_code"
builtins.int"builtins.int*Ï
self·
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int0:builtins.property`8˜
sched_paramos.sched_param"_typeshed.structseq"builtins.tuple*à
__new__os.sched_param.__new__"5
Tuple[builtins.int]
builtins.int"builtins.int*|
clss
Type[os.sched_param.Self]N
os.sched_param.Self5
Tuple[builtins.int]
builtins.int"builtins.int"type*0
sched_priority
builtins.int"builtins.int*•
sched_priorityos.sched_param.sched_priority"
builtins.int"builtins.int*?
self5
Tuple[builtins.int]
builtins.int"builtins.int0:builtins.property`8Å
fsencodeos.fsencode" 
builtins.bytes"builtins.bytes*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath˝
fsdecodeos.fsdecode"
builtins.str"builtins.str*≈
filename∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath∏
get_exec_pathos.get_exec_path"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*»
envº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None 5
getloginos.getlogin"
builtins.str"builtins.str1
getpid	os.getpid"
builtins.int"builtins.int3
getppid
os.getppid"
builtins.int"builtins.intU
strerroros.strerror"
builtins.str"builtins.str*
builtins.int"builtins.intO
umaskos.umask"
builtins.int"builtins.int*
builtins.int"builtins.int3
ctermid
os.ctermid"
builtins.str"builtins.str3
getegid
os.getegid"
builtins.int"builtins.int3
geteuid
os.geteuid"
builtins.int"builtins.int1
getgid	os.getgid"
builtins.int"builtins.int´
getgrouplistos.getgrouplist"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*
builtins.str"builtins.str*
builtins.int"builtins.inte
	getgroupsos.getgroups"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.liste

initgroupsos.initgroups"
None*
builtins.str"builtins.str*
builtins.int"builtins.intZ
getpgid
os.getpgid"
builtins.int"builtins.int*%
pid
builtins.int"builtins.int3
getpgrp
os.getpgrp"
builtins.int"builtins.intã
getpriorityos.getpriority"
builtins.int"builtins.int*'
which
builtins.int"builtins.int*%
who
builtins.int"builtins.int£
setpriorityos.setpriority"
None*'
which
builtins.int"builtins.int*%
who
builtins.int"builtins.int**
priority
builtins.int"builtins.intß
	getresuidos.getresuid"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.intß
	getresgidos.getresgid"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int1
getuid	os.getuid"
builtins.int"builtins.int?
setegid
os.setegid"
None*
builtins.int"builtins.int?
seteuid
os.seteuid"
None*
builtins.int"builtins.int=
setgid	os.setgid"
None*
builtins.int"builtins.intu
	setgroupsos.setgroups"
None*PN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence
setpgrp
os.setpgrp"
None_
setpgid
os.setpgid"
None*
builtins.int"builtins.int*
builtins.int"builtins.inta
setregidos.setregid"
None*
builtins.int"builtins.int*
builtins.int"builtins.intõ
	setresgidos.setresgid"
None*&
rgid
builtins.int"builtins.int*&
egid
builtins.int"builtins.int*&
sgid
builtins.int"builtins.intõ
	setresuidos.setresuid"
None*&
ruid
builtins.int"builtins.int*&
euid
builtins.int"builtins.int*&
suid
builtins.int"builtins.inta
setreuidos.setreuid"
None*
builtins.int"builtins.int*
builtins.int"builtins.intQ
getsid	os.getsid"
builtins.int"builtins.int*
builtins.int"builtins.int
setsid	os.setsid"
None=
setuid	os.setuid"
None*
builtins.int"builtins.intﬂ
unameos.uname"À
RTypeAlias[Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]]·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"os.uname_resultï
putenv	os.putenv"
None*π∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*π∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath›
unsetenvos.unsetenv"
None*π∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathA
closeos.close"
None*$
fd
builtins.int"builtins.inte

closerangeos.closerange"
None*
builtins.int"builtins.int*
builtins.int"builtins.intë
device_encodingos.device_encoding"D
Union[builtins.str,None]
builtins.str"builtins.str
None*$
fd
builtins.int"builtins.intK
dupos.dup"
builtins.int"builtins.int*
builtins.int"builtins.int≠
dup2os.dup2"
builtins.int"builtins.int*$
fd
builtins.int"builtins.int*%
fd2
builtins.int"builtins.int*1
inheritable
builtins.bool"builtins.bool ∂
fstatos.fstat"¸
ôTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]À
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result*$
fd
builtins.int"builtins.intc
	ftruncateos.ftruncate"
None*
builtins.int"builtins.int*
builtins.int"builtins.intÚ
fsyncos.fsync"
None*‘
fdÀ
2TypeAlias[Union[builtins.int,_typeshed.HasFileno]]u
'Union[builtins.int,_typeshed.HasFileno]
builtins.int"builtins.int*
_typeshed.HasFileno"_typeshed.HasFileno"_typeshed.FileDescriptorLikeS
isatty	os.isatty"
builtins.bool"builtins.bool*
builtins.int"builtins.intè
lseekos.lseek"
builtins.int"builtins.int*
builtins.int"builtins.int*
builtins.int"builtins.int*
builtins.int"builtins.intò
openos.open"
builtins.int"builtins.int*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*'
flags
builtins.int"builtins.int*(
mode
builtins.int"builtins.int *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None q
pipeos.pipe"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intq
reados.read" 
builtins.bytes"builtins.bytes*
builtins.int"builtins.int*
builtins.int"builtins.intk
fchmod	os.fchmod"
None*$
fd
builtins.int"builtins.int*&
mode
builtins.int"builtins.intë
fchown	os.fchown"
None*$
fd
builtins.int"builtins.int*%
uid
builtins.int"builtins.int*%
gid
builtins.int"builtins.intª
	fpathconfos.fpathconf"
builtins.int"builtins.int*
builtins.int"builtins.int*b`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intŸ
fstatvfsos.fstatvfs"ü
†TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"os.statvfs_result*
builtins.int"builtins.int_
get_blockingos.get_blocking"
builtins.bool"builtins.bool*
builtins.int"builtins.intk
set_blockingos.set_blocking"
None*
builtins.int"builtins.int* 
builtins.bool"builtins.bool{
lockfos.lockf"
None*
builtins.int"builtins.int*
builtins.int"builtins.int*
builtins.int"builtins.intw
openpty
os.openpty"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int˙
	fdatasyncos.fdatasync"
None*‘
fdÀ
2TypeAlias[Union[builtins.int,_typeshed.HasFileno]]u
'Union[builtins.int,_typeshed.HasFileno]
builtins.int"builtins.int*
_typeshed.HasFileno"_typeshed.HasFileno"_typeshed.FileDescriptorLikeì
pipe2os.pipe2"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*
builtins.int"builtins.intè
posix_fallocateos.posix_fallocate"
None*
builtins.int"builtins.int*
builtins.int"builtins.int*
builtins.int"builtins.int´
posix_fadviseos.posix_fadvise"
None*
builtins.int"builtins.int*
builtins.int"builtins.int*
builtins.int"builtins.int*
builtins.int"builtins.intì
preados.pread" 
builtins.bytes"builtins.bytes*
builtins.int"builtins.int*
builtins.int"builtins.int*
builtins.int"builtins.intÕ
pwrite	os.pwrite"
builtins.int"builtins.int*
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*
builtins.int"builtins.intø
preadv	os.preadv"
builtins.int"builtins.int*
builtins.int"builtins.int*©¶
ñ_typeshed.SupportsLenAndGetItem[TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]È
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.SupportsLenAndGetItem*
builtins.int"builtins.int* 
builtins.int"builtins.int œ	
pwritev
os.pwritev"
builtins.int"builtins.int*
builtins.int"builtins.int*∑¥
∑_typeshed.SupportsLenAndGetItem[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"_typeshed.SupportsLenAndGetItem*
builtins.int"builtins.int* 
builtins.int"builtins.int ˚
readvos.readv"
builtins.int"builtins.int*
builtins.int"builtins.int*©¶
ñ_typeshed.SupportsLenAndGetItem[TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]È
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.SupportsLenAndGetItemã	
writev	os.writev"
builtins.int"builtins.int*
builtins.int"builtins.int*∑¥
∑_typeshed.SupportsLenAndGetItem[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"_typeshed.SupportsLenAndGetItemÒ
get_terminal_sizeos.get_terminal_size"£
+TypeAlias[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"os.terminal_size* 
builtins.int"builtins.int e
get_inheritableos.get_inheritable"
builtins.bool"builtins.bool*
builtins.int"builtins.intq
set_inheritableos.set_inheritable"
None*
builtins.int"builtins.int* 
builtins.bool"builtins.boolW
	tcgetpgrpos.tcgetpgrp"
builtins.int"builtins.int*
builtins.int"builtins.intc
	tcsetpgrpos.tcsetpgrp"
None*
builtins.int"builtins.int*
builtins.int"builtins.intS
ttyname
os.ttyname"
builtins.str"builtins.str*
builtins.int"builtins.int´
writeos.write"
builtins.int"builtins.int*
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer•
access	os.access"
builtins.bool"builtins.bool*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*&
mode
builtins.int"builtins.int*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *3
effective_ids
builtins.bool"builtins.bool *5
follow_symlinks
builtins.bool"builtins.bool •
chdiros.chdir"
None*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPathÙ
fchdir	os.fchdir"
None*‘
fdÀ
2TypeAlias[Union[builtins.int,_typeshed.HasFileno]]u
'Union[builtins.int,_typeshed.HasFileno]
builtins.int"builtins.int*
_typeshed.HasFileno"_typeshed.HasFileno"_typeshed.FileDescriptorLike1
getcwd	os.getcwd"
builtins.str"builtins.str7
getcwdb
os.getcwdb" 
builtins.bytes"builtins.bytesÿ
chmodos.chmod"
None*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*&
mode
builtins.int"builtins.int*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
follow_symlinks
builtins.bool"builtins.bool ·
chroot	os.chroot"
None*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath˛
chownos.chown"
None*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*%
uid
builtins.int"builtins.int*%
gid
builtins.int"builtins.int*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
follow_symlinks
builtins.bool"builtins.bool Ø
lchown	os.lchown"
None*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*%
uid
builtins.int"builtins.int*%
gid
builtins.int"builtins.intÜ	
linkos.link"
None*¿
src∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¿
dst∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*V

src_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

dst_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
follow_symlinks
builtins.bool"builtins.bool ®	
lstatos.lstat"¸
ôTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]À
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ›
mkdiros.mkdir"
None*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*(
mode
builtins.int"builtins.int *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ﬂ
mkfifo	os.mkfifo"
None*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*(
mode
builtins.int"builtins.int *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ø
makedirsos.makedirs"
None*¡
name∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*(
mode
builtins.int"builtins.int *.
exist_ok
builtins.bool"builtins.bool â
mknodos.mknod"
None*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*(
mode
builtins.int"builtins.int **
device
builtins.int"builtins.int *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None O
majoros.major"
builtins.int"builtins.int*
builtins.int"builtins.intO
minoros.minor"
builtins.int"builtins.int*
builtins.int"builtins.ints
makedev
os.makedev"
builtins.int"builtins.int*
builtins.int"builtins.int*
builtins.int"builtins.int´
pathconfos.pathconf"
builtins.int"builtins.int*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*j
name`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intá
readlinkos.readlink"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*—
path∆
:TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]Ó
/Union[typing.AnyStr,os.PathLike[typing.AnyStr]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectq
os.PathLike[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.PathLike"_typeshed.GenericPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None µ
remove	os.remove"
None*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None È

removedirsos.removedirs"
None*¡
name∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath”
rename	os.rename"
None*¿
src∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¿
dst∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*V

src_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

dst_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None •
renames
os.renames"
None*¿
old∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¿
new∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath’
replace
os.replace"
None*¿
src∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¿
dst∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*V

src_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

dst_dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ≥
rmdiros.rmdir"
None*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None £
statos.stat"¸
ôTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]À
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
follow_symlinks
builtins.bool"builtins.bool ¡
statvfs
os.statvfs"ü
†TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]‰
ïTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"os.statvfs_result*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath¥
symlink
os.symlink"
None*¿
src∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¿
dst∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*9
target_is_directory
builtins.bool"builtins.bool *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None 
syncos.sync"
None’
truncateos.truncate"
None*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*(
length
builtins.int"builtins.intµ
unlink	os.unlink"
None*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None ‹

utimeos.utime"
None*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*Ω
timesØ
QUnion[Tuple[builtins.int,builtins.int],Tuple[builtins.float,builtins.float],None]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.intl
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *j
ns`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
follow_symlinks
builtins.bool"builtins.bool ¶	
walkos.walk"˝
_typing.Iterator[Tuple[typing.AnyStr,builtins.list[typing.AnyStr],builtins.list[typing.AnyStr]]]à
NTuple[typing.AnyStr,builtins.list[typing.AnyStr],builtins.list[typing.AnyStr]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectu
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.listu
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list"typing.Iterator*–
top∆
:TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]Ó
/Union[typing.AnyStr,os.PathLike[typing.AnyStr]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectq
os.PathLike[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.PathLike"_typeshed.GenericPath*-
topdown
builtins.bool"builtins.bool *ﬂ
onerrorœ
6Union[TypeAlias[CallableType[builtins.function]],None]à
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._OnError
None *1
followlinks
builtins.bool"builtins.bool √

getxattros.getxattr" 
builtins.bytes"builtins.bytes*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*∆
	attribute∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*5
follow_symlinks
builtins.bool"builtins.bool »
	listxattros.listxattr"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*©
pathú
éUnion[TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]],None]¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath
None *5
follow_symlinks
builtins.bool"builtins.bool ±

removexattros.removexattr"
None*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*∆
	attribute∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*5
follow_symlinks
builtins.bool"builtins.bool ª
setxattros.setxattr"
None*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*∆
	attribute∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*‚
value÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*)
flags
builtins.int"builtins.int *5
follow_symlinks
builtins.bool"builtins.bool 
abortos.abort"
NoReturn
„

execlos.execl"
NoReturn
*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*π∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¡
args∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathÂ

execlp	os.execlp"
NoReturn
*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*π∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¡
args∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¥
execle	os.execle"
NoReturn
*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*π∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*
args
Any∂
execlpe
os.execlpe"
NoReturn
*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*π∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*
args
Any 
execvos.execv"
NoReturn
*π∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*ÏÈ
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]î
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]æ
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgsû 
execve	os.execve"
NoReturn
*á
path¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*Ù
argvÈ
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]î
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]æ
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs*˘
envÔ
ìTypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]«
àUnion[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]›
Atyping.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]] 
builtins.bytes"builtins.bytesf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping◊
?typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping"os._ExecEnv‹
execvp	os.execvp"
NoReturn
*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ù
argsÈ
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]î
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]æ
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs⁄
execvpe
os.execvpe"
NoReturn
*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ù
argsÈ
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]î
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]æ
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs*˘
envÔ
ìTypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]«
àUnion[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]›
Atyping.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]] 
builtins.bytes"builtins.bytesf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping◊
?typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping"os._ExecEnvI
_exitos._exit"
NoReturn
*(
status
builtins.int"builtins.intY
killos.kill"
None*
builtins.int"builtins.int*
builtins.int"builtins.int-
forkos.fork"
builtins.int"builtins.intw
forkpty
os.forkpty"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int]
killpg	os.killpg"
None*
builtins.int"builtins.int*
builtins.int"builtins.intM
niceos.nice"
builtins.int"builtins.int*
builtins.int"builtins.int;
plockos.plock"
None*
builtins.int"builtins.int≥
popenos.popen" 
os._wrap_close"os._wrap_close*%
cmd
builtins.str"builtins.str*(
mode
builtins.str"builtins.str *-
	buffering
builtins.int"builtins.int •
spawnl	os.spawnl"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¡
arg0∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¡
args∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathˆ
spawnle
os.spawnle"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¡
arg0∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*
args
Anyî
spawnv	os.spawnv"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ù
argsÈ
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]î
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]æ
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgsí
spawnve
os.spawnve"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ù
argsÈ
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]î
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]æ
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs*˘
envÔ
ìTypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]«
àUnion[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]›
Atyping.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]] 
builtins.bytes"builtins.bytesf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping◊
?typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping"os._ExecEnv¯
system	os.system"
builtins.int"builtins.int*ƒ
command∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathá
timesos.times"Û
\TypeAlias[Tuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float]]ˇ
QTuple[builtins.float,builtins.float,builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.times_result∑
waitpid
os.waitpid"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*
builtins.int"builtins.int*
builtins.int"builtins.intß
spawnlp
os.spawnlp"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¡
arg0∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¡
args∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath¯
spawnlpeos.spawnlpe"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*¡
arg0∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*
args
Anyñ
spawnvp
os.spawnvp"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ù
argsÈ
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]î
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]æ
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgsî
spawnvpeos.spawnvpe"
builtins.int"builtins.int*&
mode
builtins.int"builtins.int*¡
file∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ù
argsÈ
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]î
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]æ
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs*˘
envÔ
ìTypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]«
àUnion[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]›
Atyping.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]] 
builtins.bytes"builtins.bytesf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping◊
?typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping"os._ExecEnvq
waitos.wait"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int¬
waitid	os.waitid"Ã
RTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]·
GTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"os.waitid_result*
builtins.int"builtins.int*
builtins.int"builtins.int*
builtins.int"builtins.int´
wait3os.wait3"m
$Tuple[builtins.int,builtins.int,Any]
builtins.int"builtins.int
builtins.int"builtins.int
Any*)
options
builtins.int"builtins.int“
wait4os.wait4"m
$Tuple[builtins.int,builtins.int,Any]
builtins.int"builtins.int
builtins.int"builtins.int
Any*%
pid
builtins.int"builtins.int*)
options
builtins.int"builtins.intY
	WCOREDUMPos.WCOREDUMP"
builtins.bool"builtins.bool*
builtins.int"builtins.inti
WIFCONTINUEDos.WIFCONTINUED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.inte

WIFSTOPPEDos.WIFSTOPPED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intg
WIFSIGNALEDos.WIFSIGNALED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.intc
	WIFEXITEDos.WIFEXITED"
builtins.bool"builtins.bool*(
status
builtins.int"builtins.inte
WEXITSTATUSos.WEXITSTATUS"
builtins.int"builtins.int*(
status
builtins.int"builtins.int_
WSTOPSIGos.WSTOPSIG"
builtins.int"builtins.int*(
status
builtins.int"builtins.int_
WTERMSIGos.WTERMSIG"
builtins.int"builtins.int*(
status
builtins.int"builtins.int•$
posix_spawnos.posix_spawn"
builtins.int"builtins.int*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ù
argvÈ
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]î
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]æ
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs*˘
envÔ
ìTypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]«
àUnion[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]›
Atyping.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]] 
builtins.bytes"builtins.bytesf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping◊
?typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping"os._ExecEnv*º
file_actionsß
0Union[typing.Sequence[builtins.tuple[Any]],None]g
$typing.Sequence[builtins.tuple[Any]].
builtins.tuple[Any]
Any"builtins.tuple"typing.Sequence
None *U
	setpgroupD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
resetids
builtins.bool"builtins.bool *,
setsid
builtins.bool"builtins.bool *`

setsigmaskN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable *_
	setsigdefN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable *˘
	schedulerÁ
5Union[Tuple[Any,TypeAlias[Tuple[builtins.int]]],None]°
)Tuple[Any,TypeAlias[Tuple[builtins.int]]]
Anyi
TypeAlias[Tuple[builtins.int]]5
Tuple[builtins.int]
builtins.int"builtins.int"os.sched_param
None ß$
posix_spawnpos.posix_spawnp"
builtins.int"builtins.int*¡
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*Ù
argvÈ
æTypeAlias[Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]]î
≥Union[builtins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]],builtins.list[builtins.bytes],builtins.list[builtins.str],builtins.list[os.PathLike[Any]],builtins.list[Union[builtins.bytes,builtins.str]],builtins.list[Union[builtins.bytes,os.PathLike[Any]]],builtins.list[Union[builtins.str,os.PathLike[Any]]],builtins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]]æ
sbuiltins.tuple[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"builtins.tupleP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listZ
builtins.list[os.PathLike[Any]](
os.PathLike[Any]
Any"os.PathLike"builtins.list™
1builtins.list[Union[builtins.bytes,builtins.str]]f
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.listæ
5builtins.list[Union[builtins.bytes,os.PathLike[Any]]]v
&Union[builtins.bytes,os.PathLike[Any]] 
builtins.bytes"builtins.bytes(
os.PathLike[Any]
Any"os.PathLike"builtins.list∂
3builtins.list[Union[builtins.str,os.PathLike[Any]]]p
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list˜
Bbuiltins.list[Union[builtins.bytes,builtins.str,os.PathLike[Any]]]°
3Union[builtins.bytes,builtins.str,os.PathLike[Any]] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike"builtins.list"os._ExecVArgs*˘
envÔ
ìTypeAlias[Union[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]]«
àUnion[typing.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]],typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]]›
Atyping.Mapping[builtins.bytes,Union[builtins.bytes,builtins.str]] 
builtins.bytes"builtins.bytesf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping◊
?typing.Mapping[builtins.str,Union[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Union[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"typing.Mapping"os._ExecEnv*º
file_actionsß
0Union[typing.Sequence[builtins.tuple[Any]],None]g
$typing.Sequence[builtins.tuple[Any]].
builtins.tuple[Any]
Any"builtins.tuple"typing.Sequence
None *U
	setpgroupD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
resetids
builtins.bool"builtins.bool *,
setsid
builtins.bool"builtins.bool *`

setsigmaskN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable *_
	setsigdefN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable *˘
	schedulerÁ
5Union[Tuple[Any,TypeAlias[Tuple[builtins.int]]],None]°
)Tuple[Any,TypeAlias[Tuple[builtins.int]]]
Anyi
TypeAlias[Tuple[builtins.int]]5
Tuple[builtins.int]
builtins.int"builtins.int"os.sched_param
None {
sched_get_priority_minos.sched_get_priority_min"
builtins.int"builtins.int*(
policy
builtins.int"builtins.int{
sched_get_priority_maxos.sched_get_priority_max"
builtins.int"builtins.int*(
policy
builtins.int"builtins.int'
sched_yieldos.sched_yield"
None‚
sched_setscheduleros.sched_setscheduler"
None*
builtins.int"builtins.int*
builtins.int"builtins.int*ki
TypeAlias[Tuple[builtins.int]]5
Tuple[builtins.int]
builtins.int"builtins.int"os.sched_parami
sched_getscheduleros.sched_getscheduler"
builtins.int"builtins.int*
builtins.int"builtins.ints
sched_rr_get_intervalos.sched_rr_get_interval" 
builtins.float"builtins.float*
builtins.int"builtins.int∫
sched_setparamos.sched_setparam"
None*
builtins.int"builtins.int*ki
TypeAlias[Tuple[builtins.int]]5
Tuple[builtins.int]
builtins.int"builtins.int"os.sched_paramÆ
sched_getparamos.sched_getparam"i
TypeAlias[Tuple[builtins.int]]5
Tuple[builtins.int]
builtins.int"builtins.int"os.sched_param*
builtins.int"builtins.int•
sched_setaffinityos.sched_setaffinity"
None*
builtins.int"builtins.int*PN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterableì
sched_getaffinityos.sched_getaffinity"H
builtins.set[builtins.int]
builtins.int"builtins.int"builtins.set*
builtins.int"builtins.int_
	cpu_countos.cpu_count"D
Union[builtins.int,None]
builtins.int"builtins.int
Noneø
confstr
os.confstr"D
Union[builtins.str,None]
builtins.str"builtins.str
None*b`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intª

getloadavgos.getloadavg"ù
3Tuple[builtins.float,builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.floató
sysconf
os.sysconf"
builtins.int"builtins.int*b`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.inté
	getrandomos.getrandom" 
builtins.bytes"builtins.bytes*&
size
builtins.int"builtins.int*)
flags
builtins.int"builtins.int W
urandom
os.urandom" 
builtins.bytes"builtins.bytes*
builtins.int"builtins.intä
register_at_forkos.register_at_fork"
None*ï
beforeÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *û
after_in_parentÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ù
after_in_childÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None ê
memfd_createos.memfd_create"
builtins.int"builtins.int*&
name
builtins.str"builtins.str*)
flags
builtins.int"builtins.int Í
copy_file_rangeos.copy_file_range"
builtins.int"builtins.int*%
src
builtins.int"builtins.int*%
dst
builtins.int"builtins.int*'
count
builtins.int"builtins.int*V

offset_srcD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

offset_dstD
Union[builtins.int,None]
builtins.int"builtins.int
None "á
listdir
os.listdirƒ
listdir
os.listdir"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*À
pathæ
DUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath
None 0:typing.overloadXá
listdir
os.listdir"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*à
path˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath0:typing.overloadXû
listdir
os.listdir"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
path
builtins.int"builtins.int0:typing.overloadX"Î
fspath	os.fspathn
fspath	os.fspath"
builtins.str"builtins.str*&
path
builtins.str"builtins.str0:typing.overloadXv
fspath	os.fspath" 
builtins.bytes"builtins.bytes**
path 
builtins.bytes"builtins.bytes0:typing.overloadXÌ
fspath	os.fspath"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*{
pathq
os.PathLike[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.PathLike0:typing.overloadX"«
getenv	os.getenvï
getenv	os.getenv"D
Union[builtins.str,None]
builtins.str"builtins.str
None*%
key
builtins.str"builtins.str0:typing.overloadXô
getenv	os.getenv"{
Union[builtins.str,os._T]
builtins.str"builtins.str>
os._T"
builtins.object"builtins.object"builtins.object*%
key
builtins.str"builtins.str*K
default>
os._T"
builtins.object"builtins.object"builtins.object0:typing.overloadX"‚
getenvb
os.getenvb°
getenvb
os.getenvb"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*)
key 
builtins.bytes"builtins.bytes0:typing.overloadX¶
getenvb
os.getenvb"Å
Union[builtins.bytes,os._T] 
builtins.bytes"builtins.bytes>
os._T"
builtins.object"builtins.object"builtins.object*)
key 
builtins.bytes"builtins.bytes*K
default>
os._T"
builtins.object"builtins.object"builtins.object0:typing.overloadX"íﬁ
fdopen	os.fdopen¡D
fdopen	os.fdopen"$
io.TextIOWrapper"io.TextIOWrapper*$
fd
builtins.int"builtins.int*ç?
modeÄ?
’	TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]ã5
 	Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]‰
—TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Î
∆Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeUpdating–
◊TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]“
ÃUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeWritingˇ	
ôTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ø
éUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeReading"_typeshed.OpenTextMode *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *-
closefd
builtins.bool"builtins.bool *›
openerŒ
6Union[TypeAlias[CallableType[builtins.function]],None]á
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"
os._Opener
None 0:typing.overloadXü2
fdopen	os.fdopen"
	io.FileIO"	io.FileIO*$
fd
builtins.int"builtins.int*î.
modeâ.
ãTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]‹&
ÄUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]æ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*F
	buffering7
Literal[builtins.int]	
builtins.int"builtins.int*
encoding
None *
errors
None *
newline
None *-
closefd
builtins.bool"builtins.bool *›
openerŒ
6Union[TypeAlias[CallableType[builtins.function]],None]á
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"
os._Opener
None 0:typing.overloadXŸ
fdopen	os.fdopen"&
io.BufferedRandom"io.BufferedRandom*$
fd
builtins.int"builtins.int*…
modeæ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdating*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None *-
closefd
builtins.bool"builtins.bool *›
openerŒ
6Union[TypeAlias[CallableType[builtins.function]],None]á
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"
os._Opener
None 0:typing.overloadXæ

fdopen	os.fdopen"&
io.BufferedWriter"io.BufferedWriter*$
fd
builtins.int"builtins.int*Æ
mode£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None *-
closefd
builtins.bool"builtins.bool *›
openerŒ
6Union[TypeAlias[CallableType[builtins.function]],None]á
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"
os._Opener
None 0:typing.overloadXà
fdopen	os.fdopen"&
io.BufferedReader"io.BufferedReader*$
fd
builtins.int"builtins.int*¯
modeÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None *-
closefd
builtins.bool"builtins.bool *›
openerŒ
6Union[TypeAlias[CallableType[builtins.function]],None]á
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"
os._Opener
None 0:typing.overloadXí2
fdopen	os.fdopen""
typing.BinaryIO"typing.BinaryIO*$
fd
builtins.int"builtins.int*î.
modeâ.
ãTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]‹&
ÄUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]æ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*-
	buffering
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None *-
closefd
builtins.bool"builtins.bool *›
openerŒ
6Union[TypeAlias[CallableType[builtins.function]],None]á
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"
os._Opener
None 0:typing.overloadXŸ
fdopen	os.fdopen"$
typing.IO[Any]
Any"	typing.IO*$
fd
builtins.int"builtins.int*&
mode
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *-
closefd
builtins.bool"builtins.bool *›
openerŒ
6Union[TypeAlias[CallableType[builtins.function]],None]á
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"
os._Opener
None 0:typing.overloadX"ü
sendfileos.sendfileò
sendfileos.sendfile"
builtins.int"builtins.int*(
out_fd
builtins.int"builtins.int*'
in_fd
builtins.int"builtins.int*P
offsetD
Union[builtins.int,None]
builtins.int"builtins.int
None*'
count
builtins.int"builtins.int0:typing.overloadXÍ
sendfileos.sendfile"
builtins.int"builtins.int*(
out_fd
builtins.int"builtins.int*'
in_fd
builtins.int"builtins.int*(
offset
builtins.int"builtins.int*'
count
builtins.int"builtins.int*§
headersî
ßtyping.Sequence[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"typing.Sequence *•
trailersî
ßtyping.Sequence[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"typing.Sequence *)
flags
builtins.int"builtins.int 0:typing.overloadX"‚
scandir
os.scandirò
scandir
os.scandir"V
!os._ScandirIterator[builtins.str]
builtins.str"builtins.str"os._ScandirIterator*
path
None 0:typing.overloadX™
scandir
os.scandir"V
!os._ScandirIterator[builtins.str]
builtins.str"builtins.str"os._ScandirIterator*&
path
builtins.int"builtins.int0:typing.overloadXÇ
scandir
os.scandir"Å
"os._ScandirIterator[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os._ScandirIterator*—
path∆
:TypeAlias[Union[typing.AnyStr,os.PathLike[typing.AnyStr]]]Ó
/Union[typing.AnyStr,os.PathLike[typing.AnyStr]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectq
os.PathLike[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"os.PathLike"_typeshed.GenericPath0:typing.overloadX"ù
fwalkos.fwalkÏ
fwalkos.fwalk"Ø
ityping.Iterator[Tuple[builtins.str,builtins.list[builtins.str],builtins.list[builtins.str],builtins.int]]∞
XTuple[builtins.str,builtins.list[builtins.str],builtins.list[builtins.str],builtins.int]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
builtins.int"builtins.int"typing.Iterator*ı
topÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath *-
topdown
builtins.bool"builtins.bool *ﬂ
onerrorœ
6Union[TypeAlias[CallableType[builtins.function]],None]à
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._OnError
None *5
follow_symlinks
builtins.bool"builtins.bool *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overloadXö	
fwalkos.fwalk"À
otyping.Iterator[Tuple[builtins.bytes,builtins.list[builtins.bytes],builtins.list[builtins.bytes],builtins.int]]∆
^Tuple[builtins.bytes,builtins.list[builtins.bytes],builtins.list[builtins.bytes],builtins.int] 
builtins.bytes"builtins.bytesP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list
builtins.int"builtins.int"typing.Iterator*á
top˝
<TypeAlias[Union[builtins.bytes,os.PathLike[builtins.bytes]]]•
1Union[builtins.bytes,os.PathLike[builtins.bytes]] 
builtins.bytes"builtins.bytesL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.BytesPath*-
topdown
builtins.bool"builtins.bool *ﬂ
onerrorœ
6Union[TypeAlias[CallableType[builtins.function]],None]à
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"os._OnError
None *5
follow_symlinks
builtins.bool"builtins.bool *R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overloadX*c
__path__os.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*~
__annotations__os.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
_pathos.path *
pathos.path *S
supports_bytes_environos.supports_bytes_environ
builtins.bool"builtins.bool*≤
supports_dir_fdos.supports_dir_fdä
-builtins.set[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.set*™
supports_fdos.supports_fdä
-builtins.set[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.set*¿
supports_effective_idsos.supports_effective_idsä
-builtins.set[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.set*ƒ
supports_follow_symlinksos.supports_follow_symlinksä
-builtins.set[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.set*=
PRIO_PROCESSos.PRIO_PROCESS
builtins.int"builtins.int*7
	PRIO_PGRPos.PRIO_PGRP
builtins.int"builtins.int*7
	PRIO_USERos.PRIO_USER
builtins.int"builtins.int*1
F_LOCK	os.F_LOCK
builtins.int"builtins.int*3
F_TLOCK
os.F_TLOCK
builtins.int"builtins.int*3
F_ULOCK
os.F_ULOCK
builtins.int"builtins.int*1
F_TEST	os.F_TEST
builtins.int"builtins.int*G
POSIX_FADV_NORMALos.POSIX_FADV_NORMAL
builtins.int"builtins.int*O
POSIX_FADV_SEQUENTIALos.POSIX_FADV_SEQUENTIAL
builtins.int"builtins.int*G
POSIX_FADV_RANDOMos.POSIX_FADV_RANDOM
builtins.int"builtins.int*I
POSIX_FADV_NOREUSEos.POSIX_FADV_NOREUSE
builtins.int"builtins.int*K
POSIX_FADV_WILLNEEDos.POSIX_FADV_WILLNEED
builtins.int"builtins.int*K
POSIX_FADV_DONTNEEDos.POSIX_FADV_DONTNEED
builtins.int"builtins.int*;
SF_NODISKIOos.SF_NODISKIO
builtins.int"builtins.int*9

SF_MNOWAITos.SF_MNOWAIT
builtins.int"builtins.int*3
SF_SYNC
os.SF_SYNC
builtins.int"builtins.int*A
XATTR_SIZE_MAXos.XATTR_SIZE_MAX
builtins.int"builtins.int*=
XATTR_CREATEos.XATTR_CREATE
builtins.int"builtins.int*?
XATTR_REPLACEos.XATTR_REPLACE
builtins.int"builtins.int*/
P_PIDos.P_PID
builtins.int"builtins.int*1
P_PGID	os.P_PGID
builtins.int"builtins.int*/
P_ALLos.P_ALL
builtins.int"builtins.int*3
WEXITED
os.WEXITED
builtins.int"builtins.int*5
WSTOPPEDos.WSTOPPED
builtins.int"builtins.int*3
WNOWAIT
os.WNOWAIT
builtins.int"builtins.int*9

CLD_EXITEDos.CLD_EXITED
builtins.int"builtins.int*9

CLD_DUMPEDos.CLD_DUMPED
builtins.int"builtins.int*;
CLD_TRAPPEDos.CLD_TRAPPED
builtins.int"builtins.int*?
CLD_CONTINUEDos.CLD_CONTINUED
builtins.int"builtins.int*;
SCHED_OTHERos.SCHED_OTHER
builtins.int"builtins.int*;
SCHED_BATCHos.SCHED_BATCH
builtins.int"builtins.int*9

SCHED_IDLEos.SCHED_IDLE
builtins.int"builtins.int*A
SCHED_SPORADICos.SCHED_SPORADIC
builtins.int"builtins.int*9

SCHED_FIFOos.SCHED_FIFO
builtins.int"builtins.int*5
SCHED_RRos.SCHED_RR
builtins.int"builtins.int*K
SCHED_RESET_ON_FORKos.SCHED_RESET_ON_FORK
builtins.int"builtins.int*7
	RTLD_LAZYos.RTLD_LAZY
builtins.int"builtins.int*5
RTLD_NOWos.RTLD_NOW
builtins.int"builtins.int*;
RTLD_GLOBALos.RTLD_GLOBAL
builtins.int"builtins.int*9

RTLD_LOCALos.RTLD_LOCAL
builtins.int"builtins.int*?
RTLD_NODELETEos.RTLD_NODELETE
builtins.int"builtins.int*;
RTLD_NOLOADos.RTLD_NOLOAD
builtins.int"builtins.int*?
RTLD_DEEPBINDos.RTLD_DEEPBIND
builtins.int"builtins.int*?
GRND_NONBLOCKos.GRND_NONBLOCK
builtins.int"builtins.int*;
GRND_RANDOMos.GRND_RANDOM
builtins.int"builtins.int*5
SEEK_SETos.SEEK_SET
builtins.int"builtins.int*5
SEEK_CURos.SEEK_CUR
builtins.int"builtins.int*5
SEEK_ENDos.SEEK_END
builtins.int"builtins.int*7
	SEEK_DATAos.SEEK_DATA
builtins.int"builtins.int*7
	SEEK_HOLEos.SEEK_HOLE
builtins.int"builtins.int*5
O_RDONLYos.O_RDONLY
builtins.int"builtins.int*5
O_WRONLYos.O_WRONLY
builtins.int"builtins.int*1
O_RDWR	os.O_RDWR
builtins.int"builtins.int*5
O_APPENDos.O_APPEND
builtins.int"builtins.int*3
O_CREAT
os.O_CREAT
builtins.int"builtins.int*1
O_EXCL	os.O_EXCL
builtins.int"builtins.int*3
O_TRUNC
os.O_TRUNC
builtins.int"builtins.int*3
O_DSYNC
os.O_DSYNC
builtins.int"builtins.int*3
O_RSYNC
os.O_RSYNC
builtins.int"builtins.int*1
O_SYNC	os.O_SYNC
builtins.int"builtins.int*5
O_NDELAYos.O_NDELAY
builtins.int"builtins.int*9

O_NONBLOCKos.O_NONBLOCK
builtins.int"builtins.int*5
O_NOCTTYos.O_NOCTTY
builtins.int"builtins.int*7
	O_CLOEXECos.O_CLOEXEC
builtins.int"builtins.int*5
O_SHLOCKos.O_SHLOCK
builtins.int"builtins.int*5
O_EXLOCKos.O_EXLOCK
builtins.int"builtins.int*5
O_BINARYos.O_BINARY
builtins.int"builtins.int*;
O_NOINHERITos.O_NOINHERIT
builtins.int"builtins.int*?
O_SHORT_LIVEDos.O_SHORT_LIVED
builtins.int"builtins.int*;
O_TEMPORARYos.O_TEMPORARY
builtins.int"builtins.int*5
O_RANDOMos.O_RANDOM
builtins.int"builtins.int*=
O_SEQUENTIALos.O_SEQUENTIAL
builtins.int"builtins.int*1
O_TEXT	os.O_TEXT
builtins.int"builtins.int*3
O_ASYNC
os.O_ASYNC
builtins.int"builtins.int*5
O_DIRECTos.O_DIRECT
builtins.int"builtins.int*;
O_DIRECTORYos.O_DIRECTORY
builtins.int"builtins.int*9

O_NOFOLLOWos.O_NOFOLLOW
builtins.int"builtins.int*7
	O_NOATIMEos.O_NOATIME
builtins.int"builtins.int*1
O_PATH	os.O_PATH
builtins.int"builtins.int*7
	O_TMPFILEos.O_TMPFILE
builtins.int"builtins.int*;
O_LARGEFILEos.O_LARGEFILE
builtins.int"builtins.int*7
	O_ACCMODEos.O_ACCMODE
builtins.int"builtins.int*7
	ST_APPENDos.ST_APPEND
builtins.int"builtins.int*;
ST_MANDLOCKos.ST_MANDLOCK
builtins.int"builtins.int*9

ST_NOATIMEos.ST_NOATIME
builtins.int"builtins.int*5
ST_NODEVos.ST_NODEV
builtins.int"builtins.int*?
ST_NODIRATIMEos.ST_NODIRATIME
builtins.int"builtins.int*7
	ST_NOEXECos.ST_NOEXEC
builtins.int"builtins.int*;
ST_RELATIMEos.ST_RELATIME
builtins.int"builtins.int*A
ST_SYNCHRONOUSos.ST_SYNCHRONOUS
builtins.int"builtins.int*5
ST_WRITEos.ST_WRITE
builtins.int"builtins.int*;
NGROUPS_MAXos.NGROUPS_MAX
builtins.int"builtins.int*7
	ST_NOSUIDos.ST_NOSUID
builtins.int"builtins.int*7
	ST_RDONLYos.ST_RDONLY
builtins.int"builtins.int*1
curdir	os.curdir
builtins.str"builtins.str*1
pardir	os.pardir
builtins.str"builtins.str*+
sepos.sep
builtins.str"builtins.str*Y
altsep	os.altsepD
Union[builtins.str,None]
builtins.str"builtins.str
None*1
extsep	os.extsep
builtins.str"builtins.str*3
pathsep
os.pathsep
builtins.str"builtins.str*3
defpath
os.defpath
builtins.str"builtins.str*3
linesep
os.linesep
builtins.str"builtins.str*3
devnull
os.devnull
builtins.str"builtins.str*-
nameos.name
builtins.str"builtins.str*-
F_OKos.F_OK
builtins.int"builtins.int*-
R_OKos.R_OK
builtins.int"builtins.int*-
W_OKos.W_OK
builtins.int"builtins.int*-
X_OKos.X_OK
builtins.int"builtins.int*]
environ
os.environF
os._Environ[builtins.str]
builtins.str"builtins.str"os._Environ*e
environbos.environbL
os._Environ[builtins.bytes] 
builtins.bytes"builtins.bytes"os._Environ*ò
confstr_namesos.confstr_namesu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*ö
pathconf_namesos.pathconf_namesu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*ò
sysconf_namesos.sysconf_namesu
(builtins.dict[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"builtins.dict*/
EX_OKos.EX_OK
builtins.int"builtins.int*5
EX_USAGEos.EX_USAGE
builtins.int"builtins.int*9

EX_DATAERRos.EX_DATAERR
builtins.int"builtins.int*9

EX_NOINPUTos.EX_NOINPUT
builtins.int"builtins.int*7
	EX_NOUSERos.EX_NOUSER
builtins.int"builtins.int*7
	EX_NOHOSTos.EX_NOHOST
builtins.int"builtins.int*A
EX_UNAVAILABLEos.EX_UNAVAILABLE
builtins.int"builtins.int*;
EX_SOFTWAREos.EX_SOFTWARE
builtins.int"builtins.int*5
EX_OSERRos.EX_OSERR
builtins.int"builtins.int*7
	EX_OSFILEos.EX_OSFILE
builtins.int"builtins.int*=
EX_CANTCREATos.EX_CANTCREAT
builtins.int"builtins.int*5
EX_IOERRos.EX_IOERR
builtins.int"builtins.int*;
EX_TEMPFAILos.EX_TEMPFAIL
builtins.int"builtins.int*;
EX_PROTOCOLos.EX_PROTOCOL
builtins.int"builtins.int*7
	EX_NOPERMos.EX_NOPERM
builtins.int"builtins.int*7
	EX_CONFIGos.EX_CONFIG
builtins.int"builtins.int*;
EX_NOTFOUNDos.EX_NOTFOUND
builtins.int"builtins.int*5
P_NOWAITos.P_NOWAIT
builtins.int"builtins.int*7
	P_NOWAITOos.P_NOWAITO
builtins.int"builtins.int*1
P_WAIT	os.P_WAIT
builtins.int"builtins.int*3
WNOHANG
os.WNOHANG
builtins.int"builtins.int*9

WCONTINUEDos.WCONTINUED
builtins.int"builtins.int*7
	WUNTRACEDos.WUNTRACED
builtins.int"builtins.int*3
TMP_MAX
os.TMP_MAX
builtins.int"builtins.int*7
	RWF_DSYNCos.RWF_DSYNC
builtins.int"builtins.int*5
RWF_SYNCos.RWF_SYNC
builtins.int"builtins.int*7
	RWF_HIPRIos.RWF_HIPRI
builtins.int"builtins.int*9

RWF_NOWAITos.RWF_NOWAIT
builtins.int"builtins.int*E
POSIX_SPAWN_OPENos.POSIX_SPAWN_OPEN
builtins.int"builtins.int*G
POSIX_SPAWN_CLOSEos.POSIX_SPAWN_CLOSE
builtins.int"builtins.int*E
POSIX_SPAWN_DUP2os.POSIX_SPAWN_DUP2
builtins.int"builtins.int*;
MFD_CLOEXECos.MFD_CLOEXEC
builtins.int"builtins.int*G
MFD_ALLOW_SEALINGos.MFD_ALLOW_SEALING
builtins.int"builtins.int*;
MFD_HUGETLBos.MFD_HUGETLB
builtins.int"builtins.int*A
MFD_HUGE_SHIFTos.MFD_HUGE_SHIFT
builtins.int"builtins.int*?
MFD_HUGE_MASKos.MFD_HUGE_MASK
builtins.int"builtins.int*?
MFD_HUGE_64KBos.MFD_HUGE_64KB
builtins.int"builtins.int*A
MFD_HUGE_512KBos.MFD_HUGE_512KB
builtins.int"builtins.int*=
MFD_HUGE_1MBos.MFD_HUGE_1MB
builtins.int"builtins.int*=
MFD_HUGE_2MBos.MFD_HUGE_2MB
builtins.int"builtins.int*=
MFD_HUGE_8MBos.MFD_HUGE_8MB
builtins.int"builtins.int*?
MFD_HUGE_16MBos.MFD_HUGE_16MB
builtins.int"builtins.int*?
MFD_HUGE_32MBos.MFD_HUGE_32MB
builtins.int"builtins.int*A
MFD_HUGE_256MBos.MFD_HUGE_256MB
builtins.int"builtins.int*A
MFD_HUGE_512MBos.MFD_HUGE_512MB
builtins.int"builtins.int*=
MFD_HUGE_1GBos.MFD_HUGE_1GB
builtins.int"builtins.int*=
MFD_HUGE_2GBos.MFD_HUGE_2GB
builtins.int"builtins.int*?
MFD_HUGE_16GBos.MFD_HUGE_16GB
builtins.int"builtins.int