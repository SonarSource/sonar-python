
nntplib∂Y
_listbuiltins.list"typing.MutableSequence*´
copybuiltins.list.copy"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313z314*é
appendbuiltins.list.append"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313z314*ø
extendbuiltins.list.extend"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterablez38z39z310z311z312z313z314*ƒ
popbuiltins.list.pop"D
builtins._T"
builtins.object"builtins.object"builtins.object*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z38z39z310z311z312z313z314*∞
indexbuiltins.list.index"
builtins.int"builtins.int*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.object*FB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *FB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z38z39z310z311z312z313z314*†
countbuiltins.list.count"
builtins.int"builtins.int*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313z314*‘
insertbuiltins.list.insert"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313z314*é
removebuiltins.list.remove"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313z314*‘
__len__builtins.list.__len__"
builtins.int"builtins.int*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313z314*Ø
__iter__builtins.list.__iter__"u
typing.Iterator[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterator*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313z314*Ì
__delitem__builtins.list.__delitem__"
None*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*¢ü
5Union[typing_extensions.SupportsIndex,builtins.slice]B
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex 
builtins.slice"builtins.slicez38z39z310z311z312z313z314*ı
__iadd__builtins.list.__iadd__"ò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*õò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterablez38z39z310z311z312z313z314*Ô
__mul__builtins.list.__mul__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz38z39z310z311z312z313z314*Ò
__rmul__builtins.list.__rmul__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz38z39z310z311z312z313z314*¬
__imul__builtins.list.__imul__"ò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*õò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz38z39z310z311z312z313z314*Ü
__contains__builtins.list.__contains__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*$"
builtins.object"builtins.objectz38z39z310z311z312z313z314*∑
__reversed__builtins.list.__reversed__"u
typing.Iterator[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterator*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313z314*…
__gt__builtins.list.__gt__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313z314*…
__ge__builtins.list.__ge__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313z314*…
__lt__builtins.list.__lt__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313z314*…
__le__builtins.list.__le__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313z314*≤
__class_getitem__builtins.list.__class_getitem__"(
types.GenericAlias"types.GenericAlias*ß
clsù
 Type[builtins.list[builtins._T]]q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"type*	
Anypz39z310z311z312z313z3142æ
__init__builtins.list.__init__æ
__init__builtins.list.__init__"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list0:typing.overloadX∑
__init__builtins.list.__init__"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterable0:typing.overloadX"38"39"310"311"312"313"3142Õ
sortbuiltins.list.sort—
sortbuiltins.list.sort"
None*—
self∆
0builtins.list[_typeshed.SupportsRichComparisonT]Ç
!_typeshed.SupportsRichComparisonT⁄
FUnion[_typeshed.SupportsDunderLT[Any],_typeshed.SupportsDunderGT[Any]]F
_typeshed.SupportsDunderLT[Any]
Any"_typeshed.SupportsDunderLTF
_typeshed.SupportsDunderGT[Any]
Any"_typeshed.SupportsDunderGT"builtins.list*
key
None *-
reverse
builtins.bool"builtins.bool 0:typing.overloadXª
sortbuiltins.list.sort"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*T
keyK
CallableType[builtins.function]&
builtins.function"builtins.function*-
reverse
builtins.bool"builtins.bool 0:typing.overloadX"38"39"310"311"312"313"3142÷
__getitem__builtins.list.__getitem__æ
__getitem__builtins.list.__getitem__"D
builtins._T"
builtins.object"builtins.object"builtins.object*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex0:typing.overloadX…
__getitem__builtins.list.__getitem__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*" 
builtins.slice"builtins.slice0:typing.overloadX"38"39"310"311"312"313"3142Ú
__setitem__builtins.list.__setitem__ 
__setitem__builtins.list.__setitem__"
None*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*FD
builtins._T"
builtins.object"builtins.object"builtins.object0:typing.overloadXŸ
__setitem__builtins.list.__setitem__"
None*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*" 
builtins.slice"builtins.slice*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterable0:typing.overloadX"38"39"310"311"312"313"3142Í
__add__builtins.list.__add__í
__add__builtins.list.__add__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list0:typing.overloadXë
__add__builtins.list.__add__"Ô
-builtins.list[Union[builtins._S,builtins._T]]Æ
Union[builtins._S,builtins._T]D
builtins._S"
builtins.object"builtins.object"builtins.objectD
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._S]D
builtins._S"
builtins.object"builtins.object"builtins.object"builtins.list0:typing.overloadX"38"39"310"311"312"313"314Pj38j39j310j311j312j313j314rM
__hash__builtins.list.__hash__
None*38*39*310*311*312*313*314∫
	NNTPErrornntplib.NNTPError"builtins.Exceptionj38j39j310j311j312j313j314re
responsenntplib.NNTPError.response
builtins.str"builtins.str*38*39*310*311*312*313*314\
NNTPReplyErrornntplib.NNTPReplyError"nntplib.NNTPErrorj38j39j310j311j312j313j314d
NNTPTemporaryErrornntplib.NNTPTemporaryError"nntplib.NNTPErrorj38j39j310j311j312j313j314d
NNTPPermanentErrornntplib.NNTPPermanentError"nntplib.NNTPErrorj38j39j310j311j312j313j314b
NNTPProtocolErrornntplib.NNTPProtocolError"nntplib.NNTPErrorj38j39j310j311j312j313j314Z
NNTPDataErrornntplib.NNTPDataError"nntplib.NNTPErrorj38j39j310j311j312j313j314·!
	GroupInfonntplib.GroupInfo"builtins.tuple*ß
_replacenntplib.GroupInfo._replace"“
nntplib.GroupInfo._NT∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*ﬁ
_self“
nntplib.GroupInfo._NT∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*)
group
builtins.str"builtins.str *(
last
builtins.str"builtins.str *)
first
builtins.str"builtins.str *(
flag
builtins.str"builtins.str z38z39z310z311z312z313z314*ƒ
__new__nntplib.GroupInfo.__new__"“
nntplib.GroupInfo._NT∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Ö
_cls˙
Type[nntplib.GroupInfo._NT]“
nntplib.GroupInfo._NT∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"type*'
group
builtins.str"builtins.str*&
last
builtins.str"builtins.str*'
first
builtins.str"builtins.str*&
flag
builtins.str"builtins.strz38z39z310z311z312z313z314*ˇ
_asdictnntplib.GroupInfo._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*ﬁ
_self“
nntplib.GroupInfo._NT∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz38z39z310z311z312z313z314*å
_makenntplib.GroupInfo._make"“
nntplib.GroupInfo._NT∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*Ö
_cls˙
Type[nntplib.GroupInfo._NT]“
nntplib.GroupInfo._NT∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0: pz38z39z310z311z312z313z314j38j39j310j311j312j313j314rÄ
groupnntplib.GroupInfo.group
builtins.str"builtins.str*38*38*39*39*310*310*311*311*312*312*313*313*314*314r~
lastnntplib.GroupInfo.last
builtins.str"builtins.str*38*38*39*39*310*310*311*311*312*312*313*313*314*314rÄ
firstnntplib.GroupInfo.first
builtins.str"builtins.str*38*38*39*39*310*310*311*311*312*312*313*313*314*314r~
flagnntplib.GroupInfo.flag
builtins.str"builtins.str*38*38*39*39*310*310*311*311*312*312*313*313*314*314r˛
_fieldsnntplib.GroupInfo._fields∂
:Tuple[builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*38*39*310*311*312*313*314r®
_field_typesnntplib.GroupInfo._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314rÆ
_field_defaults!nntplib.GroupInfo._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314rc
_sourcenntplib.GroupInfo._source
builtins.str"builtins.str*38*39*310*311*312*313*314rÆ
__annotations__!nntplib.GroupInfo.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314rî
__match_args__ nntplib.GroupInfo.__match_args__∆
^Tuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*310*311*312*313*314¥"
ArticleInfonntplib.ArticleInfo"builtins.tuple*Ú
_replacenntplib.ArticleInfo._replace"Ó
nntplib.ArticleInfo._NT–
>Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]
builtins.int"builtins.int
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*˙
_selfÓ
nntplib.ArticleInfo._NT–
>Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]
builtins.int"builtins.int
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list**
number
builtins.int"builtins.int *.

message_id
builtins.str"builtins.str *]
linesP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list z38z39z310z311z312z313z314*ì
__new__nntplib.ArticleInfo.__new__"Ó
nntplib.ArticleInfo._NT–
>Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]
builtins.int"builtins.int
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*£
_clsò
Type[nntplib.ArticleInfo._NT]Ó
nntplib.ArticleInfo._NT–
>Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]
builtins.int"builtins.int
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list"type*(
number
builtins.int"builtins.int*,

message_id
builtins.str"builtins.str*[
linesP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listz38z39z310z311z312z313z314*ù
_asdictnntplib.ArticleInfo._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*˙
_selfÓ
nntplib.ArticleInfo._NT–
>Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]
builtins.int"builtins.int
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.listz38z39z310z311z312z313z314*»
_makenntplib.ArticleInfo._make"Ó
nntplib.ArticleInfo._NT–
>Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]
builtins.int"builtins.int
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*£
_clsò
Type[nntplib.ArticleInfo._NT]Ó
nntplib.ArticleInfo._NT–
>Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]
builtins.int"builtins.int
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0: pz38z39z310z311z312z313z314j38j39j310j311j312j313j314rÑ
numbernntplib.ArticleInfo.number
builtins.int"builtins.int*38*38*39*39*310*310*311*311*312*312*313*313*314*314rå

message_idnntplib.ArticleInfo.message_id
builtins.str"builtins.str*38*38*39*39*310*310*311*311*312*312*313*313*314*314r∂
linesnntplib.ArticleInfo.linesP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list*38*38*39*39*310*310*311*311*312*312*313*313*314*314r’
_fieldsnntplib.ArticleInfo._fieldsã
-Tuple[builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*38*39*310*311*312*313*314r™
_field_types nntplib.ArticleInfo._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314r∞
_field_defaults#nntplib.ArticleInfo._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314re
_sourcenntplib.ArticleInfo._source
builtins.str"builtins.str*38*39*310*311*312*313*314r∞
__annotations__#nntplib.ArticleInfo.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314r«
__match_args__"nntplib.ArticleInfo.__match_args__˜
HTuple[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*310*311*312*313*314ˇ|
NNTPnntplib.NNTP"builtins.object*™
__init__nntplib.NNTP.__init__"
None*&
self
nntplib.NNTP"nntplib.NNTP*&
host
builtins.str"builtins.str*(
port
builtins.int"builtins.int *P
userD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
passwordD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y

readermodeG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *.
usenetrc
builtins.bool"builtins.bool */
timeout 
builtins.float"builtins.float z38z39z310z311z312z313z314*Ã
	__enter__nntplib.NNTP.__enter__"A
nntplib.NNTP.Self
nntplib.NNTP"nntplib.NNTP"nntplib.NNTP*CA
nntplib.NNTP.Self
nntplib.NNTP"nntplib.NNTP"nntplib.NNTPz38z39z310z311z312z313z314*î
__exit__nntplib.NNTP.__exit__"
None*
nntplib.NNTP"nntplib.NNTP*&"
builtins.object"builtins.objectz38z39z310z311z312z313z314*å

getwelcomenntplib.NNTP.getwelcome"
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTPz38z39z310z311z312z313z314*≠
getcapabilitiesnntplib.NNTP.getcapabilities"≤
7builtins.dict[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict*&
self
nntplib.NNTP"nntplib.NNTPz38z39z310z311z312z313z314*©
set_debuglevelnntplib.NNTP.set_debuglevel"
None*&
self
nntplib.NNTP"nntplib.NNTP*'
level
builtins.int"builtins.intz38z39z310z311z312z313z314*ó
debugnntplib.NNTP.debug"
None*&
self
nntplib.NNTP"nntplib.NNTP*'
level
builtins.int"builtins.intz38z39z310z311z312z313z314*ó
capabilitiesnntplib.NNTP.capabilities"¢
KTuple[builtins.str,builtins.dict[builtins.str,builtins.list[builtins.str]]]
builtins.str"builtins.str≤
7builtins.dict[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"builtins.dict*&
self
nntplib.NNTP"nntplib.NNTPz38z39z310z311z312z313z314*’
	newgroupsnntplib.NNTP.newgroups"ù
/Tuple[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
self
nntplib.NNTP"nntplib.NNTP*|
dater
&Union[datetime.date,datetime.datetime]
datetime.date"datetime.date&
datetime.datetime"datetime.datetime*»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38z39z310z311z312z313z314*˙
newnewsnntplib.NNTP.newnews"ù
/Tuple[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
self
nntplib.NNTP"nntplib.NNTP*'
group
builtins.str"builtins.str*|
dater
&Union[datetime.date,datetime.datetime]
datetime.date"datetime.date&
datetime.datetime"datetime.datetime*»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38z39z310z311z312z313z314*®
listnntplib.NNTP.list"ù
/Tuple[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
self
nntplib.NNTP"nntplib.NNTP*Y
group_patternD
Union[builtins.str,None]
builtins.str"builtins.str
None *»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38z39z310z311z312z313z314*∑
descriptionnntplib.NNTP.description"
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTP*'
group
builtins.str"builtins.strz38z39z310z311z312z313z314*˚
descriptionsnntplib.NNTP.descriptions"’
<Tuple[builtins.str,builtins.dict[builtins.str,builtins.str]]
builtins.str"builtins.stru
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*&
self
nntplib.NNTP"nntplib.NNTP*/
group_pattern
builtins.str"builtins.strz38z39z310z311z312z313z314*
groupnntplib.NNTP.group"·
GTuple[builtins.str,builtins.int,builtins.int,builtins.int,builtins.str]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTP*&
name
builtins.str"builtins.strz38z39z310z311z312z313z314*Õ
helpnntplib.NNTP.help"ù
/Tuple[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
self
nntplib.NNTP"nntplib.NNTP*»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38z39z310z311z312z313z314*ç
statnntplib.NNTP.stat"ã
-Tuple[builtins.str,builtins.int,builtins.str]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTP*
message_spec
Any z38z39z310z311z312z313z314*
nextnntplib.NNTP.next"ã
-Tuple[builtins.str,builtins.int,builtins.str]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTPz38z39z310z311z312z313z314*
lastnntplib.NNTP.last"ã
-Tuple[builtins.str,builtins.int,builtins.str]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTPz38z39z310z311z312z313z314*Ñ
headnntplib.NNTP.head"∑
]Tuple[builtins.str,TypeAlias[Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]]]
builtins.str"builtins.strµ
ITypeAlias[Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]]–
>Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]
builtins.int"builtins.int
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list"nntplib.ArticleInfo*&
self
nntplib.NNTP"nntplib.NNTP*
message_spec
Any *»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38z39z310z311z312z313z314*Ñ
bodynntplib.NNTP.body"∑
]Tuple[builtins.str,TypeAlias[Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]]]
builtins.str"builtins.strµ
ITypeAlias[Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]]–
>Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]
builtins.int"builtins.int
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list"nntplib.ArticleInfo*&
self
nntplib.NNTP"nntplib.NNTP*
message_spec
Any *»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38z39z310z311z312z313z314*ä
articlenntplib.NNTP.article"∑
]Tuple[builtins.str,TypeAlias[Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]]]
builtins.str"builtins.strµ
ITypeAlias[Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]]–
>Tuple[builtins.int,builtins.str,builtins.list[builtins.bytes]]
builtins.int"builtins.int
builtins.str"builtins.strP
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list"nntplib.ArticleInfo*&
self
nntplib.NNTP"nntplib.NNTP*
message_spec
Any *»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38z39z310z311z312z313z314*Ç
slavenntplib.NNTP.slave"
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTPz38z39z310z311z312z313z314*Ü
xhdrnntplib.NNTP.xhdr"ù
/Tuple[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*&
self
nntplib.NNTP"nntplib.NNTP*%
hdr
builtins.str"builtins.str*
str
Any*»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38z39z310z311z312z313z314*∫
xovernntplib.NNTP.xover"∏
_Tuple[builtins.str,builtins.list[Tuple[builtins.int,builtins.dict[builtins.str,builtins.str]]]]
builtins.str"builtins.str¥
Kbuiltins.list[Tuple[builtins.int,builtins.dict[builtins.str,builtins.str]]]’
<Tuple[builtins.int,builtins.dict[builtins.str,builtins.str]]
builtins.int"builtins.intu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict"builtins.list*&
self
nntplib.NNTP"nntplib.NNTP*'
start
builtins.int"builtins.int*%
end
builtins.int"builtins.int*»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38z39z310z311z312z313z314*«
overnntplib.NNTP.over"∏
_Tuple[builtins.str,builtins.list[Tuple[builtins.int,builtins.dict[builtins.str,builtins.str]]]]
builtins.str"builtins.str¥
Kbuiltins.list[Tuple[builtins.int,builtins.dict[builtins.str,builtins.str]]]’
<Tuple[builtins.int,builtins.dict[builtins.str,builtins.str]]
builtins.int"builtins.intu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict"builtins.list*&
self
nntplib.NNTP"nntplib.NNTP*‹
message_spec…
?Union[None,builtins.str,builtins.list[Any],builtins.tuple[Any]]
None
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tuple*»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38z39z310z311z312z313z314*Ã
xgtitlenntplib.NNTP.xgtitle"ä
CTuple[builtins.str,builtins.list[Tuple[builtins.str,builtins.str]]]
builtins.str"builtins.str¢
/builtins.list[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.list*&
self
nntplib.NNTP"nntplib.NNTP*'
group
builtins.str"builtins.str*»
fileª
LTypeAlias[Union[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]]Ÿ
AUnion[typing.IO[builtins.bytes],builtins.bytes,builtins.str,None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None"nntplib._File z38*∫
xpathnntplib.NNTP.xpath"`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTP*
id
Anyz38*”
datenntplib.NNTP.date"o
%Tuple[builtins.str,datetime.datetime]
builtins.str"builtins.str&
datetime.datetime"datetime.datetime*&
self
nntplib.NNTP"nntplib.NNTPz38z39z310z311z312z313z314*ø
postnntplib.NNTP.post"
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTP*º
data±
5Union[builtins.bytes,typing.Iterable[builtins.bytes]] 
builtins.bytes"builtins.bytesT
typing.Iterable[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Iterablez38z39z310z311z312z313z314*⁄
ihavenntplib.NNTP.ihave"
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTP*

message_id
Any*º
data±
5Union[builtins.bytes,typing.Iterable[builtins.bytes]] 
builtins.bytes"builtins.bytesT
typing.Iterable[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Iterablez38z39z310z311z312z313z314*Ä
quitnntplib.NNTP.quit"
builtins.str"builtins.str*&
self
nntplib.NNTP"nntplib.NNTPz38z39z310z311z312z313z314*∆
loginnntplib.NNTP.login"
None*&
self
nntplib.NNTP"nntplib.NNTP*P
userD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
passwordD
Union[builtins.str,None]
builtins.str"builtins.str
None *.
usenetrc
builtins.bool"builtins.bool z38z39z310z311z312z313z314*œ
starttlsnntplib.NNTP.starttls"
None*&
self
nntplib.NNTP"nntplib.NNTP*Y
contextJ
Union[ssl.SSLContext,None] 
ssl.SSLContext"ssl.SSLContext
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314r`
encodingnntplib.NNTP.encoding
builtins.str"builtins.str*38*39*310*311*312*313*314r\
errorsnntplib.NNTP.errors
builtins.str"builtins.str*38*39*310*311*312*313*314rX
hostnntplib.NNTP.host
builtins.str"builtins.str*38*39*310*311*312*313*314rX
portnntplib.NNTP.port
builtins.int"builtins.int*38*39*310*311*312*313*314rZ
socknntplib.NNTP.sock
socket.socket"socket.socket*38*39*310*311*312*313*314rÑ
filenntplib.NNTP.fileH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*38*39*310*311*312*313*314rb
	debuggingnntplib.NNTP.debugging
builtins.int"builtins.int*38*39*310*311*312*313*314r^
welcomenntplib.NNTP.welcome
builtins.str"builtins.str*38*39*310*311*312*313*314rz
readermode_afterauth!nntplib.NNTP.readermode_afterauth
builtins.bool"builtins.bool*38*39*310*311*312*313*314r^
tls_onnntplib.NNTP.tls_on
builtins.bool"builtins.bool*38*39*310*311*312*313*314rl
authenticatednntplib.NNTP.authenticated
builtins.bool"builtins.bool*38*39*310*311*312*313*314rv
nntp_implementation nntplib.NNTP.nntp_implementation
builtins.str"builtins.str*38*39*310*311*312*313*314rh
nntp_versionnntplib.NNTP.nntp_version
builtins.int"builtins.int*38*39*310*311*312*313*314ﬁ
NNTP_SSLnntplib.NNTP_SSL"nntplib.NNTP*ï
__init__nntplib.NNTP_SSL.__init__"
None*.
self$
nntplib.NNTP_SSL"nntplib.NNTP_SSL*&
host
builtins.str"builtins.str*(
port
builtins.int"builtins.int *P
userD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
passwordD
Union[builtins.str,None]
builtins.str"builtins.str
None *]
ssl_contextJ
Union[ssl.SSLContext,None] 
ssl.SSLContext"ssl.SSLContext
None *Y

readermodeG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *.
usenetrc
builtins.bool"builtins.bool */
timeout 
builtins.float"builtins.float z38z39z310z311z312z313z314j38j39j310j311j312j313j314rò
ssl_contextnntplib.NNTP_SSL.ssl_contextJ
Union[ssl.SSLContext,None] 
ssl.SSLContext"ssl.SSLContext
None*38*39*310*311*312*313*314r^
socknntplib.NNTP_SSL.sock
ssl.SSLSocket"ssl.SSLSocket*38*39*310*311*312*313*314ì
decode_headernntplib.decode_header"
builtins.str"builtins.str*,

header_str
builtins.str"builtins.strz38z39z310z311z312z313z314*§
__annotations__nntplib.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*á
__all__nntplib.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*314*x
	NNTP_PORTnntplib.NNTP_PORT7
Literal[builtins.int]	
builtins.int"builtins.int*38*39*310*311*312*313*314*Ä
NNTP_SSL_PORTnntplib.NNTP_SSL_PORT7
Literal[builtins.int]	
builtins.int"builtins.int*38*39*310*311*312*313*314