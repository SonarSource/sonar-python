
plistlib§
PlistFormatplistlib.PlistFormat"	enum.EnumHj38j39j310j311j312j313j314rf
FMT_XMLplistlib.PlistFormat.FMT_XML
builtins.int"builtins.int*38*39*310*311*312*313*314rl

FMT_BINARYplistlib.PlistFormat.FMT_BINARY
builtins.int"builtins.int*38*39*310*311*312*313*314õ
Dataplistlib.Data"builtins.object*†
__init__plistlib.Data.__init__"
None*(
self
plistlib.Data"plistlib.Data**
data 
builtins.bytes"builtins.bytesz38j38r@
dataplistlib.Data.data 
builtins.bytes"builtins.bytes*38Þ
UIDplistlib.UID"builtins.object*œ
__init__plistlib.UID.__init__"
None*&
self
plistlib.UID"plistlib.UID*&
data
builtins.int"builtins.intz38z39z310z311z312z313z314*Š
	__index__plistlib.UID.__index__"
builtins.int"builtins.int*&
self
plistlib.UID"plistlib.UIDz38z39z310z311z312z313z314*é

__reduce__plistlib.UID.__reduce__"Ó
2Tuple[Type[plistlib.UID.Self],Tuple[builtins.int]]d
Type[plistlib.UID.Self]A
plistlib.UID.Self
plistlib.UID"plistlib.UID"plistlib.UID"type5
Tuple[builtins.int]
builtins.int"builtins.int*K
selfA
plistlib.UID.Self
plistlib.UID"plistlib.UID"plistlib.UIDz38z39z310z311z312z313z314*¤
__eq__plistlib.UID.__eq__"
builtins.bool"builtins.bool*
plistlib.UID"plistlib.UID*$"
builtins.object"builtins.objectz38z39z310z311z312z313z314j38j39j310j311j312j313j314rX
dataplistlib.UID.data
builtins.int"builtins.int*38*39*310*311*312*313*314Â
InvalidFileExceptionplistlib.InvalidFileException"builtins.ValueError*Ô
__init__&plistlib.InvalidFileException.__init__"
None*H
self>
plistlib.InvalidFileException"plistlib.InvalidFileException*+
message
builtins.str"builtins.str z38z39z310z311z312z313z314j38j39j310j311j312j313j314Ë
loadplistlib.load"
Any*P
fpH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*g
fmt\
 Union[plistlib.PlistFormat,None],
plistlib.PlistFormat"plistlib.PlistFormat
None *7
use_builtin_types
builtins.bool"builtins.bool *²
	dict_type 
-Type[typing.MutableMapping[builtins.str,Any]]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping"type z38«
loadplistlib.load"
Any*P
fpH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*g
fmt\
 Union[plistlib.PlistFormat,None],
plistlib.PlistFormat"plistlib.PlistFormat
None *²
	dict_type 
-Type[typing.MutableMapping[builtins.str,Any]]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping"type z39z310z311z312z313z314æ	
loadsplistlib.loads"
Any*è
valueÜ
—TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
ŒUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesí
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]Õ
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*g
fmt\
 Union[plistlib.PlistFormat,None],
plistlib.PlistFormat"plistlib.PlistFormat
None *7
use_builtin_types
builtins.bool"builtins.bool *²
	dict_type 
-Type[typing.MutableMapping[builtins.str,Any]]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping"type z38Æ	
loadsplistlib.loads"
Any*è
valueÜ
—TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
ŒUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesí
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]Õ
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*g
fmt\
 Union[plistlib.PlistFormat,None],
plistlib.PlistFormat"plistlib.PlistFormat
None *²
	dict_type 
-Type[typing.MutableMapping[builtins.str,Any]]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping"type z39z310z311z312z313z314ù
dumpplistlib.dump"
None*Ê
value¾
¬Union[typing.Mapping[builtins.str,Any],builtins.list[Any],builtins.tuple[Any],builtins.str,builtins.bool,builtins.float,builtins.bytes,builtins.bytearray,datetime.datetime]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str
builtins.bool"builtins.bool 
builtins.float"builtins.float 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray&
datetime.datetime"datetime.datetime*P
fpH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*7
fmt,
plistlib.PlistFormat"plistlib.PlistFormat */
	sort_keys
builtins.bool"builtins.bool *.
skipkeys
builtins.bool"builtins.bool z38z39z310z311z312z313z314Á
dumpsplistlib.dumps" 
builtins.bytes"builtins.bytes*Ê
value¾
¬Union[typing.Mapping[builtins.str,Any],builtins.list[Any],builtins.tuple[Any],builtins.str,builtins.bool,builtins.float,builtins.bytes,builtins.bytearray,datetime.datetime]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tuple
builtins.str"builtins.str
builtins.bool"builtins.bool 
builtins.float"builtins.float 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray&
datetime.datetime"datetime.datetime*7
fmt,
plistlib.PlistFormat"plistlib.PlistFormat *.
skipkeys
builtins.bool"builtins.bool */
	sort_keys
builtins.bool"builtins.bool z38z39z310z311z312z313z314Ù
	readPlistplistlib.readPlist"
Any*ª

pathOrFile™
-Union[builtins.str,typing.IO[builtins.bytes]]
builtins.str"builtins.strH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IOz38Â

writePlistplistlib.writePlist"
None*d
valueY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*ª

pathOrFile™
-Union[builtins.str,typing.IO[builtins.bytes]]
builtins.str"builtins.strH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IOz38¨
readPlistFromBytesplistlib.readPlistFromBytes"
Any*ç
dataÜ
—TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
ŒUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesí
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]Õ
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferz38»
writePlistToBytesplistlib.writePlistToBytes" 
builtins.bytes"builtins.bytes*d
valueY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mappingz38*¥
__annotations__plistlib.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*ˆ
__all__plistlib.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*314*j
FMT_XMLplistlib.FMT_XML,
plistlib.PlistFormat"plistlib.PlistFormat*38*39*310*311*312*313*314*p

FMT_BINARYplistlib.FMT_BINARY,
plistlib.PlistFormat"plistlib.PlistFormat*38*39*310*311*312*313*314