
sqlalchemy.sql.type_api˛

TypeEngine"sqlalchemy.sql.type_api.TypeEngine"#sqlalchemy.sql.visitors.Traversible*i
evaluates_none1sqlalchemy.sql.type_api.TypeEngine.evaluates_none*
selfz38z39z310z311z312z313*]
copy'sqlalchemy.sql.type_api.TypeEngine.copy*
self*
kwz38z39z310z311z312z313*˝
compare_against_backend:sqlalchemy.sql.type_api.TypeEngine.compare_against_backend"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
dialect
Any*
	conn_type
Anyz38z39z310z311z312z313*l

copy_value-sqlalchemy.sql.type_api.TypeEngine.copy_value*
self*	
valuez38z39z310z311z312z313*Ÿ
literal_processor4sqlalchemy.sql.type_api.TypeEngine.literal_processor"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
dialect
Anyz38z39z310z311z312z313*”
bind_processor1sqlalchemy.sql.type_api.TypeEngine.bind_processor"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
dialect
Anyz38z39z310z311z312z313*Ì
result_processor3sqlalchemy.sql.type_api.TypeEngine.result_processor"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
dialect
Any*
coltype
Anyz38z39z310z311z312z313*Ÿ
column_expression4sqlalchemy.sql.type_api.TypeEngine.column_expression"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
colexpr
Anyz38z39z310z311z312z313*◊
bind_expression2sqlalchemy.sql.type_api.TypeEngine.bind_expression"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
	bindvalue
Anyz38z39z310z311z312z313*w
compare_values1sqlalchemy.sql.type_api.TypeEngine.compare_values*
self*
x*
yz38z39z310z311z312z313*—
get_dbapi_type1sqlalchemy.sql.type_api.TypeEngine.get_dbapi_type"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*
dbapi
Anyz38z39z310z311z312z313*Œ
python_type.sqlalchemy.sql.type_api.TypeEngine.python_type"
None*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine0:builtins.property`z38z39z310z311z312z313*Ç
with_variant/sqlalchemy.sql.type_api.TypeEngine.with_variant*
self*	
type_*
dialect_namez38z39z310z311z312z313*Í

as_generic-sqlalchemy.sql.type_api.TypeEngine.as_generic"
Any*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*4
allow_nulltype
builtins.bool"builtins.bool z38z39z310z311z312z313*r
dialect_impl/sqlalchemy.sql.type_api.TypeEngine.dialect_impl*
self*
dialectz38z39z310z311z312z313*h
adapt(sqlalchemy.sql.type_api.TypeEngine.adapt*
self*
cls*
kwz38z39z310z311z312z313*ä
coerce_compared_value8sqlalchemy.sql.type_api.TypeEngine.coerce_compared_value*
self*
op*	
valuez38z39z310z311z312z313*ö
compile*sqlalchemy.sql.type_api.TypeEngine.compile"
Any*R
selfH
"sqlalchemy.sql.type_api.TypeEngine""sqlalchemy.sql.type_api.TypeEngine*j
dialect[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313j38j39j310j311j312j313rs
hashable+sqlalchemy.sql.type_api.TypeEngine.hashable
builtins.bool"builtins.bool*38*39*310*311*312*313rp
comparator_factory5sqlalchemy.sql.type_api.TypeEngine.comparator_factory
Any*38*39*310*311*312*313rn
sort_key_function4sqlalchemy.sql.type_api.TypeEngine.sort_key_function
Any*38*39*310*311*312*313rã
should_evaluate_none7sqlalchemy.sql.type_api.TypeEngine.should_evaluate_none
builtins.bool"builtins.bool*38*39*310*311*312*313¥
VisitableCheckKWArg+sqlalchemy.sql.type_api.VisitableCheckKWArg"+sqlalchemy.util.langhelpers.EnsureKWArgType"'sqlalchemy.sql.visitors.TraversibleTypej38j39j310j311j312j313¡
ExternalType$sqlalchemy.sql.type_api.ExternalType"builtins.objectj38j39j310j311j312j313r^
cache_ok-sqlalchemy.sql.type_api.ExternalType.cache_ok
Any*38*39*310*311*312*313Ê
UserDefinedType'sqlalchemy.sql.type_api.UserDefinedType"$sqlalchemy.sql.type_api.ExternalType""sqlalchemy.sql.type_api.TypeEngine*è
coerce_compared_value=sqlalchemy.sql.type_api.UserDefinedType.coerce_compared_value*
self*
op*	
valuez38z39z310z311z312z313@b+sqlalchemy.sql.type_api.VisitableCheckKWArgj38j39j310j311j312j313rÇ
__visit_name__6sqlalchemy.sql.type_api.UserDefinedType.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313r~
ensure_kwarg4sqlalchemy.sql.type_api.UserDefinedType.ensure_kwarg
builtins.str"builtins.str*38*39*310*311*312*313Ã
Emulated sqlalchemy.sql.type_api.Emulated"builtins.object*É
adapt_to_emulated2sqlalchemy.sql.type_api.Emulated.adapt_to_emulated*
self*
impltype*
kwz38z39z310z311z312z313*k
adapt&sqlalchemy.sql.type_api.Emulated.adapt*
self*
impltype*
kwz38z39z310z311z312z313j38j39j310j311j312j313œ
NativeForEmulated)sqlalchemy.sql.type_api.NativeForEmulated"builtins.object*Ø
adapt_native_to_emulatedBsqlalchemy.sql.type_api.NativeForEmulated.adapt_native_to_emulated*
cls*
impl*
kw0:builtins.classmethodpz38z39z310z311z312z313*Ø
adapt_emulated_to_nativeBsqlalchemy.sql.type_api.NativeForEmulated.adapt_emulated_to_native*
cls*
impl*
kw0:builtins.classmethodpz38z39z310z311z312z313j38j39j310j311j312j313Õ
TypeDecorator%sqlalchemy.sql.type_api.TypeDecorator"$sqlalchemy.sql.type_api.ExternalType"%sqlalchemy.sql.base.SchemaEventTarget""sqlalchemy.sql.type_api.TypeEngine*‚
__init__.sqlalchemy.sql.type_api.TypeDecorator.__init__"
None*X
selfN
%sqlalchemy.sql.type_api.TypeDecorator"%sqlalchemy.sql.type_api.TypeDecorator*
args
Any*
kwargs
Anyz38z39z310z311z312z313*ã
comparator_factory8sqlalchemy.sql.type_api.TypeDecorator.comparator_factory*
self0:builtins.property`z38z39z310z311z312z313*s
type_engine1sqlalchemy.sql.type_api.TypeDecorator.type_engine*
self*
dialectz38z39z310z311z312z313*
load_dialect_impl7sqlalchemy.sql.type_api.TypeDecorator.load_dialect_impl*
self*
dialectz38z39z310z311z312z313*◊
__getattr__1sqlalchemy.sql.type_api.TypeDecorator.__getattr__"
Any*PN
%sqlalchemy.sql.type_api.TypeDecorator"%sqlalchemy.sql.type_api.TypeDecorator*
builtins.str"builtins.strz38z39z310z311z312z313*˛
process_literal_param;sqlalchemy.sql.type_api.TypeDecorator.process_literal_param"
None*X
selfN
%sqlalchemy.sql.type_api.TypeDecorator"%sqlalchemy.sql.type_api.TypeDecorator*
value
Any*
dialect
Anyz38z39z310z311z312z313*¯
process_bind_param8sqlalchemy.sql.type_api.TypeDecorator.process_bind_param"
None*X
selfN
%sqlalchemy.sql.type_api.TypeDecorator"%sqlalchemy.sql.type_api.TypeDecorator*
value
Any*
dialect
Anyz38z39z310z311z312z313*¸
process_result_value:sqlalchemy.sql.type_api.TypeDecorator.process_result_value"
None*X
selfN
%sqlalchemy.sql.type_api.TypeDecorator"%sqlalchemy.sql.type_api.TypeDecorator*
value
Any*
dialect
Anyz38z39z310z311z312z313*
literal_processor7sqlalchemy.sql.type_api.TypeDecorator.literal_processor*
self*
dialectz38z39z310z311z312z313*y
bind_processor4sqlalchemy.sql.type_api.TypeDecorator.bind_processor*
self*
dialectz38z39z310z311z312z313*ä
result_processor6sqlalchemy.sql.type_api.TypeDecorator.result_processor*
self*
dialect*
coltypez38z39z310z311z312z313*}
bind_expression5sqlalchemy.sql.type_api.TypeDecorator.bind_expression*
self*
	bindparamz38z39z310z311z312z313*~
column_expression7sqlalchemy.sql.type_api.TypeDecorator.column_expression*
self*

columnz38z39z310z311z312z313*ç
coerce_compared_value;sqlalchemy.sql.type_api.TypeDecorator.coerce_compared_value*
self*
op*	
valuez38z39z310z311z312z313*`
copy*sqlalchemy.sql.type_api.TypeDecorator.copy*
self*
kwz38z39z310z311z312z313*w
get_dbapi_type4sqlalchemy.sql.type_api.TypeDecorator.get_dbapi_type*
self*	
dbapiz38z39z310z311z312z313*z
compare_values4sqlalchemy.sql.type_api.TypeDecorator.compare_values*
self*
x*
yz38z39z310z311z312z313*â
sort_key_function7sqlalchemy.sql.type_api.TypeDecorator.sort_key_function*
self0:builtins.property`z38z39z310z311z312z313j38j39j310j311j312j313rÄ
__visit_name__4sqlalchemy.sql.type_api.TypeDecorator.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313rW
impl*sqlalchemy.sql.type_api.TypeDecorator.impl
Any*38*39*310*311*312*313rs
coerce_to_is_types8sqlalchemy.sql.type_api.TypeDecorator.coerce_to_is_types
Any*38*39*310*311*312*313Û
Variantsqlalchemy.sql.type_api.Variant"%sqlalchemy.sql.type_api.TypeDecorator*—
__init__(sqlalchemy.sql.type_api.Variant.__init__"
None*L
selfB
sqlalchemy.sql.type_api.Variant"sqlalchemy.sql.type_api.Variant*
base
Any*
mapping
Anyz38z39z310z311z312z313*ç
coerce_compared_value5sqlalchemy.sql.type_api.Variant.coerce_compared_value*
self*
operator*	
valuez38z39z310z311z312z313*y
load_dialect_impl1sqlalchemy.sql.type_api.Variant.load_dialect_impl*
self*
dialectz38z39z310z311z312z313*
with_variant,sqlalchemy.sql.type_api.Variant.with_variant*
self*	
type_*
dialect_namez38z39z310z311z312z313*Ö
comparator_factory2sqlalchemy.sql.type_api.Variant.comparator_factory*
self0:builtins.property`z38z39z310z311z312z313j38j39j310j311j312j313rp
cache_ok(sqlalchemy.sql.type_api.Variant.cache_ok
builtins.bool"builtins.bool*38*39*310*311*312*313rQ
impl$sqlalchemy.sql.type_api.Variant.impl
Any*38*39*310*311*312*313rW
mapping'sqlalchemy.sql.type_api.Variant.mapping
Any*38*39*310*311*312*313l
to_instance#sqlalchemy.sql.type_api.to_instance*
typeobj*
arg*
kwz38z39z310z311z312z313g

adapt_type"sqlalchemy.sql.type_api.adapt_type*
typeobj*
colspecsz38z39z310z311z312z313*Ø
__annotations__'sqlalchemy.sql.type_api.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*W
BOOLEANTYPE#sqlalchemy.sql.type_api.BOOLEANTYPE
Any*38*39*310*311*312*313*W
INTEGERTYPE#sqlalchemy.sql.type_api.INTEGERTYPE
Any*38*39*310*311*312*313*Q
NULLTYPE sqlalchemy.sql.type_api.NULLTYPE
Any*38*39*310*311*312*313*W
NUMERICTYPE#sqlalchemy.sql.type_api.NUMERICTYPE
Any*38*39*310*311*312*313*U

STRINGTYPE"sqlalchemy.sql.type_api.STRINGTYPE
Any*38*39*310*311*312*313*S
	MATCHTYPE!sqlalchemy.sql.type_api.MATCHTYPE
Any*38*39*310*311*312*313*S
	INDEXABLE!sqlalchemy.sql.type_api.INDEXABLE
Any*38*39*310*311*312*313*U

TABLEVALUE"sqlalchemy.sql.type_api.TABLEVALUE
Any*38*39*310*311*312*313