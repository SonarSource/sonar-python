
calendarÌ
IllegalMonthErrorcalendar.IllegalMonthError"builtins.ValueError*¶
__init__#calendar.IllegalMonthError.__init__"
None*B
self8
calendar.IllegalMonthError"calendar.IllegalMonthError*'
month
builtins.int"builtins.int˘
IllegalWeekdayErrorcalendar.IllegalWeekdayError"builtins.ValueError*Æ
__init__%calendar.IllegalWeekdayError.__init__"
None*F
self<
calendar.IllegalWeekdayError"calendar.IllegalWeekdayError*)
weekday
builtins.int"builtins.int‰$
Calendarcalendar.Calendar"builtins.object*î
__init__calendar.Calendar.__init__"
None*0
self&
calendar.Calendar"calendar.Calendar*0
firstweekday
builtins.int"builtins.int *Ñ
getfirstweekday!calendar.Calendar.getfirstweekday"
builtins.int"builtins.int*0
self&
calendar.Calendar"calendar.Calendar*†
setfirstweekday!calendar.Calendar.setfirstweekday"
None*0
self&
calendar.Calendar"calendar.Calendar*.
firstweekday
builtins.int"builtins.int*∞
iterweekdayscalendar.Calendar.iterweekdays"N
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable*0
self&
calendar.Calendar"calendar.Calendar*à
itermonthdates calendar.Calendar.itermonthdates"Q
typing.Iterable[datetime.date]
datetime.date"datetime.date"typing.Iterable*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.int*ﬁ
itermonthdays2 calendar.Calendar.itermonthdays2"¶
1typing.Iterable[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"typing.Iterable*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.int*É
itermonthdayscalendar.Calendar.itermonthdays"N
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.int*À
monthdatescalendar$calendar.Calendar.monthdatescalendar"ã
+builtins.list[builtins.list[datetime.date]]M
builtins.list[datetime.date]
datetime.date"datetime.date"builtins.list"builtins.list*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.int*¥
monthdays2calendar$calendar.Calendar.monthdays2calendar"Ù
>builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list"builtins.list*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.int*≈
monthdayscalendar#calendar.Calendar.monthdayscalendar"á
*builtins.list[builtins.list[builtins.int]]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list"builtins.list*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.int*«
yeardatescalendar#calendar.Calendar.yeardatescalendar"á
*builtins.list[builtins.list[builtins.int]]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list"builtins.list*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*)
width
builtins.int"builtins.int *¥
yeardays2calendar#calendar.Calendar.yeardays2calendar"Ù
>builtins.list[builtins.list[Tuple[builtins.int,builtins.int]]]¢
/builtins.list[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.list"builtins.list*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*)
width
builtins.int"builtins.int *≈
yeardayscalendar"calendar.Calendar.yeardayscalendar"á
*builtins.list[builtins.list[builtins.int]]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list"builtins.list*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*)
width
builtins.int"builtins.int *ó
itermonthdays3 calendar.Calendar.itermonthdays3"ﬂ
>typing.Iterable[Tuple[builtins.int,builtins.int,builtins.int]]ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"typing.Iterable*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.int*œ
itermonthdays4 calendar.Calendar.itermonthdays4"ó
Ktyping.Iterable[Tuple[builtins.int,builtins.int,builtins.int,builtins.int]]∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"typing.Iterable*0
self&
calendar.Calendar"calendar.Calendar*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.intrL
firstweekdaycalendar.Calendar.firstweekday
builtins.int"builtins.intÄ
TextCalendarcalendar.TextCalendar"calendar.Calendar*æ
prweekcalendar.TextCalendar.prweek"
None*8
self.
calendar.TextCalendar"calendar.TextCalendar*)
theweek
builtins.int"builtins.int*'
width
builtins.int"builtins.int*ˇ
	formatdaycalendar.TextCalendar.formatday"
builtins.str"builtins.str*8
self.
calendar.TextCalendar"calendar.TextCalendar*%
day
builtins.int"builtins.int*)
weekday
builtins.int"builtins.int*'
width
builtins.int"builtins.int*⁄

formatweek calendar.TextCalendar.formatweek"
builtins.str"builtins.str*8
self.
calendar.TextCalendar"calendar.TextCalendar*)
theweek
builtins.int"builtins.int*'
width
builtins.int"builtins.int*‹
formatweekday#calendar.TextCalendar.formatweekday"
builtins.str"builtins.str*8
self.
calendar.TextCalendar"calendar.TextCalendar*%
day
builtins.int"builtins.int*'
width
builtins.int"builtins.int*ª
formatweekheader&calendar.TextCalendar.formatweekheader"
builtins.str"builtins.str*8
self.
calendar.TextCalendar"calendar.TextCalendar*'
width
builtins.int"builtins.int*¿
formatmonthname%calendar.TextCalendar.formatmonthname"
builtins.str"builtins.str*8
self.
calendar.TextCalendar"calendar.TextCalendar*)
theyear
builtins.int"builtins.int**
themonth
builtins.int"builtins.int*'
width
builtins.int"builtins.int*.
withyear
builtins.bool"builtins.bool *ë
prmonthcalendar.TextCalendar.prmonth"
None*8
self.
calendar.TextCalendar"calendar.TextCalendar*)
theyear
builtins.int"builtins.int**
themonth
builtins.int"builtins.int*%
w
builtins.int"builtins.int *%
l
builtins.int"builtins.int *≠
formatmonth!calendar.TextCalendar.formatmonth"
builtins.str"builtins.str*8
self.
calendar.TextCalendar"calendar.TextCalendar*)
theyear
builtins.int"builtins.int**
themonth
builtins.int"builtins.int*%
w
builtins.int"builtins.int *%
l
builtins.int"builtins.int *Õ

formatyear calendar.TextCalendar.formatyear"
builtins.str"builtins.str*8
self.
calendar.TextCalendar"calendar.TextCalendar*)
theyear
builtins.int"builtins.int*%
w
builtins.int"builtins.int *%
l
builtins.int"builtins.int *%
c
builtins.int"builtins.int *%
m
builtins.int"builtins.int *±
pryearcalendar.TextCalendar.pryear"
None*8
self.
calendar.TextCalendar"calendar.TextCalendar*)
theyear
builtins.int"builtins.int*%
w
builtins.int"builtins.int *%
l
builtins.int"builtins.int *%
c
builtins.int"builtins.int *%
m
builtins.int"builtins.int ˙
HTMLCalendarcalendar.HTMLCalendar"calendar.Calendar*÷
	formatdaycalendar.HTMLCalendar.formatday"
builtins.str"builtins.str*8
self.
calendar.HTMLCalendar"calendar.HTMLCalendar*%
day
builtins.int"builtins.int*)
weekday
builtins.int"builtins.int*±

formatweek calendar.HTMLCalendar.formatweek"
builtins.str"builtins.str*8
self.
calendar.HTMLCalendar"calendar.HTMLCalendar*)
theweek
builtins.int"builtins.int*≥
formatweekday#calendar.HTMLCalendar.formatweekday"
builtins.str"builtins.str*8
self.
calendar.HTMLCalendar"calendar.HTMLCalendar*%
day
builtins.int"builtins.int*í
formatweekheader&calendar.HTMLCalendar.formatweekheader"
builtins.str"builtins.str*8
self.
calendar.HTMLCalendar"calendar.HTMLCalendar*ó
formatmonthname%calendar.HTMLCalendar.formatmonthname"
builtins.str"builtins.str*8
self.
calendar.HTMLCalendar"calendar.HTMLCalendar*)
theyear
builtins.int"builtins.int**
themonth
builtins.int"builtins.int*.
withyear
builtins.bool"builtins.bool *è
formatmonth!calendar.HTMLCalendar.formatmonth"
builtins.str"builtins.str*8
self.
calendar.HTMLCalendar"calendar.HTMLCalendar*)
theyear
builtins.int"builtins.int**
themonth
builtins.int"builtins.int*.
withyear
builtins.bool"builtins.bool *‹

formatyear calendar.HTMLCalendar.formatyear"
builtins.str"builtins.str*8
self.
calendar.HTMLCalendar"calendar.HTMLCalendar*)
theyear
builtins.int"builtins.int*)
width
builtins.int"builtins.int *ã
formatyearpage$calendar.HTMLCalendar.formatyearpage"
builtins.str"builtins.str*8
self.
calendar.HTMLCalendar"calendar.HTMLCalendar*)
theyear
builtins.int"builtins.int*)
width
builtins.int"builtins.int *O
cssD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None rz

cssclasses calendar.HTMLCalendar.cssclassesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listrT
cssclass_noday$calendar.HTMLCalendar.cssclass_noday
builtins.str"builtins.strrî
cssclasses_weekday_head-calendar.HTMLCalendar.cssclasses_weekday_headJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listr^
cssclass_month_head)calendar.HTMLCalendar.cssclass_month_head
builtins.str"builtins.strrT
cssclass_month$calendar.HTMLCalendar.cssclass_month
builtins.str"builtins.strrR
cssclass_year#calendar.HTMLCalendar.cssclass_year
builtins.str"builtins.strr\
cssclass_year_head(calendar.HTMLCalendar.cssclass_year_head
builtins.str"builtins.strÜ
different_localecalendar.different_locale"builtins.object*≤
__init__"calendar.different_locale.__init__"
None*@
self6
calendar.different_locale"calendar.different_locale*µ
locale®
CTypeAlias[Tuple[Union[builtins.str,None],Union[builtins.str,None]]]»
8Tuple[Union[builtins.str,None],Union[builtins.str,None]]D
Union[builtins.str,None]
builtins.str"builtins.str
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
None"calendar._LocaleType*t
	__enter__#calendar.different_locale.__enter__"
None*86
calendar.different_locale"calendar.different_locale*ö
__exit__"calendar.different_locale.__exit__"
None*86
calendar.different_locale"calendar.different_locale*&"
builtins.object"builtins.objectó
LocaleTextCalendarcalendar.LocaleTextCalendar"calendar.TextCalendar*Ã
__init__$calendar.LocaleTextCalendar.__init__"
None*D
self:
calendar.LocaleTextCalendar"calendar.LocaleTextCalendar*0
firstweekday
builtins.int"builtins.int *ó
localeà
OUnion[TypeAlias[Tuple[Union[builtins.str,None],Union[builtins.str,None]]],None]®
CTypeAlias[Tuple[Union[builtins.str,None],Union[builtins.str,None]]]»
8Tuple[Union[builtins.str,None],Union[builtins.str,None]]D
Union[builtins.str,None]
builtins.str"builtins.str
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
None"calendar._LocaleType
None ã	
LocaleHTMLCalendarcalendar.LocaleHTMLCalendar"calendar.HTMLCalendar*Ã
__init__$calendar.LocaleHTMLCalendar.__init__"
None*D
self:
calendar.LocaleHTMLCalendar"calendar.LocaleHTMLCalendar*0
firstweekday
builtins.int"builtins.int *ó
localeà
OUnion[TypeAlias[Tuple[Union[builtins.str,None],Union[builtins.str,None]]],None]®
CTypeAlias[Tuple[Union[builtins.str,None],Union[builtins.str,None]]]»
8Tuple[Union[builtins.str,None],Union[builtins.str,None]]D
Union[builtins.str,None]
builtins.str"builtins.str
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
None"calendar._LocaleType
None *≈
formatweekday)calendar.LocaleHTMLCalendar.formatweekday"
builtins.str"builtins.str*D
self:
calendar.LocaleHTMLCalendar"calendar.LocaleHTMLCalendar*%
day
builtins.int"builtins.int*©
formatmonthname+calendar.LocaleHTMLCalendar.formatmonthname"
builtins.str"builtins.str*D
self:
calendar.LocaleHTMLCalendar"calendar.LocaleHTMLCalendar*)
theyear
builtins.int"builtins.int**
themonth
builtins.int"builtins.int*.
withyear
builtins.bool"builtins.bool a
isleapcalendar.isleap"
builtins.bool"builtins.bool*&
year
builtins.int"builtins.intá
leapdayscalendar.leapdays"
builtins.int"builtins.int*$
y1
builtins.int"builtins.int*$
y2
builtins.int"builtins.int±
weekdaycalendar.weekday"
builtins.int"builtins.int*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.int*%
day
builtins.int"builtins.int‘

monthrangecalendar.monthrange"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.intC
firstweekdaycalendar.firstweekday"
builtins.int"builtins.intÇ
monthcalendarcalendar.monthcalendar"á
*builtins.list[builtins.list[builtins.int]]J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list"builtins.list*&
year
builtins.int"builtins.int*'
month
builtins.int"builtins.intw
prweekcalendar.prweek"
None*)
theweek
builtins.int"builtins.int*'
width
builtins.int"builtins.intá
weekcalendar.week"
builtins.str"builtins.str*)
theweek
builtins.int"builtins.int*'
width
builtins.int"builtins.inth

weekheadercalendar.weekheader"
builtins.str"builtins.str*'
width
builtins.int"builtins.int 
prmonthcalendar.prmonth"
None*)
theyear
builtins.int"builtins.int**
themonth
builtins.int"builtins.int*%
w
builtins.int"builtins.int *%
l
builtins.int"builtins.int ⁄
monthcalendar.month"
builtins.str"builtins.str*)
theyear
builtins.int"builtins.int**
themonth
builtins.int"builtins.int*%
w
builtins.int"builtins.int *%
l
builtins.int"builtins.int Ç
calendarcalendar.calendar"
builtins.str"builtins.str*)
theyear
builtins.int"builtins.int*%
w
builtins.int"builtins.int *%
l
builtins.int"builtins.int *%
c
builtins.int"builtins.int *%
m
builtins.int"builtins.int Ë
prcalcalendar.prcal"
None*)
theyear
builtins.int"builtins.int*%
w
builtins.int"builtins.int *%
l
builtins.int"builtins.int *%
c
builtins.int"builtins.int *%
m
builtins.int"builtins.int e
setfirstweekdaycalendar.setfirstweekday"
None*.
firstweekday
builtins.int"builtins.int∫
formatcalendar.format"
builtins.str"builtins.str*&
cols
builtins.int"builtins.int*,
colwidth
builtins.int"builtins.int *+
spacing
builtins.int"builtins.int ∆
formatstringcalendar.formatstring"
builtins.str"builtins.str*&
cols
builtins.int"builtins.int*,
colwidth
builtins.int"builtins.int *+
spacing
builtins.int"builtins.int Û
timegmcalendar.timegm"
builtins.int"builtins.int*π
tuple≠
™Union[builtins.tuple[builtins.int],TypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]]L
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple≠
ÜTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]ç
{Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"time.struct_time*Ñ
__annotations__calendar.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*g
__all__calendar.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*?
c
calendar.c.
calendar.TextCalendar"calendar.TextCalendar*m
day_namecalendar.day_nameN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*m
day_abbrcalendar.day_abbrN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*q

month_namecalendar.month_nameN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*q

month_abbrcalendar.month_abbrN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*R
MONDAYcalendar.MONDAY7
Literal[builtins.int]	
builtins.int"builtins.int*T
TUESDAYcalendar.TUESDAY7
Literal[builtins.int]	
builtins.int"builtins.int*X
	WEDNESDAYcalendar.WEDNESDAY7
Literal[builtins.int]	
builtins.int"builtins.int*V
THURSDAYcalendar.THURSDAY7
Literal[builtins.int]	
builtins.int"builtins.int*R
FRIDAYcalendar.FRIDAY7
Literal[builtins.int]	
builtins.int"builtins.int*V
SATURDAYcalendar.SATURDAY7
Literal[builtins.int]	
builtins.int"builtins.int*R
SUNDAYcalendar.SUNDAY7
Literal[builtins.int]	
builtins.int"builtins.int*P
EPOCHcalendar.EPOCH7
Literal[builtins.int]	
builtins.int"builtins.int