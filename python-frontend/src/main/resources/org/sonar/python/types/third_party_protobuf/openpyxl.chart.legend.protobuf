
openpyxl.chart.legend¨
LegendEntry!openpyxl.chart.legend.LegendEntry".openpyxl.descriptors.serialisable.Serialisable*¿
__init__*openpyxl.chart.legend.LegendEntry.__init__"
None*P
selfF
!openpyxl.chart.legend.LegendEntry"!openpyxl.chart.legend.LegendEntry*'
idx
builtins.int"builtins.int *,
delete
builtins.bool"builtins.bool *€
txPrt
(Union[openpyxl.chart.text.RichText,None]<
openpyxl.chart.text.RichText"openpyxl.chart.text.RichText
None *0
extLst"
builtins.object"builtins.object z38z39z310z311z312z313z314j38j39j310j311j312j313j314rs
tagname)openpyxl.chart.legend.LegendEntry.tagname
builtins.str"builtins.str*38*39*310*311*312*313*314r€
idx%openpyxl.chart.legend.LegendEntry.idx1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314r†
delete(openpyxl.chart.legend.LegendEntry.delete1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314rÃ
txPr&openpyxl.chart.legend.LegendEntry.txPrñ
Topenpyxl.descriptors.base.Typed[openpyxl.chart.text.RichText,Literal[builtins.bool]]<
openpyxl.chart.text.RichText"openpyxl.chart.text.RichText:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314rë
extLst(openpyxl.chart.legend.LegendEntry.extLst•
`openpyxl.descriptors.base.Typed[openpyxl.descriptors.excel.ExtensionList,Literal[builtins.bool]]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314r­
__elements__.openpyxl.chart.legend.LegendEntry.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*38*39*310*311*312*313*314·
Legendopenpyxl.chart.legend.Legend".openpyxl.descriptors.serialisable.Serialisable*À
__init__%openpyxl.chart.legend.Legend.__init__"
None*F
self<
openpyxl.chart.legend.Legend"openpyxl.chart.legend.Legend*-
	legendPos
builtins.str"builtins.str *
legendEntry
Any *‚
layoutt
(Union[openpyxl.chart.layout.Layout,None]<
openpyxl.chart.layout.Layout"openpyxl.chart.layout.Layout
None *j
overlay[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *¨
spPr›
5Union[openpyxl.chart.shapes.GraphicalProperties,None]V
)openpyxl.chart.shapes.GraphicalProperties")openpyxl.chart.shapes.GraphicalProperties
None *€
txPrt
(Union[openpyxl.chart.text.RichText,None]<
openpyxl.chart.text.RichText"openpyxl.chart.text.RichText
None *0
extLst"
builtins.object"builtins.object z38z39z310z311z312z313z314j38j39j310j311j312j313j314rn
tagname$openpyxl.chart.legend.Legend.tagname
builtins.str"builtins.str*38*39*310*311*312*313*314r‡
	legendPos&openpyxl.chart.legend.Legend.legendPos1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314r–
position%openpyxl.chart.legend.Legend.positionB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*38*39*310*311*312*313*314r‹
legendEntry(openpyxl.chart.legend.Legend.legendEntry1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314rÂ
layout#openpyxl.chart.legend.Legend.layoutñ
Topenpyxl.descriptors.base.Typed[openpyxl.chart.layout.Layout,Literal[builtins.bool]]<
openpyxl.chart.layout.Layout"openpyxl.chart.layout.Layout:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314rƒ
overlay$openpyxl.chart.legend.Legend.overlay1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314rå
spPr!openpyxl.chart.legend.Legend.spPr˜
aopenpyxl.descriptors.base.Typed[openpyxl.chart.shapes.GraphicalProperties,Literal[builtins.bool]]V
)openpyxl.chart.shapes.GraphicalProperties")openpyxl.chart.shapes.GraphicalProperties:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314r¬
graphicalProperties0openpyxl.chart.legend.Legend.graphicalPropertiesB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*38*39*310*311*312*313*314r¾
txPr!openpyxl.chart.legend.Legend.txPrñ
Topenpyxl.descriptors.base.Typed[openpyxl.chart.text.RichText,Literal[builtins.bool]]<
openpyxl.chart.text.RichText"openpyxl.chart.text.RichText:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314r¢
textProperties+openpyxl.chart.legend.Legend.textPropertiesB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*38*39*310*311*312*313*314ræ
extLst#openpyxl.chart.legend.Legend.extLst•
`openpyxl.descriptors.base.Typed[openpyxl.descriptors.excel.ExtensionList,Literal[builtins.bool]]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314r¨
__elements__)openpyxl.chart.legend.Legend.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*38*39*310*311*312*313*314*²
__annotations__%openpyxl.chart.legend.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314