
serial.tools.hexlify_codecò
Codec serial.tools.hexlify_codec.Codec"codecs.Codec*ﬁ
encode'serial.tools.hexlify_codec.Codec.encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*N
selfD
 serial.tools.hexlify_codec.Codec" serial.tools.hexlify_codec.Codec*&
data
builtins.str"builtins.str**
errors
builtins.str"builtins.str z38z39z310z311z312z313z314*‹
decode'serial.tools.hexlify_codec.Codec.decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*N
selfD
 serial.tools.hexlify_codec.Codec" serial.tools.hexlify_codec.Codec**
data 
builtins.bytes"builtins.bytes**
errors
builtins.str"builtins.str z38z39z310z311z312z313z314j38j39j310j311j312j313j314ø
IncrementalEncoder-serial.tools.hexlify_codec.IncrementalEncoder"codecs.IncrementalEncoder*¿
encode4serial.tools.hexlify_codec.IncrementalEncoder.encode" 
builtins.bytes"builtins.bytes*h
self^
-serial.tools.hexlify_codec.IncrementalEncoder"-serial.tools.hexlify_codec.IncrementalEncoder*&
data
builtins.str"builtins.str*+
final
builtins.bool"builtins.bool z38z39z310z311z312z313z314j38j39j310j311j312j313j314r{
state3serial.tools.hexlify_codec.IncrementalEncoder.state
builtins.int"builtins.int*38*39*310*311*312*313*314˙	
IncrementalDecoder-serial.tools.hexlify_codec.IncrementalDecoder"codecs.IncrementalDecoder*¯
decode4serial.tools.hexlify_codec.IncrementalDecoder.decode"
builtins.str"builtins.str*h
self^
-serial.tools.hexlify_codec.IncrementalDecoder"-serial.tools.hexlify_codec.IncrementalDecoder*·
data÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*+
final
builtins.bool"builtins.bool z38z39z310z311z312z313z314j38j39j310j311j312j313j314è
StreamWriter'serial.tools.hexlify_codec.StreamWriter" serial.tools.hexlify_codec.Codec"codecs.StreamWriterj38j39j310j311j312j313j314è
StreamReader'serial.tools.hexlify_codec.StreamReader" serial.tools.hexlify_codec.Codec"codecs.StreamReaderj38j39j310j311j312j313j314ê

hex_encode%serial.tools.hexlify_codec.hex_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*&
data
builtins.str"builtins.str**
errors
builtins.str"builtins.str z38z39z310z311z312z313z314é

hex_decode%serial.tools.hexlify_codec.hex_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int**
data 
builtins.bytes"builtins.bytes**
errors
builtins.str"builtins.str z38z39z310z311z312z313z314≈
getregentry&serial.tools.hexlify_codec.getregentry"Ï
[TypeAlias[Tuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]]¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter"codecs.CodecInfoz38z39z310z311z312z313z314*∑
__annotations__*serial.tools.hexlify_codec.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*p
	HEXDIGITS$serial.tools.hexlify_codec.HEXDIGITS
builtins.str"builtins.str*38*39*310*311*312*313*314