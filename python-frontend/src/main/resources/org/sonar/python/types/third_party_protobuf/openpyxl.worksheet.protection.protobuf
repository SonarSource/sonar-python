
openpyxl.worksheet.protection®

_Protected(openpyxl.worksheet.protection._Protected"builtins.object*±
set_password5openpyxl.worksheet.protection._Protected.set_password"
None*^
selfT
(openpyxl.worksheet.protection._Protected"(openpyxl.worksheet.protection._Protected*)
value
builtins.str"builtins.str *4
already_hashed
builtins.bool"builtins.bool z38z39z310z311z312z313z3142â
password1openpyxl.worksheet.protection._Protected.password`
password1openpyxl.worksheet.protection._Protected.password*
self0:builtins.propertyX`∆
password1openpyxl.worksheet.protection._Protected.password"
None*^
selfT
(openpyxl.worksheet.protection._Protected"(openpyxl.worksheet.protection._Protected*
value
Any0:.setter"38"39"310"311"312"313"314j38j39j310j311j312j313j314æn
SheetProtection-openpyxl.worksheet.protection.SheetProtection".openpyxl.descriptors.serialisable.Serialisable"(openpyxl.worksheet.protection._Protected*≠9
__init__6openpyxl.worksheet.protection.SheetProtection.__init__"
None*h
self^
-openpyxl.worksheet.protection.SheetProtection"-openpyxl.worksheet.protection.SheetProtection*û
sheetê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *†
objectsê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *¢
	scenariosê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *§
formatCellsê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *£

formatRowsê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *¶
formatColumnsê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *¶
insertColumnsê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *£

insertRowsê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *©
insertHyperlinksê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *¶
deleteColumnsê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *£

deleteRowsê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *™
selectLockedCellsê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *¨
selectUnlockedCellsê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *ù
sortê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *£

autoFilterê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *§
pivotTablesê
>TypeAlias[Union[builtins.bool,builtins.str,builtins.int,None]]ù
3Union[builtins.bool,builtins.str,builtins.int,None]
builtins.bool"builtins.bool
builtins.str"builtins.str
builtins.int"builtins.int
None",openpyxl.descriptors.base._ConvertibleToBool *k
password[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *Y
algorithmNameD
Union[builtins.str,None]
builtins.str"builtins.str
None *l
	saltValue[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *Ω
	spinCount´
ôUnion[TypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]],None]Ä
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt
None *l
	hashValue[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314*¿
set_password:openpyxl.worksheet.protection.SheetProtection.set_password"
None*h
self^
-openpyxl.worksheet.protection.SheetProtection"-openpyxl.worksheet.protection.SheetProtection*)
value
builtins.str"builtins.str *4
already_hashed
builtins.bool"builtins.bool z38z39z310z311z312z313z314*”
enable4openpyxl.worksheet.protection.SheetProtection.enable"
None*h
self^
-openpyxl.worksheet.protection.SheetProtection"-openpyxl.worksheet.protection.SheetProtectionz38z39z310z311z312z313z314*’
disable5openpyxl.worksheet.protection.SheetProtection.disable"
None*h
self^
-openpyxl.worksheet.protection.SheetProtection"-openpyxl.worksheet.protection.SheetProtectionz38z39z310z311z312z313z314*Ì
__bool__6openpyxl.worksheet.protection.SheetProtection.__bool__"
builtins.bool"builtins.bool*h
self^
-openpyxl.worksheet.protection.SheetProtection"-openpyxl.worksheet.protection.SheetProtectionz38z39z310z311z312z313z314j38j39j310j311j312j313j314r
tagname5openpyxl.worksheet.protection.SheetProtection.tagname
builtins.str"builtins.str*38*39*310*311*312*313*314rÙ
sheet3openpyxl.worksheet.protection.SheetProtection.sheetî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314r•
enabled5openpyxl.worksheet.protection.SheetProtection.enabledB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*38*39*310*311*312*313*314r¯
objects5openpyxl.worksheet.protection.SheetProtection.objectsî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314r¸
	scenarios7openpyxl.worksheet.protection.SheetProtection.scenariosî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314rÄ
formatCells9openpyxl.worksheet.protection.SheetProtection.formatCellsî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314rÑ
formatColumns;openpyxl.worksheet.protection.SheetProtection.formatColumnsî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314r˛

formatRows8openpyxl.worksheet.protection.SheetProtection.formatRowsî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314rÑ
insertColumns;openpyxl.worksheet.protection.SheetProtection.insertColumnsî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314r˛

insertRows8openpyxl.worksheet.protection.SheetProtection.insertRowsî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314rä
insertHyperlinks>openpyxl.worksheet.protection.SheetProtection.insertHyperlinksî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314rÑ
deleteColumns;openpyxl.worksheet.protection.SheetProtection.deleteColumnsî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314r˛

deleteRows8openpyxl.worksheet.protection.SheetProtection.deleteRowsî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314rå
selectLockedCells?openpyxl.worksheet.protection.SheetProtection.selectLockedCellsî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314rê
selectUnlockedCellsAopenpyxl.worksheet.protection.SheetProtection.selectUnlockedCellsî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314rÚ
sort2openpyxl.worksheet.protection.SheetProtection.sortî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314r˛

autoFilter8openpyxl.worksheet.protection.SheetProtection.autoFilterî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314rÄ
pivotTables9openpyxl.worksheet.protection.SheetProtection.pivotTablesî
6openpyxl.descriptors.base.Bool[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Bool*38*39*310*311*312*313*314rò
	saltValue7openpyxl.worksheet.protection.SheetProtection.saltValue1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314rÇ
	spinCount7openpyxl.worksheet.protection.SheetProtection.spinCountö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*38*39*310*311*312*313*314rà
algorithmName;openpyxl.worksheet.protection.SheetProtection.algorithmNameò
8openpyxl.descriptors.base.String[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool" openpyxl.descriptors.base.String*38*39*310*311*312*313*314rò
	hashValue7openpyxl.worksheet.protection.SheetProtection.hashValue1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314r≥
	__attrs__7openpyxl.worksheet.protection.SheetProtection.__attrs__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*38*39*310*311*312*313*314rñ
password6openpyxl.worksheet.protection.SheetProtection.password1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314*∫
__annotations__-openpyxl.worksheet.protection.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314