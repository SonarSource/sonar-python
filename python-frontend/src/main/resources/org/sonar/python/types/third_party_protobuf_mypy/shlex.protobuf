
shlexÆ
shlexshlex.shlex"typing.Iterable*ç
punctuation_charsshlex.shlex.punctuation_chars"
builtins.str"builtins.str*$
self
shlex.shlex"shlex.shlex0:builtins.property`*‘
__init__shlex.shlex.__init__"
None*$
self
shlex.shlex"shlex.shlex*Ç
instreamr
&Union[builtins.str,typing.TextIO,None]
builtins.str"builtins.str
typing.TextIO"typing.TextIO
None *R
infileD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
posix
builtins.bool"builtins.bool *|
punctuation_charsc
!Union[builtins.bool,builtins.str]
builtins.bool"builtins.bool
builtins.str"builtins.str *é
	get_tokenshlex.shlex.get_token"D
Union[builtins.str,None]
builtins.str"builtins.str
None*$
self
shlex.shlex"shlex.shlex*{

push_tokenshlex.shlex.push_token"
None*$
self
shlex.shlex"shlex.shlex*%
tok
builtins.str"builtins.str*ê

read_tokenshlex.shlex.read_token"D
Union[builtins.str,None]
builtins.str"builtins.str
None*$
self
shlex.shlex"shlex.shlex*ò

sourcehookshlex.shlex.sourcehook"†
-Union[Tuple[builtins.str,typing.TextIO],None]c
!Tuple[builtins.str,typing.TextIO]
builtins.str"builtins.str
typing.TextIO"typing.TextIO
None*$
self
shlex.shlex"shlex.shlex*)
newfile
builtins.str"builtins.str*ü
push_sourceshlex.shlex.push_source"
None*$
self
shlex.shlex"shlex.shlex*r
	newstreamc
!Union[builtins.str,typing.TextIO]
builtins.str"builtins.str
typing.TextIO"typing.TextIO*S
newfileD
Union[builtins.str,None]
builtins.str"builtins.str
None *T

pop_sourceshlex.shlex.pop_source"
None*$
self
shlex.shlex"shlex.shlex*î
error_leadershlex.shlex.error_leader"
builtins.str"builtins.str*$
self
shlex.shlex"shlex.shlex*R
infileD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
linenoD
Union[builtins.int,None]
builtins.int"builtins.int
None *†
__iter__shlex.shlex.__iter__"=
shlex.shlex.Self
shlex.shlex"shlex.shlex"shlex.shlex*?=
shlex.shlex.Self
shlex.shlex"shlex.shlex"shlex.shlex*d
__next__shlex.shlex.__next__"
builtins.str"builtins.str*$
self
shlex.shlex"shlex.shlexrB

commentersshlex.shlex.commenters
builtins.str"builtins.strr@
	wordcharsshlex.shlex.wordchars
builtins.str"builtins.strrB

whitespaceshlex.shlex.whitespace
builtins.str"builtins.strr:
escapeshlex.shlex.escape
builtins.str"builtins.strr:
quotesshlex.shlex.quotes
builtins.str"builtins.strrH
escapedquotesshlex.shlex.escapedquotes
builtins.str"builtins.strrP
whitespace_splitshlex.shlex.whitespace_split
builtins.bool"builtins.boolrb
infileshlex.shlex.infileD
Union[builtins.str,None]
builtins.str"builtins.str
Noner@
instreamshlex.shlex.instream
typing.TextIO"typing.TextIOr:
sourceshlex.shlex.source
builtins.str"builtins.strr8
debugshlex.shlex.debug
builtins.int"builtins.intr:
linenoshlex.shlex.lineno
builtins.int"builtins.intr8
tokenshlex.shlex.token
builtins.str"builtins.strr\
eofshlex.shlex.eofD
Union[builtins.str,None]
builtins.str"builtins.str
None‚
splitshlex.split"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*#
s
builtins.str"builtins.str*.
comments
builtins.bool"builtins.bool *+
posix
builtins.bool"builtins.bool ì
join
shlex.join"
builtins.str"builtins.str*a
split_commandN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.IterableW
quoteshlex.quote"
builtins.str"builtins.str*#
s
builtins.str"builtins.str*Å
__annotations__shlex.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*d
__all__shlex.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list