
	threading8
ThreadErrorthreading.ThreadError"builtins.Exceptionª
localthreading.local"builtins.object*É
__getattribute__ threading.local.__getattribute__"
Any*$"
threading.local"threading.local*
builtins.str"builtins.str*ç
__setattr__threading.local.__setattr__"
None*,
self"
threading.local"threading.local*
builtins.str"builtins.str*	
Any*z
__delattr__threading.local.__delattr__"
None*$"
threading.local"threading.local*
builtins.str"builtins.strá
Threadthreading.Thread"builtins.object*¨
identthreading.Thread.ident"D
Union[builtins.int,None]
builtins.int"builtins.int
None*.
self$
threading.Thread"threading.Thread0:builtins.property`*ú
__init__threading.Thread.__init__"
None*.
self$
threading.Thread"threading.Thread*
group
None *ï
targetÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *<
args0
typing.Iterable[Any]
Any"typing.Iterable *§
kwargsï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None *U
daemonG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Y
startthreading.Thread.start"
None*.
self$
threading.Thread"threading.Thread*U
runthreading.Thread.run"
None*.
self$
threading.Thread"threading.Thread*≤
jointhreading.Thread.join"
None*.
self$
threading.Thread"threading.Thread*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *¥
	native_idthreading.Thread.native_id"D
Union[builtins.int,None]
builtins.int"builtins.int
None*.
self$
threading.Thread"threading.Thread0:builtins.property`*u
is_alivethreading.Thread.is_alive"
builtins.bool"builtins.bool*.
self$
threading.Thread"threading.Thread*s
isAlivethreading.Thread.isAlive"
builtins.bool"builtins.bool*.
self$
threading.Thread"threading.Thread*q
getNamethreading.Thread.getName"
builtins.str"builtins.str*.
self$
threading.Thread"threading.Thread*Ö
setNamethreading.Thread.setName"
None*.
self$
threading.Thread"threading.Thread*&
name
builtins.str"builtins.str*u
isDaemonthreading.Thread.isDaemon"
builtins.bool"builtins.bool*.
self$
threading.Thread"threading.Thread*è
	setDaemonthreading.Thread.setDaemon"
None*.
self$
threading.Thread"threading.Thread*,
daemonic
builtins.bool"builtins.boolr;
namethreading.Thread.name
builtins.str"builtins.strrA
daemonthreading.Thread.daemon
builtins.bool"builtins.bool´
_DummyThreadthreading._DummyThread"threading.Thread*q
__init__threading._DummyThread.__init__"
None*:
self0
threading._DummyThread"threading._DummyThreadÿ
Lockthreading.Lock"builtins.object*i
	__enter__threading.Lock.__enter__"
builtins.bool"builtins.bool*" 
threading.Lock"threading.Lock*™
__exit__threading.Lock.__exit__"
None*" 
threading.Lock"threading.Lock*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*Œ
acquirethreading.Lock.acquire"
builtins.bool"builtins.bool**
self 
threading.Lock"threading.Lock*.
blocking
builtins.bool"builtins.bool */
timeout 
builtins.float"builtins.float *W
releasethreading.Lock.release"
None**
self 
threading.Lock"threading.Lock*k
lockedthreading.Lock.locked"
builtins.bool"builtins.bool**
self 
threading.Lock"threading.Lock8å
_RLockthreading._RLock"builtins.object*‘
acquirethreading._RLock.acquire"
builtins.bool"builtins.bool*.
self$
threading._RLock"threading._RLock*.
blocking
builtins.bool"builtins.bool */
timeout 
builtins.float"builtins.float *]
releasethreading._RLock.release"
None*.
self$
threading._RLock"threading._RLock*∞
__exit__threading._RLock.__exit__"
None*&$
threading._RLock"threading._RLock*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None8rt
	__enter__threading._RLock.__enter__K
CallableType[builtins.function]&
builtins.function"builtins.function∆
	Conditionthreading.Condition"builtins.object*˘
__init__threading.Condition.__init__"
None*4
self*
threading.Condition"threading.Condition*é
lockÅ
+Union[threading.Lock,threading._RLock,None] 
threading.Lock"threading.Lock$
threading._RLock"threading._RLock
None *x
	__enter__threading.Condition.__enter__"
builtins.bool"builtins.bool*,*
threading.Condition"threading.Condition*π
__exit__threading.Condition.__exit__"
None*,*
threading.Condition"threading.Condition*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*›
acquirethreading.Condition.acquire"
builtins.bool"builtins.bool*4
self*
threading.Condition"threading.Condition*.
blocking
builtins.bool"builtins.bool */
timeout 
builtins.float"builtins.float *f
releasethreading.Condition.release"
None*4
self*
threading.Condition"threading.Condition*—
waitthreading.Condition.wait"
builtins.bool"builtins.bool*4
self*
threading.Condition"threading.Condition*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *‹
wait_forthreading.Condition.wait_for"E
threading._T"
builtins.object"builtins.object"builtins.object*4
self*
threading.Condition"threading.Condition*Z
	predicateK
CallableType[builtins.function]&
builtins.function"builtins.function*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ã
notifythreading.Condition.notify"
None*4
self*
threading.Condition"threading.Condition*%
n
builtins.int"builtins.int *l

notify_allthreading.Condition.notify_all"
None*4
self*
threading.Condition"threading.Condition*j
	notifyAllthreading.Condition.notifyAll"
None*4
self*
threading.Condition"threading.Condition®

	Semaphorethreading.Semaphore"builtins.object*ì
__init__threading.Semaphore.__init__"
None*4
self*
threading.Semaphore"threading.Semaphore*)
value
builtins.int"builtins.int *π
__exit__threading.Semaphore.__exit__"
None*,*
threading.Semaphore"threading.Semaphore*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*á
acquirethreading.Semaphore.acquire"
builtins.bool"builtins.bool*4
self*
threading.Semaphore"threading.Semaphore*.
blocking
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ï
	__enter__threading.Semaphore.__enter__"
builtins.bool"builtins.bool*,*
threading.Semaphore"threading.Semaphore*"
builtins.bool"builtins.bool *NJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *f
releasethreading.Semaphore.release"
None*4
self*
threading.Semaphore"threading.SemaphorerB
_valuethreading.Semaphore._value
builtins.int"builtins.intC
BoundedSemaphorethreading.BoundedSemaphore"threading.Semaphore˚
Eventthreading.Event"builtins.object*n
is_setthreading.Event.is_set"
builtins.bool"builtins.bool*,
self"
threading.Event"threading.Event*l
isSetthreading.Event.isSet"
builtins.bool"builtins.bool*,
self"
threading.Event"threading.Event*R
setthreading.Event.set"
None*,
self"
threading.Event"threading.Event*V
clearthreading.Event.clear"
None*,
self"
threading.Event"threading.Event*≈
waitthreading.Event.wait"
builtins.bool"builtins.bool*,
self"
threading.Event"threading.Event*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None ’
Timerthreading.Timer"threading.Thread*¸
__init__threading.Timer.__init__"
None*,
self"
threading.Timer"threading.Timer*.
interval 
builtins.float"builtins.float*Y
functionK
CallableType[builtins.function]&
builtins.function"builtins.function*l
args`
 Union[typing.Iterable[Any],None]0
typing.Iterable[Any]
Any"typing.Iterable
None *§
kwargsï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None *X
cancelthreading.Timer.cancel"
None*,
self"
threading.Timer"threading.TimerrN
argsthreading.Timer.args0
typing.Iterable[Any]
Any"typing.IterablerH
finishedthreading.Timer.finished"
threading.Event"threading.Eventrq
functionthreading.Timer.functionK
CallableType[builtins.function]&
builtins.function"builtins.functionrF
intervalthreading.Timer.interval 
builtins.float"builtins.floatr{
kwargsthreading.Timer.kwargsY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MappingÊ	
Barrierthreading.Barrier"builtins.object*ã
partiesthreading.Barrier.parties"
builtins.int"builtins.int*0
self&
threading.Barrier"threading.Barrier0:builtins.property`*è
	n_waitingthreading.Barrier.n_waiting"
builtins.int"builtins.int*0
self&
threading.Barrier"threading.Barrier0:builtins.property`*ã
brokenthreading.Barrier.broken"
builtins.bool"builtins.bool*0
self&
threading.Barrier"threading.Barrier0:builtins.property`*Ä
__init__threading.Barrier.__init__"
None*0
self&
threading.Barrier"threading.Barrier*)
parties
builtins.int"builtins.int*ï
actionÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *…
waitthreading.Barrier.wait"
builtins.int"builtins.int*0
self&
threading.Barrier"threading.Barrier*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *\
resetthreading.Barrier.reset"
None*0
self&
threading.Barrier"threading.Barrier*\
abortthreading.Barrier.abort"
None*0
self&
threading.Barrier"threading.BarrierI
BrokenBarrierErrorthreading.BrokenBarrierError"builtins.RuntimeErrorD
active_countthreading.active_count"
builtins.int"builtins.intB
activeCountthreading.activeCount"
builtins.int"builtins.intP
current_threadthreading.current_thread"$
threading.Thread"threading.ThreadN
currentThreadthreading.currentThread"$
threading.Thread"threading.Thread>
	get_identthreading.get_ident"
builtins.int"builtins.intx
	enumeratethreading.enumerate"V
builtins.list[threading.Thread]$
threading.Thread"threading.Thread"builtins.listJ
main_threadthreading.main_thread"$
threading.Thread"threading.ThreadD
get_native_id_thread.get_native_id"
builtins.int"builtins.int 
settracethreading.settrace"
None*ü
funcî
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"_typeshed.TraceFunctionó

setprofilethreading.setprofile"
None*Ë
func›
6Union[TypeAlias[CallableType[builtins.function]],None]ñ
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"_typeshed.ProfileFunction
Nonej

stack_sizethreading.stack_size"
builtins.int"builtins.int*(
size
builtins.int"builtins.int *Ö
__annotations__threading.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*h
__all__threading.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*à
_profile_hookthreading._profile_hook›
6Union[TypeAlias[CallableType[builtins.function]],None]ñ
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"_typeshed.ProfileFunction
None*F
TIMEOUT_MAXthreading.TIMEOUT_MAX 
builtins.float"builtins.float*o

excepthookthreading.excepthookK
CallableType[builtins.function]&
builtins.function"builtins.function