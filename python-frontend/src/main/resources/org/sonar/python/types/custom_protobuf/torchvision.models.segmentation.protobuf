
torchvision.models.segmentationÅ
	DeepLabV33torchvision.models.segmentation.deeplabv3.DeepLabV3"?torchvision.models.segmentation._utils._SimpleSegmentationModelË
DeepLabHead5torchvision.models.segmentation.deeplabv3.DeepLabHead"builtins.object*ê
__init__>torchvision.models.segmentation.deeplabv3.DeepLabHead.__init__"
None*x
selfn
5torchvision.models.segmentation.deeplabv3.DeepLabHead"5torchvision.models.segmentation.deeplabv3.DeepLabHead*-
in_channels
builtins.int"builtins.int*-
num_classes
builtins.int"builtins.int*b
atrous_ratesN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence ¢
ASPPConv2torchvision.models.segmentation.deeplabv3.ASPPConv"builtins.object*–
__init__;torchvision.models.segmentation.deeplabv3.ASPPConv.__init__"
None*r
selfh
2torchvision.models.segmentation.deeplabv3.ASPPConv"2torchvision.models.segmentation.deeplabv3.ASPPConv*-
in_channels
builtins.int"builtins.int*.
out_channels
builtins.int"builtins.int**
dilation
builtins.int"builtins.intç
ASPPPooling5torchvision.models.segmentation.deeplabv3.ASPPPooling"builtins.object*≠
__init__>torchvision.models.segmentation.deeplabv3.ASPPPooling.__init__"
None*x
selfn
5torchvision.models.segmentation.deeplabv3.ASPPPooling"5torchvision.models.segmentation.deeplabv3.ASPPPooling*-
in_channels
builtins.int"builtins.int*.
out_channels
builtins.int"builtins.int*Ö
forward=torchvision.models.segmentation.deeplabv3.ASPPPooling.forward"
torch.Tensor"torch.Tensor*x
selfn
5torchvision.models.segmentation.deeplabv3.ASPPPooling"5torchvision.models.segmentation.deeplabv3.ASPPPooling*#
x
torch.Tensor"torch.Tensor‹
ASPP.torchvision.models.segmentation.deeplabv3.ASPP"torch.nn.modules.module.Module*¸
__init__7torchvision.models.segmentation.deeplabv3.ASPP.__init__"
None*j
self`
.torchvision.models.segmentation.deeplabv3.ASPP".torchvision.models.segmentation.deeplabv3.ASPP*-
in_channels
builtins.int"builtins.int*`
atrous_ratesN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence*0
out_channels
builtins.int"builtins.int *
forward6torchvision.models.segmentation.deeplabv3.ASPP.forward"
torch.Tensor"torch.Tensor*j
self`
.torchvision.models.segmentation.deeplabv3.ASPP".torchvision.models.segmentation.deeplabv3.ASPP*#
x
torch.Tensor"torch.TensorrF
convs4torchvision.models.segmentation.deeplabv3.ASPP.convs
AnyrJ
project6torchvision.models.segmentation.deeplabv3.ASPP.project
AnyÓ
DeepLabV3_ResNet50_WeightsDtorchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet50_Weights"#torchvision.models._api.WeightsEnumHrÄ
COCO_WITH_VOC_LABELS_V1\torchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet50_Weights.COCO_WITH_VOC_LABELS_V1
Anyr`
DEFAULTLtorchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet50_Weights.DEFAULT
AnyÚ
DeepLabV3_ResNet101_WeightsEtorchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet101_Weights"#torchvision.models._api.WeightsEnumHrÅ
COCO_WITH_VOC_LABELS_V1]torchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet101_Weights.COCO_WITH_VOC_LABELS_V1
Anyra
DEFAULTMtorchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet101_Weights.DEFAULT
Anyñ
$DeepLabV3_MobileNet_V3_Large_WeightsNtorchvision.models.segmentation.deeplabv3.DeepLabV3_MobileNet_V3_Large_Weights"#torchvision.models._api.WeightsEnumHrä
COCO_WITH_VOC_LABELS_V1ftorchvision.models.segmentation.deeplabv3.DeepLabV3_MobileNet_V3_Large_Weights.COCO_WITH_VOC_LABELS_V1
Anyrj
DEFAULTVtorchvision.models.segmentation.deeplabv3.DeepLabV3_MobileNet_V3_Large_Weights.DEFAULT
Anyo
FCN'torchvision.models.segmentation.fcn.FCN"?torchvision.models.segmentation._utils._SimpleSegmentationModel’
FCNHead+torchvision.models.segmentation.fcn.FCNHead"builtins.object*ã
__init__4torchvision.models.segmentation.fcn.FCNHead.__init__"
None*d
selfZ
+torchvision.models.segmentation.fcn.FCNHead"+torchvision.models.segmentation.fcn.FCNHead*-
in_channels
builtins.int"builtins.int**
channels
builtins.int"builtins.int√
FCN_ResNet50_Weights8torchvision.models.segmentation.fcn.FCN_ResNet50_Weights"#torchvision.models._api.WeightsEnumHrt
COCO_WITH_VOC_LABELS_V1Ptorchvision.models.segmentation.fcn.FCN_ResNet50_Weights.COCO_WITH_VOC_LABELS_V1
AnyrT
DEFAULT@torchvision.models.segmentation.fcn.FCN_ResNet50_Weights.DEFAULT
Any«
FCN_ResNet101_Weights9torchvision.models.segmentation.fcn.FCN_ResNet101_Weights"#torchvision.models._api.WeightsEnumHru
COCO_WITH_VOC_LABELS_V1Qtorchvision.models.segmentation.fcn.FCN_ResNet101_Weights.COCO_WITH_VOC_LABELS_V1
AnyrU
DEFAULTAtorchvision.models.segmentation.fcn.FCN_ResNet101_Weights.DEFAULT
Anyè
LRASPP-torchvision.models.segmentation.lraspp.LRASPP"torch.nn.modules.module.Module* 
__init__6torchvision.models.segmentation.lraspp.LRASPP.__init__"
None*h
self^
-torchvision.models.segmentation.lraspp.LRASPP"-torchvision.models.segmentation.lraspp.LRASPP*N
backbone@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*.
low_channels
builtins.int"builtins.int*/
high_channels
builtins.int"builtins.int*-
num_classes
builtins.int"builtins.int*2
inter_channels
builtins.int"builtins.int * 
forward5torchvision.models.segmentation.lraspp.LRASPP.forward"u
(builtins.dict[builtins.str,torch.Tensor]
builtins.str"builtins.str
torch.Tensor"torch.Tensor"builtins.dict*h
self^
-torchvision.models.segmentation.lraspp.LRASPP"-torchvision.models.segmentation.lraspp.LRASPP*'
input
torch.Tensor"torch.TensorrK
backbone6torchvision.models.segmentation.lraspp.LRASPP.backbone
AnyrO

classifier8torchvision.models.segmentation.lraspp.LRASPP.classifier
Anyé	

LRASPPHead1torchvision.models.segmentation.lraspp.LRASPPHead"torch.nn.modules.module.Module*Ñ
__init__:torchvision.models.segmentation.lraspp.LRASPPHead.__init__"
None*p
selff
1torchvision.models.segmentation.lraspp.LRASPPHead"1torchvision.models.segmentation.lraspp.LRASPPHead*.
low_channels
builtins.int"builtins.int*/
high_channels
builtins.int"builtins.int*-
num_classes
builtins.int"builtins.int*0
inter_channels
builtins.int"builtins.int*◊
forward9torchvision.models.segmentation.lraspp.LRASPPHead.forward"
torch.Tensor"torch.Tensor*p
selff
1torchvision.models.segmentation.lraspp.LRASPPHead"1torchvision.models.segmentation.lraspp.LRASPPHead*Ä
inputu
(builtins.dict[builtins.str,torch.Tensor]
builtins.str"builtins.str
torch.Tensor"torch.Tensor"builtins.dictrE
cbr5torchvision.models.segmentation.lraspp.LRASPPHead.cbr
AnyrI
scale7torchvision.models.segmentation.lraspp.LRASPPHead.scale
Anyr[
low_classifier@torchvision.models.segmentation.lraspp.LRASPPHead.low_classifier
Anyr]
high_classifierAtorchvision.models.segmentation.lraspp.LRASPPHead.high_classifier
AnyÅ
!LRASPP_MobileNet_V3_Large_WeightsHtorchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights"#torchvision.models._api.WeightsEnumHrÑ
COCO_WITH_VOC_LABELS_V1`torchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights.COCO_WITH_VOC_LABELS_V1
Anyrd
DEFAULTPtorchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights.DEFAULT
AnyÔ
deeplabv3_resnet50<torchvision.models.segmentation.deeplabv3.deeplabv3_resnet50"j
3torchvision.models.segmentation.deeplabv3.DeepLabV3"3torchvision.models.segmentation.deeplabv3.DeepLabV3*˝
weightsÌ
PUnion[torchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet50_Weights,None]å
Dtorchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet50_Weights"Dtorchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet50_Weights
None *.
progress
builtins.bool"builtins.bool *W
num_classesD
Union[builtins.int,None]
builtins.int"builtins.int
None *W
aux_lossG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *∑
weights_backboneû
6Union[torchvision.models.resnet.ResNet50_Weights,None]X
*torchvision.models.resnet.ResNet50_Weights"*torchvision.models.resnet.ResNet50_Weights
None *
kwargs
Any˜
deeplabv3_resnet101=torchvision.models.segmentation.deeplabv3.deeplabv3_resnet101"j
3torchvision.models.segmentation.deeplabv3.DeepLabV3"3torchvision.models.segmentation.deeplabv3.DeepLabV3*Ä
weights
QUnion[torchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet101_Weights,None]é
Etorchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet101_Weights"Etorchvision.models.segmentation.deeplabv3.DeepLabV3_ResNet101_Weights
None *.
progress
builtins.bool"builtins.bool *W
num_classesD
Union[builtins.int,None]
builtins.int"builtins.int
None *W
aux_lossG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *∫
weights_backbone°
7Union[torchvision.models.resnet.ResNet101_Weights,None]Z
+torchvision.models.resnet.ResNet101_Weights"+torchvision.models.resnet.ResNet101_Weights
None *
kwargs
AnyŒ
deeplabv3_mobilenet_v3_largeFtorchvision.models.segmentation.deeplabv3.deeplabv3_mobilenet_v3_large"j
3torchvision.models.segmentation.deeplabv3.DeepLabV3"3torchvision.models.segmentation.deeplabv3.DeepLabV3*õ
weightsã
ZUnion[torchvision.models.segmentation.deeplabv3.DeepLabV3_MobileNet_V3_Large_Weights,None]†
Ntorchvision.models.segmentation.deeplabv3.DeepLabV3_MobileNet_V3_Large_Weights"Ntorchvision.models.segmentation.deeplabv3.DeepLabV3_MobileNet_V3_Large_Weights
None *.
progress
builtins.bool"builtins.bool *W
num_classesD
Union[builtins.int,None]
builtins.int"builtins.int
None *W
aux_lossG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *‰
weights_backboneÀ
EUnion[torchvision.models.mobilenetv3.MobileNet_V3_Large_Weights,None]v
9torchvision.models.mobilenetv3.MobileNet_V3_Large_Weights"9torchvision.models.mobilenetv3.MobileNet_V3_Large_Weights
None *
kwargs
Any†
fcn_resnet500torchvision.models.segmentation.fcn.fcn_resnet50"R
'torchvision.models.segmentation.fcn.FCN"'torchvision.models.segmentation.fcn.FCN*ÿ
weights»
DUnion[torchvision.models.segmentation.fcn.FCN_ResNet50_Weights,None]t
8torchvision.models.segmentation.fcn.FCN_ResNet50_Weights"8torchvision.models.segmentation.fcn.FCN_ResNet50_Weights
None *.
progress
builtins.bool"builtins.bool *W
num_classesD
Union[builtins.int,None]
builtins.int"builtins.int
None *W
aux_lossG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *∑
weights_backboneû
6Union[torchvision.models.resnet.ResNet50_Weights,None]X
*torchvision.models.resnet.ResNet50_Weights"*torchvision.models.resnet.ResNet50_Weights
None *
kwargs
Any®
fcn_resnet1011torchvision.models.segmentation.fcn.fcn_resnet101"R
'torchvision.models.segmentation.fcn.FCN"'torchvision.models.segmentation.fcn.FCN*€
weightsÀ
EUnion[torchvision.models.segmentation.fcn.FCN_ResNet101_Weights,None]v
9torchvision.models.segmentation.fcn.FCN_ResNet101_Weights"9torchvision.models.segmentation.fcn.FCN_ResNet101_Weights
None *.
progress
builtins.bool"builtins.bool *W
num_classesD
Union[builtins.int,None]
builtins.int"builtins.int
None *W
aux_lossG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *∫
weights_backbone°
7Union[torchvision.models.resnet.ResNet101_Weights,None]Z
+torchvision.models.resnet.ResNet101_Weights"+torchvision.models.resnet.ResNet101_Weights
None *
kwargs
AnyŒ
lraspp_mobilenet_v3_large@torchvision.models.segmentation.lraspp.lraspp_mobilenet_v3_large"^
-torchvision.models.segmentation.lraspp.LRASPP"-torchvision.models.segmentation.lraspp.LRASPP*â
weights˘
TUnion[torchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights,None]î
Htorchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights"Htorchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights
None *.
progress
builtins.bool"builtins.bool *W
num_classesD
Union[builtins.int,None]
builtins.int"builtins.int
None *‰
weights_backboneÀ
EUnion[torchvision.models.mobilenetv3.MobileNet_V3_Large_Weights,None]v
9torchvision.models.mobilenetv3.MobileNet_V3_Large_Weights"9torchvision.models.mobilenetv3.MobileNet_V3_Large_Weights
None *
kwargs
Any*Ä
__path__(torchvision.models.segmentation.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*õ
__annotations__/torchvision.models.segmentation.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict