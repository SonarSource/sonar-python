
lib2to3.fixes.fix_imports»

FixImports$lib2to3.fixes.fix_imports.FixImports"lib2to3.fixer_base.BaseFix*n
build_pattern2lib2to3.fixes.fix_imports.FixImports.build_pattern*
selfz38z39z310z311z312z313z314*Ê
compile_pattern4lib2to3.fixes.fix_imports.FixImports.compile_pattern"
None*V
selfL
$lib2to3.fixes.fix_imports.FixImports"$lib2to3.fixes.fix_imports.FixImportsz38z39z310z311z312z313z314*h
match*lib2to3.fixes.fix_imports.FixImports.match*
self*
nodez38z39z310z311z312z313z314*ñ

start_tree/lib2to3.fixes.fix_imports.FixImports.start_tree"
None*V
selfL
$lib2to3.fixes.fix_imports.FixImports"$lib2to3.fixes.fix_imports.FixImports*4
tree*
lib2to3.pytree.Node"lib2to3.pytree.Node*ø
filenameé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz38z39z310z311z312z313z314*ç
	transform.lib2to3.fixes.fix_imports.FixImports.transform"
None*V
selfL
$lib2to3.fixes.fix_imports.FixImports"$lib2to3.fixes.fix_imports.FixImports*
node
Any*
results
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314r 
BM_compatible2lib2to3.fixes.fix_imports.FixImports.BM_compatible:
Literal[builtins.bool]	
builtins.bool"builtins.bool*38*39*310*311*312*313*314rÏ
mapping,lib2to3.fixes.fix_imports.FixImports.mappingu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*38*39*310*311*312*313*314rÏ
replace,lib2to3.fixes.fix_imports.FixImports.replaceu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*38*39*310*311*312*313*314`

alternates$lib2to3.fixes.fix_imports.alternates*
membersz38z39z310z311z312z313z314á
build_pattern'lib2to3.fixes.fix_imports.build_pattern"n
(typing.Generator[builtins.str,None,None]
builtins.str"builtins.str
None
None"typing.Generator*
mapping
Any z38z39z310z311z312z313z314*¶
__annotations__)lib2to3.fixes.fix_imports.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*Ä
MAPPING!lib2to3.fixes.fix_imports.MAPPINGu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*38*39*310*311*312*313*314