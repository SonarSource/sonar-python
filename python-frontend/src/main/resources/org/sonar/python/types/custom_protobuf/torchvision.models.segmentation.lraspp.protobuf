
&torchvision.models.segmentation.lrasppè
LRASPP-torchvision.models.segmentation.lraspp.LRASPP"torch.nn.modules.module.Module* 
__init__6torchvision.models.segmentation.lraspp.LRASPP.__init__"
None*h
self^
-torchvision.models.segmentation.lraspp.LRASPP"-torchvision.models.segmentation.lraspp.LRASPP*N
backbone@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*.
low_channels
builtins.int"builtins.int*/
high_channels
builtins.int"builtins.int*-
num_classes
builtins.int"builtins.int*2
inter_channels
builtins.int"builtins.int * 
forward5torchvision.models.segmentation.lraspp.LRASPP.forward"u
(builtins.dict[builtins.str,torch.Tensor]
builtins.str"builtins.str
torch.Tensor"torch.Tensor"builtins.dict*h
self^
-torchvision.models.segmentation.lraspp.LRASPP"-torchvision.models.segmentation.lraspp.LRASPP*'
input
torch.Tensor"torch.TensorrK
backbone6torchvision.models.segmentation.lraspp.LRASPP.backbone
AnyrO

classifier8torchvision.models.segmentation.lraspp.LRASPP.classifier
Anyé	

LRASPPHead1torchvision.models.segmentation.lraspp.LRASPPHead"torch.nn.modules.module.Module*Ñ
__init__:torchvision.models.segmentation.lraspp.LRASPPHead.__init__"
None*p
selff
1torchvision.models.segmentation.lraspp.LRASPPHead"1torchvision.models.segmentation.lraspp.LRASPPHead*.
low_channels
builtins.int"builtins.int*/
high_channels
builtins.int"builtins.int*-
num_classes
builtins.int"builtins.int*0
inter_channels
builtins.int"builtins.int*◊
forward9torchvision.models.segmentation.lraspp.LRASPPHead.forward"
torch.Tensor"torch.Tensor*p
selff
1torchvision.models.segmentation.lraspp.LRASPPHead"1torchvision.models.segmentation.lraspp.LRASPPHead*Ä
inputu
(builtins.dict[builtins.str,torch.Tensor]
builtins.str"builtins.str
torch.Tensor"torch.Tensor"builtins.dictrE
cbr5torchvision.models.segmentation.lraspp.LRASPPHead.cbr
AnyrI
scale7torchvision.models.segmentation.lraspp.LRASPPHead.scale
Anyr[
low_classifier@torchvision.models.segmentation.lraspp.LRASPPHead.low_classifier
Anyr]
high_classifierAtorchvision.models.segmentation.lraspp.LRASPPHead.high_classifier
AnyÅ
!LRASPP_MobileNet_V3_Large_WeightsHtorchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights"#torchvision.models._api.WeightsEnumHrÑ
COCO_WITH_VOC_LABELS_V1`torchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights.COCO_WITH_VOC_LABELS_V1
Anyrd
DEFAULTPtorchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights.DEFAULT
AnyŒ
lraspp_mobilenet_v3_large@torchvision.models.segmentation.lraspp.lraspp_mobilenet_v3_large"^
-torchvision.models.segmentation.lraspp.LRASPP"-torchvision.models.segmentation.lraspp.LRASPP*â
weights˘
TUnion[torchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights,None]î
Htorchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights"Htorchvision.models.segmentation.lraspp.LRASPP_MobileNet_V3_Large_Weights
None *.
progress
builtins.bool"builtins.bool *W
num_classesD
Union[builtins.int,None]
builtins.int"builtins.int
None *‰
weights_backboneÀ
EUnion[torchvision.models.mobilenetv3.MobileNet_V3_Large_Weights,None]v
9torchvision.models.mobilenetv3.MobileNet_V3_Large_Weights"9torchvision.models.mobilenetv3.MobileNet_V3_Large_Weights
None *
kwargs
Any*¢
__annotations__6torchvision.models.segmentation.lraspp.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict