
sqlalchemy.engine.defaultπê
DefaultDialect(sqlalchemy.engine.default.DefaultDialect"$sqlalchemy.engine.interfaces.Dialect*Ü	
__init__1sqlalchemy.engine.default.DefaultDialect.__init__"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*5
convert_unicode
builtins.bool"builtins.bool *,
encoding
builtins.str"builtins.str *m

paramstyle[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
dbapi[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *u
implicit_returning[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *4
case_sensitive
builtins.bool"builtins.bool *z
supports_native_boolean[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *x
max_identifier_length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *o
label_length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
compiler_linting
Any *9
server_side_cursors
builtins.bool"builtins.bool *
kwargs
Anyz38z39z310z311z312z313*ê
dialect_description<sqlalchemy.engine.default.DefaultDialect.dialect_description*
self0:builtins.property`z38z39z310z311z312z313*™
 supports_sane_rowcount_returningIsqlalchemy.engine.default.DefaultDialect.supports_sane_rowcount_returning*
self0:builtins.property`z38z39z310z311z312z313*ë
get_pool_class7sqlalchemy.engine.default.DefaultDialect.get_pool_class*
cls*
url0:builtins.classmethodpz38z39z310z311z312z313*à
get_dialect_pool_class?sqlalchemy.engine.default.DefaultDialect.get_dialect_pool_class*
self*
urlz38z39z310z311z312z313*™
load_provisioning:sqlalchemy.engine.default.DefaultDialect.load_provisioning"
None*ò
clsé
.Type[sqlalchemy.engine.default.DefaultDialect]T
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect"type0:builtins.classmethodpz38z39z310z311z312z313*‡

initialize3sqlalchemy.engine.default.DefaultDialect.initialize"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*

connection
Anyz38z39z310z311z312z313*«

on_connect3sqlalchemy.engine.default.DefaultDialect.on_connect"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialectz38z39z310z311z312z313*ô
get_default_isolation_levelDsqlalchemy.engine.default.DefaultDialect.get_default_isolation_level*
self*

dbapi_connz38z39z310z311z312z313*~
type_descriptor8sqlalchemy.engine.default.DefaultDialect.type_descriptor*
self*
typeobjz38z39z310z311z312z313*˙
	has_index2sqlalchemy.engine.default.DefaultDialect.has_index"
Any*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*

connection
Any*

table_name
Any*

index_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*Ì
validate_identifier<sqlalchemy.engine.default.DefaultDialect.validate_identifier"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*
ident
Anyz38z39z310z311z312z313*y
connect0sqlalchemy.engine.default.DefaultDialect.connect*
self*	
cargs*
cparamsz38z39z310z311z312z313*Ç
create_connect_args<sqlalchemy.engine.default.DefaultDialect.create_connect_args*
self*
urlz38z39z310z311z312z313*ì
set_engine_execution_optionsEsqlalchemy.engine.default.DefaultDialect.set_engine_execution_options"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*
engine
Any*
opts
Anyz38z39z310z311z312z313*ü
 set_connection_execution_optionsIsqlalchemy.engine.default.DefaultDialect.set_connection_execution_options"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*

connection
Any*
opts
Anyz38z39z310z311z312z313*‚
do_begin1sqlalchemy.engine.default.DefaultDialect.do_begin"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*
dbapi_connection
Anyz38z39z310z311z312z313*Ë
do_rollback4sqlalchemy.engine.default.DefaultDialect.do_rollback"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*
dbapi_connection
Anyz38z39z310z311z312z313*‰
	do_commit2sqlalchemy.engine.default.DefaultDialect.do_commit"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*
dbapi_connection
Anyz38z39z310z311z312z313*‚
do_close1sqlalchemy.engine.default.DefaultDialect.do_close"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*
dbapi_connection
Anyz38z39z310z311z312z313*w
do_ping0sqlalchemy.engine.default.DefaultDialect.do_ping*
self*
dbapi_connectionz38z39z310z311z312z313*g

create_xid3sqlalchemy.engine.default.DefaultDialect.create_xid*
selfz38z39z310z311z312z313*˜
do_savepoint5sqlalchemy.engine.default.DefaultDialect.do_savepoint"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*

connection
Any*
name
Anyz38z39z310z311z312z313*è
do_rollback_to_savepointAsqlalchemy.engine.default.DefaultDialect.do_rollback_to_savepoint"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*

connection
Any*
name
Anyz38z39z310z311z312z313*á
do_release_savepoint=sqlalchemy.engine.default.DefaultDialect.do_release_savepoint"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*

connection
Any*
name
Anyz38z39z310z311z312z313*Å
do_executemany7sqlalchemy.engine.default.DefaultDialect.do_executemany"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*
cursor
Any*
	statement
Any*

parameters
Any*j
context[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*˘

do_execute3sqlalchemy.engine.default.DefaultDialect.do_execute"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*
cursor
Any*
	statement
Any*

parameters
Any*j
context[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*Ù
do_execute_no_params=sqlalchemy.engine.default.DefaultDialect.do_execute_no_params"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*
cursor
Any*
	statement
Any*j
context[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*ê
is_disconnect6sqlalchemy.engine.default.DefaultDialect.is_disconnect*
self*
e*

connection*

cursorz38z39z310z311z312z313*ˆ
reset_isolation_level>sqlalchemy.engine.default.DefaultDialect.reset_isolation_level"
None*^
selfT
(sqlalchemy.engine.default.DefaultDialect"(sqlalchemy.engine.default.DefaultDialect*

dbapi_conn
Anyz38z39z310z311z312z313*y
normalize_name7sqlalchemy.engine.default.DefaultDialect.normalize_name*
self*
namez38z39z310z311z312z313*}
denormalize_name9sqlalchemy.engine.default.DefaultDialect.denormalize_name*
self*
namez38z39z310z311z312z313*ç
get_driver_connection>sqlalchemy.engine.default.DefaultDialect.get_driver_connection*
self*

connectionz38z39z310z311z312z313j38j39j310j311j312j313rã
execution_ctx_cls:sqlalchemy.engine.default.DefaultDialect.execution_ctx_clsù
3Type[sqlalchemy.engine.interfaces.ExecutionContext]^
-sqlalchemy.engine.interfaces.ExecutionContext"-sqlalchemy.engine.interfaces.ExecutionContext"type*38*39*310*311*312*313rv
statement_compiler;sqlalchemy.engine.default.DefaultDialect.statement_compiler
Any*38*39*310*311*312*313rj
ddl_compiler5sqlalchemy.engine.default.DefaultDialect.ddl_compiler
Any*38*39*310*311*312*313rl
type_compiler6sqlalchemy.engine.default.DefaultDialect.type_compiler
Any*38*39*310*311*312*313rb
preparer1sqlalchemy.engine.default.DefaultDialect.preparer
Any*38*39*310*311*312*313rÖ
supports_alter7sqlalchemy.engine.default.DefaultDialect.supports_alter
builtins.bool"builtins.bool*38*39*310*311*312*313rã
supports_comments:sqlalchemy.engine.default.DefaultDialect.supports_comments
builtins.bool"builtins.bool*38*39*310*311*312*313rá
inline_comments8sqlalchemy.engine.default.DefaultDialect.inline_comments
builtins.bool"builtins.bool*38*39*310*311*312*313rã
use_setinputsizes:sqlalchemy.engine.default.DefaultDialect.use_setinputsizes
builtins.bool"builtins.bool*38*39*310*311*312*313rô
supports_statement_cacheAsqlalchemy.engine.default.DefaultDialect.supports_statement_cache
builtins.bool"builtins.bool*38*39*310*311*312*313rë
default_sequence_base>sqlalchemy.engine.default.DefaultDialect.default_sequence_base
builtins.int"builtins.int*38*39*310*311*312*313rÄ
execute_sequence_format@sqlalchemy.engine.default.DefaultDialect.execute_sequence_format
Any*38*39*310*311*312*313râ
supports_schemas9sqlalchemy.engine.default.DefaultDialect.supports_schemas
builtins.bool"builtins.bool*38*39*310*311*312*313rÖ
supports_views7sqlalchemy.engine.default.DefaultDialect.supports_views
builtins.bool"builtins.bool*38*39*310*311*312*313rç
supports_sequences;sqlalchemy.engine.default.DefaultDialect.supports_sequences
builtins.bool"builtins.bool*38*39*310*311*312*313rç
sequences_optional;sqlalchemy.engine.default.DefaultDialect.sequences_optional
builtins.bool"builtins.bool*38*39*310*311*312*313r≠
"preexecute_autoincrement_sequencesKsqlalchemy.engine.default.DefaultDialect.preexecute_autoincrement_sequences
builtins.bool"builtins.bool*38*39*310*311*312*313rõ
supports_identity_columnsBsqlalchemy.engine.default.DefaultDialect.supports_identity_columns
builtins.bool"builtins.bool*38*39*310*311*312*313rè
postfetch_lastrowid<sqlalchemy.engine.default.DefaultDialect.postfetch_lastrowid
builtins.bool"builtins.bool*38*39*310*311*312*313rç
implicit_returning;sqlalchemy.engine.default.DefaultDialect.implicit_returning
builtins.bool"builtins.bool*38*39*310*311*312*313rÖ
full_returning7sqlalchemy.engine.default.DefaultDialect.full_returning
builtins.bool"builtins.bool*38*39*310*311*312*313r°
insert_executemany_returningEsqlalchemy.engine.default.DefaultDialect.insert_executemany_returning
builtins.bool"builtins.bool*38*39*310*311*312*313rç
cte_follows_insert;sqlalchemy.engine.default.DefaultDialect.cte_follows_insert
builtins.bool"builtins.bool*38*39*310*311*312*313rë
supports_native_enum=sqlalchemy.engine.default.DefaultDialect.supports_native_enum
builtins.bool"builtins.bool*38*39*310*311*312*313ró
supports_native_boolean@sqlalchemy.engine.default.DefaultDialect.supports_native_boolean
builtins.bool"builtins.bool*38*39*310*311*312*313rØ
#non_native_boolean_check_constraintLsqlalchemy.engine.default.DefaultDialect.non_native_boolean_check_constraint
builtins.bool"builtins.bool*38*39*310*311*312*313r•
supports_simple_order_by_labelGsqlalchemy.engine.default.DefaultDialect.supports_simple_order_by_label
builtins.bool"builtins.bool*38*39*310*311*312*313rá
tuple_in_values8sqlalchemy.engine.default.DefaultDialect.tuple_in_values
builtins.bool"builtins.bool*38*39*310*311*312*313rÜ
connection_characteristicsCsqlalchemy.engine.default.DefaultDialect.connection_characteristics
Any*38*39*310*311*312*313rx
engine_config_types<sqlalchemy.engine.default.DefaultDialect.engine_config_types
Any*38*39*310*311*312*313ró
supports_native_decimal@sqlalchemy.engine.default.DefaultDialect.supports_native_decimal
builtins.bool"builtins.bool*38*39*310*311*312*313rü
supports_unicode_statementsDsqlalchemy.engine.default.DefaultDialect.supports_unicode_statements
builtins.bool"builtins.bool*38*39*310*311*312*313rï
supports_unicode_binds?sqlalchemy.engine.default.DefaultDialect.supports_unicode_binds
builtins.bool"builtins.bool*38*39*310*311*312*313rÄ
returns_unicode_strings@sqlalchemy.engine.default.DefaultDialect.returns_unicode_strings
Any*38*39*310*311*312*313rz
description_encoding=sqlalchemy.engine.default.DefaultDialect.description_encoding
Any*38*39*310*311*312*313ro
name-sqlalchemy.engine.default.DefaultDialect.name
builtins.str"builtins.str*38*39*310*311*312*313rë
max_identifier_length>sqlalchemy.engine.default.DefaultDialect.max_identifier_length
builtins.int"builtins.int*38*39*310*311*312*313rp
isolation_level8sqlalchemy.engine.default.DefaultDialect.isolation_level
Any*38*39*310*311*312*313r|
max_index_name_length>sqlalchemy.engine.default.DefaultDialect.max_index_name_length
Any*38*39*310*311*312*313rÜ
max_constraint_name_lengthCsqlalchemy.engine.default.DefaultDialect.max_constraint_name_length
Any*38*39*310*311*312*313rï
supports_sane_rowcount?sqlalchemy.engine.default.DefaultDialect.supports_sane_rowcount
builtins.bool"builtins.bool*38*39*310*311*312*313r°
supports_sane_multi_rowcountEsqlalchemy.engine.default.DefaultDialect.supports_sane_multi_rowcount
builtins.bool"builtins.bool*38*39*310*311*312*313rb
colspecs1sqlalchemy.engine.default.DefaultDialect.colspecs
Any*38*39*310*311*312*313rã
default_paramstyle;sqlalchemy.engine.default.DefaultDialect.default_paramstyle
builtins.str"builtins.str*38*39*310*311*312*313ró
supports_default_values@sqlalchemy.engine.default.DefaultDialect.supports_default_values
builtins.bool"builtins.bool*38*39*310*311*312*313rù
supports_default_metavalueCsqlalchemy.engine.default.DefaultDialect.supports_default_metavalue
builtins.bool"builtins.bool*38*39*310*311*312*313rì
supports_empty_insert>sqlalchemy.engine.default.DefaultDialect.supports_empty_insert
builtins.bool"builtins.bool*38*39*310*311*312*313rü
supports_multivalues_insertDsqlalchemy.engine.default.DefaultDialect.supports_multivalues_insert
builtins.bool"builtins.bool*38*39*310*311*312*313rõ
supports_is_distinct_fromBsqlalchemy.engine.default.DefaultDialect.supports_is_distinct_from
builtins.bool"builtins.bool*38*39*310*311*312*313r°
supports_server_side_cursorsEsqlalchemy.engine.default.DefaultDialect.supports_server_side_cursors
builtins.bool"builtins.bool*38*39*310*311*312*313rè
server_side_cursors<sqlalchemy.engine.default.DefaultDialect.server_side_cursors
builtins.bool"builtins.bool*38*39*310*311*312*313rï
supports_for_update_of?sqlalchemy.engine.default.DefaultDialect.supports_for_update_of
builtins.bool"builtins.bool*38*39*310*311*312*313rx
server_version_info<sqlalchemy.engine.default.DefaultDialect.server_version_info
Any*38*39*310*311*312*313rx
default_schema_name<sqlalchemy.engine.default.DefaultDialect.default_schema_name
Any*38*39*310*311*312*313rx
construct_arguments<sqlalchemy.engine.default.DefaultDialect.construct_arguments
Any*38*39*310*311*312*313ró
requires_name_normalize@sqlalchemy.engine.default.DefaultDialect.requires_name_normalize
builtins.bool"builtins.bool*38*39*310*311*312*313rv
reflection_options;sqlalchemy.engine.default.DefaultDialect.reflection_options
Any*38*39*310*311*312*313rê
dbapi_exception_translation_mapHsqlalchemy.engine.default.DefaultDialect.dbapi_exception_translation_map
Any*38*39*310*311*312*313ry
is_async1sqlalchemy.engine.default.DefaultDialect.is_async
builtins.bool"builtins.bool*38*39*310*311*312*313rd
	CACHE_HIT2sqlalchemy.engine.default.DefaultDialect.CACHE_HIT
Any*38*39*310*311*312*313rf

CACHE_MISS3sqlalchemy.engine.default.DefaultDialect.CACHE_MISS
Any*38*39*310*311*312*313rr
CACHING_DISABLED9sqlalchemy.engine.default.DefaultDialect.CACHING_DISABLED
Any*38*39*310*311*312*313rj
NO_CACHE_KEY5sqlalchemy.engine.default.DefaultDialect.NO_CACHE_KEY
Any*38*39*310*311*312*313rv
NO_DIALECT_SUPPORT;sqlalchemy.engine.default.DefaultDialect.NO_DIALECT_SUPPORT
Any*38*39*310*311*312*313rÉ
has_terminate6sqlalchemy.engine.default.DefaultDialect.has_terminate
builtins.bool"builtins.bool*38*39*310*311*312*313rp
convert_unicode8sqlalchemy.engine.default.DefaultDialect.convert_unicode
Any*38*39*310*311*312*313rb
encoding1sqlalchemy.engine.default.DefaultDialect.encoding
Any*38*39*310*311*312*313r}

positional3sqlalchemy.engine.default.DefaultDialect.positional
builtins.bool"builtins.bool*38*39*310*311*312*313r\
dbapi.sqlalchemy.engine.default.DefaultDialect.dbapi
Any*38*39*310*311*312*313rf

paramstyle3sqlalchemy.engine.default.DefaultDialect.paramstyle
Any*38*39*310*311*312*313rx
identifier_preparer<sqlalchemy.engine.default.DefaultDialect.identifier_preparer
Any*38*39*310*311*312*313rn
case_sensitive7sqlalchemy.engine.default.DefaultDialect.case_sensitive
Any*38*39*310*311*312*313rj
label_length5sqlalchemy.engine.default.DefaultDialect.label_length
Any*38*39*310*311*312*313rr
compiler_linting9sqlalchemy.engine.default.DefaultDialect.compiler_linting
Any*38*39*310*311*312*313rÄ
default_isolation_level@sqlalchemy.engine.default.DefaultDialect.default_isolation_level
Any*38*39*310*311*312*313Ô
_RendersLiteral)sqlalchemy.engine.default._RendersLiteral"builtins.object*É
literal_processor;sqlalchemy.engine.default._RendersLiteral.literal_processor*
self*
dialectz38z39z310z311z312z313j38j39j310j311j312j313ü
_StrDateTime&sqlalchemy.engine.default._StrDateTime")sqlalchemy.engine.default._RendersLiteral" sqlalchemy.sql.sqltypes.DateTimej38j39j310j311j312j313ì
_StrDate"sqlalchemy.engine.default._StrDate")sqlalchemy.engine.default._RendersLiteral"sqlalchemy.sql.sqltypes.Datej38j39j310j311j312j313ì
_StrTime"sqlalchemy.engine.default._StrTime")sqlalchemy.engine.default._RendersLiteral"sqlalchemy.sql.sqltypes.Timej38j39j310j311j312j313»
StrCompileDialect+sqlalchemy.engine.default.StrCompileDialect"(sqlalchemy.engine.default.DefaultDialectj38j39j310j311j312j313ry
statement_compiler>sqlalchemy.engine.default.StrCompileDialect.statement_compiler
Any*38*39*310*311*312*313rm
ddl_compiler8sqlalchemy.engine.default.StrCompileDialect.ddl_compiler
Any*38*39*310*311*312*313ro
type_compiler9sqlalchemy.engine.default.StrCompileDialect.type_compiler
Any*38*39*310*311*312*313re
preparer4sqlalchemy.engine.default.StrCompileDialect.preparer
Any*38*39*310*311*312*313rú
supports_statement_cacheDsqlalchemy.engine.default.StrCompileDialect.supports_statement_cache
builtins.bool"builtins.bool*38*39*310*311*312*313rû
supports_identity_columnsEsqlalchemy.engine.default.StrCompileDialect.supports_identity_columns
builtins.bool"builtins.bool*38*39*310*311*312*313rê
supports_sequences>sqlalchemy.engine.default.StrCompileDialect.supports_sequences
builtins.bool"builtins.bool*38*39*310*311*312*313rê
sequences_optional>sqlalchemy.engine.default.StrCompileDialect.sequences_optional
builtins.bool"builtins.bool*38*39*310*311*312*313r∞
"preexecute_autoincrement_sequencesNsqlalchemy.engine.default.StrCompileDialect.preexecute_autoincrement_sequences
builtins.bool"builtins.bool*38*39*310*311*312*313rê
implicit_returning>sqlalchemy.engine.default.StrCompileDialect.implicit_returning
builtins.bool"builtins.bool*38*39*310*311*312*313rö
supports_native_booleanCsqlalchemy.engine.default.StrCompileDialect.supports_native_boolean
builtins.bool"builtins.bool*38*39*310*311*312*313r¢
supports_multivalues_insertGsqlalchemy.engine.default.StrCompileDialect.supports_multivalues_insert
builtins.bool"builtins.bool*38*39*310*311*312*313r®
supports_simple_order_by_labelJsqlalchemy.engine.default.StrCompileDialect.supports_simple_order_by_label
builtins.bool"builtins.bool*38*39*310*311*312*313re
colspecs4sqlalchemy.engine.default.StrCompileDialect.colspecs
Any*38*39*310*311*312*313¡9
DefaultExecutionContext1sqlalchemy.engine.default.DefaultExecutionContext"-sqlalchemy.engine.interfaces.ExecutionContext*≥
identifier_preparerEsqlalchemy.engine.default.DefaultExecutionContext.identifier_preparer*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*ô
engine8sqlalchemy.engine.default.DefaultExecutionContext.engine*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*©
postfetch_cols@sqlalchemy.engine.default.DefaultExecutionContext.postfetch_cols*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*ß
prefetch_cols?sqlalchemy.engine.default.DefaultExecutionContext.prefetch_cols*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*õ
returning_cols@sqlalchemy.engine.default.DefaultExecutionContext.returning_cols"
None*p
selff
1sqlalchemy.engine.default.DefaultExecutionContext"1sqlalchemy.engine.default.DefaultExecutionContext0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*ß
no_parameters?sqlalchemy.engine.default.DefaultExecutionContext.no_parameters*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*Ø
should_autocommitCsqlalchemy.engine.default.DefaultExecutionContext.should_autocommit*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*á

connection<sqlalchemy.engine.default.DefaultExecutionContext.connection*
self0:builtins.property`z38z39z310z311z312z313*ó
should_autocommit_textHsqlalchemy.engine.default.DefaultExecutionContext.should_autocommit_text*
self*
	statementz38z39z310z311z312z313*v
create_cursor?sqlalchemy.engine.default.DefaultExecutionContext.create_cursor*
selfz38z39z310z311z312z313*Ü
create_default_cursorGsqlalchemy.engine.default.DefaultExecutionContext.create_default_cursor*
selfz38z39z310z311z312z313*Ä
create_server_side_cursorKsqlalchemy.engine.default.DefaultExecutionContext.create_server_side_cursor"
None*p
selff
1sqlalchemy.engine.default.DefaultExecutionContext"1sqlalchemy.engine.default.DefaultExecutionContextz38z39z310z311z312z313*ﬁ
pre_exec:sqlalchemy.engine.default.DefaultExecutionContext.pre_exec"
None*p
selff
1sqlalchemy.engine.default.DefaultExecutionContext"1sqlalchemy.engine.default.DefaultExecutionContextz38z39z310z311z312z313*í
get_out_parameter_valuesJsqlalchemy.engine.default.DefaultExecutionContext.get_out_parameter_values"
None*p
selff
1sqlalchemy.engine.default.DefaultExecutionContext"1sqlalchemy.engine.default.DefaultExecutionContext*
names
Anyz38z39z310z311z312z313*‡
	post_exec;sqlalchemy.engine.default.DefaultExecutionContext.post_exec"
None*p
selff
1sqlalchemy.engine.default.DefaultExecutionContext"1sqlalchemy.engine.default.DefaultExecutionContextz38z39z310z311z312z313*©
get_result_processorFsqlalchemy.engine.default.DefaultExecutionContext.get_result_processor*
self*	
type_*
colname*
coltypez38z39z310z311z312z313*v
get_lastrowid?sqlalchemy.engine.default.DefaultExecutionContext.get_lastrowid*
selfz38z39z310z311z312z313*ä
handle_dbapi_exceptionHsqlalchemy.engine.default.DefaultExecutionContext.handle_dbapi_exception"
None*p
selff
1sqlalchemy.engine.default.DefaultExecutionContext"1sqlalchemy.engine.default.DefaultExecutionContext*
e
Anyz38z39z310z311z312z313*É
rowcount:sqlalchemy.engine.default.DefaultExecutionContext.rowcount*
self0:builtins.property`z38z39z310z311z312z313*à
supports_sane_rowcountHsqlalchemy.engine.default.DefaultExecutionContext.supports_sane_rowcount*
selfz38z39z310z311z312z313*î
supports_sane_multi_rowcountNsqlalchemy.engine.default.DefaultExecutionContext.supports_sane_multi_rowcount*
selfz38z39z310z311z312z313*ø
inserted_primary_key_rowsKsqlalchemy.engine.default.DefaultExecutionContext.inserted_primary_key_rows*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*Ñ
lastrow_has_defaultsFsqlalchemy.engine.default.DefaultExecutionContext.lastrow_has_defaults*
selfz38z39z310z311z312z313*ª
get_current_parametersHsqlalchemy.engine.default.DefaultExecutionContext.get_current_parameters"
Any*p
selff
1sqlalchemy.engine.default.DefaultExecutionContext"1sqlalchemy.engine.default.DefaultExecutionContext*@
isolate_multiinsert_groups
builtins.bool"builtins.bool z38z39z310z311z312z313*å
get_insert_defaultDsqlalchemy.engine.default.DefaultExecutionContext.get_insert_default*
self*

columnz38z39z310z311z312z313*å
get_update_defaultDsqlalchemy.engine.default.DefaultExecutionContext.get_update_default*
self*

columnz38z39z310z311z312z313j38j39j310j311j312j313rÇ
isinsert:sqlalchemy.engine.default.DefaultExecutionContext.isinsert
builtins.bool"builtins.bool*38*39*310*311*312*313rÇ
isupdate:sqlalchemy.engine.default.DefaultExecutionContext.isupdate
builtins.bool"builtins.bool*38*39*310*311*312*313rÇ
isdelete:sqlalchemy.engine.default.DefaultExecutionContext.isdelete
builtins.bool"builtins.bool*38*39*310*311*312*313rÄ
is_crud9sqlalchemy.engine.default.DefaultExecutionContext.is_crud
builtins.bool"builtins.bool*38*39*310*311*312*313rÄ
is_text9sqlalchemy.engine.default.DefaultExecutionContext.is_text
builtins.bool"builtins.bool*38*39*310*311*312*313r|
isddl7sqlalchemy.engine.default.DefaultExecutionContext.isddl
builtins.bool"builtins.bool*38*39*310*311*312*313rà
executemany=sqlalchemy.engine.default.DefaultExecutionContext.executemany
builtins.bool"builtins.bool*38*39*310*311*312*313rk
compiled:sqlalchemy.engine.default.DefaultExecutionContext.compiled
Any*38*39*310*311*312*313rm
	statement;sqlalchemy.engine.default.DefaultExecutionContext.statement
Any*38*39*310*311*312*313rÉ
result_column_structFsqlalchemy.engine.default.DefaultExecutionContext.result_column_struct
Any*38*39*310*311*312*313rÖ
returned_default_rowsGsqlalchemy.engine.default.DefaultExecutionContext.returned_default_rows
Any*38*39*310*311*312*313r}
execution_optionsCsqlalchemy.engine.default.DefaultExecutionContext.execution_options
Any*38*39*310*311*312*313râ
include_set_input_sizesIsqlalchemy.engine.default.DefaultExecutionContext.include_set_input_sizes
Any*38*39*310*311*312*313râ
exclude_set_input_sizesIsqlalchemy.engine.default.DefaultExecutionContext.exclude_set_input_sizes
Any*38*39*310*311*312*313rÖ
cursor_fetch_strategyGsqlalchemy.engine.default.DefaultExecutionContext.cursor_fetch_strategy
Any*38*39*310*311*312*313rq
cache_stats=sqlalchemy.engine.default.DefaultExecutionContext.cache_stats
Any*38*39*310*311*312*313r}
invoked_statementCsqlalchemy.engine.default.DefaultExecutionContext.invoked_statement
Any*38*39*310*311*312*313rm
	cache_hit;sqlalchemy.engine.default.DefaultExecutionContext.cache_hit
Any*38*39*310*311*312*313r
current_parametersDsqlalchemy.engine.default.DefaultExecutionContext.current_parameters
Any*38*39*310*311*312*313*±
__annotations__)sqlalchemy.engine.default.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*e
AUTOCOMMIT_REGEXP+sqlalchemy.engine.default.AUTOCOMMIT_REGEXP
Any*38*39*310*311*312*313*m
SERVER_SIDE_CURSOR_RE/sqlalchemy.engine.default.SERVER_SIDE_CURSOR_RE
Any*38*39*310*311*312*313*U
	CACHE_HIT#sqlalchemy.engine.default.CACHE_HIT
Any*38*39*310*311*312*313*W

CACHE_MISS$sqlalchemy.engine.default.CACHE_MISS
Any*38*39*310*311*312*313*c
CACHING_DISABLED*sqlalchemy.engine.default.CACHING_DISABLED
Any*38*39*310*311*312*313*[
NO_CACHE_KEY&sqlalchemy.engine.default.NO_CACHE_KEY
Any*38*39*310*311*312*313*g
NO_DIALECT_SUPPORT,sqlalchemy.engine.default.NO_DIALECT_SUPPORT
Any*38*39*310*311*312*313