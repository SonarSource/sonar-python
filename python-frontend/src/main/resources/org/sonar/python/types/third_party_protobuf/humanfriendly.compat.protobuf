
humanfriendly.compatå.

HTMLParserhtml.parser.HTMLParser"_markupbase.ParserBase* 
__init__html.parser.HTMLParser.__init__"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*6
convert_charrefs
builtins.bool"builtins.bool z38z39z310z311z312z313z314*≤
feedhtml.parser.HTMLParser.feed"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*&
data
builtins.str"builtins.strz38z39z310z311z312z313z314*å
closehtml.parser.HTMLParser.close"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParserz38z39z310z311z312z313z314*‡
get_starttag_text(html.parser.HTMLParser.get_starttag_text"D
Union[builtins.str,None]
builtins.str"builtins.str
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParserz38z39z310z311z312z313z314*π
handle_starttag&html.parser.HTMLParser.handle_starttag"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*%
tag
builtins.str"builtins.str*Ô
attrs„
;builtins.list[Tuple[builtins.str,Union[builtins.str,None]]]î
,Tuple[builtins.str,Union[builtins.str,None]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None"builtins.listz38z39z310z311z312z313z314*√
handle_endtag$html.parser.HTMLParser.handle_endtag"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*%
tag
builtins.str"builtins.strz38z39z310z311z312z313z314*ø
handle_startendtag)html.parser.HTMLParser.handle_startendtag"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*%
tag
builtins.str"builtins.str*Ô
attrs„
;builtins.list[Tuple[builtins.str,Union[builtins.str,None]]]î
,Tuple[builtins.str,Union[builtins.str,None]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
None"builtins.listz38z39z310z311z312z313z314*¿
handle_data"html.parser.HTMLParser.handle_data"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*&
data
builtins.str"builtins.strz38z39z310z311z312z313z314* 
handle_entityref'html.parser.HTMLParser.handle_entityref"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*&
name
builtins.str"builtins.strz38z39z310z311z312z313z314*∆
handle_charref%html.parser.HTMLParser.handle_charref"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*&
name
builtins.str"builtins.strz38z39z310z311z312z313z314*∆
handle_comment%html.parser.HTMLParser.handle_comment"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*&
data
builtins.str"builtins.strz38z39z310z311z312z313z314*¿
handle_decl"html.parser.HTMLParser.handle_decl"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*&
decl
builtins.str"builtins.strz38z39z310z311z312z313z314*º
	handle_pi html.parser.HTMLParser.handle_pi"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*&
data
builtins.str"builtins.strz38z39z310z311z312z313z314*Ì
check_for_whole_start_tag0html.parser.HTMLParser.check_for_whole_start_tag"
builtins.int"builtins.int*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*#
i
builtins.int"builtins.intz38z39z310z311z312z313z314*¢
clear_cdata_mode'html.parser.HTMLParser.clear_cdata_mode"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParserz38z39z310z311z312z313z314*π
goaheadhtml.parser.HTMLParser.goahead"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*'
end
builtins.bool"builtins.boolz38z39z310z311z312z313z314*è
parse_bogus_comment*html.parser.HTMLParser.parse_bogus_comment"
builtins.int"builtins.int*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*#
i
builtins.int"builtins.int*,
report
builtins.bool"builtins.bool z38z39z310z311z312z313z314*”
parse_endtag#html.parser.HTMLParser.parse_endtag"
builtins.int"builtins.int*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*#
i
builtins.int"builtins.intz38z39z310z311z312z313z314*Á
parse_html_declaration-html.parser.HTMLParser.parse_html_declaration"
builtins.int"builtins.int*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*#
i
builtins.int"builtins.intz38z39z310z311z312z313z314*À
parse_pihtml.parser.HTMLParser.parse_pi"
builtins.int"builtins.int*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*#
i
builtins.int"builtins.intz38z39z310z311z312z313z314*◊
parse_starttag%html.parser.HTMLParser.parse_starttag"
builtins.int"builtins.int*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*#
i
builtins.int"builtins.intz38z39z310z311z312z313z314*∆
set_cdata_mode%html.parser.HTMLParser.set_cdata_mode"
None*:
self0
html.parser.HTMLParser"html.parser.HTMLParser*&
elem
builtins.str"builtins.strz38z39z310z311z312z313z314j38j39j310j311j312j313j314r∂
CDATA_CONTENT_ELEMENTS-html.parser.HTMLParser.CDATA_CONTENT_ELEMENTSL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*38*39*310*311*312*313*314rh
rawdatahtml.parser.HTMLParser.rawdata
builtins.str"builtins.str*38*39*310*311*312*313*314rñ

cdata_elem!html.parser.HTMLParser.cdata_elemD
Union[builtins.str,None]
builtins.str"builtins.str
None*38*39*310*311*312*313*314r|
convert_charrefs'html.parser.HTMLParser.convert_charrefs
builtins.bool"builtins.bool*38*39*310*311*312*313*314rò
interesting"html.parser.HTMLParser.interestingD
re.Pattern[builtins.str]
builtins.str"builtins.str"
re.Pattern*38*39*310*311*312*313*314rh
lasttaghtml.parser.HTMLParser.lasttag
builtins.str"builtins.str*38*39*310*311*312*313*314∫
StringIOio.StringIO"io.TextIOWrapper*°
__init__io.StringIO.__init__"
None*$
self
io.StringIO"io.StringIO*Y
initial_valueD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None z38z39z310z311z312z313z314*Ö
getvalueio.StringIO.getvalue"
builtins.str"builtins.str*$
self
io.StringIO"io.StringIOz38z39z310z311z312z313z314j38j39j310j311j312j313j314rB
nameio.StringIO.name
Any*38*39*310*311*312*313*314_
coerce_string"humanfriendly.compat.coerce_string*	
valuez38z39z310z311z312z313z314W
	is_stringhumanfriendly.compat.is_string*	
valuez38z39z310z311z312z313z314Y

is_unicodehumanfriendly.compat.is_unicode*	
valuez38z39z310z311z312z313z314J
on_macoshumanfriendly.compat.on_macosz38z39z310z311z312z313z314N

on_windowshumanfriendly.compat.on_windowsz38z39z310z311z312z313z314*±
__annotations__$humanfriendly.compat.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*ì
unichrhumanfriendly.compat.unichrK
CallableType[builtins.function]&
builtins.function"builtins.function*38*39*310*311*312*313*314*´
interactive_prompt'humanfriendly.compat.interactive_promptK
CallableType[builtins.function]&
builtins.function"builtins.function*38*39*310*311*312*313*314