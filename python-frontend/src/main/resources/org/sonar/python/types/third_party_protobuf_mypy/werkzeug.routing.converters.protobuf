
werkzeug.routing.convertersS
ValidationError+werkzeug.routing.converters.ValidationError"builtins.ValueError£
BaseConverter)werkzeug.routing.converters.BaseConverter"builtins.object*è
__init_subclass__;werkzeug.routing.converters.BaseConverter.__init_subclass__"
None*õ
clsë
/Type[werkzeug.routing.converters.BaseConverter]V
)werkzeug.routing.converters.BaseConverter")werkzeug.routing.converters.BaseConverter"type*
kwargs
Anyp*ë
__init__2werkzeug.routing.converters.BaseConverter.__init__"
None*`
selfV
)werkzeug.routing.converters.BaseConverter")werkzeug.routing.converters.BaseConverter*=
map4
werkzeug.routing.map.Map"werkzeug.routing.map.Map*
args
Any*
kwargs
Any*‘
	to_python3werkzeug.routing.converters.BaseConverter.to_python"
Any*`
selfV
)werkzeug.routing.converters.BaseConverter")werkzeug.routing.converters.BaseConverter*'
value
builtins.str"builtins.str*Œ
to_url0werkzeug.routing.converters.BaseConverter.to_url"
builtins.str"builtins.str*`
selfV
)werkzeug.routing.converters.BaseConverter")werkzeug.routing.converters.BaseConverter*
value
AnyrV
regex/werkzeug.routing.converters.BaseConverter.regex
builtins.str"builtins.strrX
weight0werkzeug.routing.converters.BaseConverter.weight
builtins.int"builtins.intrj
part_isolating8werkzeug.routing.converters.BaseConverter.part_isolating
builtins.bool"builtins.boolrj
map-werkzeug.routing.converters.BaseConverter.map4
werkzeug.routing.map.Map"werkzeug.routing.map.Map∫
UnicodeConverter,werkzeug.routing.converters.UnicodeConverter")werkzeug.routing.converters.BaseConverter*Ã
__init__5werkzeug.routing.converters.UnicodeConverter.__init__"
None*f
self\
,werkzeug.routing.converters.UnicodeConverter",werkzeug.routing.converters.UnicodeConverter*=
map4
werkzeug.routing.map.Map"werkzeug.routing.map.Map*-
	minlength
builtins.int"builtins.int *U
	maxlengthD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
lengthD
Union[builtins.int,None]
builtins.int"builtins.int
None «
AnyConverter(werkzeug.routing.converters.AnyConverter")werkzeug.routing.converters.BaseConverter*è
__init__1werkzeug.routing.converters.AnyConverter.__init__"
None*^
selfT
(werkzeug.routing.converters.AnyConverter"(werkzeug.routing.converters.AnyConverter*=
map4
werkzeug.routing.map.Map"werkzeug.routing.map.Map*'
items
builtins.str"builtins.str*À
to_url/werkzeug.routing.converters.AnyConverter.to_url"
builtins.str"builtins.str*^
selfT
(werkzeug.routing.converters.AnyConverter"(werkzeug.routing.converters.AnyConverter*
value
AnyrÅ
items.werkzeug.routing.converters.AnyConverter.itemsH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.setó
PathConverter)werkzeug.routing.converters.PathConverter")werkzeug.routing.converters.BaseConverterrV
regex/werkzeug.routing.converters.PathConverter.regex
builtins.str"builtins.strrX
weight0werkzeug.routing.converters.PathConverter.weight
builtins.int"builtins.int´
NumberConverter+werkzeug.routing.converters.NumberConverter")werkzeug.routing.converters.BaseConverter*Ò
__init__4werkzeug.routing.converters.NumberConverter.__init__"
None*d
selfZ
+werkzeug.routing.converters.NumberConverter"+werkzeug.routing.converters.NumberConverter*=
map4
werkzeug.routing.map.Map"werkzeug.routing.map.Map*0
fixed_digits
builtins.int"builtins.int *O
minD
Union[builtins.int,None]
builtins.int"builtins.int
None *O
maxD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
signed
builtins.bool"builtins.bool *⁄
	to_python5werkzeug.routing.converters.NumberConverter.to_python"
Any*d
selfZ
+werkzeug.routing.converters.NumberConverter"+werkzeug.routing.converters.NumberConverter*'
value
builtins.str"builtins.str*‘
to_url2werkzeug.routing.converters.NumberConverter.to_url"
builtins.str"builtins.str*d
selfZ
+werkzeug.routing.converters.NumberConverter"+werkzeug.routing.converters.NumberConverter*
value
Any*„
signed_regex8werkzeug.routing.converters.NumberConverter.signed_regex"
builtins.str"builtins.str*d
selfZ
+werkzeug.routing.converters.NumberConverter"+werkzeug.routing.converters.NumberConverter0:builtins.property`rZ
weight2werkzeug.routing.converters.NumberConverter.weight
builtins.int"builtins.intrì
num_convert7werkzeug.routing.converters.NumberConverter.num_convertK
CallableType[builtins.function]&
builtins.function"builtins.functionrf
fixed_digits8werkzeug.routing.converters.NumberConverter.fixed_digits
builtins.int"builtins.intr|
min/werkzeug.routing.converters.NumberConverter.minD
Union[builtins.int,None]
builtins.int"builtins.int
Noner|
max/werkzeug.routing.converters.NumberConverter.maxD
Union[builtins.int,None]
builtins.int"builtins.int
Noner\
signed2werkzeug.routing.converters.NumberConverter.signed
builtins.bool"builtins.bool»
IntegerConverter,werkzeug.routing.converters.IntegerConverter"+werkzeug.routing.converters.NumberConverterrY
regex2werkzeug.routing.converters.IntegerConverter.regex
builtins.str"builtins.strñ
FloatConverter*werkzeug.routing.converters.FloatConverter"+werkzeug.routing.converters.NumberConverter*»
__init__3werkzeug.routing.converters.FloatConverter.__init__"
None*b
selfX
*werkzeug.routing.converters.FloatConverter"*werkzeug.routing.converters.FloatConverter*=
map4
werkzeug.routing.map.Map"werkzeug.routing.map.Map*U
minJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *U
maxJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *,
signed
builtins.bool"builtins.bool rW
regex0werkzeug.routing.converters.FloatConverter.regex
builtins.str"builtins.strrÜ
num_convert6werkzeug.routing.converters.FloatConverter.num_convert?
CallableType[builtins.type]
builtins.type"builtins.typeÉ
UUIDConverter)werkzeug.routing.converters.UUIDConverter")werkzeug.routing.converters.BaseConverter*„
	to_python3werkzeug.routing.converters.UUIDConverter.to_python"
	uuid.UUID"	uuid.UUID*`
selfV
)werkzeug.routing.converters.UUIDConverter")werkzeug.routing.converters.UUIDConverter*'
value
builtins.str"builtins.str*›
to_url0werkzeug.routing.converters.UUIDConverter.to_url"
builtins.str"builtins.str*`
selfV
)werkzeug.routing.converters.UUIDConverter")werkzeug.routing.converters.UUIDConverter*!
value
	uuid.UUID"	uuid.UUIDrV
regex/werkzeug.routing.converters.UUIDConverter.regex
builtins.str"builtins.str*ó
__annotations__+werkzeug.routing.converters.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
ttyping *◊
DEFAULT_CONVERTERS.werkzeug.routing.converters.DEFAULT_CONVERTERSê
Ltyping.Mapping[builtins.str,Type[werkzeug.routing.converters.BaseConverter]]
builtins.str"builtins.strë
/Type[werkzeug.routing.converters.BaseConverter]V
)werkzeug.routing.converters.BaseConverter")werkzeug.routing.converters.BaseConverter"type"typing.Mapping