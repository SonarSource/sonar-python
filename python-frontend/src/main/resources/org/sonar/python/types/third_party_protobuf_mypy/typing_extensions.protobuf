
typing_extensions◊
AsyncGeneratortyping.AsyncGenerator"typing.AsyncIterator*î
	__anext__typing.AsyncGenerator.__anext__"y
typing.Awaitable[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.Awaitable*Í
selfﬂ
4typing.AsyncGenerator[typing._T_co,typing._T_contra]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.object"typing.AsyncGenerator*Ò
asendtyping.AsyncGenerator.asend"y
typing.Awaitable[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.Awaitable*Í
selfﬂ
4typing.AsyncGenerator[typing._T_co,typing._T_contra]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.object"typing.AsyncGenerator*KI
typing._T_contra"
builtins.object"builtins.object"builtins.object0:abc.abstractmethod@*…
aclosetyping.AsyncGenerator.aclose"4
typing.Awaitable[None]
None"typing.Awaitable*Í
selfﬂ
4typing.AsyncGenerator[typing._T_co,typing._T_contra]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.object"typing.AsyncGenerator*∑
ag_awaittyping.AsyncGenerator.ag_await"
Any*Í
selfﬂ
4typing.AsyncGenerator[typing._T_co,typing._T_contra]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.object"typing.AsyncGenerator0:builtins.property`*Œ
ag_codetyping.AsyncGenerator.ag_code" 
types.CodeType"types.CodeType*Í
selfﬂ
4typing.AsyncGenerator[typing._T_co,typing._T_contra]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.object"typing.AsyncGenerator0:builtins.property`*“
ag_frametyping.AsyncGenerator.ag_frame""
types.FrameType"types.FrameType*Í
selfﬂ
4typing.AsyncGenerator[typing._T_co,typing._T_contra]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.object"typing.AsyncGenerator0:builtins.property`*“

ag_running typing.AsyncGenerator.ag_running"
builtins.bool"builtins.bool*Í
selfﬂ
4typing.AsyncGenerator[typing._T_co,typing._T_contra]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.object"typing.AsyncGenerator0:builtins.property`2â
athrowtyping.AsyncGenerator.athrowÉ
athrowtyping.AsyncGenerator.athrow"y
typing.Awaitable[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.Awaitable*Í
selfﬂ
4typing.AsyncGenerator[typing._T_co,typing._T_contra]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.object"typing.AsyncGenerator*ZX
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type*åá
-Union[builtins.BaseException,builtins.object]0
builtins.BaseException"builtins.BaseException"
builtins.object"builtins.object *]Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:typing.overload:abc.abstractmethod@X⁄
athrowtyping.AsyncGenerator.athrow"y
typing.Awaitable[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.Awaitable*Í
selfﬂ
4typing.AsyncGenerator[typing._T_co,typing._T_contra]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.object"typing.AsyncGenerator*20
builtins.BaseException"builtins.BaseException*
None *]Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:typing.overload:abc.abstractmethod@XPï
AsyncIterabletyping.AsyncIterable"builtins.object*÷
	__aiter__typing.AsyncIterable.__aiter__"Å
"typing.AsyncIterator[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.AsyncIterator*å
selfÅ
"typing.AsyncIterable[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.AsyncIterable0:abc.abstractmethod@8PX“
AsyncIteratortyping.AsyncIterator"typing.AsyncIterable*Õ
	__anext__typing.AsyncIterator.__anext__"y
typing.Awaitable[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.Awaitable*å
selfÅ
"typing.AsyncIterator[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.AsyncIterator0:abc.abstractmethod@*æ
	__aiter__typing.AsyncIterator.__aiter__"Å
"typing.AsyncIterator[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.AsyncIterator*å
selfÅ
"typing.AsyncIterator[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.AsyncIterator8PXî
	Awaitabletyping.Awaitable"builtins.object*›
	__await__typing.Awaitable.__await__"ï
'typing.Generator[Any,None,typing._T_co]
Any
NoneE
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.Generator*É
selfy
typing.Awaitable[typing._T_co]E
typing._T_co"
builtins.object"builtins.object"builtins.object"typing.Awaitable0:abc.abstractmethod@8PXá 
	Coroutinetyping.Coroutine"typing.Awaitable*õ
cr_awaittyping.Coroutine.cr_await"&
Union[Any,None]
Any
None*¥
self©
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.objectE
typing._V_co"
builtins.object"builtins.object"builtins.object"typing.Coroutine0:builtins.property`*ì
cr_codetyping.Coroutine.cr_code" 
types.CodeType"types.CodeType*¥
self©
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.objectE
typing._V_co"
builtins.object"builtins.object"builtins.object"typing.Coroutine0:builtins.property`*ó
cr_frametyping.Coroutine.cr_frame""
types.FrameType"types.FrameType*¥
self©
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.objectE
typing._V_co"
builtins.object"builtins.object"builtins.object"typing.Coroutine0:builtins.property`*ó

cr_runningtyping.Coroutine.cr_running"
builtins.bool"builtins.bool*¥
self©
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.objectE
typing._V_co"
builtins.object"builtins.object"builtins.object"typing.Coroutine0:builtins.property`*Ä
sendtyping.Coroutine.send"E
typing._T_co"
builtins.object"builtins.object"builtins.object*¥
self©
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.objectE
typing._V_co"
builtins.object"builtins.object"builtins.object"typing.Coroutine*KI
typing._T_contra"
builtins.object"builtins.object"builtins.object0:abc.abstractmethod@*¯
closetyping.Coroutine.close"
None*¥
self©
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.objectE
typing._V_co"
builtins.object"builtins.object"builtins.object"typing.Coroutine0:abc.abstractmethod@2†
throwtyping.Coroutine.throwí
throwtyping.Coroutine.throw"E
typing._T_co"
builtins.object"builtins.object"builtins.object*¥
self©
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.objectE
typing._V_co"
builtins.object"builtins.object"builtins.object"typing.Coroutine*ZX
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type*åá
-Union[builtins.BaseException,builtins.object]0
builtins.BaseException"builtins.BaseException"
builtins.object"builtins.object *]Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:typing.overload:abc.abstractmethod@XÈ
throwtyping.Coroutine.throw"E
typing._T_co"
builtins.object"builtins.object"builtins.object*¥
self©
<typing.Coroutine[typing._T_co,typing._T_contra,typing._V_co]E
typing._T_co"
builtins.object"builtins.object"builtins.objectI
typing._T_contra"
builtins.object"builtins.object"builtins.objectE
typing._V_co"
builtins.object"builtins.object"builtins.object"typing.Coroutine*20
builtins.BaseException"builtins.BaseException*
None *]Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None 0:typing.overload:abc.abstractmethod@XPrK
__qualname__typing.Coroutine.__qualname__
builtins.str"builtins.strÓ
_SpecialFormtyping_extensions._SpecialForm"builtins.object*¨
__getitem__*typing_extensions._SpecialForm.__getitem__""
builtins.object"builtins.object*B@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*	
Anyª

_TypedDicttyping_extensions._TypedDict"typing.Mapping*º
copy!typing_extensions._TypedDict.copy"Å
!typing_extensions._TypedDict.Self<
typing_extensions._TypedDict"typing_extensions._TypedDict"typing_extensions._TypedDict*å
selfÅ
!typing_extensions._TypedDict.Self<
typing_extensions._TypedDict"typing_extensions._TypedDict"typing_extensions._TypedDict*Á

setdefault'typing_extensions._TypedDict.setdefault""
builtins.object"builtins.object*F
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*
k
NoReturn
*/
default"
builtins.object"builtins.object*Ü
pop typing_extensions._TypedDict.pop""
builtins.object"builtins.object*F
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*
k
NoReturn
*\
defaultM
typing_extensions._T"
builtins.object"builtins.object"builtins.object *·
update#typing_extensions._TypedDict.update"
None*W
selfM
typing_extensions._T"
builtins.object"builtins.object"builtins.object*OM
typing_extensions._T"
builtins.object"builtins.object"builtins.object*ê
items"typing_extensions._TypedDict.items"ö
9_collections_abc.dict_items[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"_collections_abc.dict_items*F
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*å
keys!typing_extensions._TypedDict.keys"ò
8_collections_abc.dict_keys[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"_collections_abc.dict_keys*F
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*î
values#typing_extensions._TypedDict.values"ú
:_collections_abc.dict_values[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"_collections_abc.dict_values*F
self<
typing_extensions._TypedDict"typing_extensions._TypedDict*ë
__delitem__(typing_extensions._TypedDict.__delitem__"
None*><
typing_extensions._TypedDict"typing_extensions._TypedDict*
NoReturn
8@babc.ABCMetarô
__required_keys__.typing_extensions._TypedDict.__required_keys__T
 builtins.frozenset[builtins.str]
builtins.str"builtins.str"builtins.frozensetrô
__optional_keys__.typing_extensions._TypedDict.__optional_keys__T
 builtins.frozenset[builtins.str]
builtins.str"builtins.str"builtins.frozensetrS
	__total__&typing_extensions._TypedDict.__total__
builtins.bool"builtins.boolë
SupportsIndextyping_extensions.SupportsIndex"builtins.object*∫
	__index__)typing_extensions.SupportsIndex.__index__"
builtins.int"builtins.int*L
selfB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex0:abc.abstractmethod@8@Xbabc.ABCMetaé
ParamSpecArgstyping_extensions.ParamSpecArgs"builtins.object*‘
__init__(typing_extensions.ParamSpecArgs.__init__"
None*L
selfB
typing_extensions.ParamSpecArgs"typing_extensions.ParamSpecArgs*F
origin:
typing_extensions.ParamSpec"typing_extensions.ParamSpecrt

__origin__*typing_extensions.ParamSpecArgs.__origin__:
typing_extensions.ParamSpec"typing_extensions.ParamSpecö
ParamSpecKwargs!typing_extensions.ParamSpecKwargs"builtins.object*⁄
__init__*typing_extensions.ParamSpecKwargs.__init__"
None*P
selfF
!typing_extensions.ParamSpecKwargs"!typing_extensions.ParamSpecKwargs*F
origin:
typing_extensions.ParamSpec"typing_extensions.ParamSpecrv

__origin__,typing_extensions.ParamSpecKwargs.__origin__:
typing_extensions.ParamSpec"typing_extensions.ParamSpec’

NamedTupletyping_extensions.NamedTuple"builtins.tuple*À
_make"typing_extensions.NamedTuple._make"Å
!typing_extensions.NamedTuple.Self<
typing_extensions.NamedTuple"typing_extensions.NamedTuple"typing_extensions.NamedTuple*ø
clsµ
'Type[typing_extensions.NamedTuple.Self]Å
!typing_extensions.NamedTuple.Self<
typing_extensions.NamedTuple"typing_extensions.NamedTuple"typing_extensions.NamedTuple"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable0:builtins.classmethodp*–
_asdict$typing_extensions.NamedTuple._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*F
self<
typing_extensions.NamedTuple"typing_extensions.NamedTuple*Ÿ
_replace%typing_extensions.NamedTuple._replace"Å
!typing_extensions.NamedTuple.Self<
typing_extensions.NamedTuple"typing_extensions.NamedTuple"typing_extensions.NamedTuple*å
selfÅ
!typing_extensions.NamedTuple.Self<
typing_extensions.NamedTuple"typing_extensions.NamedTuple"typing_extensions.NamedTuple*
kwargs
Any2¸
__init__%typing_extensions.NamedTuple.__init__‘
__init__%typing_extensions.NamedTuple.__init__"
None*F
self<
typing_extensions.NamedTuple"typing_extensions.NamedTuple**
typename
builtins.str"builtins.str*ç
fields
(typing.Iterable[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Iterable 0:typing.overloadXÒ
__init__%typing_extensions.NamedTuple.__init__"
None*F
self<
typing_extensions.NamedTuple"typing_extensions.NamedTuple**
typename
builtins.str"builtins.str*
fields
None *
kwargs
Any0:typing.overloadXr≥
_field_types)typing_extensions.NamedTuple._field_typesx
)builtins.dict[builtins.str,builtins.type]
builtins.str"builtins.str
builtins.type"builtins.type"builtins.dictrò
_field_defaults,typing_extensions.NamedTuple._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr}
_fields$typing_extensions.NamedTuple._fieldsL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuplerM
_source$typing_extensions.NamedTuple._source
builtins.str"builtins.str‡
TypeVartyping_extensions.TypeVar"builtins.object*ƒ
__init__"typing_extensions.TypeVar.__init__"
None*@
self6
typing_extensions.TypeVar"typing_extensions.TypeVar*&
name
builtins.str"builtins.str*
constraints
Any*3
bound&
Union[Any,None]
Any
None */
	covariant
builtins.bool"builtins.bool *3
contravariant
builtins.bool"builtins.bool *5
default&
Union[Any,None]
Any
None *4
infer_variance
builtins.bool"builtins.bool 8rX
	__bound__#typing_extensions.TypeVar.__bound__&
Union[Any,None]
Any
Nonerl
__constraints__)typing_extensions.TypeVar.__constraints__.
builtins.tuple[Any]
Any"builtins.tuplerX
__covariant__'typing_extensions.TypeVar.__covariant__
builtins.bool"builtins.boolr`
__contravariant__+typing_extensions.TypeVar.__contravariant__
builtins.bool"builtins.boolr\
__default__%typing_extensions.TypeVar.__default__&
Union[Any,None]
Any
Noneñ
	ParamSpectyping_extensions.ParamSpec"builtins.object*Ü
__init__$typing_extensions.ParamSpec.__init__"
None*D
self:
typing_extensions.ParamSpec"typing_extensions.ParamSpec*&
name
builtins.str"builtins.str*y
boundl
"Union[None,Type[Any],builtins.str]
None
	Type[Any]
Any"type
builtins.str"builtins.str *3
contravariant
builtins.bool"builtins.bool */
	covariant
builtins.bool"builtins.bool *{
defaultl
"Union[Type[Any],builtins.str,None]
	Type[Any]
Any"type
builtins.str"builtins.str
None *…
args typing_extensions.ParamSpec.args"B
typing_extensions.ParamSpecArgs"typing_extensions.ParamSpecArgs*D
self:
typing_extensions.ParamSpec"typing_extensions.ParamSpec0:builtins.property`*—
kwargs"typing_extensions.ParamSpec.kwargs"F
!typing_extensions.ParamSpecKwargs"!typing_extensions.ParamSpecKwargs*D
self:
typing_extensions.ParamSpec"typing_extensions.ParamSpec0:builtins.property`8ru
	__bound__%typing_extensions.ParamSpec.__bound__A
Union[Type[Any],None]
	Type[Any]
Any"type
NonerZ
__covariant__)typing_extensions.ParamSpec.__covariant__
builtins.bool"builtins.boolrb
__contravariant__-typing_extensions.ParamSpec.__contravariant__
builtins.bool"builtins.boolry
__default__'typing_extensions.ParamSpec.__default__A
Union[Type[Any],None]
	Type[Any]
Any"type
Noneí
TypeVarTupletyping_extensions.TypeVarTuple"builtins.object*Ë
__init__'typing_extensions.TypeVarTuple.__init__"
None*J
self@
typing_extensions.TypeVarTuple"typing_extensions.TypeVarTuple*&
name
builtins.str"builtins.str*5
default&
Union[Any,None]
Any
None *Ä
__iter__'typing_extensions.TypeVarTuple.__iter__"
Any*B@
typing_extensions.TypeVarTuple"typing_extensions.TypeVarTuple8ra
__default__*typing_extensions.TypeVarTuple.__default__&
Union[Any,None]
Any
None[
NewTypetyping.NewType"
Any*&
name
builtins.str"builtins.str*
tp
Any›
overloadtyping.overload"Z
	typing._FK
CallableType[builtins.function]&
builtins.function"builtins.function*d
funcZ
	typing._FK
CallableType[builtins.function]&
builtins.function"builtins.functionç
runtime_checkable#typing_extensions.runtime_checkable"d
typing_extensions._TCC
Type[builtins.object]"
builtins.object"builtins.object"type"type*m
clsd
typing_extensions._TCC
Type[builtins.object]"
builtins.object"builtins.object"type"typeı
finaltyping_extensions.final"e
typing_extensions._FK
CallableType[builtins.function]&
builtins.function"builtins.function*l
fe
typing_extensions._FK
CallableType[builtins.function]&
builtins.function"builtins.functionS
IntVartyping_extensions.IntVar"
Any*&
name
builtins.str"builtins.str‚
get_type_hints typing_extensions.get_type_hints"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*T
objK
CallableType[builtins.function]&
builtins.function"builtins.function*£
globalnsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *¢
localnsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *4
include_extras
builtins.bool"builtins.bool g
get_argstyping_extensions.get_args".
builtins.tuple[Any]
Any"builtins.tuple*
tp
Anyz
is_typeddicttyping_extensions.is_typeddict"
builtins.bool"builtins.bool**
tp"
builtins.object"builtins.objectÃ
reveal_typetyping_extensions.reveal_type"M
typing_extensions._T"
builtins.object"builtins.object"builtins.object*OM
typing_extensions._T"
builtins.object"builtins.object"builtins.objectL
assert_nevertyping_extensions.assert_never"
NoReturn
*
NoReturn
◊
assert_typetyping_extensions.assert_type"M
typing_extensions._T"
builtins.object"builtins.object"builtins.object*OM
typing_extensions._T"
builtins.object"builtins.object"builtins.object*	
Any>
clear_overloads!typing_extensions.clear_overloads"
Noneö
get_overloadstyping_extensions.get_overloads"ê
0typing.Sequence[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"typing.Sequence*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.functionä
dataclass_transform%typing_extensions.dataclass_transform"8
_typeshed.IdentityFunction"_typeshed.IdentityFunction*0

eq_default
builtins.bool"builtins.bool *3
order_default
builtins.bool"builtins.bool *5
kw_only_default
builtins.bool"builtins.bool *4
frozen_default
builtins.bool"builtins.bool *ç
field_specifiersÙ
@builtins.tuple[Union[Type[Any],CallableType[builtins.function]]]ü
0Union[Type[Any],CallableType[builtins.function]]
	Type[Any]
Any"typeK
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.tuple *.
kwargs"
builtins.object"builtins.objectˆ
overridetyping_extensions.override"e
typing_extensions._FK
CallableType[builtins.function]&
builtins.function"builtins.function*ge
typing_extensions._FK
CallableType[builtins.function]&
builtins.function"builtins.function“

deprecatedtyping_extensions.deprecated"K
CallableType[builtins.function]&
builtins.function"builtins.function*
builtins.str"builtins.str*à
categoryx
"Union[Type[builtins.Warning],None]F
Type[builtins.Warning]$
builtins.Warning"builtins.Warning"type
None *.

stacklevel
builtins.int"builtins.int "Ü

get_origintyping_extensions.get_originﬂ

get_origintyping_extensions.get_origin":
typing_extensions.ParamSpec"typing_extensions.ParamSpec*·
tpÿ
HUnion[typing_extensions.ParamSpecArgs,typing_extensions.ParamSpecKwargs]B
typing_extensions.ParamSpecArgs"typing_extensions.ParamSpecArgsF
!typing_extensions.ParamSpecKwargs"!typing_extensions.ParamSpecKwargs0:typing.overloadXx

get_origintyping_extensions.get_origin"&
Union[Any,None]
Any
None*
tp
Any0:typing.overloadX*ç
__annotations__!typing_extensions.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*E
TYPE_CHECKINGtyping.TYPE_CHECKING
builtins.bool"builtins.bool*5
Any
typing.Any"
builtins.object"builtins.object*G
ClassVartyping.ClassVar*
typing._SpecialForm"typing._SpecialForm*G
NoReturntyping.NoReturn*
typing._SpecialForm"typing._SpecialForm*?
Typetyping.Type*
typing._SpecialForm"typing._SpecialForm*p
__all__typing_extensions.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*h
Protocoltyping_extensions.Protocol@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*q
runtimetyping_extensions.runtimeK
CallableType[builtins.function]&
builtins.function"builtins.function*b
Finaltyping_extensions.Final@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*f
Literaltyping_extensions.Literal@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*L
	TypedDicttyping_extensions.TypedDict"
builtins.object"builtins.object*j
	Annotatedtyping_extensions.Annotated@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*=
_AnnotatedAlias!typing_extensions._AnnotatedAlias
Any*n
Concatenatetyping_extensions.Concatenate@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*j
	TypeAliastyping_extensions.TypeAlias@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*j
	TypeGuardtyping_extensions.TypeGuard@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*`
Selftyping_extensions.Self@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*b
Nevertyping_extensions.Never@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*h
Requiredtyping_extensions.Required@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*n
NotRequiredtyping_extensions.NotRequired@
typing_extensions._SpecialForm"typing_extensions._SpecialForm*d
Unpacktyping_extensions.Unpack@
typing_extensions._SpecialForm"typing_extensions._SpecialForm