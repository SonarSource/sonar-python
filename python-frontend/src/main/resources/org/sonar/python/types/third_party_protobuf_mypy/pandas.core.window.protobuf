
pandas.core.window¶_
ExponentialMovingWindow.pandas.core.window.ewm.ExponentialMovingWindow"%pandas.core.window.rolling.BaseWindow*—
__init__7pandas.core.window.ewm.ExponentialMovingWindow.__init__"
None*˙
selfÔ
Gpandas.core.window.ewm.ExponentialMovingWindow[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame".pandas.core.window.ewm.ExponentialMovingWindow*}
objt
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*U
comJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *V
spanJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ã
halflife˙
ºUnion[TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]],None]¨
∞TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]] 
•Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta&
numpy.timedelta64"numpy.timedelta64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64 
builtins.float"builtins.float
builtins.str"builtins.str"(pandas._typing.TimedeltaConvertibleTypes
None *W
alphaJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *W
min_periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
adjust
builtins.bool"builtins.bool */
	ignore_na
builtins.bool"builtins.bool *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *√
timesµ
`Union[builtins.str,numpy.ndarray[Any,Any],pandas.core.series.Series[Any],None,numpy.timedelta64]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None&
numpy.timedelta64"numpy.timedelta64 *ù
methodé
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.CalculationMethod *Å
mean3pandas.core.window.ewm.ExponentialMovingWindow.mean"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*˙
selfÔ
Gpandas.core.window.ewm.ExponentialMovingWindow[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame".pandas.core.window.ewm.ExponentialMovingWindow*2
numeric_only
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *Í
engine_kwargs‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs *ˇ
sum2pandas.core.window.ewm.ExponentialMovingWindow.sum"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*˙
selfÔ
Gpandas.core.window.ewm.ExponentialMovingWindow[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame".pandas.core.window.ewm.ExponentialMovingWindow*2
numeric_only
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *Í
engine_kwargs‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs *å
std2pandas.core.window.ewm.ExponentialMovingWindow.std"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*˙
selfÔ
Gpandas.core.window.ewm.ExponentialMovingWindow[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame".pandas.core.window.ewm.ExponentialMovingWindow**
bias
builtins.bool"builtins.bool *2
numeric_only
builtins.bool"builtins.bool *å
var2pandas.core.window.ewm.ExponentialMovingWindow.var"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*˙
selfÔ
Gpandas.core.window.ewm.ExponentialMovingWindow[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame".pandas.core.window.ewm.ExponentialMovingWindow**
bias
builtins.bool"builtins.bool *2
numeric_only
builtins.bool"builtins.bool *Ã
cov2pandas.core.window.ewm.ExponentialMovingWindow.cov"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*˙
selfÔ
Gpandas.core.window.ewm.ExponentialMovingWindow[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame".pandas.core.window.ewm.ExponentialMovingWindow*‰
other÷
FUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None *W
pairwiseG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None **
bias
builtins.bool"builtins.bool *2
numeric_only
builtins.bool"builtins.bool *¢
corr3pandas.core.window.ewm.ExponentialMovingWindow.corr"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*˙
selfÔ
Gpandas.core.window.ewm.ExponentialMovingWindow[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame".pandas.core.window.ewm.ExponentialMovingWindow*‰
other÷
FUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None *W
pairwiseG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *2
numeric_only
builtins.bool"builtins.bool 2≈
	aggregate8pandas.core.window.ewm.ExponentialMovingWindow.aggregateÂ
	aggregate8pandas.core.window.ewm.ExponentialMovingWindow.aggregate"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*—
self∆
Npandas.core.window.ewm.ExponentialMovingWindow[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series".pandas.core.window.ewm.ExponentialMovingWindow*∆
funcª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase*
args
Any*
kwargs
Any0:typing.overloadX∆
	aggregate8pandas.core.window.ewm.ExponentialMovingWindow.aggregate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
self∆
Npandas.core.window.ewm.ExponentialMovingWindow[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series".pandas.core.window.ewm.ExponentialMovingWindow*±
func¶
ßTypeAlias[Union[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]]]Œ
úUnion[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]]®
Ybuiltins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase"builtins.listˇ
;TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]ó
0typing.Mapping[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "typing.Mapping"$pandas._typing.AggFuncTypeDictSeries"'pandas._typing.AggFuncTypeSeriesToFrame*
args
Any*
kwargs
Any0:typing.overloadXÃ
	aggregate8pandas.core.window.ewm.ExponentialMovingWindow.aggregate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ƒ
selfπ
Kpandas.core.window.ewm.ExponentialMovingWindow[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame".pandas.core.window.ewm.ExponentialMovingWindow*ƒ	
funcπ	
ÕTypeAlias[Union[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]],builtins.list[Unknown],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]]√
¬Union[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]],builtins.list[Unknown],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase)
builtins.list[Unknown] "builtins.listê
YTypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]ã
Ntyping.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.HashableV
%Union[Unknown,builtins.list[Unknown]] )
builtins.list[Unknown] "builtins.list"typing.Mapping"#pandas._typing.AggFuncTypeDictFrame"pandas._typing.AggFuncTypeFrame*
args
Any*
kwargs
Any0:typing.overloadXPíå
	Expanding&pandas.core.window.expanding.Expanding"3pandas.core.window.rolling.RollingAndExpandingMixin*ò
count,pandas.core.window.expanding.Expanding.count"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*»

apply,pandas.core.window.expanding.Expanding.apply"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*)
raw
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *Í
engine_kwargs‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs *i
args]
Union[builtins.tuple[Any],None].
builtins.tuple[Any]
Any"builtins.tuple
None *°
kwargsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *Á
sum*pandas.core.window.expanding.Expanding.sum"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*2
numeric_only
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *Í
engine_kwargs‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs *Á
max*pandas.core.window.expanding.Expanding.max"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*2
numeric_only
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *Í
engine_kwargs‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs *Á
min*pandas.core.window.expanding.Expanding.min"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*2
numeric_only
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *Í
engine_kwargs‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs *È
mean+pandas.core.window.expanding.Expanding.mean"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*2
numeric_only
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *Í
engine_kwargs‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs *Ì
median-pandas.core.window.expanding.Expanding.median"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*2
numeric_only
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *Í
engine_kwargs‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs *ë
std*pandas.core.window.expanding.Expanding.std"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *Í
engine_kwargs‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs *ë
var*pandas.core.window.expanding.Expanding.var"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *Í
engine_kwargs‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs *Ú
sem*pandas.core.window.expanding.Expanding.sem"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool * 
skew+pandas.core.window.expanding.Expanding.skew"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*2
numeric_only
builtins.bool"builtins.bool * 
kurt+pandas.core.window.expanding.Expanding.kurt"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*2
numeric_only
builtins.bool"builtins.bool *‹
quantile/pandas.core.window.expanding.Expanding.quantile"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*.
quantile 
builtins.float"builtins.float*◊
interpolation¡
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"$pandas._typing.QuantileInterpolation *2
numeric_only
builtins.bool"builtins.bool *´
rank+pandas.core.window.expanding.Expanding.rank"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*Ç
methodÛ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.WindowingRankType */
	ascending
builtins.bool"builtins.bool *)
pct
builtins.bool"builtins.bool *2
numeric_only
builtins.bool"builtins.bool *≤
cov*pandas.core.window.expanding.Expanding.cov"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*‰
other÷
FUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None *W
pairwiseG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *¥
corr+pandas.core.window.expanding.Expanding.corr"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*Í
selfﬂ
?pandas.core.window.expanding.Expanding[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"&pandas.core.window.expanding.Expanding*‰
other÷
FUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None *W
pairwiseG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool 2ı
	aggregate0pandas.core.window.expanding.Expanding.aggregateÕ
	aggregate0pandas.core.window.expanding.Expanding.aggregate"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*¡
self∂
Fpandas.core.window.expanding.Expanding[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"&pandas.core.window.expanding.Expanding*∆
funcª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase*
args
Any*
kwargs
Any0:typing.overloadXÆ
	aggregate0pandas.core.window.expanding.Expanding.aggregate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¡
self∂
Fpandas.core.window.expanding.Expanding[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"&pandas.core.window.expanding.Expanding*±
func¶
ßTypeAlias[Union[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]]]Œ
úUnion[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]]®
Ybuiltins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase"builtins.listˇ
;TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]ó
0typing.Mapping[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "typing.Mapping"$pandas._typing.AggFuncTypeDictSeries"'pandas._typing.AggFuncTypeSeriesToFrame*
args
Any*
kwargs
Any0:typing.overloadX¥
	aggregate0pandas.core.window.expanding.Expanding.aggregate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¥
self©
Cpandas.core.window.expanding.Expanding[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"&pandas.core.window.expanding.Expanding*ƒ	
funcπ	
ÕTypeAlias[Union[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]],builtins.list[Unknown],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]]√
¬Union[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]],builtins.list[Unknown],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase)
builtins.list[Unknown] "builtins.listê
YTypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]ã
Ntyping.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.HashableV
%Union[Unknown,builtins.list[Unknown]] )
builtins.list[Unknown] "builtins.list"typing.Mapping"#pandas._typing.AggFuncTypeDictFrame"pandas._typing.AggFuncTypeFrame*
args
Any*
kwargs
Any0:typing.overloadXPó
ExpandingGroupby-pandas.core.window.expanding.ExpandingGroupby",pandas.core.window.rolling.BaseWindowGroupby"&pandas.core.window.expanding.Expandingª)
Rolling"pandas.core.window.rolling.Rolling"3pandas.core.window.rolling.RollingAndExpandingMixin*Ñ
apply(pandas.core.window.rolling.Rolling.apply"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*‚
self◊
;pandas.core.window.rolling.Rolling[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame""pandas.core.window.rolling.Rolling*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*)
raw
builtins.bool"builtins.bool *Ø
engine†
BTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],None]]∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"pandas._typing.WindowingEngine *≤
engine_kwargsú
7Union[TypeAlias[Union[TypeAlias[TypedDict],None]],None]‘
+TypeAlias[Union[TypeAlias[TypedDict],None]]}
 Union[TypeAlias[TypedDict],None]M
TypeAlias[TypedDict]
	TypedDict"$pandas._typing._WindowingNumbaKwargs
None"$pandas._typing.WindowingEngineKwargs
None *i
args]
Union[builtins.tuple[Any],None].
builtins.tuple[Any]
Any"builtins.tuple
None *°
kwargsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None 2Õ
	aggregate,pandas.core.window.rolling.Rolling.aggregate¡
	aggregate,pandas.core.window.rolling.Rolling.aggregate"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*π
selfÆ
Bpandas.core.window.rolling.Rolling[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series""pandas.core.window.rolling.Rolling*∆
funcª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase*
args
Any*
kwargs
Any0:typing.overloadX¢
	aggregate,pandas.core.window.rolling.Rolling.aggregate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*π
selfÆ
Bpandas.core.window.rolling.Rolling[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series""pandas.core.window.rolling.Rolling*±
func¶
ßTypeAlias[Union[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]]]Œ
úUnion[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]]®
Ybuiltins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase"builtins.listˇ
;TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]ó
0typing.Mapping[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "typing.Mapping"$pandas._typing.AggFuncTypeDictSeries"'pandas._typing.AggFuncTypeSeriesToFrame*
args
Any*
kwargs
Any0:typing.overloadX®
	aggregate,pandas.core.window.rolling.Rolling.aggregate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¨
self°
?pandas.core.window.rolling.Rolling[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame""pandas.core.window.rolling.Rolling*ƒ	
funcπ	
ÕTypeAlias[Union[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]],builtins.list[Unknown],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]]√
¬Union[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]],builtins.list[Unknown],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase)
builtins.list[Unknown] "builtins.listê
YTypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]ã
Ntyping.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.HashableV
%Union[Unknown,builtins.list[Unknown]] )
builtins.list[Unknown] "builtins.list"typing.Mapping"#pandas._typing.AggFuncTypeDictFrame"pandas._typing.AggFuncTypeFrame*
args
Any*
kwargs
Any0:typing.overloadXPè
RollingGroupby)pandas.core.window.rolling.RollingGroupby",pandas.core.window.rolling.BaseWindowGroupby""pandas.core.window.rolling.RollingP⁄-
Window!pandas.core.window.rolling.Window"%pandas.core.window.rolling.BaseWindow*Œ
sum%pandas.core.window.rolling.Window.sum"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*‡
self’
:pandas.core.window.rolling.Window[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"!pandas.core.window.rolling.Window*2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*–
mean&pandas.core.window.rolling.Window.mean"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*‡
self’
:pandas.core.window.rolling.Window[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"!pandas.core.window.rolling.Window*2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*ã
var%pandas.core.window.rolling.Window.var"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*‡
self’
:pandas.core.window.rolling.Window[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"!pandas.core.window.rolling.Window*(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*ã
std%pandas.core.window.rolling.Window.std"t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*‡
self’
:pandas.core.window.rolling.Window[pandas._typing.NDFrameT]t
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"!pandas.core.window.rolling.Window*(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *
args
Any*
kwargs
Any2√
	aggregate+pandas.core.window.rolling.Window.aggregateæ
	aggregate+pandas.core.window.rolling.Window.aggregate"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*∑
self¨
Apandas.core.window.rolling.Window[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"!pandas.core.window.rolling.Window*∆
funcª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase*
args
Any*
kwargs
Any0:typing.overloadXü
	aggregate+pandas.core.window.rolling.Window.aggregate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*∑
self¨
Apandas.core.window.rolling.Window[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"!pandas.core.window.rolling.Window*±
func¶
ßTypeAlias[Union[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]]]Œ
úUnion[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]]®
Ybuiltins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase"builtins.listˇ
;TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]ó
0typing.Mapping[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "typing.Mapping"$pandas._typing.AggFuncTypeDictSeries"'pandas._typing.AggFuncTypeSeriesToFrame*
args
Any*
kwargs
Any0:typing.overloadX•
	aggregate+pandas.core.window.rolling.Window.aggregate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*™
selfü
>pandas.core.window.rolling.Window[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"!pandas.core.window.rolling.Window*ƒ	
funcπ	
ÕTypeAlias[Union[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]],builtins.list[Unknown],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]]√
¬Union[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]],builtins.list[Unknown],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase)
builtins.list[Unknown] "builtins.listê
YTypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]ã
Ntyping.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.HashableV
%Union[Unknown,builtins.list[Unknown]] )
builtins.list[Unknown] "builtins.list"typing.Mapping"#pandas._typing.AggFuncTypeDictFrame"pandas._typing.AggFuncTypeFrame*
args
Any*
kwargs
Any0:typing.overloadXP*s
__path__pandas.core.window.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*é
__annotations__"pandas.core.window.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict