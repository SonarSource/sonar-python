
flask.templatingËª
BaseEnvironmentjinja2.environment.Environment"builtins.object*˛
__init__'jinja2.environment.Environment.__init__"
None*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*6
block_start_string
builtins.str"builtins.str *4
block_end_string
builtins.str"builtins.str *9
variable_start_string
builtins.str"builtins.str *7
variable_end_string
builtins.str"builtins.str *8
comment_start_string
builtins.str"builtins.str *6
comment_end_string
builtins.str"builtins.str *a
line_statement_prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *_
line_comment_prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
trim_blocks
builtins.bool"builtins.bool *3
lstrip_blocks
builtins.bool"builtins.bool *ê
newline_sequence˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *;
keep_trailing_newline
builtins.bool"builtins.bool *å

extensions˘
?typing.Sequence[Union[builtins.str,Type[jinja2.ext.Extension]]]§
.Union[builtins.str,Type[jinja2.ext.Extension]]
builtins.str"builtins.strR
Type[jinja2.ext.Extension],
jinja2.ext.Extension"jinja2.ext.Extension"type"typing.Sequence */
	optimized
builtins.bool"builtins.bool *o
	undefined^
Type[jinja2.runtime.Undefined]4
jinja2.runtime.Undefined"jinja2.runtime.Undefined"type *ó
finalizeÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *∏

autoescape•
4Union[builtins.bool,CallableType[builtins.function]]
builtins.bool"builtins.boolK
CallableType[builtins.function]&
builtins.function"builtins.function *y
loaderk
%Union[jinja2.loaders.BaseLoader,None]6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader
None *.

cache_size
builtins.int"builtins.int *1
auto_reload
builtins.bool"builtins.bool *ä
bytecode_cachet
(Union[jinja2.bccache.BytecodeCache,None]<
jinja2.bccache.BytecodeCache"jinja2.bccache.BytecodeCache
None *2
enable_async
builtins.bool"builtins.bool * 
add_extension,jinja2.environment.Environment.add_extension"
None*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*¥
	extension§
.Union[builtins.str,Type[jinja2.ext.Extension]]
builtins.str"builtins.strR
Type[jinja2.ext.Extension],
jinja2.ext.Extension"jinja2.ext.Extension"type*û
extend%jinja2.environment.Environment.extend"
None*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*

attributes
Any*¥
overlay&jinja2.environment.Environment.overlay"@
jinja2.environment.Environment"jinja2.environment.Environment*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*6
block_start_string
builtins.str"builtins.str *4
block_end_string
builtins.str"builtins.str *9
variable_start_string
builtins.str"builtins.str *7
variable_end_string
builtins.str"builtins.str *8
comment_start_string
builtins.str"builtins.str *6
comment_end_string
builtins.str"builtins.str *a
line_statement_prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *_
line_comment_prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
trim_blocks
builtins.bool"builtins.bool *3
lstrip_blocks
builtins.bool"builtins.bool *ê
newline_sequence˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *;
keep_trailing_newline
builtins.bool"builtins.bool *å

extensions˘
?typing.Sequence[Union[builtins.str,Type[jinja2.ext.Extension]]]§
.Union[builtins.str,Type[jinja2.ext.Extension]]
builtins.str"builtins.strR
Type[jinja2.ext.Extension],
jinja2.ext.Extension"jinja2.ext.Extension"type"typing.Sequence */
	optimized
builtins.bool"builtins.bool *o
	undefined^
Type[jinja2.runtime.Undefined]4
jinja2.runtime.Undefined"jinja2.runtime.Undefined"type *ó
finalizeÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *∏

autoescape•
4Union[builtins.bool,CallableType[builtins.function]]
builtins.bool"builtins.boolK
CallableType[builtins.function]&
builtins.function"builtins.function *y
loaderk
%Union[jinja2.loaders.BaseLoader,None]6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader
None *.

cache_size
builtins.int"builtins.int *1
auto_reload
builtins.bool"builtins.bool *ä
bytecode_cachet
(Union[jinja2.bccache.BytecodeCache,None]<
jinja2.bccache.BytecodeCache"jinja2.bccache.BytecodeCache
None *2
enable_async
builtins.bool"builtins.bool *∫
lexer$jinja2.environment.Environment.lexer"(
jinja2.lexer.Lexer"jinja2.lexer.Lexer*J
self@
jinja2.environment.Environment"jinja2.environment.Environment0:builtins.property`*ı
iter_extensions.jinja2.environment.Environment.iter_extensions"f
%typing.Iterator[jinja2.ext.Extension],
jinja2.ext.Extension"jinja2.ext.Extension"typing.Iterator*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*…
getitem&jinja2.environment.Environment.getitem"f
#Union[Any,jinja2.runtime.Undefined]
Any4
jinja2.runtime.Undefined"jinja2.runtime.Undefined*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*
obj
Any*P
argumentB
Union[builtins.str,Any]
builtins.str"builtins.str
Any*≈
getattr&jinja2.environment.Environment.getattr"
Any*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*
obj
Any*+
	attribute
builtins.str"builtins.str*Ì
_filter_test_common2jinja2.environment.Environment._filter_test_common"
Any*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*è
nameÑ
,Union[builtins.str,jinja2.runtime.Undefined]
builtins.str"builtins.str4
jinja2.runtime.Undefined"jinja2.runtime.Undefined*
value
Any*j
args`
 Union[typing.Sequence[Any],None]0
typing.Sequence[Any]
Any"typing.Sequence
None*¢
kwargsï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None*o
contextb
"Union[jinja2.runtime.Context,None]0
jinja2.runtime.Context"jinja2.runtime.Context
None*v
eval_ctxh
$Union[jinja2.nodes.EvalContext,None]4
jinja2.nodes.EvalContext"jinja2.nodes.EvalContext
None*-
	is_filter
builtins.bool"builtins.bool*Ã
call_filter*jinja2.environment.Environment.call_filter"
Any*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*&
name
builtins.str"builtins.str*
value
Any*l
args`
 Union[typing.Sequence[Any],None]0
typing.Sequence[Any]
Any"typing.Sequence
None *§
kwargsï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None *q
contextb
"Union[jinja2.runtime.Context,None]0
jinja2.runtime.Context"jinja2.runtime.Context
None *x
eval_ctxh
$Union[jinja2.nodes.EvalContext,None]4
jinja2.nodes.EvalContext"jinja2.nodes.EvalContext
None *»
	call_test(jinja2.environment.Environment.call_test"
Any*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*&
name
builtins.str"builtins.str*
value
Any*l
args`
 Union[typing.Sequence[Any],None]0
typing.Sequence[Any]
Any"typing.Sequence
None *§
kwargsï
,Union[typing.Mapping[builtins.str,Any],None]Y
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping
None *q
contextb
"Union[jinja2.runtime.Context,None]0
jinja2.runtime.Context"jinja2.runtime.Context
None *x
eval_ctxh
$Union[jinja2.nodes.EvalContext,None]4
jinja2.nodes.EvalContext"jinja2.nodes.EvalContext
None *ò
parse$jinja2.environment.Environment.parse".
jinja2.nodes.Template"jinja2.nodes.Template*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*(
source
builtins.str"builtins.str*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:jinja2.utils.internalcode*˘
_parse%jinja2.environment.Environment._parse".
jinja2.nodes.Template"jinja2.nodes.Template*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*(
source
builtins.str"builtins.str*N
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*R
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None*©
lex"jinja2.environment.Environment.lex"ﬂ
>typing.Iterator[Tuple[builtins.int,builtins.str,builtins.str]]ã
-Tuple[builtins.int,builtins.str,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str
builtins.str"builtins.str"typing.Iterator*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*(
source
builtins.str"builtins.str*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Û

preprocess)jinja2.environment.Environment.preprocess"
builtins.str"builtins.str*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*(
source
builtins.str"builtins.str*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None *⁄
	_tokenize(jinja2.environment.Environment._tokenize"4
jinja2.lexer.TokenStream"jinja2.lexer.TokenStream*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*(
source
builtins.str"builtins.str*N
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*T
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
stateD
Union[builtins.str,None]
builtins.str"builtins.str
None *±
	_generate(jinja2.environment.Environment._generate"
builtins.str"builtins.str*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*:
source.
jinja2.nodes.Template"jinja2.nodes.Template*N
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*R
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None*0

defer_init
builtins.bool"builtins.bool *˜
_compile'jinja2.environment.Environment._compile" 
types.CodeType"types.CodeType*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*(
source
builtins.str"builtins.str**
filename
builtins.str"builtins.str*∆
compile_expression1jinja2.environment.Environment.compile_expression"N
%jinja2.environment.TemplateExpression"%jinja2.environment.TemplateExpression*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*(
source
builtins.str"builtins.str*7
undefined_to_none
builtins.bool"builtins.bool *˝
compile_templates0jinja2.environment.Environment.compile_templates"
None*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*|
targetp
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike*†

extensionsç
+Union[typing.Collection[builtins.str],None]R
typing.Collection[builtins.str]
builtins.str"builtins.str"typing.Collection
None *ö
filter_funcÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *O
zipD
Union[builtins.str,None]
builtins.str"builtins.str
None *õ
log_functionÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *3
ignore_errors
builtins.bool"builtins.bool *ó
list_templates-jinja2.environment.Environment.list_templates"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*†

extensionsç
+Union[typing.Collection[builtins.str],None]R
typing.Collection[builtins.str]
builtins.str"builtins.str"typing.Collection
None *ö
filter_funcÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *Ò
handle_exception/jinja2.environment.Environment.handle_exception"
NoReturn
*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*R
sourceD
Union[builtins.str,None]
builtins.str"builtins.str
None *ı
	join_path(jinja2.environment.Environment.join_path"
builtins.str"builtins.str*J
self@
jinja2.environment.Environment"jinja2.environment.Environment**
template
builtins.str"builtins.str*(
parent
builtins.str"builtins.str*«
_load_template-jinja2.environment.Environment._load_template":
jinja2.environment.Template"jinja2.environment.Template*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*&
name
builtins.str"builtins.str*∏
globals™
3Union[typing.MutableMapping[builtins.str,Any],None]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping
None0:jinja2.utils.internalcode*å
get_template+jinja2.environment.Environment.get_template":
jinja2.environment.Template"jinja2.environment.Template*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*ò
nameç
/Union[builtins.str,jinja2.environment.Template]
builtins.str"builtins.str:
jinja2.environment.Template"jinja2.environment.Template*R
parentD
Union[builtins.str,None]
builtins.str"builtins.str
None *∫
globals™
3Union[typing.MutableMapping[builtins.str,Any],None]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping
None 0:jinja2.utils.internalcode*È
select_template.jinja2.environment.Environment.select_template":
jinja2.environment.Template"jinja2.environment.Template*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*Ô
names„
@typing.Iterable[Union[builtins.str,jinja2.environment.Template]]ç
/Union[builtins.str,jinja2.environment.Template]
builtins.str"builtins.str:
jinja2.environment.Template"jinja2.environment.Template"typing.Iterable*R
parentD
Union[builtins.str,None]
builtins.str"builtins.str
None *∫
globals™
3Union[typing.MutableMapping[builtins.str,Any],None]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping
None 0:jinja2.utils.internalcode*“
get_or_select_template5jinja2.environment.Environment.get_or_select_template":
jinja2.environment.Template"jinja2.environment.Template*J
self@
jinja2.environment.Environment"jinja2.environment.Environment* 
template_name_or_listÆ
nUnion[builtins.str,jinja2.environment.Template,builtins.list[Union[builtins.str,jinja2.environment.Template]]]
builtins.str"builtins.str:
jinja2.environment.Template"jinja2.environment.Templateﬂ
>builtins.list[Union[builtins.str,jinja2.environment.Template]]ç
/Union[builtins.str,jinja2.environment.Template]
builtins.str"builtins.str:
jinja2.environment.Template"jinja2.environment.Template"builtins.list*R
parentD
Union[builtins.str,None]
builtins.str"builtins.str
None *∫
globals™
3Union[typing.MutableMapping[builtins.str,Any],None]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping
None 0:jinja2.utils.internalcode*∆
from_string*jinja2.environment.Environment.from_string":
jinja2.environment.Template"jinja2.environment.Template*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*á
source{
)Union[builtins.str,jinja2.nodes.Template]
builtins.str"builtins.str.
jinja2.nodes.Template"jinja2.nodes.Template*∫
globals™
3Union[typing.MutableMapping[builtins.str,Any],None]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping
None *ª
template_class§
-Union[Type[jinja2.environment.Template],None]g
!Type[jinja2.environment.Template]:
jinja2.environment.Template"jinja2.environment.Template"type
None *•
make_globals+jinja2.environment.Environment.make_globals"g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*≤
d™
3Union[typing.MutableMapping[builtins.str,Any],None]g
'typing.MutableMapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.MutableMapping
None2Ò	
compile&jinja2.environment.Environment.compileﬂ
compile&jinja2.environment.Environment.compile" 
types.CodeType"types.CodeType*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*á
source{
)Union[builtins.str,jinja2.nodes.Template]
builtins.str"builtins.str.
jinja2.nodes.Template"jinja2.nodes.Template*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None *E
raw:
Literal[builtins.bool]	
builtins.bool"builtins.bool *0

defer_init
builtins.bool"builtins.bool 0:typing.overloadX€
compile&jinja2.environment.Environment.compile"
builtins.str"builtins.str*J
self@
jinja2.environment.Environment"jinja2.environment.Environment*á
source{
)Union[builtins.str,jinja2.nodes.Template]
builtins.str"builtins.str.
jinja2.nodes.Template"jinja2.nodes.Template*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
filenameD
Union[builtins.str,None]
builtins.str"builtins.str
None *E
raw:
Literal[builtins.bool]	
builtins.bool"builtins.bool *0

defer_init
builtins.bool"builtins.bool 0:typing.overloadXrU
	sandboxed(jinja2.environment.Environment.sandboxed
builtins.bool"builtins.boolrU
	overlayed(jinja2.environment.Environment.overlayed
builtins.bool"builtins.boolr±
	linked_to(jinja2.environment.Environment.linked_toz
*Union[jinja2.environment.Environment,None]@
jinja2.environment.Environment"jinja2.environment.Environment
NonerO
shared%jinja2.environment.Environment.shared
builtins.bool"builtins.boolr∫
code_generator_class3jinja2.environment.Environment.code_generator_classm
#Type[jinja2.compiler.CodeGenerator]>
jinja2.compiler.CodeGenerator"jinja2.compiler.CodeGenerator"typer|
concat%jinja2.environment.Environment.concatK
CallableType[builtins.function]&
builtins.function"builtins.functionró
context_class,jinja2.environment.Environment.context_classX
Type[jinja2.runtime.Context]0
jinja2.runtime.Context"jinja2.runtime.Context"typer®
template_class-jinja2.environment.Environment.template_classg
!Type[jinja2.environment.Template]:
jinja2.environment.Template"jinja2.environment.Template"typere
block_start_string1jinja2.environment.Environment.block_start_string
builtins.str"builtins.strra
block_end_string/jinja2.environment.Environment.block_end_string
builtins.str"builtins.strrk
variable_start_string4jinja2.environment.Environment.variable_start_string
builtins.str"builtins.strrg
variable_end_string2jinja2.environment.Environment.variable_end_string
builtins.str"builtins.strri
comment_start_string3jinja2.environment.Environment.comment_start_string
builtins.str"builtins.strre
comment_end_string1jinja2.environment.Environment.comment_end_string
builtins.str"builtins.strrì
line_statement_prefix4jinja2.environment.Environment.line_statement_prefixD
Union[builtins.str,None]
builtins.str"builtins.str
Nonerè
line_comment_prefix2jinja2.environment.Environment.line_comment_prefixD
Union[builtins.str,None]
builtins.str"builtins.str
NonerY
trim_blocks*jinja2.environment.Environment.trim_blocks
builtins.bool"builtins.boolr]
lstrip_blocks,jinja2.environment.Environment.lstrip_blocks
builtins.bool"builtins.boolrΩ
newline_sequence/jinja2.environment.Environment.newline_sequence˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strrm
keep_trailing_newline4jinja2.environment.Environment.keep_trailing_newline
builtins.bool"builtins.boolrï
	undefined(jinja2.environment.Environment.undefined^
Type[jinja2.runtime.Undefined]4
jinja2.runtime.Undefined"jinja2.runtime.Undefined"typerU
	optimized(jinja2.environment.Environment.optimized
builtins.bool"builtins.boolrº
finalize'jinja2.environment.Environment.finalizeÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Nonerﬂ

autoescape)jinja2.environment.Environment.autoescape•
4Union[builtins.bool,CallableType[builtins.function]]
builtins.bool"builtins.boolK
CallableType[builtins.function]&
builtins.function"builtins.functionrä
filters&jinja2.environment.Environment.filtersW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr¥
tests$jinja2.environment.Environment.testsÑ
-builtins.dict[builtins.str,builtins.function]
builtins.str"builtins.str&
builtins.function"builtins.function"builtins.dictr±
globals&jinja2.environment.Environment.globals~
+builtins.dict[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"builtins.dictrú
loader%jinja2.environment.Environment.loaderk
%Union[jinja2.loaders.BaseLoader,None]6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader
Noner˙
cache$jinja2.environment.Environment.cache 
nUnion[typing.MutableMapping[Tuple[_weakref.ReferenceType[Any],builtins.str],jinja2.environment.Template],None]À
btyping.MutableMapping[Tuple[_weakref.ReferenceType[Any],builtins.str],jinja2.environment.Template]ë
/Tuple[_weakref.ReferenceType[Any],builtins.str]>
_weakref.ReferenceType[Any]
Any"_weakref.ReferenceType
builtins.str"builtins.str:
jinja2.environment.Template"jinja2.environment.Template"typing.MutableMapping
Nonerµ
bytecode_cache-jinja2.environment.Environment.bytecode_cachet
(Union[jinja2.bccache.BytecodeCache,None]<
jinja2.bccache.BytecodeCache"jinja2.bccache.BytecodeCache
NonerY
auto_reload*jinja2.environment.Environment.auto_reload
builtins.bool"builtins.boolrå
policies'jinja2.environment.Environment.policiesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr«

extensions)jinja2.environment.Environment.extensionsç
0builtins.dict[builtins.str,jinja2.ext.Extension]
builtins.str"builtins.str,
jinja2.ext.Extension"jinja2.ext.Extension"builtins.dictrS
is_async'jinja2.environment.Environment.is_async
builtins.bool"builtins.bool·
Environmentflask.templating.Environment"jinja2.environment.Environment*∆
__init__%flask.templating.Environment.__init__"
None*F
self<
flask.templating.Environment"flask.templating.Environment*+
app"
flask.app.Flask"flask.app.Flask*
options
AnyrK
app flask.templating.Environment.app"
flask.app.Flask"flask.app.Flask‘
DispatchingJinjaLoader'flask.templating.DispatchingJinjaLoader"jinja2.loaders.BaseLoader*—
__init__0flask.templating.DispatchingJinjaLoader.__init__"
None*\
selfR
'flask.templating.DispatchingJinjaLoader"'flask.templating.DispatchingJinjaLoader*+
app"
flask.app.Flask"flask.app.Flask*Â

get_source2flask.templating.DispatchingJinjaLoader.get_source"…
XTuple[builtins.str,Union[builtins.str,None],Union[CallableType[builtins.function],None]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
NoneÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*\
selfR
'flask.templating.DispatchingJinjaLoader"'flask.templating.DispatchingJinjaLoader*M
environment<
flask.templating.Environment"flask.templating.Environment**
template
builtins.str"builtins.str*˚
_get_source_explained=flask.templating.DispatchingJinjaLoader._get_source_explained"…
XTuple[builtins.str,Union[builtins.str,None],Union[CallableType[builtins.function],None]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
NoneÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*\
selfR
'flask.templating.DispatchingJinjaLoader"'flask.templating.DispatchingJinjaLoader*M
environment<
flask.templating.Environment"flask.templating.Environment**
template
builtins.str"builtins.str*Ò
_get_source_fast8flask.templating.DispatchingJinjaLoader._get_source_fast"…
XTuple[builtins.str,Union[builtins.str,None],Union[CallableType[builtins.function],None]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
NoneÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None*\
selfR
'flask.templating.DispatchingJinjaLoader"'flask.templating.DispatchingJinjaLoader*M
environment<
flask.templating.Environment"flask.templating.Environment**
template
builtins.str"builtins.str*˙
_iter_loaders5flask.templating.DispatchingJinjaLoader._iter_loaders"ß
Ttyping.Generator[Tuple[flask.scaffold.Scaffold,jinja2.loaders.BaseLoader],None,None]®
8Tuple[flask.scaffold.Scaffold,jinja2.loaders.BaseLoader]2
flask.scaffold.Scaffold"flask.scaffold.Scaffold6
jinja2.loaders.BaseLoader"jinja2.loaders.BaseLoader
None
None"typing.Generator*\
selfR
'flask.templating.DispatchingJinjaLoader"'flask.templating.DispatchingJinjaLoader**
template
builtins.str"builtins.str*Ú
list_templates6flask.templating.DispatchingJinjaLoader.list_templates"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*\
selfR
'flask.templating.DispatchingJinjaLoader"'flask.templating.DispatchingJinjaLoaderrV
app+flask.templating.DispatchingJinjaLoader.app"
flask.app.Flask"flask.app.Flask¨
_default_template_ctx_processor0flask.templating._default_template_ctx_processor"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictû
_renderflask.templating._render"
builtins.str"builtins.str*+
app"
flask.app.Flask"flask.app.Flask*H
template:
jinja2.environment.Template"jinja2.environment.Template*d
contextW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict¥
render_template flask.templating.render_template"
builtins.str"builtins.str* 
template_name_or_listÆ
nUnion[builtins.str,jinja2.environment.Template,builtins.list[Union[builtins.str,jinja2.environment.Template]]]
builtins.str"builtins.str:
jinja2.environment.Template"jinja2.environment.Templateﬂ
>builtins.list[Union[builtins.str,jinja2.environment.Template]]ç
/Union[builtins.str,jinja2.environment.Template]
builtins.str"builtins.str:
jinja2.environment.Template"jinja2.environment.Template"builtins.list*
context
Anyü
render_template_string'flask.templating.render_template_string"
builtins.str"builtins.str*(
source
builtins.str"builtins.str*
context
Any–
_streamflask.templating._stream"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*+
app"
flask.app.Flask"flask.app.Flask*H
template:
jinja2.environment.Template"jinja2.environment.Template*d
contextW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictÊ
stream_template flask.templating.stream_template"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator* 
template_name_or_listÆ
nUnion[builtins.str,jinja2.environment.Template,builtins.list[Union[builtins.str,jinja2.environment.Template]]]
builtins.str"builtins.str:
jinja2.environment.Template"jinja2.environment.Templateﬂ
>builtins.list[Union[builtins.str,jinja2.environment.Template]]ç
/Union[builtins.str,jinja2.environment.Template]
builtins.str"builtins.str:
jinja2.environment.Template"jinja2.environment.Template"builtins.list*
context
Any—
stream_template_string'flask.templating.stream_template_string"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*(
source
builtins.str"builtins.str*
context
Any*å
__annotations__ flask.templating.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
ttyping 