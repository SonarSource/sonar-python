
'sklearn.datasets._species_distributions¼
BytesIO
io.BytesIO"io.BufferedIOBase"typing.BinaryIO*¼
__init__io.BytesIO.__init__"
None*"
self

io.BytesIO"
io.BytesIO*ì
initial_bytesÖ
–TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]ž
‹Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesé
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]Ò
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer *™
	__enter__io.BytesIO.__enter__"9
io.BytesIO.Self

io.BytesIO"
io.BytesIO"
io.BytesIO*;9
io.BytesIO.Self

io.BytesIO"
io.BytesIO"
io.BytesIO*e
getvalueio.BytesIO.getvalue" 
builtins.bytes"builtins.bytes*"
self

io.BytesIO"
io.BytesIO*q
	getbufferio.BytesIO.getbuffer"*
builtins.memoryview"builtins.memoryview*"
self

io.BytesIO"
io.BytesIO*©
read1io.BytesIO.read1" 
builtins.bytes"builtins.bytes*"
self

io.BytesIO"
io.BytesIO*HD
Union[builtins.int,None]
builtins.int"builtins.int
None r 
nameio.BytesIO.name
Any¿
makedirsos.makedirs"
None*Á
name¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*(
mode
builtins.int"builtins.int *.
exist_ok
builtins.bool"builtins.bool µ
remove	os.remove"
None*Á
path¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*R
dir_fdD
Union[builtins.int,None]
builtins.int"builtins.int
None Æ
existsgenericpath.exists"
builtins.bool"builtins.bool*‡
pathü
‚TypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]Ò
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int¶
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]²
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPathª
get_data_home$sklearn.datasets._base.get_data_home"
builtins.str"builtins.str*U
	data_homeD
Union[None,builtins.str]
None
builtins.str"builtins.str ™
construct_grids7sklearn.datasets._species_distributions.construct_grids"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*
batch
Any®
fetch_species_distributionsCsklearn.datasets._species_distributions.fetch_species_distributions"8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch*U
	data_homeD
Union[None,builtins.str]
None
builtins.str"builtins.str *9
download_if_missing
builtins.bool"builtins.bool *£
__annotations__7sklearn.datasets._species_distributions.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*A
joblib.sklearn.datasets._species_distributions.joblib
Any*
npnumpy *g
RemoteFileMetadata)sklearn.datasets._base.RemoteFileMetadata&
builtins.ellipsis"builtins.ellipsis*b
SAMPLES/sklearn.datasets._species_distributions.SAMPLES&
builtins.ellipsis"builtins.ellipsis*f
	COVERAGES1sklearn.datasets._species_distributions.COVERAGES&
builtins.ellipsis"builtins.ellipsis*l
DATA_ARCHIVE_NAME9sklearn.datasets._species_distributions.DATA_ARCHIVE_NAME
builtins.str"builtins.str*`
logger.sklearn.datasets._species_distributions.logger&
builtins.ellipsis"builtins.ellipsis