
pathlib▀0
PurePathpathlib.PurePath"os.PathLike*┤
partspathlib.PurePath.parts"L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`*Д
drivepathlib.PurePath.drive"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`*В
rootpathlib.PurePath.root"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`*Ж
anchorpathlib.PurePath.anchor"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`*В
namepathlib.PurePath.name"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`*Ж
suffixpathlib.PurePath.suffix"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`*╕
suffixespathlib.PurePath.suffixes"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`*В
stempathlib.PurePath.stem"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`*ё
__new__pathlib.PurePath.__new__"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*Б
clsx
Type[pathlib.PurePath.Self]Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath"type*Ї
argsщ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]Ч
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*П
__eq__pathlib.PurePath.__eq__"
builtins.bool"builtins.bool*&$
pathlib.PurePath"pathlib.PurePath*$"
builtins.object"builtins.object*w

__fspath__pathlib.PurePath.__fspath__"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath*С
__lt__pathlib.PurePath.__lt__"
builtins.bool"builtins.bool*&$
pathlib.PurePath"pathlib.PurePath*&$
pathlib.PurePath"pathlib.PurePath*С
__le__pathlib.PurePath.__le__"
builtins.bool"builtins.bool*&$
pathlib.PurePath"pathlib.PurePath*&$
pathlib.PurePath"pathlib.PurePath*С
__gt__pathlib.PurePath.__gt__"
builtins.bool"builtins.bool*&$
pathlib.PurePath"pathlib.PurePath*&$
pathlib.PurePath"pathlib.PurePath*С
__ge__pathlib.PurePath.__ge__"
builtins.bool"builtins.bool*&$
pathlib.PurePath"pathlib.PurePath*&$
pathlib.PurePath"pathlib.PurePath*┬
__truediv__pathlib.PurePath.__truediv__"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*SQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*ьщ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]Ч
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*─
__rtruediv__pathlib.PurePath.__rtruediv__"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*SQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*ьщ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]Ч
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*y
	__bytes__pathlib.PurePath.__bytes__" 
builtins.bytes"builtins.bytes*.
self$
pathlib.PurePath"pathlib.PurePath*s
as_posixpathlib.PurePath.as_posix"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath*o
as_uripathlib.PurePath.as_uri"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath*{
is_absolutepathlib.PurePath.is_absolute"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePath*{
is_reservedpathlib.PurePath.is_reserved"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePath*Я
matchpathlib.PurePath.match"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePath*.
path_pattern
builtins.str"builtins.str*╙
relative_topathlib.PurePath.relative_to"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*ї
otherщ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]Ч
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath* 
	with_namepathlib.PurePath.with_name"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*&
name
builtins.str"builtins.str*Е
with_suffixpathlib.PurePath.with_suffix"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*(
suffix
builtins.str"builtins.str*═
joinpathpathlib.PurePath.joinpath"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*ї
otherщ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]Ч
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*ж
parentspathlib.PurePath.parents"М
&typing.Sequence[pathlib.PurePath.Self]Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath"typing.Sequence*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath0:builtins.property`*ш
parentpathlib.PurePath.parent"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath0:builtins.property`8
PurePosixPathpathlib.PurePosixPath"pathlib.PurePath<
PureWindowsPathpathlib.PureWindowsPath"pathlib.PurePathДа
Pathpathlib.Path"pathlib.PurePath*▌
__new__pathlib.Path.__new__"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*m
clsd
Type[pathlib.Path.Self]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path"type*Ї
argsщ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]Ч
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*
kwargs
Any*л
	__enter__pathlib.Path.__enter__"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*CA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*д
__exit__pathlib.Path.__exit__"
None*
pathlib.Path"pathlib.Path*УР
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*у
cwdpathlib.Path.cwd"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*m
clsd
Type[pathlib.Path.Self]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path"type0:builtins.classmethodp*└
statpathlib.Path.stat"№
ЩTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]╦
ОTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result*&
self
pathlib.Path"pathlib.Path*u
chmodpathlib.Path.chmod"
None*&
self
pathlib.Path"pathlib.Path*&
mode
builtins.int"builtins.int*e
existspathlib.Path.exists"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*м
globpathlib.Path.glob"Ш
-typing.Generator[pathlib.Path.Self,None,None]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path
None
None"typing.Generator*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*)
pattern
builtins.str"builtins.str*e
is_dirpathlib.Path.is_dir"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*g
is_filepathlib.Path.is_file"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*m

is_symlinkpathlib.Path.is_symlink"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*k
	is_socketpathlib.Path.is_socket"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*g
is_fifopathlib.Path.is_fifo"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*w
is_block_devicepathlib.Path.is_block_device"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*u
is_char_devicepathlib.Path.is_char_device"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*З
iterdirpathlib.Path.iterdir"Ш
-typing.Generator[pathlib.Path.Self,None,None]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path
None
None"typing.Generator*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*w
lchmodpathlib.Path.lchmod"
None*&
self
pathlib.Path"pathlib.Path*&
mode
builtins.int"builtins.int*┬
lstatpathlib.Path.lstat"№
ЩTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]╦
ОTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result*&
self
pathlib.Path"pathlib.Path*╓
mkdirpathlib.Path.mkdir"
None*&
self
pathlib.Path"pathlib.Path*(
mode
builtins.int"builtins.int *-
parents
builtins.bool"builtins.bool *.
exist_ok
builtins.bool"builtins.bool *a
ownerpathlib.Path.owner"
builtins.str"builtins.str*&
self
pathlib.Path"pathlib.Path*a
grouppathlib.Path.group"
builtins.str"builtins.str*&
self
pathlib.Path"pathlib.Path*i
is_mountpathlib.Path.is_mount"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*з
renamepathlib.Path.rename"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*x
targetl
$Union[builtins.str,pathlib.PurePath]
builtins.str"builtins.str$
pathlib.PurePath"pathlib.PurePath*й
replacepathlib.Path.replace"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*x
targetl
$Union[builtins.str,pathlib.PurePath]
builtins.str"builtins.str$
pathlib.PurePath"pathlib.PurePath*▌
resolvepathlib.Path.resolve"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*,
strict
builtins.bool"builtins.bool *о
rglobpathlib.Path.rglob"Ш
-typing.Generator[pathlib.Path.Self,None,None]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path
None
None"typing.Generator*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*)
pattern
builtins.str"builtins.str*M
rmdirpathlib.Path.rmdir"
None*&
self
pathlib.Path"pathlib.Path*╪

symlink_topathlib.Path.symlink_to"
None*&
self
pathlib.Path"pathlib.Path*├
target╢
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]▓
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*9
target_is_directory
builtins.bool"builtins.bool *з
touchpathlib.Path.touch"
None*&
self
pathlib.Path"pathlib.Path*(
mode
builtins.int"builtins.int *.
exist_ok
builtins.bool"builtins.bool *Б
unlinkpathlib.Path.unlink"
None*&
self
pathlib.Path"pathlib.Path*0

missing_ok
builtins.bool"builtins.bool *х
homepathlib.Path.home"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*m
clsd
Type[pathlib.Path.Self]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path"type0:builtins.classmethodp*▒
absolutepathlib.Path.absolute"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*╡

expanduserpathlib.Path.expanduser"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*o

read_bytespathlib.Path.read_bytes" 
builtins.bytes"builtins.bytes*&
self
pathlib.Path"pathlib.Path*У
	read_textpathlib.Path.read_text"
builtins.str"builtins.str*&
self
pathlib.Path"pathlib.Path*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *ц
samefilepathlib.Path.samefile"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*·

other_pathщ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]Ч
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*╤
write_bytespathlib.Path.write_bytes"
builtins.int"builtins.int*&
self
pathlib.Path"pathlib.Path*с
data╓
ЦTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]Ю
ЛUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesщ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]╥
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*╜

write_textpathlib.Path.write_text"
builtins.int"builtins.int*&
self
pathlib.Path"pathlib.Path*&
data
builtins.str"builtins.str*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ч
link_topathlib.Path.link_to"
None*&
self
pathlib.Path"pathlib.Path*├
target╢
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]▓
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath2ч╧
openpathlib.Path.open║B
openpathlib.Path.open"$
io.TextIOWrapper"io.TextIOWrapper*&
self
pathlib.Path"pathlib.Path*Н?
modeА?
╒	TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]Л5
╩	Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]ф
╤TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ы
╞Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeUpdating╨
╫TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]╥
╠Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeWriting 	
ЩTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]┐
ОUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeReading"_typeshed.OpenTextMode *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadXШ0
openpathlib.Path.open"
	io.FileIO"	io.FileIO*&
self
pathlib.Path"pathlib.Path*Ф.
modeЙ.
ЛTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]▄&
АUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]╛
бTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]є
ЦUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingэ
┴TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Г
╢Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReadingг
ХTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]х
КUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*F
	buffering7
Literal[builtins.int]	
builtins.int"builtins.int*
encoding
None *
errors
None *
newline
None 0:typing.overloadX╥
openpathlib.Path.open"&
io.BufferedRandom"io.BufferedRandom*&
self
pathlib.Path"pathlib.Path*╔
mode╛
бTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]є
ЦUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdating*║
	bufferingи
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:typing.overloadX╖
openpathlib.Path.open"&
io.BufferedWriter"io.BufferedWriter*&
self
pathlib.Path"pathlib.Path*о
modeг
ХTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]х
КUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting*║
	bufferingи
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:typing.overloadXБ

openpathlib.Path.open"&
io.BufferedReader"io.BufferedReader*&
self
pathlib.Path"pathlib.Path*°
modeэ
┴TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Г
╢Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading*║
	bufferingи
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:typing.overloadXЛ0
openpathlib.Path.open""
typing.BinaryIO"typing.BinaryIO*&
self
pathlib.Path"pathlib.Path*Ф.
modeЙ.
ЛTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]▄&
АUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]╛
бTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]є
ЦUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingэ
┴TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Г
╢Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReadingг
ХTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]х
КUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*-
	buffering
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:typing.overloadX╥
openpathlib.Path.open"$
typing.IO[Any]
Any"	typing.IO*&
self
pathlib.Path"pathlib.Path*&
mode
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadXC
	PosixPathpathlib.PosixPath"pathlib.Path"pathlib.PurePosixPathI
WindowsPathpathlib.WindowsPath"pathlib.Path"pathlib.PureWindowsPath*Г
__annotations__pathlib.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*f
__all__pathlib.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list