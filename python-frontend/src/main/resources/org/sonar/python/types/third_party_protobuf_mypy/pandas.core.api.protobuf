
pandas.core.apiÕÃ
Categorical*pandas.core.arrays.categorical.Categorical"&pandas.core.arrays.base.ExtensionArray*›
__init__3pandas.core.arrays.categorical.Categorical.__init__"
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*\
valuesP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object*

categories
Any *V
orderedG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *¨
dtypeû
6Union[pandas.core.dtypes.dtypes.CategoricalDtype,None]X
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype
None *.
fastpath
builtins.bool"builtins.bool *d

categories5pandas.core.arrays.categorical.Categorical.categories*
self0:builtins.property`*ƒ
ordered2pandas.core.arrays.categorical.Categorical.ordered"â
$TypeAlias[Union[builtins.bool,None]]G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None"pandas._typing.Ordered*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical0:builtins.property`*é
dtype0pandas.core.arrays.categorical.Categorical.dtype"X
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical0:builtins.property`*¿
astype1pandas.core.arrays.categorical.Categorical.astype"≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*™	
dtypeû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype**
copy
builtins.bool"builtins.bool *π
size/pandas.core.arrays.categorical.Categorical.size"
builtins.int"builtins.int*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*¡
itemsize3pandas.core.arrays.categorical.Categorical.itemsize"
builtins.int"builtins.int*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*ö
tolist1pandas.core.arrays.categorical.Categorical.tolist"¯
±builtins.list[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar"builtins.list*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*ç

from_codes5pandas.core.arrays.categorical.Categorical.from_codes"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*û
clsî
0Type[pandas.core.arrays.categorical.Categorical]X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical"type*Y
codesN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence*†

categoriesç
/Union[pandas.core.indexes.base.Index[Any],None]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index
None *V
orderedG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *¨
dtypeû
6Union[pandas.core.dtypes.dtypes.CategoricalDtype,None]X
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype
None *.
fastpath
builtins.bool"builtins.bool 0:builtins.classmethodp*æ
codes0pandas.core.arrays.categorical.Categorical.codes"á
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_int*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical0:builtins.property`*ó
set_ordered6pandas.core.arrays.categorical.Categorical.set_ordered"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
value
Any*Å

as_ordered5pandas.core.arrays.categorical.Categorical.as_ordered"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*Ö
as_unordered7pandas.core.arrays.categorical.Categorical.as_unordered"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*K
map.pandas.core.arrays.categorical.Categorical.map*
self*

mapper*¬
__eq__1pandas.core.arrays.categorical.Categorical.__eq__"
builtins.bool"builtins.bool*ZX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*	
Any*¬
__ne__1pandas.core.arrays.categorical.Categorical.__ne__"
builtins.bool"builtins.bool*ZX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*	
Any*¬
__lt__1pandas.core.arrays.categorical.Categorical.__lt__"
builtins.bool"builtins.bool*ZX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*	
Any*¬
__gt__1pandas.core.arrays.categorical.Categorical.__gt__"
builtins.bool"builtins.bool*ZX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*	
Any*¬
__le__1pandas.core.arrays.categorical.Categorical.__le__"
builtins.bool"builtins.bool*ZX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*	
Any*¬
__ge__1pandas.core.arrays.categorical.Categorical.__ge__"
builtins.bool"builtins.bool*ZX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*	
Any*Z
shape0pandas.core.arrays.categorical.Categorical.shape*
self0:builtins.property`*d
shift0pandas.core.arrays.categorical.Categorical.shift*
self*
periods *

fill_value *ˆ
	__array__4pandas.core.arrays.categorical.Categorical.__array__"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
dtype
Any *Ü
__array_ufunc__:pandas.core.arrays.categorical.Categorical.__array_ufunc__*
self*	
ufunc*

method*

inputs*

kwargs*R
T,pandas.core.arrays.categorical.Categorical.T*
self0:builtins.property`*‘
nbytes1pandas.core.arrays.categorical.Categorical.nbytes"
builtins.int"builtins.int*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical0:builtins.property`*‡
memory_usage7pandas.core.arrays.categorical.Categorical.memory_usage"
Any*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical**
deep
builtins.bool"builtins.bool *â
searchsorted7pandas.core.arrays.categorical.Categorical.searchsorted"
Any*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
value
Any*(
side
builtins.str"builtins.str *
sorter
Any *¶
isna/pandas.core.arrays.categorical.Categorical.isna"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*™
isnull1pandas.core.arrays.categorical.Categorical.isnull"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*®
notna0pandas.core.arrays.categorical.Categorical.notna"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*¨
notnull2pandas.core.arrays.categorical.Categorical.notnull"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*E
dropna1pandas.core.arrays.categorical.Categorical.dropna*
self*‚
value_counts7pandas.core.arrays.categorical.Categorical.value_counts"
Any*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*,
dropna
builtins.bool"builtins.bool *–
check_for_ordered<pandas.core.arrays.categorical.Categorical.check_for_ordered"
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
op
Any*ö
argsort2pandas.core.arrays.categorical.Categorical.argsort"
Any*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*/
	ascending
builtins.bool"builtins.bool *(
kind
builtins.str"builtins.str *
kwargs
Any*√
sort_values6pandas.core.arrays.categorical.Categorical.sort_values"
Any*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*-
inplace
builtins.bool"builtins.bool */
	ascending
builtins.bool"builtins.bool */
na_position
builtins.str"builtins.str *N
view/pandas.core.arrays.categorical.Categorical.view*
self*
dtype *I
to_dense3pandas.core.arrays.categorical.Categorical.to_dense*
self*m
fillna1pandas.core.arrays.categorical.Categorical.fillna*
self*
value *
method *
limit *˚	
take/pandas.core.arrays.categorical.Categorical.take"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*∂
indexer®
ßTypeAlias[Union[typing.Sequence[builtins.int],typing.Sequence[numpy.integer[Any]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]›
úUnion[typing.Sequence[builtins.int],typing.Sequence[numpy.integer[Any]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]N
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequenced
#typing.Sequence[numpy.integer[Any]],
numpy.integer[Any]
Any"numpy.integer"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.TakeIndexer*0

allow_fill
builtins.bool"builtins.bool *

fill_value
Any *ç
take_nd2pandas.core.arrays.categorical.Categorical.take_nd"
Any*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
indexer
Any*0

allow_fill
builtins.bool"builtins.bool *

fill_value
Any *∑
__len__2pandas.core.arrays.categorical.Categorical.__len__"
builtins.int"builtins.int*ZX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*A
__iter__3pandas.core.arrays.categorical.Categorical.__iter__* *Œ
__contains__7pandas.core.arrays.categorical.Categorical.__contains__"
builtins.bool"builtins.bool*ZX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*	
Any*I
__getitem__6pandas.core.arrays.categorical.Categorical.__getitem__* * *¡
__setitem__6pandas.core.arrays.categorical.Categorical.__setitem__"
None*ZX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*	
Any*	
Any*–
min.pandas.core.arrays.categorical.Categorical.min"
Any*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*,
skipna
builtins.bool"builtins.bool *–
max.pandas.core.arrays.categorical.Categorical.max"
Any*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*,
skipna
builtins.bool"builtins.bool *“
mode/pandas.core.arrays.categorical.Categorical.mode"
Any*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*,
dropna
builtins.bool"builtins.bool *E
unique1pandas.core.arrays.categorical.Categorical.unique*
self*P
equals1pandas.core.arrays.categorical.Categorical.equals*
self*	
other*`
is_dtype_equal9pandas.core.arrays.categorical.Categorical.is_dtype_equal*
self*	
other*I
describe3pandas.core.arrays.categorical.Categorical.describe*
self*^
repeat1pandas.core.arrays.categorical.Categorical.repeat*
self*
repeats*

axis *M
isin/pandas.core.arrays.categorical.Categorical.isin*
self*

values2ë
set_categories9pandas.core.arrays.categorical.Categorical.set_categories˙
set_categories9pandas.core.arrays.categorical.Categorical.set_categories"
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*
ordered
Any *,
rename
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXÃ
set_categories9pandas.core.arrays.categorical.Categorical.set_categories"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*
ordered
Any *,
rename
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX˜
set_categories9pandas.core.arrays.categorical.Categorical.set_categories"û
6Union[pandas.core.arrays.categorical.Categorical,None]X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*
ordered
Any *,
rename
builtins.bool"builtins.bool *-
inplace
builtins.bool"builtins.bool 0:typing.overloadX2◊	
rename_categories<pandas.core.arrays.categorical.Categorical.rename_categories∫
rename_categories<pandas.core.arrays.categorical.Categorical.rename_categories"
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXå
rename_categories<pandas.core.arrays.categorical.Categorical.rename_categories"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX∑
rename_categories<pandas.core.arrays.categorical.Categorical.rename_categories"û
6Union[pandas.core.arrays.categorical.Categorical,None]X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*-
inplace
builtins.bool"builtins.bool 0:typing.overloadX2ß

reorder_categories=pandas.core.arrays.categorical.Categorical.reorder_categories‘
reorder_categories=pandas.core.arrays.categorical.Categorical.reorder_categories"
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*
ordered
Any *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadX¶
reorder_categories=pandas.core.arrays.categorical.Categorical.reorder_categories"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*
ordered
Any *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX—
reorder_categories=pandas.core.arrays.categorical.Categorical.reorder_categories"û
6Union[pandas.core.arrays.categorical.Categorical,None]X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*
ordered
Any *-
inplace
builtins.bool"builtins.bool 0:typing.overloadX2ø	
add_categories9pandas.core.arrays.categorical.Categorical.add_categories¥
add_categories9pandas.core.arrays.categorical.Categorical.add_categories"
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXÜ
add_categories9pandas.core.arrays.categorical.Categorical.add_categories"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX±
add_categories9pandas.core.arrays.categorical.Categorical.add_categories"û
6Union[pandas.core.arrays.categorical.Categorical,None]X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
new_categories
Any*-
inplace
builtins.bool"builtins.bool 0:typing.overloadX2≈	
remove_categories<pandas.core.arrays.categorical.Categorical.remove_categories¥
remove_categories<pandas.core.arrays.categorical.Categorical.remove_categories"
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
removals
Any*G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXÜ
remove_categories<pandas.core.arrays.categorical.Categorical.remove_categories"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
removals
Any*I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX±
remove_categories<pandas.core.arrays.categorical.Categorical.remove_categories"û
6Union[pandas.core.arrays.categorical.Categorical,None]X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*
removals
Any*-
inplace
builtins.bool"builtins.bool 0:typing.overloadX2∏	
remove_unused_categoriesCpandas.core.arrays.categorical.Categorical.remove_unused_categories´
remove_unused_categoriesCpandas.core.arrays.categorical.Categorical.remove_unused_categories"
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadX˝
remove_unused_categoriesCpandas.core.arrays.categorical.Categorical.remove_unused_categories"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX®
remove_unused_categoriesCpandas.core.arrays.categorical.Categorical.remove_unused_categories"û
6Union[pandas.core.arrays.categorical.Categorical,None]X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical
None*b
selfX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*-
inplace
builtins.bool"builtins.bool 0:typing.overloadXrq
__array_priority__=pandas.core.arrays.categorical.Categorical.__array_priority__
builtins.int"builtins.intre
to_list2pandas.core.arrays.categorical.Categorical.to_list&
builtins.ellipsis"builtins.ellipsis¯

ArrowDtype)pandas.core.arrays.arrow.dtype.ArrowDtype"-pandas.core.dtypes.base.StorageExtensionDtype*∆
__init__2pandas.core.arrays.arrow.dtype.ArrowDtype.__init__"
None*`
selfV
)pandas.core.arrays.arrow.dtype.ArrowDtype")pandas.core.arrays.arrow.dtype.ArrowDtype*
pyarrow_dtype
Any*Û
na_value2pandas.core.arrays.arrow.dtype.ArrowDtype.na_value":
pandas._libs.missing.NAType"pandas._libs.missing.NAType*`
selfV
)pandas.core.arrays.arrow.dtype.ArrowDtype")pandas.core.arrays.arrow.dtype.ArrowDtype0:builtins.property`rQ
pyarrow_dtype7pandas.core.arrays.arrow.dtype.ArrowDtype.pyarrow_dtype
Any
BooleanDtype'pandas.core.arrays.boolean.BooleanDtype"&pandas.core.dtypes.base.ExtensionDtype*î
construct_array_type<pandas.core.arrays.boolean.BooleanDtype.construct_array_type"ã
-Type[pandas.core.arrays.boolean.BooleanArray]R
'pandas.core.arrays.boolean.BooleanArray"'pandas.core.arrays.boolean.BooleanArray"type*ï
clsã
-Type[pandas.core.arrays.boolean.BooleanDtype]R
'pandas.core.arrays.boolean.BooleanDtype"'pandas.core.arrays.boolean.BooleanDtype"type0:builtins.classmethodprx
na_value0pandas.core.arrays.boolean.BooleanDtype.na_value:
pandas._libs.missing.NAType"pandas._libs.missing.NATypea
Float32Dtype(pandas.core.arrays.floating.Float32Dtype"'pandas.core.arrays.numeric.NumericDtypea
Float64Dtype(pandas.core.arrays.floating.Float64Dtype"'pandas.core.arrays.numeric.NumericDtype[
	Int8Dtype$pandas.core.arrays.integer.Int8Dtype"(pandas.core.arrays.integer._IntegerDtype]

Int16Dtype%pandas.core.arrays.integer.Int16Dtype"(pandas.core.arrays.integer._IntegerDtype]

Int32Dtype%pandas.core.arrays.integer.Int32Dtype"(pandas.core.arrays.integer._IntegerDtype]

Int64Dtype%pandas.core.arrays.integer.Int64Dtype"(pandas.core.arrays.integer._IntegerDtype]

UInt8Dtype%pandas.core.arrays.integer.UInt8Dtype"(pandas.core.arrays.integer._IntegerDtype_
UInt16Dtype&pandas.core.arrays.integer.UInt16Dtype"(pandas.core.arrays.integer._IntegerDtype_
UInt32Dtype&pandas.core.arrays.integer.UInt32Dtype"(pandas.core.arrays.integer._IntegerDtype_
UInt64Dtype&pandas.core.arrays.integer.UInt64Dtype"(pandas.core.arrays.integer._IntegerDtype∏
StringDtype&pandas.core.arrays.string_.StringDtype"&pandas.core.dtypes.base.ExtensionDtype*Î
__init__/pandas.core.arrays.string_.StringDtype.__init__"
None*Z
selfP
&pandas.core.arrays.string_.StringDtype"&pandas.core.arrays.string_.StringDtype*«
storage∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *Í
na_value/pandas.core.arrays.string_.StringDtype.na_value":
pandas._libs.missing.NAType"pandas._libs.missing.NAType*Z
selfP
&pandas.core.arrays.string_.StringDtype"&pandas.core.arrays.string_.StringDtype0:builtins.property`˜©
	DataFramepandas.core.frame.DataFrame"pandas.core.generic.NDFrame"pandas.core.arraylike.OpsMixin*”
__dataframe__)pandas.core.frame.DataFrame.__dataframe__"l
4pandas.core.interchange.dataframe_protocol.DataFrame"4pandas.core.interchange.dataframe_protocol.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*1
nan_as_null
builtins.bool"builtins.bool *0

allow_copy
builtins.bool"builtins.bool *õ
axes pandas.core.frame.DataFrame.axes"ì
2builtins.list[pandas.core.indexes.base.Index[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"builtins.list*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*È
shape!pandas.core.frame.DataFrame.shape"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*…
style!pandas.core.frame.DataFrame.style"@
pandas.io.formats.style.Styler"pandas.io.formats.style.Styler*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*Ú
items!pandas.core.frame.DataFrame.items"ˇ
Ftyping.Iterable[Tuple[typing.Hashable,pandas.core.series.Series[Any]]]£
5Tuple[typing.Hashable,pandas.core.series.Series[Any]]"
typing.Hashable"typing.HashableD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"typing.Iterable*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*î
iterrows$pandas.core.frame.DataFrame.iterrows"õ
]typing.Iterable[Tuple[TypeAlias[Union[typing.Hashable,None]],pandas.core.series.Series[Any]]]®
LTuple[TypeAlias[Union[typing.Hashable,None]],pandas.core.series.Series[Any]]è
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.LabelD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"typing.Iterable*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ç

itertuples&pandas.core.frame.DataFrame.itertuples"
Any*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*+
index
builtins.bool"builtins.bool *P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *ä
__len__#pandas.core.frame.DataFrame.__len__"
builtins.int"builtins.int*<:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*8

__matmul__&pandas.core.frame.DataFrame.__matmul__* * *:
__rmatmul__'pandas.core.frame.DataFrame.__rmatmul__* * *Œ
	from_dict%pandas.core.frame.DataFrame.from_dict":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*p
clsg
!Type[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"type*C
data9
builtins.dict[Any,Any]
Any
Any"builtins.dict*Ü
orient˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *)
dtype
builtins.str"builtins.str *Y
columnsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list 0:builtins.classmethodp*“
to_numpy$pandas.core.frame.DataFrame.to_numpy"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¨
dtypeû
ˆUnion[TypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]],None]ñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike
None **
copy
builtins.bool"builtins.bool *√
na_value≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar *ß	
to_gbq"pandas.core.frame.DataFrame.to_gbq"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*3
destination_table
builtins.str"builtins.str*V

project_idD
Union[builtins.str,None]
builtins.str"builtins.str
None *U
	chunksizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
reauth
builtins.bool"builtins.bool *â
	if_exists˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *:
auth_local_webserver
builtins.bool"builtins.bool *®
table_schemaì
CUnion[builtins.list[builtins.dict[builtins.str,builtins.str]],None]ø
7builtins.list[builtins.dict[builtins.str,builtins.str]]u
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict"builtins.list
None *T
locationD
Union[builtins.str,None]
builtins.str"builtins.str
None *2
progress_bar
builtins.bool"builtins.bool *
credentials
Any *å
from_records(pandas.core.frame.DataFrame.from_records":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*p
clsg
!Type[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"type*
data
Any*
index
Any *
exclude
Any *
columns
Any *
coerce_float
Any *
nrows
Any 0:builtins.classmethodp*√

to_records&pandas.core.frame.DataFrame.to_records";
numpy.recarray[Any,Any]
Any
Any"numpy.recarray*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*+
index
builtins.bool"builtins.bool *≠
column_dtypesó
µUnion[builtins.str,TypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]],typing.Mapping[pandas._typing.HashableT1,Unknown],None]
builtins.str"builtins.strñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLikeô
1typing.Mapping[pandas._typing.HashableT1,Unknown]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable "typing.Mapping
None *¨
index_dtypesó
µUnion[builtins.str,TypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]],typing.Mapping[pandas._typing.HashableT2,Unknown],None]
builtins.str"builtins.strñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLikeô
1typing.Mapping[pandas._typing.HashableT2,Unknown]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable "typing.Mapping
None *≈/
to_stata$pandas.core.frame.DataFrame.to_stata"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*◊
pathÃ
jUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.bytes]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathj
*pandas._typing.WriteBuffer[builtins.bytes] 
builtins.bytes"builtins.bytes"pandas._typing.WriteBuffer*√
convert_dates≠
˙Union[builtins.dict[pandas._typing.HashableT1,TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]],None]°
Óbuiltins.dict[pandas._typing.HashableT1,TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable 
≈TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]›
∫Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.StataDateFormat"builtins.dict
None *1
write_index
builtins.bool"builtins.bool *Á
	byteorder’
cUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *e

time_stampS
Union[datetime.datetime,None]&
datetime.datetime"datetime.datetime
None *V

data_labelD
Union[builtins.str,None]
builtins.str"builtins.str
None *¢
variable_labelsä
AUnion[builtins.dict[pandas._typing.HashableT2,builtins.str],None]∏
5builtins.dict[pandas._typing.HashableT2,builtins.str]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable
builtins.str"builtins.str"builtins.dict
None *Â
version’
cUnion[Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],Literal[builtins.int],None]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int
None *Á
convert_strl“
4Union[builtins.list[pandas._typing.HashableT3],None]ç
(builtins.list[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *Ü
storage_optionsÓ
6TypeAlias[Union[builtins.dict[builtins.str,Any],None]]í
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None"pandas._typing.StorageOptions *ˆ
value_labels·
UUnion[builtins.dict[typing.Hashable,builtins.dict[builtins.float,builtins.str]],None]˚
Ibuiltins.dict[typing.Hashable,builtins.dict[builtins.float,builtins.str]]"
typing.Hashable"typing.Hashable{
*builtins.dict[builtins.float,builtins.str] 
builtins.float"builtins.float
builtins.str"builtins.str"builtins.dict"builtins.dict
None *Û

to_feather&pandas.core.frame.DataFrame.to_feather"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*◊
pathÃ
jUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.bytes]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathj
*pandas._typing.WriteBuffer[builtins.bytes] 
builtins.bytes"builtins.bytes"pandas._typing.WriteBuffer*
kwargs
Any*ˆ
info pandas.core.frame.DataFrame.info"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
verbose
Any *
buf
Any *
max_cols
Any *
memory_usage
Any *
null_counts
Any *ù
memory_usage(pandas.core.frame.DataFrame.memory_usage"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*+
index
builtins.bool"builtins.bool **
deep
builtins.bool"builtins.bool *Û
	transpose%pandas.core.frame.DataFrame.transpose":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
args
Any**
copy
builtins.bool"builtins.bool *ª
Tpandas.core.frame.DataFrame.T":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*⁄
__getattr__'pandas.core.frame.DataFrame.__getattr__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*<:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
builtins.str"builtins.str*˚
isetitem$pandas.core.frame.DataFrame.isetitem"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*≠
loc£
1Union[builtins.int,typing.Sequence[builtins.int]]
builtins.int"builtins.intN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence*»
valueº
åUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.list[Any]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike,
builtins.list[Any]
Any"builtins.list*î
__setitem__'pandas.core.frame.DataFrame.__setitem__"
None*<:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*	
Any*	
Any*„
eval pandas.core.frame.DataFrame.eval"
Any*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*&
expr
builtins.str"builtins.str*-
inplace
builtins.bool"builtins.bool *
kwargs
Any*∫
select_dtypes)pandas.core.frame.DataFrame.select_dtypes":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*º
include¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *º
exclude¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *ì
insert"pandas.core.frame.DataFrame.insert"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*%
loc
builtins.int"builtins.int*
column
Any*†
valueî
ØUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],TypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalarû
ÄTypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]]¸
uUnion[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]0
typing.Sequence[Any]
Any"typing.Sequence9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayD
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"pandas._typing.ListLikeU
None*6
allow_duplicates
builtins.bool"builtins.bool *√
assign"pandas.core.frame.DataFrame.assign":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
kwargs
Any*±
lookup"pandas.core.frame.DataFrame.lookup"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*@

row_labels0
typing.Sequence[Any]
Any"typing.Sequence*@

col_labels0
typing.Sequence[Any]
Any"typing.Sequence*∏&
align!pandas.core.frame.DataFrame.align"
:Tuple[pandas.core.frame.DataFrame,pandas._typing.NDFrameT]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFramet
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
othert
pandas._typing.NDFrameT:
pandas.core.generic.NDFrame"pandas.core.generic.NDFrame"pandas.core.generic.NDFrame*€
joinŒ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.JoinHow *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None **
copy
builtins.bool"builtins.bool *

fill_value
Any *È
method⁄
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *÷
	fill_axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *Ü
broadcast_axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *≥@
reindex#pandas.core.frame.DataFrame.reindex":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*§

labelsï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *•

columnsï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *π
method™
ãUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions7
Literal[builtins.str]	
builtins.str"builtins.str
None **
copy
builtins.bool"builtins.bool *m
level`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str *Ö

fill_valueÚ
ÆUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *[
	toleranceJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *£	
shift!pandas.core.frame.DataFrame.shift":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*+
periods
builtins.int"builtins.int *
freq
Any *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *_

fill_valueM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *™
isna pandas.core.frame.DataFrame.isna":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Æ
isnull"pandas.core.frame.DataFrame.isnull":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¨
notna!pandas.core.frame.DataFrame.notna":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*∞
notnull#pandas.core.frame.DataFrame.notnull":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame* 
drop_duplicates+pandas.core.frame.DataFrame.drop_duplicates":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
subset
Any *ç
keepÄ
RUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],builtins.bool]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition
builtins.bool"builtins.bool *-
inplace
builtins.bool"builtins.bool *2
ignore_index
builtins.bool"builtins.bool *©

duplicated&pandas.core.frame.DataFrame.duplicated"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*÷
subset«
<Union[typing.Hashable,typing.Sequence[typing.Hashable],None]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence
None *ç
keepÄ
RUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],builtins.bool]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition
builtins.bool"builtins.bool *√
value_counts(pandas.core.frame.DataFrame.value_counts"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¢
subsetì
,Union[typing.Sequence[typing.Hashable],None]W
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence
None */
	normalize
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool */
	ascending
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool *∂
nlargest$pandas.core.frame.DataFrame.nlargest":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*#
n
builtins.int"builtins.int*´
columnsù
/Union[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Æ
keep°
ZUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str]]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition7
Literal[builtins.str]	
builtins.str"builtins.str *∏
	nsmallest%pandas.core.frame.DataFrame.nsmallest":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*#
n
builtins.int"builtins.int*´
columnsù
/Union[builtins.str,builtins.list[builtins.str]]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Æ
keep°
ZUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str]]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition7
Literal[builtins.str]	
builtins.str"builtins.str *à
	swaplevel%pandas.core.frame.DataFrame.swaplevel":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ω
i≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *Ω
j≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *À
reorder_levels*pandas.core.frame.DataFrame.reorder_levels":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*7
order,
builtins.list[Any]
Any"builtins.list*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *¯
compare#pandas.core.frame.DataFrame.compare":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*E
other:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*◊

align_axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *0

keep_shape
builtins.bool"builtins.bool *0

keep_equal
builtins.bool"builtins.bool *¿
result_names´
CTypeAlias[Tuple[Union[builtins.str,None],Union[builtins.str,None]]]»
8Tuple[Union[builtins.str,None],Union[builtins.str,None]]D
Union[builtins.str,None]
builtins.str"builtins.str
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
None"pandas._typing.Suffixes *ö
combine#pandas.core.frame.DataFrame.combine":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*E
other:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*

fill_value
Any */
	overwrite
builtins.bool"builtins.bool *É
combine_first)pandas.core.frame.DataFrame.combine_first":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*E
other:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*‰
update"pandas.core.frame.DataFrame.update"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*”
other«
AUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*(
join
builtins.str"builtins.str */
	overwrite
builtins.bool"builtins.bool *ö
filter_funcÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise *∂
pivot!pandas.core.frame.DataFrame.pivot":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*™
indexú
BTypeAlias[Union[typing.Hashable,typing.Sequence[typing.Hashable]]]∏
7Union[typing.Hashable,typing.Sequence[typing.Hashable]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence"pandas._typing.IndexLabel *¨
columnsú
BTypeAlias[Union[typing.Hashable,typing.Sequence[typing.Hashable]]]∏
7Union[typing.Hashable,typing.Sequence[typing.Hashable]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence"pandas._typing.IndexLabel *´
valuesú
BTypeAlias[Union[typing.Hashable,typing.Sequence[typing.Hashable]]]∏
7Union[typing.Hashable,typing.Sequence[typing.Hashable]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence"pandas._typing.IndexLabel *Ö
pivot_table'pandas.core.frame.DataFrame.pivot_table":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
valuesD
Union[builtins.str,None]
builtins.str"builtins.str
None *â
index˚
QUnion[builtins.str,pandas.core.groupby.grouper.Grouper,typing.Sequence[Any],None]
builtins.str"builtins.strJ
#pandas.core.groupby.grouper.Grouper"#pandas.core.groupby.grouper.Grouper0
typing.Sequence[Any]
Any"typing.Sequence
None *ã
columns˚
QUnion[builtins.str,pandas.core.groupby.grouper.Grouper,typing.Sequence[Any],None]
builtins.str"builtins.strJ
#pandas.core.groupby.grouper.Grouper"#pandas.core.groupby.grouper.Grouper0
typing.Sequence[Any]
Any"typing.Sequence
None *
aggfunc
Any *Ö

fill_valueÚ
ÆUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar
None *-
margins
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool *0
margins_name
builtins.str"builtins.str *.
observed
builtins.bool"builtins.bool *™
stack!pandas.core.frame.DataFrame.stack"«
AUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ø
level±
LUnion[TypeAlias[Union[typing.Hashable,builtins.int]],builtins.list[Unknown]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level)
builtins.list[Unknown] "builtins.list *,
dropna
builtins.bool"builtins.bool *…
explode#pandas.core.frame.DataFrame.explode":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*c
columnW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence*2
ignore_index
builtins.bool"builtins.bool *Ÿ
unstack#pandas.core.frame.DataFrame.unstack"«
AUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¡
level≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *‘

fill_value¡
<Union[builtins.int,builtins.str,builtins.dict[Any,Any],None]
builtins.int"builtins.int
builtins.str"builtins.str9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None *ƒ$
melt pandas.core.frame.DataFrame.melt":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ü
id_varsˆ
KUnion[builtins.tuple[Any],typing.Sequence[Any],numpy.ndarray[Any,Any],None].
builtins.tuple[Any]
Any"builtins.tuple0
typing.Sequence[Any]
Any"typing.Sequence9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray
None *â

value_varsˆ
KUnion[builtins.tuple[Any],typing.Sequence[Any],numpy.ndarray[Any,Any],None].
builtins.tuple[Any]
Any"builtins.tuple0
typing.Sequence[Any]
Any"typing.Sequence9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray
None *É
var_nameÚ
ÆUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar
None *≈

value_name≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar *Ä
	col_levelo
%Union[builtins.int,builtins.str,None]
builtins.int"builtins.int
builtins.str"builtins.str
None *2
ignore_index
builtins.bool"builtins.bool *´
diff pandas.core.frame.DataFrame.diff":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*+
periods
builtins.int"builtins.int *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *˜
	transform%pandas.core.frame.DataFrame.transform":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ƒ	
funcπ	
ÕTypeAlias[Union[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]],builtins.list[Unknown],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]]√
¬Union[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]],builtins.list[Unknown],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase)
builtins.list[Unknown] "builtins.listê
YTypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]ã
Ntyping.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.HashableV
%Union[Unknown,builtins.list[Unknown]] )
builtins.list[Unknown] "builtins.list"typing.Mapping"#pandas._typing.AggFuncTypeDictFrame"pandas._typing.AggFuncTypeFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *
args
Any*
kwargs
Any*ô
applymap$pandas.core.frame.DataFrame.applymap":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*y
	na_actionh
!Union[Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str
None *
kwargs
Any*˛
join pandas.core.frame.DataFrame.join":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*”
other«
íUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any],builtins.list[Union[pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series´
Pbuiltins.list[Union[pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]]«
AUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"builtins.list*∑
on¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *⁄
howŒ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.JoinHow *+
lsuffix
builtins.str"builtins.str *+
rsuffix
builtins.str"builtins.str **
sort
builtins.bool"builtins.bool *ﬁ
validateÕ
ÕUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]Ó
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.ValidationOptions
None *ˇ$
merge!pandas.core.frame.DataFrame.merge":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*”
right«
AUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*”
how«
ëTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str]]]ï
ÜUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str]]Œ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.JoinHow7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.MergeHow *∫
onØ
∫Union[TypeAlias[Union[typing.Hashable,typing.Sequence[typing.Hashable]]],TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],None]ú
BTypeAlias[Union[typing.Hashable,typing.Sequence[typing.Hashable]]]∏
7Union[typing.Hashable,typing.Sequence[typing.Hashable]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence"pandas._typing.IndexLabelƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike
None *ø
left_onØ
∫Union[TypeAlias[Union[typing.Hashable,typing.Sequence[typing.Hashable]]],TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],None]ú
BTypeAlias[Union[typing.Hashable,typing.Sequence[typing.Hashable]]]∏
7Union[typing.Hashable,typing.Sequence[typing.Hashable]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence"pandas._typing.IndexLabelƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike
None *¿
right_onØ
∫Union[TypeAlias[Union[typing.Hashable,typing.Sequence[typing.Hashable]]],TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],None]ú
BTypeAlias[Union[typing.Hashable,typing.Sequence[typing.Hashable]]]∏
7Union[typing.Hashable,typing.Sequence[typing.Hashable]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence"pandas._typing.IndexLabelƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike
None *0

left_index
builtins.bool"builtins.bool *1
right_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *Ÿ
suffixes»
8Tuple[Union[builtins.str,None],Union[builtins.str,None]]D
Union[builtins.str,None]
builtins.str"builtins.str
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
None **
copy
builtins.bool"builtins.bool *t
	indicatorc
!Union[builtins.bool,builtins.str]
builtins.bool"builtins.bool
builtins.str"builtins.str *T
validateD
Union[builtins.str,None]
builtins.str"builtins.str
None *‘
round!pandas.core.frame.DataFrame.round":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˝
decimalsÏ
IUnion[builtins.int,builtins.dict[Any,Any],pandas.core.series.Series[Any]]
builtins.int"builtins.int9
builtins.dict[Any,Any]
Any
Any"builtins.dictD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series *
args
Any*
kwargs
Any*ò
corr pandas.core.frame.DataFrame.corr":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ü
method˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str */
min_periods
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *ﬂ
covpandas.core.frame.DataFrame.cov":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*W
min_periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *˙
corrwith$pandas.core.frame.DataFrame.corrwith"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*”
other«
AUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
drop
builtins.bool"builtins.bool *Ü
method˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *2
numeric_only
builtins.bool"builtins.bool *º
nunique#pandas.core.frame.DataFrame.nunique"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *,
dropna
builtins.bool"builtins.bool *Ó
idxmax"pandas.core.frame.DataFrame.idxmax"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *,
skipna
builtins.bool"builtins.bool *2
numeric_only
builtins.bool"builtins.bool *Ó
idxmin"pandas.core.frame.DataFrame.idxmin"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *,
skipna
builtins.bool"builtins.bool *2
numeric_only
builtins.bool"builtins.bool *∏
to_timestamp(pandas.core.frame.DataFrame.to_timestamp":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
freq
Any *Ê
how⁄
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str""pandas._typing.TimestampConvention *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis **
copy
builtins.bool"builtins.bool *Ü	
	to_period%pandas.core.frame.DataFrame.to_period":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*P
freqD
Union[builtins.str,None]
builtins.str"builtins.str
None *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis **
copy
builtins.bool"builtins.bool *ö
isin pandas.core.frame.DataFrame.isin":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ì
values‡
mUnion[typing.Iterable[Any],pandas.core.series.Series[Any],pandas.core.frame.DataFrame,builtins.dict[Any,Any]]0
typing.Iterable[Any]
Any"typing.IterableD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame9
builtins.dict[Any,Any]
Any
Any"builtins.dict*œ
plot pandas.core.frame.DataFrame.plot"H
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*Á
hist pandas.core.frame.DataFrame.hist"
Any*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ª
column¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *π
byÆ
0Union[builtins.str,pandas._typing.ListLike,None]
builtins.str"builtins.strP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object
None **
grid
builtins.bool"builtins.bool *V

xlabelsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *V
xrotJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *V

ylabelsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *V
yrotJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *0
ax&
Union[Any,None]
Any
None *,
sharex
builtins.bool"builtins.bool *,
sharey
builtins.bool"builtins.bool *º
figsize¨
0Union[Tuple[builtins.float,builtins.float],None]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *´
layoutú
,Union[Tuple[builtins.int,builtins.int],None]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None *Ç
binsv
&Union[builtins.int,builtins.list[Any]]
builtins.int"builtins.int,
builtins.list[Any]
Any"builtins.list *S
backendD
Union[builtins.str,None]
builtins.str"builtins.str
None *
kwargs
Any*˛
boxplot#pandas.core.frame.DataFrame.boxplot"
Any*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ª
column¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *π
byÆ
0Union[builtins.str,pandas._typing.ListLike,None]
builtins.str"builtins.strP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object
None *0
ax&
Union[Any,None]
Any
None *Ö
fontsizeu
'Union[builtins.float,builtins.str,None] 
builtins.float"builtins.float
builtins.str"builtins.str
None *+
rot 
builtins.float"builtins.float **
grid
builtins.bool"builtins.bool *º
figsize¨
0Union[Tuple[builtins.float,builtins.float],None]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *´
layoutú
,Union[Tuple[builtins.int,builtins.int],None]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
None *ö
return_typeÜ
MUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *S
backendD
Union[builtins.str,None]
builtins.str"builtins.str
None *
kwargs
Any*ü
__iter__$pandas.core.frame.DataFrame.__iter__"Æ
3typing.Iterator[Union[builtins.float,builtins.str]]f
"Union[builtins.float,builtins.str] 
builtins.float"builtins.float
builtins.str"builtins.str"typing.Iterator*<:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*E
atpandas.core.frame.DataFrame.at*
self0:builtins.property`*œ
dtypes"pandas.core.frame.DataFrame.dtypes"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*ß
empty!pandas.core.frame.DataFrame.empty"
builtins.bool"builtins.bool*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*G
iatpandas.core.frame.DataFrame.iat*
self0:builtins.property`*—
iloc pandas.core.frame.DataFrame.iloc"J
#pandas.core.frame._iLocIndexerFrame"#pandas.core.frame._iLocIndexerFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*Õ
locpandas.core.frame.DataFrame.loc"H
"pandas.core.frame._LocIndexerFrame""pandas.core.frame._LocIndexerFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*£
ndim pandas.core.frame.DataFrame.ndim"
builtins.int"builtins.int*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*£
size pandas.core.frame.DataFrame.size"
builtins.int"builtins.int*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*ƒ
values"pandas.core.frame.DataFrame.values"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.property`*®
abspandas.core.frame.DataFrame.abs":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¶
addpandas.core.frame.DataFrame.add":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ﬂ	

add_prefix&pandas.core.frame.DataFrame.add_prefix":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*(
prefix
builtins.str"builtins.str*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *ﬂ	

add_suffix&pandas.core.frame.DataFrame.add_suffix":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*(
suffix
builtins.str"builtins.str*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *¸
asof pandas.core.frame.DataFrame.asof":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
where
Any*ª
subset¨
4Union[builtins.str,builtins.list[builtins.str],None]
builtins.str"builtins.strJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *¨
asfreq"pandas.core.frame.DataFrame.asfreq":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
freq
Any*È
method⁄
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions
None *√
how∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None */
	normalize
builtins.bool"builtins.bool *Ö

fill_valueÚ
ÆUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar
None *ı£
astype"pandas.core.frame.DataFrame.astype":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˝ü
dtypeü
å7Union[TypeAlias[Union[TypeAlias[Union[Type[builtins.bool],Literal[builtins.str],pandas.core.arrays.boolean.BooleanDtype,Literal[builtins.str],Type[numpy.bool_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.int],Literal[builtins.str],pandas.core.arrays.integer.Int8Dtype,pandas.core.arrays.integer.Int16Dtype,pandas.core.arrays.integer.Int32Dtype,pandas.core.arrays.integer.Int64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[TypeAlias[Any]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[pandas.core.arrays.integer.UInt8Dtype,pandas.core.arrays.integer.UInt16Dtype,pandas.core.arrays.integer.UInt32Dtype,pandas.core.arrays.integer.UInt64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.str],Literal[builtins.str],pandas.core.arrays.string_.StringDtype,Literal[builtins.str],Type[numpy.str_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.bytes],Literal[builtins.str],Type[numpy.bytes_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.float],Literal[builtins.str],pandas.core.arrays.floating.Float32Dtype,pandas.core.arrays.floating.Float64Dtype,Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.complex],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[pandas.core.dtypes.dtypes.CategoricalDtype,Literal[builtins.str]]],TypeAlias[Union[Type[builtins.object],Literal[builtins.str],Type[numpy.object_],Literal[builtins.str]]],TypeAlias[Union[Type[numpy.void],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]]]],typing.Mapping[Any,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]],pandas.core.series.Series[Any]]˚‹
ã5TypeAlias[Union[TypeAlias[Union[Type[builtins.bool],Literal[builtins.str],pandas.core.arrays.boolean.BooleanDtype,Literal[builtins.str],Type[numpy.bool_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.int],Literal[builtins.str],pandas.core.arrays.integer.Int8Dtype,pandas.core.arrays.integer.Int16Dtype,pandas.core.arrays.integer.Int32Dtype,pandas.core.arrays.integer.Int64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[TypeAlias[Any]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[pandas.core.arrays.integer.UInt8Dtype,pandas.core.arrays.integer.UInt16Dtype,pandas.core.arrays.integer.UInt32Dtype,pandas.core.arrays.integer.UInt64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.str],Literal[builtins.str],pandas.core.arrays.string_.StringDtype,Literal[builtins.str],Type[numpy.str_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.bytes],Literal[builtins.str],Type[numpy.bytes_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.float],Literal[builtins.str],pandas.core.arrays.floating.Float32Dtype,pandas.core.arrays.floating.Float64Dtype,Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.complex],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[pandas.core.dtypes.dtypes.CategoricalDtype,Literal[builtins.str]]],TypeAlias[Union[Type[builtins.object],Literal[builtins.str],Type[numpy.object_],Literal[builtins.str]]],TypeAlias[Union[Type[numpy.void],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]]]]Õß
Ä5Union[TypeAlias[Union[Type[builtins.bool],Literal[builtins.str],pandas.core.arrays.boolean.BooleanDtype,Literal[builtins.str],Type[numpy.bool_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.int],Literal[builtins.str],pandas.core.arrays.integer.Int8Dtype,pandas.core.arrays.integer.Int16Dtype,pandas.core.arrays.integer.Int32Dtype,pandas.core.arrays.integer.Int64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[TypeAlias[Any]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[pandas.core.arrays.integer.UInt8Dtype,pandas.core.arrays.integer.UInt16Dtype,pandas.core.arrays.integer.UInt32Dtype,pandas.core.arrays.integer.UInt64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.str],Literal[builtins.str],pandas.core.arrays.string_.StringDtype,Literal[builtins.str],Type[numpy.str_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.bytes],Literal[builtins.str],Type[numpy.bytes_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.float],Literal[builtins.str],pandas.core.arrays.floating.Float32Dtype,pandas.core.arrays.floating.Float64Dtype,Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Type[builtins.complex],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[pandas.core.dtypes.dtypes.CategoricalDtype,Literal[builtins.str]]],TypeAlias[Union[Type[builtins.object],Literal[builtins.str],Type[numpy.object_],Literal[builtins.str]]],TypeAlias[Union[Type[numpy.void],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]]]‘	
èTypeAlias[Union[Type[builtins.bool],Literal[builtins.str],pandas.core.arrays.boolean.BooleanDtype,Literal[builtins.str],Type[numpy.bool_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ù
ÑUnion[Type[builtins.bool],Literal[builtins.str],pandas.core.arrays.boolean.BooleanDtype,Literal[builtins.str],Type[numpy.bool_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]=
Type[builtins.bool]
builtins.bool"builtins.bool"type7
Literal[builtins.str]	
builtins.str"builtins.strR
'pandas.core.arrays.boolean.BooleanDtype"'pandas.core.arrays.boolean.BooleanDtype7
Literal[builtins.str]	
builtins.str"builtins.str7
Type[numpy.bool_]
numpy.bool_"numpy.bool_"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.BooleanDtypeArg¢'
æTypeAlias[Union[Type[builtins.int],Literal[builtins.str],pandas.core.arrays.integer.Int8Dtype,pandas.core.arrays.integer.Int16Dtype,pandas.core.arrays.integer.Int32Dtype,pandas.core.arrays.integer.Int64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[TypeAlias[Any]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]¿
≥Union[Type[builtins.int],Literal[builtins.str],pandas.core.arrays.integer.Int8Dtype,pandas.core.arrays.integer.Int16Dtype,pandas.core.arrays.integer.Int32Dtype,pandas.core.arrays.integer.Int64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[TypeAlias[Any]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]:
Type[builtins.int]
builtins.int"builtins.int"type7
Literal[builtins.str]	
builtins.str"builtins.strL
$pandas.core.arrays.integer.Int8Dtype"$pandas.core.arrays.integer.Int8DtypeN
%pandas.core.arrays.integer.Int16Dtype"%pandas.core.arrays.integer.Int16DtypeN
%pandas.core.arrays.integer.Int32Dtype"%pandas.core.arrays.integer.Int32DtypeN
%pandas.core.arrays.integer.Int64Dtype"%pandas.core.arrays.integer.Int64Dtype7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str´
)Type[numpy.signedinteger[TypeAlias[Any]]]v
#numpy.signedinteger[TypeAlias[Any]]:
TypeAlias[Any]
Any"numpy._typing._nbit._NBitByte"numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strc
"Type[numpy.signedinteger[Unknown]]5
numpy.signedinteger[Unknown] "numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strc
"Type[numpy.signedinteger[Unknown]]5
numpy.signedinteger[Unknown] "numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strc
"Type[numpy.signedinteger[Unknown]]5
numpy.signedinteger[Unknown] "numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strc
"Type[numpy.signedinteger[Unknown]]5
numpy.signedinteger[Unknown] "numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strc
"Type[numpy.signedinteger[Unknown]]5
numpy.signedinteger[Unknown] "numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IntDtypeArg—%
ûTypeAlias[Union[pandas.core.arrays.integer.UInt8Dtype,pandas.core.arrays.integer.UInt16Dtype,pandas.core.arrays.integer.UInt32Dtype,pandas.core.arrays.integer.UInt64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]é
ìUnion[pandas.core.arrays.integer.UInt8Dtype,pandas.core.arrays.integer.UInt16Dtype,pandas.core.arrays.integer.UInt32Dtype,pandas.core.arrays.integer.UInt64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]N
%pandas.core.arrays.integer.UInt8Dtype"%pandas.core.arrays.integer.UInt8DtypeP
&pandas.core.arrays.integer.UInt16Dtype"&pandas.core.arrays.integer.UInt16DtypeP
&pandas.core.arrays.integer.UInt32Dtype"&pandas.core.arrays.integer.UInt32DtypeP
&pandas.core.arrays.integer.UInt64Dtype"&pandas.core.arrays.integer.UInt64Dtype7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.UIntDtypeArg¬	
åTypeAlias[Union[Type[builtins.str],Literal[builtins.str],pandas.core.arrays.string_.StringDtype,Literal[builtins.str],Type[numpy.str_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]í
ÅUnion[Type[builtins.str],Literal[builtins.str],pandas.core.arrays.string_.StringDtype,Literal[builtins.str],Type[numpy.str_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]:
Type[builtins.str]
builtins.str"builtins.str"type7
Literal[builtins.str]	
builtins.str"builtins.strP
&pandas.core.arrays.string_.StringDtype"&pandas.core.arrays.string_.StringDtype7
Literal[builtins.str]	
builtins.str"builtins.str4
Type[numpy.str_]

numpy.str_"
numpy.str_"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.StrDtypeArg”
”TypeAlias[Union[Type[builtins.bytes],Literal[builtins.str],Type[numpy.bytes_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]⁄
»Union[Type[builtins.bytes],Literal[builtins.str],Type[numpy.bytes_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]@
Type[builtins.bytes] 
builtins.bytes"builtins.bytes"type7
Literal[builtins.str]	
builtins.str"builtins.str:
Type[numpy.bytes_]
numpy.bytes_"numpy.bytes_"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.BytesDtypeArgÌ
¬TypeAlias[Union[Type[builtins.float],Literal[builtins.str],pandas.core.arrays.floating.Float32Dtype,pandas.core.arrays.floating.Float64Dtype,Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Ö
∑Union[Type[builtins.float],Literal[builtins.str],pandas.core.arrays.floating.Float32Dtype,pandas.core.arrays.floating.Float64Dtype,Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]@
Type[builtins.float] 
builtins.float"builtins.float"type7
Literal[builtins.str]	
builtins.str"builtins.strT
(pandas.core.arrays.floating.Float32Dtype"(pandas.core.arrays.floating.Float32DtypeT
(pandas.core.arrays.floating.Float64Dtype"(pandas.core.arrays.floating.Float64Dtype7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
Type[numpy.floating[Unknown]]+
numpy.floating[Unknown] "numpy.floating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
Type[numpy.floating[Unknown]]+
numpy.floating[Unknown] "numpy.floating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
Type[numpy.floating[Unknown]]+
numpy.floating[Unknown] "numpy.floating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
Type[numpy.floating[Unknown]]+
numpy.floating[Unknown] "numpy.floating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FloatDtypeArgŸ
ªTypeAlias[Union[Type[builtins.complex],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ˆ
∞Union[Type[builtins.complex],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]F
Type[builtins.complex]$
builtins.complex"builtins.complex"type7
Literal[builtins.str]	
builtins.str"builtins.str{
,Type[numpy.complexfloating[Unknown,Unknown]]C
&numpy.complexfloating[Unknown,Unknown]  "numpy.complexfloating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str{
,Type[numpy.complexfloating[Unknown,Unknown]]C
&numpy.complexfloating[Unknown,Unknown]  "numpy.complexfloating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str{
,Type[numpy.complexfloating[Unknown,Unknown]]C
&numpy.complexfloating[Unknown,Unknown]  "numpy.complexfloating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ComplexDtypeArgÏ$
ÖTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Ω
˙Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimedeltaDtypeArg∂&
±TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]€
¶Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimestampDtypeArgÿ
RTypeAlias[Union[pandas.core.dtypes.dtypes.CategoricalDtype,Literal[builtins.str]]]ﬁ
GUnion[pandas.core.dtypes.dtypes.CategoricalDtype,Literal[builtins.str]]X
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.CategoryDtypeArg„
gTypeAlias[Union[Type[builtins.object],Literal[builtins.str],Type[numpy.object_],Literal[builtins.str]]]÷
\Union[Type[builtins.object],Literal[builtins.str],Type[numpy.object_],Literal[builtins.str]]C
Type[builtins.object]"
builtins.object"builtins.object"type7
Literal[builtins.str]	
builtins.str"builtins.str=
Type[numpy.object_]
numpy.object_"numpy.object_"type7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ObjectDtypeArg∆
dTypeAlias[Union[Type[numpy.void],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]æ
YUnion[Type[numpy.void],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]4
Type[numpy.void]

numpy.void"
numpy.void"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.VoidDtypeArg‹
STypeAlias[Union[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]]È
HUnion[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]I
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtypeP
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype"pandas._typing.DtypeObj"pandas._typing.AstypeArgó
⁄typing.Mapping[Any,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]]
Anyû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype"typing.MappingD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise * 

at_time#pandas.core.frame.DataFrame.at_time":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*m
timec
!Union[builtins.str,datetime.time]
builtins.str"builtins.str
datetime.time"datetime.time**
asof
builtins.bool"builtins.bool *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *°
between_time(pandas.core.frame.DataFrame.between_time":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*s

start_timec
!Union[builtins.str,datetime.time]
builtins.str"builtins.str
datetime.time"datetime.time*q
end_timec
!Union[builtins.str,datetime.time]
builtins.str"builtins.str
datetime.time"datetime.time*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *ü
clip pandas.core.frame.DataFrame.clip":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*W
lowerJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *W
upperJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *-
inplace
builtins.bool"builtins.bool *
kwargs
Any*÷
copy pandas.core.frame.DataFrame.copy":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame**
deep
builtins.bool"builtins.bool *É

cummax"pandas.core.frame.DataFrame.cummax":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*É

cummin"pandas.core.frame.DataFrame.cummin":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*Ö

cumprod#pandas.core.frame.DataFrame.cumprod":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*É

cumsum"pandas.core.frame.DataFrame.cumsum":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*°
describe$pandas.core.frame.DataFrame.describe":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ù
percentilesâ
)Union[builtins.list[builtins.float],None]P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list
None *⁄
include 
˜Union[Literal[builtins.str],builtins.list[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]],None]7
Literal[builtins.str]	
builtins.str"builtins.strà
’builtins.list[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]]û	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype"builtins.list
None *ã
exclude˚
·Union[builtins.list[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]],None]à
’builtins.list[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]]û	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype"builtins.list
None *b
datetime_is_numericG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *¶
divpandas.core.frame.DataFrame.div":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *¨
divide"pandas.core.frame.DataFrame.divide":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *»

	droplevel%pandas.core.frame.DataFrame.droplevel":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ω
level±
LUnion[TypeAlias[Union[typing.Hashable,builtins.int]],builtins.list[Unknown]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level)
builtins.list[Unknown] "builtins.list*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *ù

eqpandas.core.frame.DataFrame.eq":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *Ë
equals"pandas.core.frame.DataFrame.equals"
builtins.bool"builtins.bool*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*”
other«
AUnion[pandas.core.series.Series[Any],pandas.core.frame.DataFrame]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
ewmpandas.core.frame.DataFrame.ewm"π
Kpandas.core.window.ewm.ExponentialMovingWindow[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame".pandas.core.window.ewm.ExponentialMovingWindow*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*U
comJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *V
spanJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Z
halflifeJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *W
alphaJ
Union[builtins.float,None] 
builtins.float"builtins.float
None */
min_periods
builtins.int"builtins.int *,
adjust
builtins.bool"builtins.bool */
	ignore_na
builtins.bool"builtins.bool *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *…
	expanding%pandas.core.frame.DataFrame.expanding"©
Cpandas.core.window.expanding.Expanding[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"&pandas.core.window.expanding.Expanding*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*/
min_periods
builtins.int"builtins.int *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *ù
methodé
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.CalculationMethod *ª
filter"pandas.core.frame.DataFrame.filter":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*g
itemsZ
Union[builtins.list[Any],None],
builtins.list[Any]
Any"builtins.list
None *P
likeD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
regexD
Union[builtins.str,None]
builtins.str"builtins.str
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *¡
first!pandas.core.frame.DataFrame.first":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
offset
Any*Ω
first_valid_index-pandas.core.frame.DataFrame.first_valid_index"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*∞
floordiv$pandas.core.frame.DataFrame.floordiv":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ù

gepandas.core.frame.DataFrame.ge":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *ù

gtpandas.core.frame.DataFrame.gt":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *—
head pandas.core.frame.DataFrame.head":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*%
n
builtins.int"builtins.int *º
infer_objects)pandas.core.frame.DataFrame.infer_objects":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*æ
keys pandas.core.frame.DataFrame.keys"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Í

kurt pandas.core.frame.DataFrame.kurt"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*Ú

kurtosis$pandas.core.frame.DataFrame.kurtosis"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*ø
last pandas.core.frame.DataFrame.last":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
offset
Any*ª
last_valid_index,pandas.core.frame.DataFrame.last_valid_index"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ù

lepandas.core.frame.DataFrame.le":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *ù

ltpandas.core.frame.DataFrame.lt":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *‘
mask pandas.core.frame.DataFrame.mask":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*§
condô
XUnion[pandas.core.series.Series[Any],pandas.core.frame.DataFrame,numpy.ndarray[Any,Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*
other
Any *-
inplace
builtins.bool"builtins.bool *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
try_cast
builtins.bool"builtins.bool *Ë

maxpandas.core.frame.DataFrame.max"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*Í

mean pandas.core.frame.DataFrame.mean"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*Ó

median"pandas.core.frame.DataFrame.median"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*Ë

minpandas.core.frame.DataFrame.min"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*¶
modpandas.core.frame.DataFrame.mod":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *¶
mulpandas.core.frame.DataFrame.mul":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *∞
multiply$pandas.core.frame.DataFrame.multiply":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ù

nepandas.core.frame.DataFrame.ne":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *ë

pct_change&pandas.core.frame.DataFrame.pct_change":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*+
periods
builtins.int"builtins.int */
fill_method
builtins.str"builtins.str *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
freq
Any *
kwargs
Any*ø
pipe pandas.core.frame.DataFrame.pipe"I
pandas._typing.T"
builtins.object"builtins.object"builtins.object*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*€
func–
ZUnion[CallableType[builtins.function],Tuple[CallableType[builtins.function],builtins.str]]K
CallableType[builtins.function]&
builtins.function"builtins.function¢
3Tuple[CallableType[builtins.function],builtins.str]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str*
args
Any*
kwargs
Any*⁄
poppandas.core.frame.DataFrame.pop"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*&
item
builtins.str"builtins.str*¶
powpandas.core.frame.DataFrame.pow":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ô
prod pandas.core.frame.DataFrame.prod"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *-
	min_count
builtins.int"builtins.int *
kwargs
Any*ˆ

product#pandas.core.frame.DataFrame.product"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *,
skipna
builtins.bool"builtins.bool *
level
None *2
numeric_only
builtins.bool"builtins.bool *-
	min_count
builtins.int"builtins.int *
kwargs
Any*ˇ

radd pandas.core.frame.DataFrame.radd":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *¡
rank pandas.core.frame.DataFrame.rank":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *§
methodï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *2
numeric_only
builtins.bool"builtins.bool *â
	na_option˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str */
	ascending
builtins.bool"builtins.bool *)
pct
builtins.bool"builtins.bool *ˇ

rdiv pandas.core.frame.DataFrame.rdiv":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Å	
reindex_like(pandas.core.frame.DataFrame.reindex_like":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*E
other:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*‰
method’
òUnion[builtins.str,TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]
builtins.str"builtins.str‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions7
Literal[builtins.str]	
builtins.str"builtins.str
None **
copy
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
	tolerance
Any *‰
resample$pandas.core.frame.DataFrame.resample"ô
;pandas.core.resample.Resampler[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"pandas.core.resample.Resampler*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
rule
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *R
closedD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
labelD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ì

convention⁄
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str""pandas._typing.TimestampConvention *ƒ
kind∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *N
onD
Union[builtins.str,None]
builtins.str"builtins.str
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *§
originï
ùUnion[pandas._libs.tslibs.timestamps.Timestamp,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *“
offset√
AUnion[pandas._libs.tslibs.timedeltas.Timedelta,builtins.str,None]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta
builtins.str"builtins.str
None *0

group_keys
builtins.bool"builtins.bool *â
	rfloordiv%pandas.core.frame.DataFrame.rfloordiv":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ˇ

rmod pandas.core.frame.DataFrame.rmod":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ˇ

rmul pandas.core.frame.DataFrame.rmul":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ˇ

rpow pandas.core.frame.DataFrame.rpow":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ˇ

rsub pandas.core.frame.DataFrame.rsub":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *á
rtruediv$pandas.core.frame.DataFrame.rtruediv":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
other
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ã
sample"pandas.core.frame.DataFrame.sample":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*M
nD
Union[builtins.int,None]
builtins.int"builtins.int
None *V
fracJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *-
replace
builtins.bool"builtins.bool *æ
weightsÆ
0Union[builtins.str,pandas._typing.ListLike,None]
builtins.str"builtins.strP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object
None *ü

random_stateä

‰Union[TypeAlias[Union[builtins.int,TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],numpy.random._generator.Generator,numpy.random.bit_generator.BitGenerator,numpy.random.mtrand.RandomState]],None]î
ÿTypeAlias[Union[builtins.int,TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],numpy.random._generator.Generator,numpy.random.bit_generator.BitGenerator,numpy.random.mtrand.RandomState]]ò
ÕUnion[builtins.int,TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],numpy.random._generator.Generator,numpy.random.bit_generator.BitGenerator,numpy.random.mtrand.RandomState]
builtins.int"builtins.int≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeF
!numpy.random._generator.Generator"!numpy.random._generator.GeneratorR
'numpy.random.bit_generator.BitGenerator"'numpy.random.bit_generator.BitGeneratorB
numpy.random.mtrand.RandomState"numpy.random.mtrand.RandomState"pandas._typing.RandomState
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *2
ignore_index
builtins.bool"builtins.bool *í
sempandas.core.frame.DataFrame.sem"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*≈
set_axis$pandas.core.frame.DataFrame.set_axis":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
labels
Any*œ
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis**
copy
builtins.bool"builtins.bool *Í

skew pandas.core.frame.DataFrame.skew"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*π
slice_shift'pandas.core.frame.DataFrame.slice_shift":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*+
periods
builtins.int"builtins.int *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *¸
squeeze#pandas.core.frame.DataFrame.squeeze"
Any*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *æ	
stdpandas.core.frame.DataFrame.std"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *,
skipna
builtins.bool"builtins.bool *
level
None *(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*¶
subpandas.core.frame.DataFrame.sub":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *∞
subtract$pandas.core.frame.DataFrame.subtract":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ó
sumpandas.core.frame.DataFrame.sum"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *-
	min_count
builtins.int"builtins.int *
kwargs
Any*Ñ
swapaxes$pandas.core.frame.DataFrame.swapaxes":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*–
axis1ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis*–
axis2ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis**
copy
builtins.bool"builtins.bool *—
tail pandas.core.frame.DataFrame.tail":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*%
n
builtins.int"builtins.int *¶	
take pandas.core.frame.DataFrame.take":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*9
indices,
builtins.list[Any]
Any"builtins.list*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *V
is_copyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
kwargs
Any*ƒ
tshift"pandas.core.frame.DataFrame.tshift":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*+
periods
builtins.int"builtins.int *
freq
Any *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *õ
to_clipboard(pandas.core.frame.DataFrame.to_clipboard"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*+
excel
builtins.bool"builtins.bool *O
sepD
Union[builtins.str,None]
builtins.str"builtins.str
None *
kwargs
Any*Å
	to_xarray%pandas.core.frame.DataFrame.to_xarray"
Any*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Æ
truediv#pandas.core.frame.DataFrame.truediv":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*è
otherÉ
KUnion[builtins.complex,pandas._typing.ListLike,pandas.core.frame.DataFrame]$
builtins.complex"builtins.complexP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *∫
truncate$pandas.core.frame.DataFrame.truncate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¨
beforeù
3Union[datetime.date,builtins.str,builtins.int,None]
datetime.date"datetime.date
builtins.str"builtins.str
builtins.int"builtins.int
None *´
afterù
3Union[datetime.date,builtins.str,builtins.int,None]
datetime.date"datetime.date
builtins.str"builtins.str
builtins.int"builtins.int
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
copy
builtins.bool"builtins.bool *÷


tz_convert&pandas.core.frame.DataFrame.tz_convert":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
tz
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None **
copy
builtins.bool"builtins.bool *£
tz_localize'pandas.core.frame.DataFrame.tz_localize":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
tz
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None **
copy
builtins.bool"builtins.bool *
	ambiguous
Any */
nonexistent
builtins.str"builtins.str *í
varpandas.core.frame.DataFrame.var"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*±
where!pandas.core.frame.DataFrame.where":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ˇ
condÙ
òUnion[pandas.core.series.Series[Any],pandas.core.frame.DataFrame,numpy.ndarray[Any,Any],CallableType[builtins.function],CallableType[builtins.function]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayK
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function*
other
Any *-
inplace
builtins.bool"builtins.bool *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
try_cast
builtins.bool"builtins.bool *Æ

__invert__&pandas.core.frame.DataFrame.__invert__":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*<:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ˆ
xspandas.core.frame.DataFrame.xs"«
AUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*+
key"
typing.Hashable"typing.Hashable*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *0

drop_level
builtins.bool"builtins.bool *Ú
__floordiv__(pandas.core.frame.DataFrame.__floordiv__"}
 pandas.core.frame.DataFrame.Self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*}
 pandas.core.frame.DataFrame.Self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*∑¥
ÉUnion[builtins.float,pandas.core.frame.DataFrame,pandas.core.series.Series[builtins.int],pandas.core.series.Series[builtins.float]] 
builtins.float"builtins.float:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameb
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series2∑C
__new__#pandas.core.frame.DataFrame.__new__â!
__new__#pandas.core.frame.DataFrame.__new__"}
 pandas.core.frame.DataFrame.Self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*π
clsØ
&Type[pandas.core.frame.DataFrame.Self]}
 pandas.core.frame.DataFrame.Self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"type*¯
dataÎ
˛Union[TypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.frame.DataFrame,builtins.dict[Any,Any],typing.Iterable[Union[Unknown,Unknown,builtins.dict[Any,Any]]],None]û
ÄTypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]]¸
uUnion[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]0
typing.Sequence[Any]
Any"typing.Sequence9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayD
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"pandas._typing.ListLikeU:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame9
builtins.dict[Any,Any]
Any
Any"builtins.dict√
>typing.Iterable[Union[Unknown,Unknown,builtins.dict[Any,Any]]]p
-Union[Unknown,Unknown,builtins.dict[Any,Any]]  9
builtins.dict[Any,Any]
Any
Any"builtins.dict"typing.Iterable
None *£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *•

columnsï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *
dtype
Any **
copy
builtins.bool"builtins.bool 0:typing.overloadX˙!
__new__#pandas.core.frame.DataFrame.__new__"}
 pandas.core.frame.DataFrame.Self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*π
clsØ
&Type[pandas.core.frame.DataFrame.Self]}
 pandas.core.frame.DataFrame.Self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"type*Ω
data≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*π
index≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes*ª
columns≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes*
dtype
Any **
copy
builtins.bool"builtins.bool 0:typing.overloadX2ä
dotpandas.core.frame.DataFrame.dot∆
dotpandas.core.frame.DataFrame.dot":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ü
other˙
rUnion[pandas.core.frame.DataFrame,TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike0:typing.overloadXò
dotpandas.core.frame.DataFrame.dot"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*O
otherD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series0:typing.overloadX2⁄+
to_dict#pandas.core.frame.DataFrame.to_dict≤
to_dict#pandas.core.frame.DataFrame.to_dict"ß
2builtins.list[typing.Mapping[typing.Hashable,Any]]b
#typing.Mapping[typing.Hashable,Any]"
typing.Hashable"typing.Hashable
Any"typing.Mapping"builtins.list*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*C
orient7
Literal[builtins.str]	
builtins.str"builtins.str*Ó
into„
<Union[typing.Mapping[Any,Any],Type[typing.Mapping[Any,Any]]];
typing.Mapping[Any,Any]
Any
Any"typing.Mappingd
Type[typing.Mapping[Any,Any]];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping"type*G
index:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX‘
to_dict#pandas.core.frame.DataFrame.to_dict"§
1builtins.list[builtins.dict[typing.Hashable,Any]]`
"builtins.dict[typing.Hashable,Any]"
typing.Hashable"typing.Hashable
Any"builtins.dict"builtins.list*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*C
orient7
Literal[builtins.str]	
builtins.str"builtins.str*
into
None *G
index:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX˝
to_dict#pandas.core.frame.DataFrame.to_dict"b
#typing.Mapping[typing.Hashable,Any]"
typing.Hashable"typing.Hashable
Any"typing.Mapping*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*”
orient∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*Ó
into„
<Union[typing.Mapping[Any,Any],Type[typing.Mapping[Any,Any]]];
typing.Mapping[Any,Any]
Any
Any"typing.Mappingd
Type[typing.Mapping[Any,Any]];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping"type*G
index:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX√
to_dict#pandas.core.frame.DataFrame.to_dict"b
#typing.Mapping[typing.Hashable,Any]"
typing.Hashable"typing.Hashable
Any"typing.Mapping*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*µ
orient®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*Ó
into„
<Union[typing.Mapping[Any,Any],Type[typing.Mapping[Any,Any]]];
typing.Mapping[Any,Any]
Any
Any"typing.Mappingd
Type[typing.Mapping[Any,Any]];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping"type*+
index
builtins.bool"builtins.bool 0:typing.overloadXˇ
to_dict#pandas.core.frame.DataFrame.to_dict"b
#typing.Mapping[typing.Hashable,Any]"
typing.Hashable"typing.Hashable
Any"typing.Mapping*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*’
orient∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *Ó
into„
<Union[typing.Mapping[Any,Any],Type[typing.Mapping[Any,Any]]];
typing.Mapping[Any,Any]
Any
Any"typing.Mappingd
Type[typing.Mapping[Any,Any]];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping"type*G
index:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX≈
to_dict#pandas.core.frame.DataFrame.to_dict"b
#typing.Mapping[typing.Hashable,Any]"
typing.Hashable"typing.Hashable
Any"typing.Mapping*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*∑
orient®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *Ó
into„
<Union[typing.Mapping[Any,Any],Type[typing.Mapping[Any,Any]]];
typing.Mapping[Any,Any]
Any
Any"typing.Mappingd
Type[typing.Mapping[Any,Any]];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping"type*+
index
builtins.bool"builtins.bool 0:typing.overloadX¢
to_dict#pandas.core.frame.DataFrame.to_dict"`
"builtins.dict[typing.Hashable,Any]"
typing.Hashable"typing.Hashable
Any"builtins.dict*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*’
orient∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *
into
None *G
index:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadXË
to_dict#pandas.core.frame.DataFrame.to_dict"`
"builtins.dict[typing.Hashable,Any]"
typing.Hashable"typing.Hashable
Any"builtins.dict*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*∑
orient®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *
into
None *+
index
builtins.bool"builtins.bool 0:typing.overloadX2Í

to_parquet&pandas.core.frame.DataFrame.to_parquetÓ

to_parquet&pandas.core.frame.DataFrame.to_parquet"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*◊
pathÃ
jUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.bytes]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathj
*pandas._typing.WriteBuffer[builtins.bytes] 
builtins.bytes"builtins.bytes"pandas._typing.WriteBuffer*˛
engineÔ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ParquetEngine *ö
compressionÜ
MUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *T
indexG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Ê
partition_colsœ
3Union[builtins.list[pandas._typing.HashableT],None]ã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *Ü
storage_optionsÓ
6TypeAlias[Union[builtins.dict[builtins.str,Any],None]]í
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None"pandas._typing.StorageOptions *
kwargs
Any0:typing.overloadX¬

to_parquet&pandas.core.frame.DataFrame.to_parquet" 
builtins.bytes"builtins.bytes*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
path
None *˛
engineÔ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ParquetEngine *ö
compressionÜ
MUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *T
indexG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Ê
partition_colsœ
3Union[builtins.list[pandas._typing.HashableT],None]ã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *Ü
storage_optionsÓ
6TypeAlias[Union[builtins.dict[builtins.str,Any],None]]í
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None"pandas._typing.StorageOptions *
kwargs
Any0:typing.overloadX2Ï
to_orc"pandas.core.frame.DataFrame.to_orc≥
to_orc"pandas.core.frame.DataFrame.to_orc"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*◊
pathÃ
jUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.bytes]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathj
*pandas._typing.WriteBuffer[builtins.bytes] 
builtins.bytes"builtins.bytes"pandas._typing.WriteBuffer*E
engine7
Literal[builtins.str]	
builtins.str"builtins.str *T
indexG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *®
engine_kwargsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None 0:typing.overloadXá
to_orc"pandas.core.frame.DataFrame.to_orc" 
builtins.bytes"builtins.bytes*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
path
None *E
engine7
Literal[builtins.str]	
builtins.str"builtins.str *T
indexG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *®
engine_kwargsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None 0:typing.overloadX2ùI
to_html#pandas.core.frame.DataFrame.to_htmlÚ&
to_html#pandas.core.frame.DataFrame.to_html"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Œ
bufƒ
hUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.str]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathd
(pandas._typing.WriteBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.WriteBuffer*∏
columns®
vUnion[builtins.list[pandas._typing.HashableT],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],None]ã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None *Ï
	col_space⁄
™Union[TypeAlias[Union[builtins.str,builtins.int,typing.Sequence[Union[builtins.int,builtins.str]],typing.Mapping[typing.Hashable,Union[builtins.str,builtins.int]]]],None]û
ûTypeAlias[Union[builtins.str,builtins.int,typing.Sequence[Union[builtins.int,builtins.str]],typing.Mapping[typing.Hashable,Union[builtins.str,builtins.int]]]]ÿ
ìUnion[builtins.str,builtins.int,typing.Sequence[Union[builtins.int,builtins.str]],typing.Mapping[typing.Hashable,Union[builtins.str,builtins.int]]]
builtins.str"builtins.str
builtins.int"builtins.int¶
1typing.Sequence[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"typing.Sequenceÿ
@typing.Mapping[typing.Hashable,Union[builtins.str,builtins.int]]"
typing.Hashable"typing.Hashable`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"typing.Mapping"pandas._typing.ColspaceArgType
None *,
header
builtins.bool"builtins.bool *+
index
builtins.bool"builtins.bool **
na_rep
builtins.str"builtins.str *±

formattersû
™Union[builtins.list[CallableType[builtins.function]],builtins.tuple[CallableType[builtins.function]],typing.Mapping[typing.Hashable,CallableType[builtins.function]],None]å
.builtins.list[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.listé
/builtins.tuple[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.tuple¬
?typing.Mapping[typing.Hashable,CallableType[builtins.function]]"
typing.Hashable"typing.HashableK
CallableType[builtins.function]&
builtins.function"builtins.function"typing.Mapping
None *õ
float_formatÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *W
sparsifyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *1
index_names
builtins.bool"builtins.bool *è
justifyˇ
˝Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *T
max_rowsD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
max_colsD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
show_dimensions
builtins.bool"builtins.bool *+
decimal
builtins.str"builtins.str */
	bold_rows
builtins.bool"builtins.bool *ó
classesá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *,
escape
builtins.bool"builtins.bool *.
notebook
builtins.bool"builtins.bool *R
borderD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
table_idD
Union[builtins.str,None]
builtins.str"builtins.str
None *2
render_links
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadX˜!
to_html#pandas.core.frame.DataFrame.to_html"
builtins.str"builtins.str*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
buf
None *Â
columns’
5Union[typing.Sequence[pandas._typing.HashableT],None]è
)typing.Sequence[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Sequence
None *Ï
	col_space⁄
™Union[TypeAlias[Union[builtins.str,builtins.int,typing.Sequence[Union[builtins.int,builtins.str]],typing.Mapping[typing.Hashable,Union[builtins.str,builtins.int]]]],None]û
ûTypeAlias[Union[builtins.str,builtins.int,typing.Sequence[Union[builtins.int,builtins.str]],typing.Mapping[typing.Hashable,Union[builtins.str,builtins.int]]]]ÿ
ìUnion[builtins.str,builtins.int,typing.Sequence[Union[builtins.int,builtins.str]],typing.Mapping[typing.Hashable,Union[builtins.str,builtins.int]]]
builtins.str"builtins.str
builtins.int"builtins.int¶
1typing.Sequence[Union[builtins.int,builtins.str]]`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"typing.Sequenceÿ
@typing.Mapping[typing.Hashable,Union[builtins.str,builtins.int]]"
typing.Hashable"typing.Hashable`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"typing.Mapping"pandas._typing.ColspaceArgType
None *,
header
builtins.bool"builtins.bool *+
index
builtins.bool"builtins.bool **
na_rep
builtins.str"builtins.str *±

formattersû
™Union[builtins.list[CallableType[builtins.function]],builtins.tuple[CallableType[builtins.function]],typing.Mapping[typing.Hashable,CallableType[builtins.function]],None]å
.builtins.list[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.listé
/builtins.tuple[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.tuple¬
?typing.Mapping[typing.Hashable,CallableType[builtins.function]]"
typing.Hashable"typing.HashableK
CallableType[builtins.function]&
builtins.function"builtins.function"typing.Mapping
None *õ
float_formatÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *W
sparsifyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *1
index_names
builtins.bool"builtins.bool *è
justifyˇ
˝Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *T
max_rowsD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
max_colsD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
show_dimensions
builtins.bool"builtins.bool *+
decimal
builtins.str"builtins.str */
	bold_rows
builtins.bool"builtins.bool *ó
classesá
)Union[typing.Sequence[builtins.str],None]N
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *,
escape
builtins.bool"builtins.bool *.
notebook
builtins.bool"builtins.bool *R
borderD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
table_idD
Union[builtins.str,None]
builtins.str"builtins.str
None *2
render_links
builtins.bool"builtins.bool *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadX2Ö<
to_xml"pandas.core.frame.DataFrame.to_xmlõ 
to_xml"pandas.core.frame.DataFrame.to_xml"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ò
path_or_buffer‹
ìUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.bytes],pandas._typing.WriteBuffer[builtins.str]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathj
*pandas._typing.WriteBuffer[builtins.bytes] 
builtins.bytes"builtins.bytes"pandas._typing.WriteBufferd
(pandas._typing.WriteBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.WriteBuffer*+
index
builtins.bool"builtins.bool *-
	root_name
builtins.str"builtins.str *,
row_name
builtins.str"builtins.str *R
na_repD
Union[builtins.str,None]
builtins.str"builtins.str
None *‰
	attr_cols“
4Union[builtins.list[pandas._typing.HashableT1],None]ç
(builtins.list[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *‰
	elem_cols“
4Union[builtins.list[pandas._typing.HashableT2],None]ç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *ç

namespaces˙
@Union[builtins.dict[Union[builtins.str,None],builtins.str],None]©
4builtins.dict[Union[builtins.str,None],builtins.str]D
Union[builtins.str,None]
builtins.str"builtins.str
None
builtins.str"builtins.str"builtins.dict
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *,
encoding
builtins.str"builtins.str *5
xml_declaration
builtins.bool"builtins.bool *2
pretty_print
builtins.bool"builtins.bool *ñ
parserá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.XMLParsers *¯

stylesheetÂ
ñUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.ReadBuffer[builtins.str],pandas._typing.ReadBuffer[builtins.bytes],None]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathb
'pandas._typing.ReadBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.ReadBufferh
)pandas._typing.ReadBuffer[builtins.bytes] 
builtins.bytes"builtins.bytes"pandas._typing.ReadBuffer
None *Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *Ü
storage_optionsÓ
6TypeAlias[Union[builtins.dict[builtins.str,Any],None]]í
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None"pandas._typing.StorageOptions 0:typing.overloadX∏
to_xml"pandas.core.frame.DataFrame.to_xml"
builtins.str"builtins.str*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
path_or_buffer
None *+
index
builtins.bool"builtins.bool *U
	root_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
row_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
na_repD
Union[builtins.str,None]
builtins.str"builtins.str
None *‰
	attr_cols“
4Union[builtins.list[pandas._typing.HashableT1],None]ç
(builtins.list[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *‰
	elem_cols“
4Union[builtins.list[pandas._typing.HashableT2],None]ç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list
None *ç

namespaces˙
@Union[builtins.dict[Union[builtins.str,None],builtins.str],None]©
4builtins.dict[Union[builtins.str,None],builtins.str]D
Union[builtins.str,None]
builtins.str"builtins.str
None
builtins.str"builtins.str"builtins.dict
None *R
prefixD
Union[builtins.str,None]
builtins.str"builtins.str
None *,
encoding
builtins.str"builtins.str *^
xml_declarationG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
pretty_printG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *R
parserD
Union[builtins.str,None]
builtins.str"builtins.str
None *¯

stylesheetÂ
ñUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.ReadBuffer[builtins.str],pandas._typing.ReadBuffer[builtins.bytes],None]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathb
'pandas._typing.ReadBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.ReadBufferh
)pandas._typing.ReadBuffer[builtins.bytes] 
builtins.bytes"builtins.bytes"pandas._typing.ReadBuffer
None *Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *Ü
storage_optionsÓ
6TypeAlias[Union[builtins.dict[builtins.str,Any],None]]í
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None"pandas._typing.StorageOptions 0:typing.overloadX2°B
__getitem__'pandas.core.frame.DataFrame.__getitem__ç.
__getitem__'pandas.core.frame.DataFrame.__getitem__":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*<:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*≈,¬,
–Union[pandas.core.series.Series[builtins.bool],pandas.core.frame.DataFrame,pandas.core.indexes.base.Index[Any],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],TypeAlias[Unknown],builtins.list[pandas.core.frame._ScalarOrTupleT],typing.Generator[pandas.core.frame._ScalarOrTupleT,None,None]]e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Indexá
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_str8
TypeAlias[Unknown] "pandas._typing.np_ndarray_bool∆
0builtins.list[pandas.core.frame._ScalarOrTupleT]Ç
!pandas.core.frame._ScalarOrTupleT⁄
…Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],builtins.tuple[typing.Hashable]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarU
builtins.tuple[typing.Hashable]"
typing.Hashable"typing.Hashable"builtins.tuple"builtins.listÍ
=typing.Generator[pandas.core.frame._ScalarOrTupleT,None,None]Ç
!pandas.core.frame._ScalarOrTupleT⁄
…Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],builtins.tuple[typing.Hashable]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarU
builtins.tuple[typing.Hashable]"
typing.Hashable"typing.Hashable"builtins.tuple
None
None"typing.Generator0:typing.overloadXÈ
__getitem__'pandas.core.frame.DataFrame.__getitem__":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*<:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*" 
builtins.slice"builtins.slice0:typing.overloadXÏ
__getitem__'pandas.core.frame.DataFrame.__getitem__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*<:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*öó
πUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],typing.Hashable]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar"
typing.Hashable"typing.Hashable0:typing.overloadX2é
query!pandas.core.frame.DataFrame.queryï
query!pandas.core.frame.DataFrame.query"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*&
expr
builtins.str"builtins.str*G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kwargs
Any0:typing.overloadX…
query!pandas.core.frame.DataFrame.query":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*&
expr
builtins.str"builtins.str*I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX2€=
drop pandas.core.frame.DataFrame.dropç
drop pandas.core.frame.DataFrame.drop"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ª
labels¨
[Union[typing.Hashable,typing.Sequence[typing.Hashable],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *∫
index¨
[Union[typing.Hashable,typing.Sequence[typing.Hashable],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *º
columns¨
[Union[typing.Hashable,typing.Sequence[typing.Hashable],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX¡
drop pandas.core.frame.DataFrame.drop":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ª
labels¨
[Union[typing.Hashable,typing.Sequence[typing.Hashable],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *∫
index¨
[Union[typing.Hashable,typing.Sequence[typing.Hashable],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *º
columns¨
[Union[typing.Hashable,typing.Sequence[typing.Hashable],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX‹
drop pandas.core.frame.DataFrame.drop"q
'Union[pandas.core.frame.DataFrame,None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ª
labels¨
[Union[typing.Hashable,typing.Sequence[typing.Hashable],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *∫
index¨
[Union[typing.Hashable,typing.Sequence[typing.Hashable],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *º
columns¨
[Union[typing.Hashable,typing.Sequence[typing.Hashable],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *-
inplace
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX2î^
rename"pandas.core.frame.DataFrame.renameÙ
rename"pandas.core.frame.DataFrame.rename"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ø
mapper∞
xUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer
None *æ
index∞
xUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer
None *¿
columns∞
xUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
copy
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX®
rename"pandas.core.frame.DataFrame.rename":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ø
mapper∞
xUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer
None *æ
index∞
xUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer
None *¿
columns∞
xUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
copy
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX√
rename"pandas.core.frame.DataFrame.rename"q
'Union[pandas.core.frame.DataFrame,None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ø
mapper∞
xUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer
None *æ
index∞
xUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer
None *¿
columns∞
xUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
copy
builtins.bool"builtins.bool *-
inplace
builtins.bool"builtins.bool *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX2Êi
fillna"pandas.core.frame.DataFrame.fillna◊"
fillna"pandas.core.frame.DataFrame.fillna"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Á
valueŸ
úUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,builtins.dict[Any,Any],pandas.core.series.Series[Any],pandas.core.frame.DataFrame,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType9
builtins.dict[Any,Any]
Any
Any"builtins.dictD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *È
method⁄
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *)
limit
builtins.int"builtins.int *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXã#
fillna"pandas.core.frame.DataFrame.fillna":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Á
valueŸ
úUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,builtins.dict[Any,Any],pandas.core.series.Series[Any],pandas.core.frame.DataFrame,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType9
builtins.dict[Any,Any]
Any
Any"builtins.dictD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *È
method⁄
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *)
limit
builtins.int"builtins.int *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadXœ#
fillna"pandas.core.frame.DataFrame.fillna"q
'Union[pandas.core.frame.DataFrame,None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Á
valueŸ
úUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,builtins.dict[Any,Any],pandas.core.series.Series[Any],pandas.core.frame.DataFrame,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType9
builtins.dict[Any,Any]
Any
Any"builtins.dictD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *È
method⁄
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *V
inplaceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *)
limit
builtins.int"builtins.int *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadX2ìJ
replace#pandas.core.frame.DataFrame.replaceê
replace#pandas.core.frame.DataFrame.replace"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*

to_replace
Any *¨
valueû
áUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,typing.Sequence[Any],typing.Mapping[Any,Any],re.Pattern[Any],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType0
typing.Sequence[Any]
Any"typing.Sequence;
typing.Mapping[Any,Any]
Any
Any"typing.Mapping&
re.Pattern[Any]
Any"
re.Pattern
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
regex
Any *˛
methodÔ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ReplaceMethod *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXƒ
replace#pandas.core.frame.DataFrame.replace":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*

to_replace
Any *¨
valueû
áUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,typing.Sequence[Any],typing.Mapping[Any,Any],re.Pattern[Any],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType0
typing.Sequence[Any]
Any"typing.Sequence;
typing.Mapping[Any,Any]
Any
Any"typing.Mapping&
re.Pattern[Any]
Any"
re.Pattern
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
regex
Any *˛
methodÔ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ReplaceMethod 0:typing.overloadXà
replace#pandas.core.frame.DataFrame.replace"q
'Union[pandas.core.frame.DataFrame,None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*

to_replace
Any *¨
valueû
áUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,typing.Sequence[Any],typing.Mapping[Any,Any],re.Pattern[Any],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType0
typing.Sequence[Any]
Any"typing.Sequence;
typing.Mapping[Any,Any]
Any
Any"typing.Mapping&
re.Pattern[Any]
Any"
re.Pattern
None *V
inplaceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
regex
Any *˛
methodÔ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ReplaceMethod 0:typing.overloadX2Æ
	set_index%pandas.core.frame.DataFrame.set_index·	
	set_index%pandas.core.frame.DataFrame.set_index"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ï
keys·
ŸUnion[TypeAlias[Union[typing.Hashable,None]],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any],numpy.ndarray[Any,Any],typing.Iterator[pandas._typing.HashableT],builtins.list[pandas._typing.HashableT]]è
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.LabelD
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayè
)typing.Iterator[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iteratorã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list**
drop
builtins.bool"builtins.bool *,
append
builtins.bool"builtins.bool *6
verify_integrity
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXï

	set_index%pandas.core.frame.DataFrame.set_index":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ï
keys·
ŸUnion[TypeAlias[Union[typing.Hashable,None]],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any],numpy.ndarray[Any,Any],typing.Iterator[pandas._typing.HashableT],builtins.list[pandas._typing.HashableT]]è
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.LabelD
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayè
)typing.Iterator[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iteratorã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list**
drop
builtins.bool"builtins.bool *,
append
builtins.bool"builtins.bool *6
verify_integrity
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX2ü
reset_index'pandas.core.frame.DataFrame.reset_indexº
reset_index'pandas.core.frame.DataFrame.reset_index"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*≈
level∑
NUnion[TypeAlias[Union[typing.Hashable,builtins.int]],typing.Sequence[Unknown]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level-
typing.Sequence[Unknown] "typing.Sequence **
drop
builtins.bool"builtins.bool *q
	col_level`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str *2
col_fill"
typing.Hashable"typing.Hashable *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*6
allow_duplicates
builtins.bool"builtins.bool *Ç
namesÙ
>Union[typing.Hashable,builtins.list[pandas._typing.HashableT]]"
typing.Hashable"typing.Hashableã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list 0:typing.overloadX
reset_index'pandas.core.frame.DataFrame.reset_index":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*≈
level∑
NUnion[TypeAlias[Union[typing.Hashable,builtins.int]],typing.Sequence[Unknown]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level-
typing.Sequence[Unknown] "typing.Sequence *q
	col_level`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str *2
col_fill"
typing.Hashable"typing.Hashable **
drop
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *6
allow_duplicates
builtins.bool"builtins.bool *Ç
namesÙ
>Union[typing.Hashable,builtins.list[pandas._typing.HashableT]]"
typing.Hashable"typing.Hashableã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list 0:typing.overloadX¥	
reset_index'pandas.core.frame.DataFrame.reset_index"q
'Union[pandas.core.frame.DataFrame,None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*≈
level∑
NUnion[TypeAlias[Union[typing.Hashable,builtins.int]],typing.Sequence[Unknown]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level-
typing.Sequence[Unknown] "typing.Sequence **
drop
builtins.bool"builtins.bool *V
inplaceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *q
	col_level`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str *2
col_fill"
typing.Hashable"typing.Hashable *6
allow_duplicates
builtins.bool"builtins.bool *Ç
namesÙ
>Union[typing.Hashable,builtins.list[pandas._typing.HashableT]]"
typing.Hashable"typing.Hashableã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list 0:typing.overloadX2˛`
dropna"pandas.core.frame.DataFrame.dropnaﬂ
dropna"pandas.core.frame.DataFrame.dropna"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *¥
how®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *R
threshD
Union[builtins.int,None]
builtins.int"builtins.int
None *£
subsetî
ØUnion[TypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],None]û
ÄTypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]]¸
uUnion[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]0
typing.Sequence[Any]
Any"typing.Sequence9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayD
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"pandas._typing.ListLikeU≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar
None *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXì 
dropna"pandas.core.frame.DataFrame.dropna":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *¥
how®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *R
threshD
Union[builtins.int,None]
builtins.int"builtins.int
None *£
subsetî
ØUnion[TypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],None]û
ÄTypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]]¸
uUnion[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]0
typing.Sequence[Any]
Any"typing.Sequence9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayD
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"pandas._typing.ListLikeU≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX◊ 
dropna"pandas.core.frame.DataFrame.dropna"q
'Union[pandas.core.frame.DataFrame,None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *¥
how®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *R
threshD
Union[builtins.int,None]
builtins.int"builtins.int
None *£
subsetî
ØUnion[TypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],None]û
ÄTypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]]¸
uUnion[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]0
typing.Sequence[Any]
Any"typing.Sequence9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayD
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"pandas._typing.ListLikeU≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar
None *V
inplaceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None 0:typing.overloadX2Ø:
sort_values'pandas.core.frame.DataFrame.sort_valuesÏ
sort_values'pandas.core.frame.DataFrame.sort_values"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¨
by£
1Union[builtins.str,typing.Sequence[builtins.str]]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *2
ignore_index
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadX†
sort_values'pandas.core.frame.DataFrame.sort_values":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¨
by£
1Union[builtins.str,typing.Sequence[builtins.str]]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *2
ignore_index
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadX‰
sort_values'pandas.core.frame.DataFrame.sort_values"q
'Union[pandas.core.frame.DataFrame,None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¨
by£
1Union[builtins.str,typing.Sequence[builtins.str]]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *V
inplaceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *2
ignore_index
builtins.bool"builtins.bool *í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadX2âA

sort_index&pandas.core.frame.DataFrame.sort_indexÄ

sort_index&pandas.core.frame.DataFrame.sort_index"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *4
sort_remaining
builtins.bool"builtins.bool *2
ignore_index
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadXÑ

sort_index&pandas.core.frame.DataFrame.sort_index":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *‹
levelŒ
rUnion[TypeAlias[Union[typing.Hashable,builtins.int]],builtins.list[builtins.int],builtins.list[builtins.str],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.LevelJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *4
sort_remaining
builtins.bool"builtins.bool *2
ignore_index
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadX»

sort_index&pandas.core.frame.DataFrame.sort_index"q
'Union[pandas.core.frame.DataFrame,None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *‹
levelŒ
rUnion[TypeAlias[Union[typing.Hashable,builtins.int]],builtins.list[builtins.int],builtins.list[builtins.str],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.LevelJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *V
inplaceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *4
sort_remaining
builtins.bool"builtins.bool *2
ignore_index
builtins.bool"builtins.bool *í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadX2Üø
groupby#pandas.core.frame.DataFrame.groupby˛)
groupby#pandas.core.frame.DataFrame.groupby"∂
–pandas.core.groupby.generic.DataFrameGroupBy[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar",pandas.core.groupby.generic.DataFrameGroupBy*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ª
by≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadX 
groupby#pandas.core.frame.DataFrame.groupby"‹
Vpandas.core.groupby.generic.DataFrameGroupBy[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp",pandas.core.groupby.generic.DataFrameGroupBy*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*b
byZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadXŒ
groupby#pandas.core.frame.DataFrame.groupby"‹
Vpandas.core.groupby.generic.DataFrameGroupBy[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta",pandas.core.groupby.generic.DataFrameGroupBy*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*f
by^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadX´
groupby#pandas.core.frame.DataFrame.groupby"«
Opandas.core.groupby.generic.DataFrameGroupBy[pandas._libs.tslibs.period.Period]F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period",pandas.core.groupby.generic.DataFrameGroupBy*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*X
byP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadXú
groupby#pandas.core.frame.DataFrame.groupby"Ö
Fpandas.core.groupby.generic.DataFrameGroupBy[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval",pandas.core.groupby.generic.DataFrameGroupBy*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ä
byÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadXÊ&
groupby#pandas.core.frame.DataFrame.groupby"°
Apandas.core.groupby.generic.DataFrameGroupBy[builtins.tuple[Any]].
builtins.tuple[Any]
Any"builtins.tuple",pandas.core.groupby.generic.DataFrameGroupBy*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*∏
by≠
∞Union[pandas.core.indexes.multi.MultiIndex,TypeAlias[Union[builtins.tuple[Any],builtins.list[pandas._typing._HashableTa],TypeAlias[Union[numpy.ufunc,CallableType[builtins.function]]],builtins.list[Unknown],builtins.list[pandas.core.series.Series[Any]],numpy.ndarray[Any,Any],builtins.list[numpy.ndarray[Any,Any]],typing.Mapping[TypeAlias[Union[typing.Hashable,None]],Any],builtins.list[typing.Mapping[Unknown,Any]],builtins.list[pandas.core.indexes.base.Index[Any]],pandas.core.groupby.grouper.Grouper,builtins.list[pandas.core.groupby.grouper.Grouper]]],None]L
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndexù
ˇTypeAlias[Union[builtins.tuple[Any],builtins.list[pandas._typing._HashableTa],TypeAlias[Union[numpy.ufunc,CallableType[builtins.function]]],builtins.list[Unknown],builtins.list[pandas.core.series.Series[Any]],numpy.ndarray[Any,Any],builtins.list[numpy.ndarray[Any,Any]],typing.Mapping[TypeAlias[Union[typing.Hashable,None]],Any],builtins.list[typing.Mapping[Unknown,Any]],builtins.list[pandas.core.indexes.base.Index[Any]],pandas.core.groupby.grouper.Grouper,builtins.list[pandas.core.groupby.grouper.Grouper]]]Ô
ÙUnion[builtins.tuple[Any],builtins.list[pandas._typing._HashableTa],TypeAlias[Union[numpy.ufunc,CallableType[builtins.function]]],builtins.list[Unknown],builtins.list[pandas.core.series.Series[Any]],numpy.ndarray[Any,Any],builtins.list[numpy.ndarray[Any,Any]],typing.Mapping[TypeAlias[Union[typing.Hashable,None]],Any],builtins.list[typing.Mapping[Unknown,Any]],builtins.list[pandas.core.indexes.base.Index[Any]],pandas.core.groupby.grouper.Grouper,builtins.list[pandas.core.groupby.grouper.Grouper]].
builtins.tuple[Any]
Any"builtins.tupleè
)builtins.list[pandas._typing._HashableTa]S
pandas._typing._HashableTa"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list¸
=TypeAlias[Union[numpy.ufunc,CallableType[builtins.function]]]ü
2Union[numpy.ufunc,CallableType[builtins.function]]
numpy.ufunc"numpy.ufuncK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Function)
builtins.list[Unknown] "builtins.listÑ
-builtins.list[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"builtins.list9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayq
%builtins.list[numpy.ndarray[Any,Any]]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.listÁ
:typing.Mapping[TypeAlias[Union[typing.Hashable,None]],Any]è
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label
Any"typing.Mappingu
*builtins.list[typing.Mapping[Unknown,Any]]8
typing.Mapping[Unknown,Any] 
Any"typing.Mapping"builtins.listì
2builtins.list[pandas.core.indexes.base.Index[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"builtins.listJ
#pandas.core.groupby.grouper.Grouper"#pandas.core.groupby.grouper.Grouperè
2builtins.list[pandas.core.groupby.grouper.Grouper]J
#pandas.core.groupby.grouper.Grouper"#pandas.core.groupby.grouper.Grouper"builtins.list"%pandas._typing.GroupByObjectNonScalar
None *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadX˙!
groupby#pandas.core.frame.DataFrame.groupby"Ö
Fpandas.core.groupby.generic.DataFrameGroupBy[pandas._typing.SeriesByT]å

pandas._typing.SeriesByTÌ	
«Union[builtins.str,builtins.bytes,datetime.date,builtins.bool,builtins.int,builtins.float,builtins.complex,datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval",pandas.core.groupby.generic.DataFrameGroupBy*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ë

byﬂ

3pandas.core.series.Series[pandas._typing.SeriesByT]å

pandas._typing.SeriesByTÌ	
«Union[builtins.str,builtins.bytes,datetime.date,builtins.bool,builtins.int,builtins.float,builtins.complex,datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"pandas.core.series.Series*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadXÉ
groupby#pandas.core.frame.DataFrame.groupby"j
1pandas.core.groupby.generic.DataFrameGroupBy[Any]
Any",pandas.core.groupby.generic.DataFrameGroupBy*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ç
byÑ
|Union[pandas.core.indexes.category.CategoricalIndex[Any],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any]]l
2pandas.core.indexes.category.CategoricalIndex[Any]
Any"-pandas.core.indexes.category.CategoricalIndexN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadX2ÿ
aggpandas.core.frame.DataFrame.agg˘

aggpandas.core.frame.DataFrame.agg"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*∆
funcª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *
kwargs
Any0:typing.overloadX≥
aggpandas.core.frame.DataFrame.agg":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ä
func˝
∫Union[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]®
Ybuiltins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase"builtins.listê
YTypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]ã
Ntyping.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.HashableV
%Union[Unknown,builtins.list[Unknown]] )
builtins.list[Unknown] "builtins.list"typing.Mapping"#pandas._typing.AggFuncTypeDictFrame *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *
kwargs
Any0:typing.overloadX2˙
	aggregate%pandas.core.frame.DataFrame.aggregateÖ
	aggregate%pandas.core.frame.DataFrame.aggregate"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*∆
funcª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *
kwargs
Any0:typing.overloadXΩ
	aggregate%pandas.core.frame.DataFrame.aggregate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*à
func˝
∫Union[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]®
Ybuiltins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase"builtins.listê
YTypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]ã
Ntyping.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.HashableV
%Union[Unknown,builtins.list[Unknown]] )
builtins.list[Unknown] "builtins.list"typing.Mapping"#pandas._typing.AggFuncTypeDictFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *
kwargs
Any0:typing.overloadX2‡ó
apply!pandas.core.frame.DataFrame.applyù
apply!pandas.core.frame.DataFrame.apply":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *)
raw
builtins.bool"builtins.bool *
result_type
None *
args
Any *
kwargs
Any0:typing.overloadX–
apply!pandas.core.frame.DataFrame.apply"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *)
raw
builtins.bool"builtins.bool *
result_type
None *
args
Any *
kwargs
Any0:typing.overloadXß
apply!pandas.core.frame.DataFrame.apply"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *)
raw
builtins.bool"builtins.bool *
result_type
None *
args
Any *
kwargs
Any0:typing.overloadXÆ!
apply!pandas.core.frame.DataFrame.apply"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *)
raw
builtins.bool"builtins.bool *
args
Any *∫
result_type®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*
kwargs
Any0:typing.overloadXà

apply!pandas.core.frame.DataFrame.apply":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *)
raw
builtins.bool"builtins.bool *
args
Any *H
result_type7
Literal[builtins.str]	
builtins.str"builtins.str*
kwargs
Any0:typing.overloadXí

apply!pandas.core.frame.DataFrame.apply"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *)
raw
builtins.bool"builtins.bool *
args
Any *H
result_type7
Literal[builtins.str]	
builtins.str"builtins.str*
kwargs
Any0:typing.overloadXà

apply!pandas.core.frame.DataFrame.apply":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *)
raw
builtins.bool"builtins.bool *
args
Any *H
result_type7
Literal[builtins.str]	
builtins.str"builtins.str*
kwargs
Any0:typing.overloadX‘
apply!pandas.core.frame.DataFrame.apply"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *)
raw
builtins.bool"builtins.bool *
args
Any *H
result_type7
Literal[builtins.str]	
builtins.str"builtins.str*
kwargs
Any0:typing.overloadXœ
apply!pandas.core.frame.DataFrame.apply"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*)
raw
builtins.bool"builtins.bool *
result_type
None *
args
Any *í
axisá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn*
kwargs
Any0:typing.overloadX¶
apply!pandas.core.frame.DataFrame.apply"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*)
raw
builtins.bool"builtins.bool *
result_type
None *
args
Any *í
axisá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn*
kwargs
Any0:typing.overloadXú
apply!pandas.core.frame.DataFrame.apply":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*)
raw
builtins.bool"builtins.bool *
result_type
None *
args
Any *í
axisá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn*
kwargs
Any0:typing.overloadX…
apply!pandas.core.frame.DataFrame.apply":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*R
fK
CallableType[builtins.function]&
builtins.function"builtins.function*)
raw
builtins.bool"builtins.bool *
args
Any *í
axisá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn*H
result_type7
Literal[builtins.str]	
builtins.str"builtins.str*
kwargs
Any0:typing.overloadX2•
count!pandas.core.frame.DataFrame.countã

count!pandas.core.frame.DataFrame.count":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *2
numeric_only
builtins.bool"builtins.bool *ø
level≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level0:typing.overloadXÍ
count!pandas.core.frame.DataFrame.count"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *
level
None *2
numeric_only
builtins.bool"builtins.bool 0:typing.overloadX2•
mode pandas.core.frame.DataFrame.modeÃ

mode pandas.core.frame.DataFrame.mode":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *,
skipna
builtins.bool"builtins.bool *2
numeric_only
builtins.bool"builtins.bool *ø
level≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level*
kwargs
Any0:typing.overloadX´	
mode pandas.core.frame.DataFrame.mode"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *,
skipna
builtins.bool"builtins.bool *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX2‘!
quantile$pandas.core.frame.DataFrame.quantile˛
quantile$pandas.core.frame.DataFrame.quantile"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*)
q 
builtins.float"builtins.float *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *2
numeric_only
builtins.bool"builtins.bool *◊
interpolation¡
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"$pandas._typing.QuantileInterpolation *ù
methodé
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.CalculationMethod 0:typing.overloadX†
quantile$pandas.core.frame.DataFrame.quantile":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*‘
qÃ
;Union[builtins.list[builtins.float],numpy.ndarray[Any,Any]]P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *2
numeric_only
builtins.bool"builtins.bool *◊
interpolation¡
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"$pandas._typing.QuantileInterpolation *ù
methodé
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.CalculationMethod 0:typing.overloadX2Û

columns#pandas.core.frame.DataFrame.columns˚
columns#pandas.core.frame.DataFrame.columns"l
,pandas.core.indexes.base.Index[builtins.str]
builtins.str"builtins.str"pandas.core.indexes.base.Index*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.propertyX`ƒ
columns#pandas.core.frame.DataFrame.columns"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*∏
cols≠
√Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[pandas._typing.HashableT],builtins.tuple[pandas._typing.HashableT]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLikeã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listç
(builtins.tuple[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.tuple0:.setter2Á
index!pandas.core.frame.DataFrame.indexŸ
index!pandas.core.frame.DataFrame.index"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:builtins.propertyX`ﬁ
index!pandas.core.frame.DataFrame.index"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*W
idxN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index0:.setter2◊
allpandas.core.frame.DataFrame.all“
allpandas.core.frame.DataFrame.all"
builtins.bool"builtins.bool*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
axis
None*X
	bool_onlyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
skipna
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXŸ	
allpandas.core.frame.DataFrame.all"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *X
	bool_onlyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
skipna
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX2◊
anypandas.core.frame.DataFrame.any“
anypandas.core.frame.DataFrame.any"
builtins.bool"builtins.bool*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
axis
None*X
	bool_onlyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
skipna
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXŸ	
anypandas.core.frame.DataFrame.any"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *X
	bool_onlyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
skipna
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX2≤
bfill!pandas.core.frame.DataFrame.bfillß
bfill!pandas.core.frame.DataFrame.bfill"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadX€
bfill!pandas.core.frame.DataFrame.bfill":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadX2≤
ffill!pandas.core.frame.DataFrame.ffillß
ffill!pandas.core.frame.DataFrame.ffill"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadX€
ffill!pandas.core.frame.DataFrame.ffill":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadX2ØX
interpolate'pandas.core.frame.DataFrame.interpolateÏ
interpolate'pandas.core.frame.DataFrame.interpolate"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
method·
ùTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ô
íUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.InterpolateOptions *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *è
limit_direction˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str * 

limit_area∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *x
downcasth
!Union[Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str
None *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*
kwargs
Any0:typing.overloadX†
interpolate'pandas.core.frame.DataFrame.interpolate":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
method·
ùTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ô
íUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.InterpolateOptions *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *è
limit_direction˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str * 

limit_area∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *x
downcasth
!Union[Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX‰
interpolate'pandas.core.frame.DataFrame.interpolate"q
'Union[pandas.core.frame.DataFrame,None]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
method·
ùTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ô
íUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.InterpolateOptions *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *V
inplaceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *è
limit_direction˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str * 

limit_area∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *x
downcasth
!Union[Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str
None *
kwargs
Any0:typing.overloadX2í,
rename_axis'pandas.core.frame.DataFrame.rename_axis¶

rename_axis'pandas.core.frame.DataFrame.rename_axis"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
mapper
Any *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
copy
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadX⁄

rename_axis'pandas.core.frame.DataFrame.rename_axis":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
mapper
Any *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
copy
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadXé
rename_axis'pandas.core.frame.DataFrame.rename_axis"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ª
index≠
ìUnion[builtins.str,typing.Sequence[builtins.str],builtins.dict[Union[builtins.str,builtins.int],builtins.str],CallableType[builtins.function],None]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.SequenceÕ
<builtins.dict[Union[builtins.str,builtins.int],builtins.str]`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str"builtins.dictK
CallableType[builtins.function]&
builtins.function"builtins.function
None *Ω
columns≠
ìUnion[builtins.str,typing.Sequence[builtins.str],builtins.dict[Union[builtins.str,builtins.int],builtins.str],CallableType[builtins.function],None]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.SequenceÕ
<builtins.dict[Union[builtins.str,builtins.int],builtins.str]`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str"builtins.dictK
CallableType[builtins.function]&
builtins.function"builtins.function
None **
copy
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadX¬
rename_axis'pandas.core.frame.DataFrame.rename_axis":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ª
index≠
ìUnion[builtins.str,typing.Sequence[builtins.str],builtins.dict[Union[builtins.str,builtins.int],builtins.str],CallableType[builtins.function],None]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.SequenceÕ
<builtins.dict[Union[builtins.str,builtins.int],builtins.str]`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str"builtins.dictK
CallableType[builtins.function]&
builtins.function"builtins.function
None *Ω
columns≠
ìUnion[builtins.str,typing.Sequence[builtins.str],builtins.dict[Union[builtins.str,builtins.int],builtins.str],CallableType[builtins.function],None]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.SequenceÕ
<builtins.dict[Union[builtins.str,builtins.int],builtins.str]`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.str"builtins.str"builtins.dictK
CallableType[builtins.function]&
builtins.function"builtins.function
None **
copy
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX2ö,
rolling#pandas.core.frame.DataFrame.rolling˚
rolling#pandas.core.frame.DataFrame.rolling"ü
>pandas.core.window.rolling.Window[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"!pandas.core.window.rolling.Window*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ä
window˝
{Union[builtins.int,builtins.str,datetime.timedelta,pandas._libs.tslibs.offsets.BaseOffset,pandas.core.indexers.BaseIndexer]
builtins.int"builtins.int
builtins.str"builtins.str(
datetime.timedelta"datetime.timedeltaP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffsetD
 pandas.core.indexers.BaseIndexer" pandas.core.indexers.BaseIndexer*W
min_periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
center
builtins.bool"builtins.bool *W
onM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *Ó
closedﬂ
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]Ÿ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType
None *P
stepD
Union[builtins.int,None]
builtins.int"builtins.int
None *ù
methodé
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.CalculationMethod **
win_type
builtins.str"builtins.str0:typing.overloadXÎ
rolling#pandas.core.frame.DataFrame.rolling"°
?pandas.core.window.rolling.Rolling[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame""pandas.core.window.rolling.Rolling*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ä
window˝
{Union[builtins.int,builtins.str,datetime.timedelta,pandas._libs.tslibs.offsets.BaseOffset,pandas.core.indexers.BaseIndexer]
builtins.int"builtins.int
builtins.str"builtins.str(
datetime.timedelta"datetime.timedeltaP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffsetD
 pandas.core.indexers.BaseIndexer" pandas.core.indexers.BaseIndexer*W
min_periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
center
builtins.bool"builtins.bool *W
onM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *Ó
closedﬂ
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]Ÿ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType
None *P
stepD
Union[builtins.int,None]
builtins.int"builtins.int
None *ù
methodé
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.CalculationMethod *
win_type
None 0:typing.overloadX2˙[
to_json#pandas.core.frame.DataFrame.to_jsonø
to_json#pandas.core.frame.DataFrame.to_json"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*÷
path_or_bufƒ
hUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.str]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathd
(pandas._typing.WriteBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.WriteBuffer*C
orient7
Literal[builtins.str]	
builtins.str"builtins.str*À
date_format∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *4
double_precision
builtins.int"builtins.int *1
force_ascii
builtins.bool"builtins.bool *ÿ
	date_unit∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *û
default_handlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *E
lines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *+
index
builtins.bool"builtins.bool *R
indentD
Union[builtins.int,None]
builtins.int"builtins.int
None *A
mode7
Literal[builtins.str]	
builtins.str"builtins.str0:typing.overloadXó
to_json#pandas.core.frame.DataFrame.to_json"
builtins.str"builtins.str*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
path_or_buf
None *C
orient7
Literal[builtins.str]	
builtins.str"builtins.str*À
date_format∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *4
double_precision
builtins.int"builtins.int *1
force_ascii
builtins.bool"builtins.bool *ÿ
	date_unit∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *û
default_handlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *E
lines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *+
index
builtins.bool"builtins.bool *R
indentD
Union[builtins.int,None]
builtins.int"builtins.int
None *A
mode7
Literal[builtins.str]	
builtins.str"builtins.str0:typing.overloadX°
to_json#pandas.core.frame.DataFrame.to_json"
builtins.str"builtins.str*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
path_or_buf
None *‰
orient’
°Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]¢
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.JsonFrameOrient
None *À
date_format∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *4
double_precision
builtins.int"builtins.int *1
force_ascii
builtins.bool"builtins.bool *ÿ
	date_unit∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *û
default_handlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *+
lines
builtins.bool"builtins.bool *Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *+
index
builtins.bool"builtins.bool *R
indentD
Union[builtins.int,None]
builtins.int"builtins.int
None *C
mode7
Literal[builtins.str]	
builtins.str"builtins.str 0:typing.overloadX…
to_json#pandas.core.frame.DataFrame.to_json"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*÷
path_or_bufƒ
hUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.str]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathd
(pandas._typing.WriteBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.WriteBuffer*‰
orient’
°Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]¢
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.JsonFrameOrient
None *À
date_format∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *4
double_precision
builtins.int"builtins.int *1
force_ascii
builtins.bool"builtins.bool *ÿ
	date_unit∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *û
default_handlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *+
lines
builtins.bool"builtins.bool *Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *+
index
builtins.bool"builtins.bool *R
indentD
Union[builtins.int,None]
builtins.int"builtins.int
None *C
mode7
Literal[builtins.str]	
builtins.str"builtins.str 0:typing.overloadX2Ò;
	to_string%pandas.core.frame.DataFrame.to_stringá 
	to_string%pandas.core.frame.DataFrame.to_string"
None*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Œ
bufƒ
hUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.str]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathd
(pandas._typing.WriteBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.WriteBuffer*ª
columns´
wUnion[builtins.list[pandas._typing.HashableT1],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],None]ç
(builtins.list[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None *Ø
	col_spaceù
jUnion[builtins.int,builtins.list[builtins.int],builtins.dict[pandas._typing.HashableT2,builtins.int],None]
builtins.int"builtins.intJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list∏
5builtins.dict[pandas._typing.HashableT2,builtins.int]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable
builtins.int"builtins.int"builtins.dict
None *ö
headerã
MUnion[builtins.bool,builtins.list[builtins.str],builtins.tuple[builtins.str]]
builtins.bool"builtins.boolJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple *+
index
builtins.bool"builtins.bool **
na_rep
builtins.str"builtins.str *…	

formatters∂	
ÕUnion[TypeAlias[Union[builtins.list[CallableType[builtins.function]],builtins.tuple[CallableType[builtins.function]],typing.Mapping[Union[builtins.str,builtins.int],CallableType[builtins.function]]]],None]◊
¡TypeAlias[Union[builtins.list[CallableType[builtins.function]],builtins.tuple[CallableType[builtins.function]],typing.Mapping[Union[builtins.str,builtins.int],CallableType[builtins.function]]]]Ô
∂Union[builtins.list[CallableType[builtins.function]],builtins.tuple[CallableType[builtins.function]],typing.Mapping[Union[builtins.str,builtins.int],CallableType[builtins.function]]]å
.builtins.list[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.listé
/builtins.tuple[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.tupleë
Ptyping.Mapping[Union[builtins.str,builtins.int],CallableType[builtins.function]]`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intK
CallableType[builtins.function]&
builtins.function"builtins.function"typing.Mapping"pandas._typing.FormattersType
None *õ
float_formatÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *W
sparsifyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *1
index_names
builtins.bool"builtins.bool *S
justifyD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
max_rowsD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
max_colsD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
show_dimensions
builtins.bool"builtins.bool *+
decimal
builtins.str"builtins.str *V

line_widthD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
min_rowsD
Union[builtins.int,None]
builtins.int"builtins.int
None *X
max_colwidthD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadX≤
	to_string%pandas.core.frame.DataFrame.to_string"
builtins.str"builtins.str*D
self:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*
buf
None *∏
columns®
vUnion[builtins.list[pandas._typing.HashableT],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],None]ã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None *Í
	col_spaceÿ
`Union[builtins.int,builtins.list[builtins.int],builtins.dict[typing.Hashable,builtins.int],None]
builtins.int"builtins.intJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list~
+builtins.dict[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"builtins.dict
None *µ
header¶
2Union[builtins.bool,typing.Sequence[builtins.str]]
builtins.bool"builtins.boolN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *+
index
builtins.bool"builtins.bool **
na_rep
builtins.str"builtins.str *…	

formatters∂	
ÕUnion[TypeAlias[Union[builtins.list[CallableType[builtins.function]],builtins.tuple[CallableType[builtins.function]],typing.Mapping[Union[builtins.str,builtins.int],CallableType[builtins.function]]]],None]◊
¡TypeAlias[Union[builtins.list[CallableType[builtins.function]],builtins.tuple[CallableType[builtins.function]],typing.Mapping[Union[builtins.str,builtins.int],CallableType[builtins.function]]]]Ô
∂Union[builtins.list[CallableType[builtins.function]],builtins.tuple[CallableType[builtins.function]],typing.Mapping[Union[builtins.str,builtins.int],CallableType[builtins.function]]]å
.builtins.list[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.listé
/builtins.tuple[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.tupleë
Ptyping.Mapping[Union[builtins.str,builtins.int],CallableType[builtins.function]]`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.intK
CallableType[builtins.function]&
builtins.function"builtins.function"typing.Mapping"pandas._typing.FormattersType
None *õ
float_formatÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *W
sparsifyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *1
index_names
builtins.bool"builtins.bool *S
justifyD
Union[builtins.str,None]
builtins.str"builtins.str
None *T
max_rowsD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
max_colsD
Union[builtins.int,None]
builtins.int"builtins.int
None *5
show_dimensions
builtins.bool"builtins.bool *+
decimal
builtins.str"builtins.str *V

line_widthD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
min_rowsD
Union[builtins.int,None]
builtins.int"builtins.int
None *X
max_colwidthD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadXr:
__hash__$pandas.core.frame.DataFrame.__hash__
NonerT
sparse"pandas.core.frame.DataFrame.sparse&
builtins.ellipsis"builtins.ellipsisrF
Name pandas.core.frame.DataFrame.Name
builtins.str"builtins.str§
Grouper#pandas.core.groupby.grouper.Grouper"builtins.object*U
__new__+pandas.core.groupby.grouper.Grouper.__new__*
cls*
args*

kwargs*≠
__init__,pandas.core.groupby.grouper.Grouper.__init__"
None*T
selfJ
#pandas.core.groupby.grouper.Grouper"#pandas.core.groupby.grouper.Grouper*
key
Any *
level
Any *
freq
Any *(
axis
builtins.int"builtins.int **
sort
builtins.bool"builtins.bool *M
ax&pandas.core.groupby.grouper.Grouper.ax*
self0:builtins.property`*U
groups*pandas.core.groupby.grouper.Grouper.groups*
self0:builtins.property`rV
key'pandas.core.groupby.grouper.Grouper.key&
builtins.ellipsis"builtins.ellipsisrZ
level)pandas.core.groupby.grouper.Grouper.level&
builtins.ellipsis"builtins.ellipsisrX
freq(pandas.core.groupby.grouper.Grouper.freq&
builtins.ellipsis"builtins.ellipsisrX
axis(pandas.core.groupby.grouper.Grouper.axis&
builtins.ellipsis"builtins.ellipsisrX
sort(pandas.core.groupby.grouper.Grouper.sort&
builtins.ellipsis"builtins.ellipsisr^
grouper+pandas.core.groupby.grouper.Grouper.grouper&
builtins.ellipsis"builtins.ellipsisrV
obj'pandas.core.groupby.grouper.Grouper.obj&
builtins.ellipsis"builtins.ellipsisr^
indexer+pandas.core.groupby.grouper.Grouper.indexer&
builtins.ellipsis"builtins.ellipsisr\
binner*pandas.core.groupby.grouper.Grouper.binner&
builtins.ellipsis"builtins.ellipsis¬.
NamedAgg$pandas.core.groupby.generic.NamedAgg"builtins.tuple*Ä

_replace-pandas.core.groupby.generic.NamedAgg._replace"¥
(pandas.core.groupby.generic.NamedAgg._NTÖ
RTuple[builtins.str,TypeAlias[Union[builtins.str,CallableType[builtins.function]]]]
builtins.str"builtins.stré
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalar*¿
_self¥
(pandas.core.groupby.generic.NamedAgg._NTÖ
RTuple[builtins.str,TypeAlias[Union[builtins.str,CallableType[builtins.function]]]]
builtins.str"builtins.stré
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalar**
column
builtins.str"builtins.str *û
aggfuncé
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalar *∏

__new__,pandas.core.groupby.generic.NamedAgg.__new__"¥
(pandas.core.groupby.generic.NamedAgg._NTÖ
RTuple[builtins.str,TypeAlias[Union[builtins.str,CallableType[builtins.function]]]]
builtins.str"builtins.stré
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalar*˙
_clsÔ
.Type[pandas.core.groupby.generic.NamedAgg._NT]¥
(pandas.core.groupby.generic.NamedAgg._NTÖ
RTuple[builtins.str,TypeAlias[Union[builtins.str,CallableType[builtins.function]]]]
builtins.str"builtins.stré
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalar"type**
column
builtins.str"builtins.str *û
aggfuncé
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalar *”
_asdict,pandas.core.groupby.generic.NamedAgg._asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*¿
_self¥
(pandas.core.groupby.generic.NamedAgg._NTÖ
RTuple[builtins.str,TypeAlias[Union[builtins.str,CallableType[builtins.function]]]]
builtins.str"builtins.stré
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalar*’
_make*pandas.core.groupby.generic.NamedAgg._make"¥
(pandas.core.groupby.generic.NamedAgg._NTÖ
RTuple[builtins.str,TypeAlias[Union[builtins.str,CallableType[builtins.function]]]]
builtins.str"builtins.stré
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalar*˙
_clsÔ
.Type[pandas.core.groupby.generic.NamedAgg._NT]¥
(pandas.core.groupby.generic.NamedAgg._NTÖ
RTuple[builtins.str,TypeAlias[Union[builtins.str,CallableType[builtins.function]]]]
builtins.str"builtins.stré
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalar"type*>
iterable0
typing.Iterable[Any]
Any"typing.Iterable*
new
Any *
len
Any 0: prS
column+pandas.core.groupby.generic.NamedAgg.column
builtins.str"builtins.strr»
aggfunc,pandas.core.groupby.generic.NamedAgg.aggfuncé
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalarrS
column+pandas.core.groupby.generic.NamedAgg.column
builtins.str"builtins.strr»
aggfunc,pandas.core.groupby.generic.NamedAgg.aggfuncé
>TypeAlias[Union[builtins.str,CallableType[builtins.function]]]¢
3Union[builtins.str,CallableType[builtins.function]]
builtins.str"builtins.strK
CallableType[builtins.function]&
builtins.function"builtins.function"%pandas.core.groupby.generic.AggScalarrô
_fields,pandas.core.groupby.generic.NamedAgg._fields`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strrö
_field_types1pandas.core.groupby.generic.NamedAgg._field_typesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictr†
_field_defaults4pandas.core.groupby.generic.NamedAgg._field_defaultsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrU
_source,pandas.core.groupby.generic.NamedAgg._source
builtins.str"builtins.strr†
__annotations__4pandas.core.groupby.generic.NamedAgg.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictå™
CategoricalIndex-pandas.core.indexes.category.CategoricalIndex",pandas.core.indexes.extension.ExtensionIndex"#pandas.core.accessor.PandasDelegate*ˇH
__new__5pandas.core.indexes.category.CategoricalIndex.__new__"¸
2pandas.core.indexes.category.CategoricalIndex.Selfî
@pandas.core.indexes.category.CategoricalIndex[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"-pandas.core.indexes.category.CategoricalIndex"-pandas.core.indexes.category.CategoricalIndex*À
cls¡
8Type[pandas.core.indexes.category.CategoricalIndex.Self]¸
2pandas.core.indexes.category.CategoricalIndex.Selfî
@pandas.core.indexes.category.CategoricalIndex[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"-pandas.core.indexes.category.CategoricalIndex"-pandas.core.indexes.category.CategoricalIndex"type*Â
dataÿ
"typing.Iterable[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"typing.Iterable *

categories
Any *
ordered
Any *
dtype
Any **
copy
builtins.bool"builtins.bool *
name
Any *S
equals4pandas.core.indexes.category.CategoricalIndex.equals*
self*	
other*£
inferred_type;pandas.core.indexes.category.CategoricalIndex.inferred_type"
builtins.str"builtins.str*ü
selfî
@pandas.core.indexes.category.CategoricalIndex[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"-pandas.core.indexes.category.CategoricalIndex0:builtins.property`*_
values4pandas.core.indexes.category.CategoricalIndex.values*
self0:builtins.property`*è
__contains__:pandas.core.indexes.category.CategoricalIndex.__contains__"
builtins.bool"builtins.bool*óî
@pandas.core.indexes.category.CategoricalIndex[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"-pandas.core.indexes.category.CategoricalIndex*	
Any*∑
	__array__7pandas.core.indexes.category.CategoricalIndex.__array__"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*ü
selfî
@pandas.core.indexes.category.CategoricalIndex[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"-pandas.core.indexes.category.CategoricalIndex*
dtype
Any *…&
astype4pandas.core.indexes.category.CategoricalIndex.astype"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*ü
selfî
@pandas.core.indexes.category.CategoricalIndex[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"-pandas.core.indexes.category.CategoricalIndex*Í
dtypeﬁ
ÙTypeAlias[Union[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],typing.Mapping[Any,Unknown]]]…
ÈUnion[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],typing.Mapping[Any,Unknown]]û	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype8
typing.Mapping[Any,Unknown]
Any "typing.Mapping"pandas._typing.DtypeArg**
copy
builtins.bool"builtins.bool *e
fillna4pandas.core.indexes.category.CategoricalIndex.fillna*
self*
value *
downcast *ù
	is_unique7pandas.core.indexes.category.CategoricalIndex.is_unique"
builtins.bool"builtins.bool*ü
selfî
@pandas.core.indexes.category.CategoricalIndex[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"-pandas.core.indexes.category.CategoricalIndex0:builtins.property`*π
is_monotonic_increasingEpandas.core.indexes.category.CategoricalIndex.is_monotonic_increasing"
builtins.bool"builtins.bool*ü
selfî
@pandas.core.indexes.category.CategoricalIndex[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"-pandas.core.indexes.category.CategoricalIndex0:builtins.property`*π
is_monotonic_decreasingEpandas.core.indexes.category.CategoricalIndex.is_monotonic_decreasing"
builtins.bool"builtins.bool*ü
selfî
@pandas.core.indexes.category.CategoricalIndex[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"-pandas.core.indexes.category.CategoricalIndex0:builtins.property`*U
unique4pandas.core.indexes.category.CategoricalIndex.unique*
self*
level *¸

duplicated8pandas.core.indexes.category.CategoricalIndex.duplicated"
Any*ü
selfî
@pandas.core.indexes.category.CategoricalIndex[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"-pandas.core.indexes.category.CategoricalIndex*à
keep˚
IUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.bool]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str:
Literal[builtins.bool]	
builtins.bool"builtins.bool *S
get_loc5pandas.core.indexes.category.CategoricalIndex.get_loc*
self*
key*l
	get_value7pandas.core.indexes.category.CategoricalIndex.get_value*
self*
seriesArrayLike*
key*]
where3pandas.core.indexes.category.CategoricalIndex.where*
self*
cond*
other *è
reindex5pandas.core.indexes.category.CategoricalIndex.reindex*
self*

target*
method *
level *
limit *
	tolerance *ä
get_indexer9pandas.core.indexes.category.CategoricalIndex.get_indexer*
self*

target*
method *
limit *
	tolerance *t
get_indexer_non_uniqueDpandas.core.indexes.category.CategoricalIndex.get_indexer_non_unique*
self*

target*`
take_nd5pandas.core.indexes.category.CategoricalIndex.take_nd*
self*
args*

kwargs*N
map1pandas.core.indexes.category.CategoricalIndex.map*
self*

mapper*Q
delete4pandas.core.indexes.category.CategoricalIndex.delete*
self*
loc*[
insert4pandas.core.indexes.category.CategoricalIndex.insert*
self*
loc*
itemPrw
codes3pandas.core.indexes.category.CategoricalIndex.codes9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayrñ

categories8pandas.core.indexes.category.CategoricalIndex.categoriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index¿A
DatetimeIndex+pandas.core.indexes.datetimes.DatetimeIndex"7pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin"5pandas.core.indexes.accessors.DatetimeIndexProperties*
__init__4pandas.core.indexes.datetimes.DatetimeIndex.__init__"
None*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*Ê
data€
ÈUnion[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.tuple[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tuple*
freq
Any *
tz
Any */
	normalize
builtins.bool"builtins.bool *
closed
Any *-
	ambiguous
builtins.str"builtins.str *.
dayfirst
builtins.bool"builtins.bool */
	yearfirst
builtins.bool"builtins.bool *
dtype
Any **
copy
builtins.bool"builtins.bool *
name
Any *˘
	__array__5pandas.core.indexes.datetimes.DatetimeIndex.__array__"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*
dtype
Any *N

__reduce__6pandas.core.indexes.datetimes.DatetimeIndex.__reduce__*
self*µ
	to_series5pandas.core.indexes.datetimes.DatetimeIndex.to_series"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*
keep_tz
Any *
index
Any *
name
Any *—
snap0pandas.core.indexes.datetimes.DatetimeIndex.snap"
Any*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*(
freq
builtins.str"builtins.str *a
	get_value5pandas.core.indexes.datetimes.DatetimeIndex.get_value*
self*

series*
key*b
get_loc3pandas.core.indexes.datetimes.DatetimeIndex.get_loc*
self*
key*
	tolerance *x
slice_indexer9pandas.core.indexes.datetimes.DatetimeIndex.slice_indexer*
self*
start *	
end *

step *å
searchsorted8pandas.core.indexes.datetimes.DatetimeIndex.searchsorted"
Any*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*
value
Any*(
side
builtins.str"builtins.str *
sorter
Any *Ï
is_type_compatible>pandas.core.indexes.datetimes.DatetimeIndex.is_type_compatible"
builtins.bool"builtins.bool*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*
typ
Any*Â
inferred_type9pandas.core.indexes.datetimes.DatetimeIndex.inferred_type"
builtins.str"builtins.str*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex0:builtins.property`*Y
insert2pandas.core.indexes.datetimes.DatetimeIndex.insert*
self*
loc*
item*¸
indexer_at_time;pandas.core.indexes.datetimes.DatetimeIndex.indexer_at_time"
Any*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*
time
Any**
asof
builtins.bool"builtins.bool *ﬂ
indexer_between_time@pandas.core.indexes.datetimes.DatetimeIndex.indexer_between_time"
Any*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*

start_time
Any*
end_time
Any*3
include_start
builtins.bool"builtins.bool *1
include_end
builtins.bool"builtins.bool *•
to_perioddelta:pandas.core.indexes.datetimes.DatetimeIndex.to_perioddelta"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*
freq
Any*¶
to_julian_date:pandas.core.indexes.datetimes.DatetimeIndex.to_julian_date"r
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*Ë
isocalendar7pandas.core.indexes.datetimes.DatetimeIndex.isocalendar":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*à
tzinfo2pandas.core.indexes.datetimes.DatetimeIndex.tzinfo"M
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex0:builtins.property`*Å
dtype1pandas.core.indexes.datetimes.DatetimeIndex.dtype"«
AUnion[numpy.dtype[Any],pandas.core.dtypes.dtypes.DatetimeTZDtype](
numpy.dtype[Any]
Any"numpy.dtypeV
)pandas.core.dtypes.dtypes.DatetimeTZDtype")pandas.core.dtypes.dtypes.DatetimeTZDtype*d
selfZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex0:builtins.property`2µ
__add__3pandas.core.indexes.datetimes.DatetimeIndex.__add__«
__add__3pandas.core.indexes.datetimes.DatetimeIndex.__add__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*\Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*JH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX™
__add__3pandas.core.indexes.datetimes.DatetimeIndex.__add__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*\Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*öó
]Union[pandas._libs.tslibs.timedeltas.Timedelta,pandas.core.indexes.timedeltas.TimedeltaIndex]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadX2‡
__sub__3pandas.core.indexes.datetimes.DatetimeIndex.__sub__«
__sub__3pandas.core.indexes.datetimes.DatetimeIndex.__sub__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*\Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*JH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX™
__sub__3pandas.core.indexes.datetimes.DatetimeIndex.__sub__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*\Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*öó
]Union[pandas._libs.tslibs.timedeltas.Timedelta,pandas.core.indexes.timedeltas.TimedeltaIndex]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadX®
__sub__3pandas.core.indexes.datetimes.DatetimeIndex.__sub__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*\Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*îë
[Union[pandas._libs.tslibs.timestamps.Timestamp,pandas.core.indexes.datetimes.DatetimeIndex]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex0:typing.overloadXÅÅ
Indexpandas.core.indexes.base.Index"pandas.core.base.IndexOpsMixin*≤1
str"pandas.core.indexes.base.Index.str"°
kpandas.core.strings.StringMethods[pandas.core.indexes.base.Index.Self,pandas.core.indexes.multi.MultiIndex]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.IndexL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"!pandas.core.strings.StringMethods*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index0:builtins.property`*“
asi8#pandas.core.indexes.base.Index.asi8"â
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_int64*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*·
is_"pandas.core.indexes.base.Index.is_"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
other
Any*À
__len__&pandas.core.indexes.base.Index.__len__"
builtins.int"builtins.int*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*ä
	__array__(pandas.core.indexes.base.Index.__array__"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
dtype
Any *d
__array_wrap__-pandas.core.indexes.base.Index.__array_wrap__*
self*

result*
context *ß
dtype$pandas.core.indexes.base.Index.dtype"‹
STypeAlias[Union[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]]È
HUnion[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]I
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtypeP
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype"pandas._typing.DtypeObj*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*Â
ravel$pandas.core.indexes.base.Index.ravel"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*)
order
builtins.str"builtins.str *@
view#pandas.core.indexes.base.Index.view*
self*	
cls *ú&
astype%pandas.core.indexes.base.Index.astype"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*Í
dtypeﬁ
ÙTypeAlias[Union[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],typing.Mapping[Any,Unknown]]]…
ÈUnion[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],typing.Mapping[Any,Unknown]]û	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype8
typing.Mapping[Any,Unknown]
Any "typing.Mapping"pandas._typing.DtypeArg**
copy
builtins.bool"builtins.bool *⁄
take#pandas.core.indexes.base.Index.take"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
indices
Any*(
axis
builtins.int"builtins.int *0

allow_fill
builtins.bool"builtins.bool *

fill_value
Any *
kwargs
Any*R
repeat%pandas.core.indexes.base.Index.repeat*
self*
repeats*

axis *˝/
copy#pandas.core.indexes.base.Index.copy"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*
name
Any **
deep
builtins.bool"builtins.bool *I
__copy__'pandas.core.indexes.base.Index.__copy__*
self*

kwargs*Q
__deepcopy__+pandas.core.indexes.base.Index.__deepcopy__*
self*

memo *Ú
format%pandas.core.indexes.base.Index.format"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index**
name
builtins.bool"builtins.bool *ò
	formatterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None **
na_rep
builtins.str"builtins.str *e
to_native_types.pandas.core.indexes.base.Index.to_native_types*
self*
slicer *

kwargs*G
to_flat_index,pandas.core.indexes.base.Index.to_flat_index*
self*™
	to_series(pandas.core.indexes.base.Index.to_series"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
index
Any *
name
Any *µ
to_frame'pandas.core.indexes.base.Index.to_frame":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*+
index
builtins.bool"builtins.bool *
name
Any *õ
	set_names(pandas.core.indexes.base.Index.set_names"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
names
Any*
level
Any *-
inplace
builtins.bool"builtins.bool *˛
rename%pandas.core.indexes.base.Index.rename"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
name
Any*-
inplace
builtins.bool"builtins.bool *Í
nlevels&pandas.core.indexes.base.Index.nlevels"
builtins.int"builtins.int*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*®
	sortlevel(pandas.core.indexes.base.Index.sortlevel"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
level
Any */
	ascending
builtins.bool"builtins.bool *
sort_remaining
Any *Ñ
get_level_values/pandas.core.indexes.base.Index.get_level_values"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*k
level`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*Ñ
	droplevel(pandas.core.indexes.base.Index.droplevel"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*ø
level±
LUnion[TypeAlias[Union[typing.Hashable,builtins.int]],builtins.list[Unknown]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level)
builtins.list[Unknown] "builtins.list *å
is_monotonic_increasing6pandas.core.indexes.base.Index.is_monotonic_increasing"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*å
is_monotonic_decreasing6pandas.core.indexes.base.Index.is_monotonic_decreasing"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*
	is_unique(pandas.core.indexes.base.Index.is_unique"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*˙
has_duplicates-pandas.core.indexes.base.Index.has_duplicates"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*€

is_boolean)pandas.core.indexes.base.Index.is_boolean"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*€

is_integer)pandas.core.indexes.base.Index.is_integer"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*›
is_floating*pandas.core.indexes.base.Index.is_floating"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*€

is_numeric)pandas.core.indexes.base.Index.is_numeric"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*Ÿ
	is_object(pandas.core.indexes.base.Index.is_object"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*„
is_categorical-pandas.core.indexes.base.Index.is_categorical"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*›
is_interval*pandas.core.indexes.base.Index.is_interval"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*◊
is_mixed'pandas.core.indexes.base.Index.is_mixed"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*G
holds_integer,pandas.core.indexes.base.Index.holds_integer*
self*^
inferred_type,pandas.core.indexes.base.Index.inferred_type*
self0:builtins.property`*A

__reduce__)pandas.core.indexes.base.Index.__reduce__*
self*Ï
hasnans&pandas.core.indexes.base.Index.hasnans"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*5
isna#pandas.core.indexes.base.Index.isna*
self*7
notna$pandas.core.indexes.base.Index.notna*
self*V
fillna%pandas.core.indexes.base.Index.fillna*
self*
value *
downcast *˜0
dropna%pandas.core.indexes.base.Index.dropna"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*¥
how®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *÷/
unique%pandas.core.indexes.base.Index.unique"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*
level
Any *á3
drop_duplicates.pandas.core.indexes.base.Index.drop_duplicates"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*≤
keep•
[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.bool]]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition:
Literal[builtins.bool]	
builtins.bool"builtins.bool *—

duplicated)pandas.core.indexes.base.Index.duplicated"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*à
keep˚
IUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.bool]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str:
Literal[builtins.bool]	
builtins.bool"builtins.bool *À
__and__&pandas.core.indexes.base.Index.__and__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*Õ
__rand__'pandas.core.indexes.base.Index.__rand__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*…
__or__%pandas.core.indexes.base.Index.__or__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*À
__ror__&pandas.core.indexes.base.Index.__ror__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*À
__xor__&pandas.core.indexes.base.Index.__xor__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*Õ
__rxor__'pandas.core.indexes.base.Index.__rxor__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*∫/
__neg__&pandas.core.indexes.base.Index.__neg__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*«
__nonzero__*pandas.core.indexes.base.Index.__nonzero__"
None*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*Ÿ
union$pandas.core.indexes.base.Index.union"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*¿
other¥
RUnion[builtins.list[pandas._typing.HashableT],pandas.core.indexes.base.Index[Any]]ã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*
sort
Any *^
intersection+pandas.core.indexes.base.Index.intersection"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*ı.
otherÈ.
KUnion[builtins.list[pandas._typing.S1],pandas.core.indexes.base.Index.Self]‘
 builtins.list[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.list¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index**
sort
builtins.bool"builtins.bool *Î1

difference)pandas.core.indexes.base.Index.difference"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
otherø
=Union[builtins.list[Any],pandas.core.indexes.base.Index[Any]],
builtins.list[Any]
Any"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*S
sortG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Ö_
symmetric_difference3pandas.core.indexes.base.Index.symmetric_difference"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*ı.
otherÈ.
KUnion[builtins.list[pandas._typing.S1],pandas.core.indexes.base.Index.Self]‘
 builtins.list[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.list¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*
result_name
Any *
sort
Any *∞
get_loc&pandas.core.indexes.base.Index.get_loc"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*ô
keyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label*π
method™
ãUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions7
Literal[builtins.str]	
builtins.str"builtins.str
None *
	tolerance
Any *{
get_indexer*pandas.core.indexes.base.Index.get_indexer*
self*

target*
method *
limit *
	tolerance *Ä
reindex&pandas.core.indexes.base.Index.reindex*
self*

target*
method *
level *
limit *
	tolerance *Ó
join#pandas.core.indexes.base.Index.join"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
other
Any*'
how
builtins.str"builtins.str *
level
Any *5
return_indexers
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *Ö
values%pandas.core.indexes.base.Index.values"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*ö
array$pandas.core.indexes.base.Index.array"P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*Ù
memory_usage+pandas.core.indexes.base.Index.memory_usage"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index**
deep
builtins.bool"builtins.bool *N
where$pandas.core.indexes.base.Index.where*
self*
cond*
other *˛
is_type_compatible1pandas.core.indexes.base.Index.is_type_compatible"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
kind
Any*‚
__contains__+pandas.core.indexes.base.Index.__contains__"
builtins.bool"builtins.bool*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*	
Any*’
__setitem__*pandas.core.indexes.base.Index.__setitem__"
None*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*	
Any*	
Any*D
append%pandas.core.indexes.base.Index.append*
self*	
other*P
putmask&pandas.core.indexes.base.Index.putmask*
self*
mask*	
value*Á
equals%pandas.core.indexes.base.Index.equals"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
other
Any*Ì
	identical(pandas.core.indexes.base.Index.identical"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
other
Any*@
asof#pandas.core.indexes.base.Index.asof*
self*	
label*T
	asof_locs(pandas.core.indexes.base.Index.asof_locs*
self*	
where*
mask*≠
sort_values*pandas.core.indexes.base.Index.sort_values"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*4
return_indexer
builtins.bool"builtins.bool */
	ascending
builtins.bool"builtins.bool *·
sort#pandas.core.indexes.base.Index.sort"
None*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
args
Any*
kwargs
Any*˝
shift$pandas.core.indexes.base.Index.shift"
None*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*+
periods
builtins.int"builtins.int *
freq
Any *Q
argsort&pandas.core.indexes.base.Index.argsort*
self*
args*

kwargs*T
	get_value(pandas.core.indexes.base.Index.get_value*
self*

series*
key*˚
	set_value(pandas.core.indexes.base.Index.set_value"
None*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
arr
Any*
key
Any*
value
Any*e
get_indexer_non_unique5pandas.core.indexes.base.Index.get_indexer_non_unique*
self*

target*c
get_indexer_for.pandas.core.indexes.base.Index.get_indexer_for*
self*

target*

kwargs*Ú
groupby&pandas.core.indexes.base.Index.groupby"•
5builtins.dict[typing.Hashable,numpy.ndarray[Any,Any]]"
typing.Hashable"typing.Hashable9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
values
Any*¨
map"pandas.core.indexes.base.Index.map"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
mapper
Any*
	na_action
Any *Â
isin#pandas.core.indexes.base.Index.isin"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
values
Any*
level
Any *k
slice_indexer,pandas.core.indexes.base.Index.slice_indexer*
self*
start *	
end *

step *`
get_slice_bound.pandas.core.indexes.base.Index.get_slice_bound*
self*	
label*
side*e

slice_locs)pandas.core.indexes.base.Index.slice_locs*
self*
start *	
end *

step *B
delete%pandas.core.indexes.base.Index.delete*
self*
loc*L
insert%pandas.core.indexes.base.Index.insert*
self*
loc*
item*˝/
drop#pandas.core.indexes.base.Index.drop"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*
labels
Any**
errors
builtins.str"builtins.str *ñ
shape$pandas.core.indexes.base.Index.shape"L
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*‹
__eq__%pandas.core.indexes.base.Index.__eq__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*$"
builtins.object"builtins.object*ä.
__iter__'pandas.core.indexes.base.Index.__iter__"ÿ
"typing.Iterator[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"typing.Iterator*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*‹
__ne__%pandas.core.indexes.base.Index.__ne__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*$"
builtins.object"builtins.object*¨J
__le__%pandas.core.indexes.base.Index.__le__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*©.¶.
<Union[pandas.core.indexes.base.Index.Self,pandas._typing.S1]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*¨J
__ge__%pandas.core.indexes.base.Index.__ge__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*©.¶.
<Union[pandas.core.indexes.base.Index.Self,pandas._typing.S1]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*¨J
__lt__%pandas.core.indexes.base.Index.__lt__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*©.¶.
<Union[pandas.core.indexes.base.Index.Self,pandas._typing.S1]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*¨J
__gt__%pandas.core.indexes.base.Index.__gt__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*©.¶.
<Union[pandas.core.indexes.base.Index.Self,pandas._typing.S1]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*»6
__floordiv__+pandas.core.indexes.base.Index.__floordiv__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*Å˛
ÅUnion[builtins.float,pandas.core.series.Series[builtins.int],pandas.core.series.Series[builtins.float],typing.Sequence[builtins.int],typing.Sequence[builtins.float],pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]] 
builtins.float"builtins.floatb
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.SeriesN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.SequenceT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequencel
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index2˝Ω
__new__&pandas.core.indexes.base.Index.__new__«$
__new__&pandas.core.indexes.base.Index.__new__"l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*ö
dataè
 Union[typing.Sequence[Union[builtins.int,numpy.integer[Any]]],pandas.core.base.IndexOpsMixin[builtins.int],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]¬
7typing.Sequence[Union[builtins.int,numpy.integer[Any]]]v
&Union[builtins.int,numpy.integer[Any]]
builtins.int"builtins.int,
numpy.integer[Any]
Any"numpy.integer"typing.Sequencel
,pandas.core.base.IndexOpsMixin[builtins.int]
builtins.int"builtins.int"pandas.core.base.IndexOpsMixinä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyint*°
dtypeì
HUnion[Literal[builtins.str],Type[builtins.int],Type[numpy.integer[Any]]]7
Literal[builtins.str]	
builtins.str"builtins.str:
Type[builtins.int]
builtins.int"builtins.int"typeP
Type[numpy.integer[Any]],
numpy.integer[Any]
Any"numpy.integer"type **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX‰
__new__&pandas.core.indexes.base.Index.__new__"l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*ü
dtypeì
HUnion[Literal[builtins.str],Type[builtins.int],Type[numpy.integer[Any]]]7
Literal[builtins.str]	
builtins.str"builtins.str:
Type[builtins.int]
builtins.int"builtins.int"typeP
Type[numpy.integer[Any]],
numpy.integer[Any]
Any"numpy.integer"type**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXÔ$
__new__&pandas.core.indexes.base.Index.__new__"r
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*∞
data•
œUnion[typing.Sequence[Union[builtins.float,numpy.floating[Any]]],pandas.core.base.IndexOpsMixin[builtins.float],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]Œ
:typing.Sequence[Union[builtins.float,numpy.floating[Any]]]
)Union[builtins.float,numpy.floating[Any]] 
builtins.float"builtins.float.
numpy.floating[Any]
Any"numpy.floating"typing.Sequencer
.pandas.core.base.IndexOpsMixin[builtins.float] 
builtins.float"builtins.float"pandas.core.base.IndexOpsMixinâ
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_float*≠
dtypeü
KUnion[Literal[builtins.str],Type[builtins.float],Type[numpy.floating[Any]]]7
Literal[builtins.str]	
builtins.str"builtins.str@
Type[builtins.float] 
builtins.float"builtins.float"typeS
Type[numpy.floating[Any]].
numpy.floating[Any]
Any"numpy.floating"type **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXˆ
__new__&pandas.core.indexes.base.Index.__new__"r
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*´
dtypeü
KUnion[Literal[builtins.str],Type[builtins.float],Type[numpy.floating[Any]]]7
Literal[builtins.str]	
builtins.str"builtins.str@
Type[builtins.float] 
builtins.float"builtins.float"typeS
Type[numpy.floating[Any]].
numpy.floating[Any]
Any"numpy.floating"type**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXˇ%
__new__&pandas.core.indexes.base.Index.__new__"x
0pandas.core.indexes.base.Index[builtins.complex]$
builtins.complex"builtins.complex"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*Å	
dataˆ
ﬁUnion[typing.Sequence[Union[builtins.complex,numpy.complexfloating[Any,Any]]],pandas.core.base.IndexOpsMixin[builtins.complex],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]à
Gtyping.Sequence[Union[builtins.complex,numpy.complexfloating[Any,Any]]]´
6Union[builtins.complex,numpy.complexfloating[Any,Any]]$
builtins.complex"builtins.complexI
numpy.complexfloating[Any,Any]
Any
Any"numpy.complexfloating"typing.Sequencex
0pandas.core.base.IndexOpsMixin[builtins.complex]$
builtins.complex"builtins.complex"pandas.core.base.IndexOpsMixinã
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"!pandas._typing.np_ndarray_complex*Ê
dtypeÿ
XUnion[Literal[builtins.str],Type[builtins.complex],Type[numpy.complexfloating[Any,Any]]]7
Literal[builtins.str]	
builtins.str"builtins.strF
Type[builtins.complex]$
builtins.complex"builtins.complex"typey
$Type[numpy.complexfloating[Any,Any]]I
numpy.complexfloating[Any,Any]
Any
Any"numpy.complexfloating"type **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXµ
__new__&pandas.core.indexes.base.Index.__new__"x
0pandas.core.indexes.base.Index[builtins.complex]$
builtins.complex"builtins.complex"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*‰
dtypeÿ
XUnion[Literal[builtins.str],Type[builtins.complex],Type[numpy.complexfloating[Any,Any]]]7
Literal[builtins.str]	
builtins.str"builtins.strF
Type[builtins.complex]$
builtins.complex"builtins.complex"typey
$Type[numpy.complexfloating[Any,Any]]I
numpy.complexfloating[Any,Any]
Any
Any"numpy.complexfloating"type**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXäD
__new__&pandas.core.indexes.base.Index.__new__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*Ã
data¡
sUnion[typing.Sequence[Union[numpy.datetime64,datetime.datetime]],pandas.core.base.IndexOpsMixin[datetime.datetime]] 
:typing.Sequence[Union[numpy.datetime64,datetime.datetime]]{
)Union[numpy.datetime64,datetime.datetime]$
numpy.datetime64"numpy.datetime64&
datetime.datetime"datetime.datetime"typing.Sequence{
1pandas.core.base.IndexOpsMixin[datetime.datetime]&
datetime.datetime"datetime.datetime"pandas.core.base.IndexOpsMixin*ƒ&
dtype∂&
±TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]€
¶Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimestampDtypeArg **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXı@
__new__&pandas.core.indexes.base.Index.__new__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*¬&
dtype∂&
±TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]€
¶Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimestampDtypeArg**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXí
__new__&pandas.core.indexes.base.Index.__new__"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*»
dataΩ
{Union[typing.Sequence[pandas._libs.tslibs.period.Period],pandas.core.base.IndexOpsMixin[pandas._libs.tslibs.period.Period]]ç
2typing.Sequence[pandas._libs.tslibs.period.Period]F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period"typing.Sequence´
Apandas.core.base.IndexOpsMixin[pandas._libs.tslibs.period.Period]F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period"pandas.core.base.IndexOpsMixin*[
dtypeN
%pandas.core.dtypes.dtypes.PeriodDtype"%pandas.core.dtypes.dtypes.PeriodDtype **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXÅ
__new__&pandas.core.indexes.base.Index.__new__"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*Y
dtypeN
%pandas.core.dtypes.dtypes.PeriodDtype"%pandas.core.dtypes.dtypes.PeriodDtype**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX”B
__new__&pandas.core.indexes.base.Index.__new__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*€
data–
vUnion[typing.Sequence[Union[numpy.timedelta64,datetime.timedelta]],pandas.core.base.IndexOpsMixin[datetime.timedelta]]”
<typing.Sequence[Union[numpy.timedelta64,datetime.timedelta]]Å
+Union[numpy.timedelta64,datetime.timedelta]&
numpy.timedelta64"numpy.timedelta64(
datetime.timedelta"datetime.timedelta"typing.Sequence~
2pandas.core.base.IndexOpsMixin[datetime.timedelta](
datetime.timedelta"datetime.timedelta"pandas.core.base.IndexOpsMixin*˙$
dtypeÏ$
ÖTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Ω
˙Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimedeltaDtypeArg **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXØ?
__new__&pandas.core.indexes.base.Index.__new__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*¯$
dtypeÏ$
ÖTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Ω
˙Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimedeltaDtypeArg**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXó*
__new__&pandas.core.indexes.base.Index.__new__"ê
mpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]Ú
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*£
dataò
ªUnion[typing.Sequence[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]],pandas.core.base.IndexOpsMixin[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]]⁄
Rtyping.Sequence[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]Ú
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"typing.Sequence¯
apandas.core.base.IndexOpsMixin[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]Ú
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"pandas.core.base.IndexOpsMixin*D
dtype7
Literal[builtins.str]	
builtins.str"builtins.str **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXË
__new__&pandas.core.indexes.base.Index.__new__"Õ
Opandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[Any]]N
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*B
dtype7
Literal[builtins.str]	
builtins.str"builtins.str**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXØv
__new__&pandas.core.indexes.base.Index.__new__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*Ä
clsˆ
)Type[pandas.core.indexes.base.Index.Self]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index"type*¿.
data≥.
[Union[typing.Iterable[pandas._typing.S1],pandas.core.base.IndexOpsMixin[pandas._typing.S1]]ÿ
"typing.Iterable[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"typing.Iterableˆ
1pandas.core.base.IndexOpsMixin[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.base.IndexOpsMixin *“
dtypeƒ
Type[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"type **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX®H
__new__&pandas.core.indexes.base.Index.__new__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*Ä
clsˆ
)Type[pandas.core.indexes.base.Index.Self]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index"type*<
data0
typing.Iterable[Any]
Any"typing.Iterable *–
dtypeƒ
Type[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"type**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXÎ1
__new__&pandas.core.indexes.base.Index.__new__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*Ä
clsˆ
)Type[pandas.core.indexes.base.Index.Self]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index"type*<
data0
typing.Iterable[Any]
Any"typing.Iterable *
dtype
Any **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX2÷
name#pandas.core.indexes.base.Index.nameN
name#pandas.core.indexes.base.Index.name*
self0:builtins.propertyX`ÿ
name#pandas.core.indexes.base.Index.name"
None*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
value
Any0:.setter2Â0
names$pandas.core.indexes.base.Index.namesñ
names$pandas.core.indexes.base.Index.names"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.propertyX`ú
names$pandas.core.indexes.base.Index.names"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*U
namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list0:.setter2ùn
__getitem__*pandas.core.indexes.base.Index.__getitem__∂9
__getitem__*pandas.core.indexes.base.Index.__getitem__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*‹	Ÿ	
ëUnion[builtins.slice,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],typing.Sequence[builtins.int],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[builtins.bool],typing.Sequence[builtins.bool],TypeAlias[Unknown]] 
builtins.slice"builtins.sliceä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Indexe
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.SeriesQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence8
TypeAlias[Unknown] "pandas._typing.np_ndarray_bool0:typing.overloadX®4
__getitem__*pandas.core.indexes.base.Index.__getitem__"†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*∏µ
ÇUnion[builtins.int,builtins.tuple[TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]]
builtins.int"builtins.intç
nbuiltins.tuple[TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]ä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyint"builtins.tuple0:typing.overloadX2±4
__mul__&pandas.core.indexes.base.Index.__mul__†
__mul__&pandas.core.indexes.base.Index.__mul__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*À»
bUnion[pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]]l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index**(
datetime.timedelta"datetime.timedelta0:typing.overloadX⁄/
__mul__&pandas.core.indexes.base.Index.__mul__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*	
Any0:typing.overloadX2˜3
__truediv__*pandas.core.indexes.base.Index.__truediv__÷
__truediv__*pandas.core.indexes.base.Index.__truediv__"
NoReturn
*À»
bUnion[pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]]l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index**(
datetime.timedelta"datetime.timedelta0:typing.overloadX‚/
__truediv__*pandas.core.indexes.base.Index.__truediv__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*	
Any0:typing.overloadXPr=
__hash__'pandas.core.indexes.base.Index.__hash__
NonerW
isnull%pandas.core.indexes.base.Index.isnull&
builtins.ellipsis"builtins.ellipsisrY
notnull&pandas.core.indexes.base.Index.notnull&
builtins.ellipsis"builtins.ellipsisr[
__bool__'pandas.core.indexes.base.Index.__bool__&
builtins.ellipsis"builtins.ellipsisòã
IntervalIndex*pandas.core.indexes.interval.IntervalIndex",pandas.core.indexes.extension.ExtensionIndex"#pandas._libs.interval.IntervalMixin*§
__new__2pandas.core.indexes.interval.IntervalIndex.__new__"Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*÷
dataÀ
)typing.Sequence[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"typing.Sequence*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None **
copy
builtins.bool"builtins.bool *.
name"
typing.Hashable"typing.Hashable *6
verify_integrity
builtins.bool"builtins.bool *–
	to_tuples4pandas.core.indexes.interval.IntervalIndex.to_tuples"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*.
na_tuple
builtins.bool"builtins.bool *À
astype1pandas.core.indexes.interval.IntervalIndex.astype"f
/pandas.core.indexes.interval.IntervalIndex[Any]
Any"*pandas.core.indexes.interval.IntervalIndex*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*Í
dtypeﬁ
ÙTypeAlias[Union[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],typing.Mapping[Any,Unknown]]]…
ÈUnion[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],typing.Mapping[Any,Unknown]]û	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype8
typing.Mapping[Any,Unknown]
Any "typing.Mapping"pandas._typing.DtypeArg**
copy
builtins.bool"builtins.bool *ç
inferred_type8pandas.core.indexes.interval.IntervalIndex.inferred_type"
builtins.str"builtins.str*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:builtins.property`*†
memory_usage7pandas.core.indexes.interval.IntervalIndex.memory_usage"
builtins.int"builtins.int*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex**
deep
builtins.bool"builtins.bool *ë
is_overlapping9pandas.core.indexes.interval.IntervalIndex.is_overlapping"
builtins.bool"builtins.bool*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:builtins.property`*Å
get_loc2pandas.core.indexes.interval.IntervalIndex.get_loc"¿
vUnion[builtins.int,builtins.slice,TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]
builtins.int"builtins.int 
builtins.slice"builtins.sliceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ô
keyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label*π
method™
ãUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions7
Literal[builtins.str]	
builtins.str"builtins.str
None *
	tolerance
Any *ﬂ
get_indexer6pandas.core.indexes.interval.IntervalIndex.get_indexer"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*Z
targetN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*π
method™
ãUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions7
Literal[builtins.str]	
builtins.str"builtins.str
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
	tolerance
Any *»
get_indexer_non_uniqueApandas.core.indexes.interval.IntervalIndex.get_indexer_non_unique" *å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*Z
targetN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*≠
left/pandas.core.indexes.interval.IntervalIndex.left"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:builtins.property`*Ø
right0pandas.core.indexes.interval.IntervalIndex.right"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:builtins.property`*´
mid.pandas.core.indexes.interval.IntervalIndex.mid"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:builtins.property`*±
length1pandas.core.indexes.interval.IntervalIndex.length"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:builtins.property`* 
	get_value4pandas.core.indexes.interval.IntervalIndex.get_value"
Any*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‹
seriesœ
/TypeAlias[Type[pandas.core.series.Series[Any]]]t
$Type[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"type"$pandas.core.dtypes.generic.ABCSeries*
key
Any*ç
is_all_dates7pandas.core.indexes.interval.IntervalIndex.is_all_dates"
builtins.bool"builtins.bool*å
selfÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:builtins.property`2∏Z
from_breaks6pandas.core.indexes.interval.IntervalIndex.from_breaksÒ
from_breaks6pandas.core.indexes.interval.IntervalIndex.from_breaks"Ù
Xpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.int]]l
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*≥	
breaks¶	
ËTypeAlias[Union[typing.Sequence[builtins.int],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown,Unknown,pandas.core.series.Series[builtins.int],pandas.core.indexes.base.Index[builtins.int]]]é
›Union[typing.Sequence[builtins.int],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown,Unknown,pandas.core.series.Series[builtins.int],pandas.core.indexes.base.Index[builtins.int]]N
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray  b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesl
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Index"&pandas.core.indexes.interval._EdgesInt*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXpı
from_breaks6pandas.core.indexes.interval.IntervalIndex.from_breaks"¸
Zpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.float]]r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*Ø	
breaks¢	
ﬁTypeAlias[Union[typing.Sequence[builtins.float],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.Series[builtins.float],pandas.core.indexes.base.Index[builtins.float]]]í
”Union[typing.Sequence[builtins.float],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.Series[builtins.float],pandas.core.indexes.base.Index[builtins.float]]T
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Seriesr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index"(pandas.core.indexes.interval._EdgesFloat*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXp‡
from_breaks6pandas.core.indexes.interval.IntervalIndex.from_breaks"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*±
breaks§
£TypeAlias[Union[typing.Sequence[TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimestampSeries,pandas.core.indexes.datetimes.DatetimeIndex]]À

òUnion[typing.Sequence[TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimestampSeries,pandas.core.indexes.datetimes.DatetimeIndex]ˇ
ntyping.Sequence[TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]˚
]TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._typing.DatetimeLike"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeriesZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex",pandas.core.indexes.interval._EdgesTimestamp*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXp°
from_breaks6pandas.core.indexes.interval.IntervalIndex.from_breaks"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*Ú	
breaksÂ	
TypeAlias[Union[typing.Sequence[pandas._libs.tslibs.timedeltas.Timedelta],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimedeltaSeries,pandas.core.indexes.timedeltas.TimedeltaIndex]]ø
ÂUnion[typing.Sequence[pandas._libs.tslibs.timedeltas.Timedelta],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimedeltaSeries,pandas.core.indexes.timedeltas.TimedeltaIndex]¢
9typing.Sequence[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex",pandas.core.indexes.interval._EdgesTimedelta*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXp2ΩÑ
from_arrays6pandas.core.indexes.interval.IntervalIndex.from_arrays§
from_arrays6pandas.core.indexes.interval.IntervalIndex.from_arrays"Ù
Xpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.int]]l
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*±	
left¶	
ËTypeAlias[Union[typing.Sequence[builtins.int],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown,Unknown,pandas.core.series.Series[builtins.int],pandas.core.indexes.base.Index[builtins.int]]]é
›Union[typing.Sequence[builtins.int],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown,Unknown,pandas.core.series.Series[builtins.int],pandas.core.indexes.base.Index[builtins.int]]N
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray  b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesl
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Index"&pandas.core.indexes.interval._EdgesInt*≤	
right¶	
ËTypeAlias[Union[typing.Sequence[builtins.int],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown,Unknown,pandas.core.series.Series[builtins.int],pandas.core.indexes.base.Index[builtins.int]]]é
›Union[typing.Sequence[builtins.int],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown,Unknown,pandas.core.series.Series[builtins.int],pandas.core.indexes.base.Index[builtins.int]]N
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray  b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesl
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Index"&pandas.core.indexes.interval._EdgesInt*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXp§
from_arrays6pandas.core.indexes.interval.IntervalIndex.from_arrays"¸
Zpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.float]]r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*≠	
left¢	
ﬁTypeAlias[Union[typing.Sequence[builtins.float],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.Series[builtins.float],pandas.core.indexes.base.Index[builtins.float]]]í
”Union[typing.Sequence[builtins.float],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.Series[builtins.float],pandas.core.indexes.base.Index[builtins.float]]T
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Seriesr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index"(pandas.core.indexes.interval._EdgesFloat*Æ	
right¢	
ﬁTypeAlias[Union[typing.Sequence[builtins.float],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.Series[builtins.float],pandas.core.indexes.base.Index[builtins.float]]]í
”Union[typing.Sequence[builtins.float],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.Series[builtins.float],pandas.core.indexes.base.Index[builtins.float]]T
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Seriesr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index"(pandas.core.indexes.interval._EdgesFloat*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXpë'
from_arrays6pandas.core.indexes.interval.IntervalIndex.from_arrays"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*Ø
left§
£TypeAlias[Union[typing.Sequence[TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimestampSeries,pandas.core.indexes.datetimes.DatetimeIndex]]À

òUnion[typing.Sequence[TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimestampSeries,pandas.core.indexes.datetimes.DatetimeIndex]ˇ
ntyping.Sequence[TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]˚
]TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._typing.DatetimeLike"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeriesZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex",pandas.core.indexes.interval._EdgesTimestamp*∞
right§
£TypeAlias[Union[typing.Sequence[TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimestampSeries,pandas.core.indexes.datetimes.DatetimeIndex]]À

òUnion[typing.Sequence[TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimestampSeries,pandas.core.indexes.datetimes.DatetimeIndex]ˇ
ntyping.Sequence[TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]˚
]TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._typing.DatetimeLike"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeriesZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex",pandas.core.indexes.interval._EdgesTimestamp*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXpì 
from_arrays6pandas.core.indexes.interval.IntervalIndex.from_arrays"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*	
leftÂ	
TypeAlias[Union[typing.Sequence[pandas._libs.tslibs.timedeltas.Timedelta],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimedeltaSeries,pandas.core.indexes.timedeltas.TimedeltaIndex]]ø
ÂUnion[typing.Sequence[pandas._libs.tslibs.timedeltas.Timedelta],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimedeltaSeries,pandas.core.indexes.timedeltas.TimedeltaIndex]¢
9typing.Sequence[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex",pandas.core.indexes.interval._EdgesTimedelta*Ò	
rightÂ	
TypeAlias[Union[typing.Sequence[pandas._libs.tslibs.timedeltas.Timedelta],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimedeltaSeries,pandas.core.indexes.timedeltas.TimedeltaIndex]]ø
ÂUnion[typing.Sequence[pandas._libs.tslibs.timedeltas.Timedelta],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.series.TimedeltaSeries,pandas.core.indexes.timedeltas.TimedeltaIndex]¢
9typing.Sequence[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"typing.SequenceÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex",pandas.core.indexes.interval._EdgesTimedelta*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXp2ÄB
from_tuples6pandas.core.indexes.interval.IntervalIndex.from_tuplesÔ
from_tuples6pandas.core.indexes.interval.IntervalIndex.from_tuples"Ù
Xpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.int]]l
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*±
data¶
1typing.Sequence[Tuple[builtins.int,builtins.int]]`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"typing.Sequence*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXpá
from_tuples6pandas.core.indexes.interval.IntervalIndex.from_tuples"¸
Zpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.float]]r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*¡
data∂
5typing.Sequence[Tuple[builtins.float,builtins.float]]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float"typing.Sequence*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXp“
from_tuples6pandas.core.indexes.interval.IntervalIndex.from_tuples"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*£
dataò
ƒtyping.Sequence[Union[Tuple[pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timestamps.Timestamp],Tuple[datetime.datetime,datetime.datetime],Tuple[numpy.datetime64,numpy.datetime64]]]Ω
≥Union[Tuple[pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timestamps.Timestamp],Tuple[datetime.datetime,datetime.datetime],Tuple[numpy.datetime64,numpy.datetime64]]à
XTuple[pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp~
*Tuple[datetime.datetime,datetime.datetime]&
datetime.datetime"datetime.datetime&
datetime.datetime"datetime.datetimex
(Tuple[numpy.datetime64,numpy.datetime64]$
numpy.datetime64"numpy.datetime64$
numpy.datetime64"numpy.datetime64"typing.Sequence*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXpÁ
from_tuples6pandas.core.indexes.interval.IntervalIndex.from_tuples"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚
clsÿ
JType[pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex"type*∏
data≠
»typing.Sequence[Union[Tuple[pandas._libs.tslibs.timedeltas.Timedelta,pandas._libs.tslibs.timedeltas.Timedelta],Tuple[datetime.timedelta,datetime.timedelta],Tuple[numpy.timedelta64,numpy.timedelta64]]]Œ
∑Union[Tuple[pandas._libs.tslibs.timedeltas.Timedelta,pandas._libs.tslibs.timedeltas.Timedelta],Tuple[datetime.timedelta,datetime.timedelta],Tuple[numpy.timedelta64,numpy.timedelta64]]à
XTuple[pandas._libs.tslibs.timedeltas.Timedelta,pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltaÑ
,Tuple[datetime.timedelta,datetime.timedelta](
datetime.timedelta"datetime.timedelta(
datetime.timedelta"datetime.timedelta~
*Tuple[numpy.timedelta64,numpy.timedelta64]&
numpy.timedelta64"numpy.timedelta64&
numpy.timedelta64"numpy.timedelta64"typing.Sequence*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *.
name"
typing.Hashable"typing.Hashable **
copy
builtins.bool"builtins.bool *£
dtypeï
3Union[pandas.core.dtypes.dtypes.IntervalDtype,None]R
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype
None 0:typing.overload:builtins.classmethodXp2ß
__contains__7pandas.core.indexes.interval.IntervalIndex.__contains__ï
__contains__7pandas.core.indexes.interval.IntervalIndex.__contains__"
builtins.bool"builtins.bool*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*èå
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval0:typing.overloadX≈
__contains__7pandas.core.indexes.interval.IntervalIndex.__contains__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*$"
builtins.object"builtins.object0:typing.overloadX2≠
__getitem__6pandas.core.indexes.interval.IntervalIndex.__getitem__“
__getitem__6pandas.core.indexes.interval.IntervalIndex.__getitem__"Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ÍÁ
ÚUnion[builtins.slice,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],typing.Sequence[builtins.int],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[builtins.bool],TypeAlias[Unknown]] 
builtins.slice"builtins.sliceä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Indexe
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series8
TypeAlias[Unknown] "pandas._typing.np_ndarray_bool0:typing.overloadXê
__getitem__6pandas.core.indexes.interval.IntervalIndex.__getitem__"å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*
builtins.int"builtins.int0:typing.overloadX2«
__gt__1pandas.core.indexes.interval.IntervalIndex.__gt__„

__gt__1pandas.core.indexes.interval.IntervalIndex.__gt__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*˛˚
dUnion[pandas._typing.IntervalT,pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.IntervalÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadX£
__gt__1pandas.core.indexes.interval.IntervalIndex.__gt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚ﬂ
3pandas.core.series.Series[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"pandas.core.series.Series0:typing.overloadX2«
__ge__1pandas.core.indexes.interval.IntervalIndex.__ge__„

__ge__1pandas.core.indexes.interval.IntervalIndex.__ge__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*˛˚
dUnion[pandas._typing.IntervalT,pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.IntervalÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadX£
__ge__1pandas.core.indexes.interval.IntervalIndex.__ge__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚ﬂ
3pandas.core.series.Series[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"pandas.core.series.Series0:typing.overloadX2«
__le__1pandas.core.indexes.interval.IntervalIndex.__le__„

__le__1pandas.core.indexes.interval.IntervalIndex.__le__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*˛˚
dUnion[pandas._typing.IntervalT,pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.IntervalÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadX£
__le__1pandas.core.indexes.interval.IntervalIndex.__le__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚ﬂ
3pandas.core.series.Series[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"pandas.core.series.Series0:typing.overloadX2«
__lt__1pandas.core.indexes.interval.IntervalIndex.__lt__„

__lt__1pandas.core.indexes.interval.IntervalIndex.__lt__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*˛˚
dUnion[pandas._typing.IntervalT,pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.IntervalÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadX£
__lt__1pandas.core.indexes.interval.IntervalIndex.__lt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚ﬂ
3pandas.core.series.Series[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"pandas.core.series.Series0:typing.overloadX2É
__eq__1pandas.core.indexes.interval.IntervalIndex.__eq__„

__eq__1pandas.core.indexes.interval.IntervalIndex.__eq__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*˛˚
dUnion[pandas._typing.IntervalT,pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.IntervalÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadX£
__eq__1pandas.core.indexes.interval.IntervalIndex.__eq__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚ﬂ
3pandas.core.series.Series[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"pandas.core.series.Series0:typing.overloadXπ
__eq__1pandas.core.indexes.interval.IntervalIndex.__eq__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*$"
builtins.object"builtins.object0:typing.overloadX2É
__ne__1pandas.core.indexes.interval.IntervalIndex.__ne__„

__ne__1pandas.core.indexes.interval.IntervalIndex.__ne__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*˛˚
dUnion[pandas._typing.IntervalT,pandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.IntervalÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadX£
__ne__1pandas.core.indexes.interval.IntervalIndex.__ne__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*‚ﬂ
3pandas.core.series.Series[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"pandas.core.series.Series0:typing.overloadXπ
__ne__1pandas.core.indexes.interval.IntervalIndex.__ne__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*$"
builtins.object"builtins.object0:typing.overloadXPró
closed1pandas.core.indexes.interval.IntervalIndex.closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType∞¶

MultiIndex$pandas.core.indexes.multi.MultiIndex"pandas.core.indexes.base.Index*œ
__new__,pandas.core.indexes.multi.MultiIndex.__new__"°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*Á
cls›
/Type[pandas.core.indexes.multi.MultiIndex.Self]°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"type*
levels
Any *
codes
Any *
	sortorder
Any *
names
Any *
dtype
Any *
copy
Any *
name
Any *6
verify_integrity
builtins.bool"builtins.bool *3
_set_identity
builtins.bool"builtins.bool *•
__init__-pandas.core.indexes.multi.MultiIndex.__init__"
None*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
levels
Any *
codes
Any *
	sortorder
Any *
names
Any *
dtype
Any *
copy
Any *
name
Any *6
verify_integrity
builtins.bool"builtins.bool *3
_set_identity
builtins.bool"builtins.bool *¨
from_arrays0pandas.core.indexes.multi.MultiIndex.from_arrays"°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*Á
cls›
/Type[pandas.core.indexes.multi.MultiIndex.Self]°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"type*
arrays
Any*
	sortorder
Any *
names
Any 0:builtins.classmethodp*¨
from_tuples0pandas.core.indexes.multi.MultiIndex.from_tuples"°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*Á
cls›
/Type[pandas.core.indexes.multi.MultiIndex.Self]°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"type*
tuples
Any*
	sortorder
Any *
names
Any 0:builtins.classmethodp*±
from_product1pandas.core.indexes.multi.MultiIndex.from_product"°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*Á
cls›
/Type[pandas.core.indexes.multi.MultiIndex.Self]°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"type*
	iterables
Any*
	sortorder
Any *
names
Any 0:builtins.classmethodp*¶

from_frame/pandas.core.indexes.multi.MultiIndex.from_frame"°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*Á
cls›
/Type[pandas.core.indexes.multi.MultiIndex.Self]°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"type*
df
Any*
	sortorder
Any *
names
Any 0:builtins.classmethodp*T
shape*pandas.core.indexes.multi.MultiIndex.shape*
self0:builtins.property`*∫
levels+pandas.core.indexes.multi.MultiIndex.levels"ì
2builtins.list[pandas.core.indexes.base.Index[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"builtins.list*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex0:builtins.property`*Å

set_levels/pandas.core.indexes.multi.MultiIndex.set_levels"
Any*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
levels
Any*
level
Any *6
verify_integrity
builtins.bool"builtins.bool *T
codes*pandas.core.indexes.multi.MultiIndex.codes*
self0:builtins.property`*˛
	set_codes.pandas.core.indexes.multi.MultiIndex.set_codes"
Any*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
codes
Any*
level
Any *6
verify_integrity
builtins.bool"builtins.bool *∆
copy)pandas.core.indexes.multi.MultiIndex.copy"°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*¨
self°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
names
Any **
deep
builtins.bool"builtins.bool *‰
	__array__.pandas.core.indexes.multi.MultiIndex.__array__"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
dtype
Any *F
view)pandas.core.indexes.multi.MultiIndex.view*
self*	
cls *º
__contains__1pandas.core.indexes.multi.MultiIndex.__contains__"
builtins.bool"builtins.bool*NL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*	
Any*Ã
dtype*pandas.core.indexes.multi.MultiIndex.dtype"(
numpy.dtype[Any]
Any"numpy.dtype*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex0:builtins.property`*«
dtypes+pandas.core.indexes.multi.MultiIndex.dtypes"†
·pandas.core.series.Series[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]]û	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype"pandas.core.series.Series*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex0:builtins.property`*„
memory_usage1pandas.core.indexes.multi.MultiIndex.memory_usage"
builtins.int"builtins.int*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex**
deep
builtins.bool"builtins.bool *¬
nbytes+pandas.core.indexes.multi.MultiIndex.nbytes"
builtins.int"builtins.int*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex0:builtins.property`*ﬁ
format+pandas.core.indexes.multi.MultiIndex.format",
builtins.list[Any]
Any"builtins.list*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*S
nameG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *ò
	formatterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *R
na_repD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
names
builtins.bool"builtins.bool *)
space
builtins.int"builtins.int *W
sparsifyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
adjoin
builtins.bool"builtins.bool *•
__len__,pandas.core.indexes.multi.MultiIndex.__len__"
builtins.int"builtins.int*NL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*π
inferred_type2pandas.core.indexes.multi.MultiIndex.inferred_type"
builtins.str"builtins.str*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*V
values+pandas.core.indexes.multi.MultiIndex.values*
self0:builtins.property`*Ê
is_monotonic_increasing<pandas.core.indexes.multi.MultiIndex.is_monotonic_increasing"
builtins.bool"builtins.bool*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex0:builtins.property`*Ê
is_monotonic_decreasing<pandas.core.indexes.multi.MultiIndex.is_monotonic_decreasing"
builtins.bool"builtins.bool*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex0:builtins.property`*©

duplicated/pandas.core.indexes.multi.MultiIndex.duplicated"
Any*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*à
keep˚
IUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.bool]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str:
Literal[builtins.bool]	
builtins.bool"builtins.bool *∆
fillna+pandas.core.indexes.multi.MultiIndex.fillna"
None*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
value
Any *
downcast
Any *ø
dropna+pandas.core.indexes.multi.MultiIndex.dropna"°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*¨
self°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*¥
how®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *Z
	get_value.pandas.core.indexes.multi.MultiIndex.get_value*
self*

series*
key*ﬁ
get_level_values5pandas.core.indexes.multi.MultiIndex.get_level_values"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*k
level`
 Union[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*L
unique+pandas.core.indexes.multi.MultiIndex.unique*
self*
level *Õ
to_frame-pandas.core.indexes.multi.MultiIndex.to_frame":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*+
index
builtins.bool"builtins.bool *ò
nameã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list *6
allow_duplicates
builtins.bool"builtins.bool *M
to_flat_index2pandas.core.indexes.multi.MultiIndex.to_flat_index*
self*–
is_all_dates1pandas.core.indexes.multi.MultiIndex.is_all_dates"
builtins.bool"builtins.bool*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex0:builtins.property`*[
remove_unused_levels9pandas.core.indexes.multi.MultiIndex.remove_unused_levels*
self*ƒ
nlevels,pandas.core.indexes.multi.MultiIndex.nlevels"
builtins.int"builtins.int*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex0:builtins.property`*Z
levshape-pandas.core.indexes.multi.MultiIndex.levshape*
self0:builtins.property`*G

__reduce__/pandas.core.indexes.multi.MultiIndex.__reduce__*
self*¥
take)pandas.core.indexes.multi.MultiIndex.take"
Any*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
indices
Any*(
axis
builtins.int"builtins.int *0

allow_fill
builtins.bool"builtins.bool *

fill_value
Any *
kwargs
Any*J
append+pandas.core.indexes.multi.MultiIndex.append*
self*	
other*W
argsort,pandas.core.indexes.multi.MultiIndex.argsort*
self*
args*

kwargs*X
repeat+pandas.core.indexes.multi.MultiIndex.repeat*
self*
repeats*

axis *æ
where*pandas.core.indexes.multi.MultiIndex.where"
None*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
cond
Any*
other
Any *⁄
drop)pandas.core.indexes.multi.MultiIndex.drop"°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*¨
self°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
codes
Any*
level
Any **
errors
builtins.str"builtins.str *Í
	swaplevel.pandas.core.indexes.multi.MultiIndex.swaplevel"
Any*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*%
i
builtins.int"builtins.int *%
j
builtins.int"builtins.int *Z
reorder_levels3pandas.core.indexes.multi.MultiIndex.reorder_levels*
self*	
order*Æ
	sortlevel.pandas.core.indexes.multi.MultiIndex.sortlevel"
Any*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*)
level
builtins.int"builtins.int */
	ascending
builtins.bool"builtins.bool *4
sort_remaining
builtins.bool"builtins.bool *Å
get_indexer0pandas.core.indexes.multi.MultiIndex.get_indexer*
self*

target*
method *
limit *
	tolerance *k
get_indexer_non_unique;pandas.core.indexes.multi.MultiIndex.get_indexer_non_unique*
self*

target*Ü
reindex,pandas.core.indexes.multi.MultiIndex.reindex*
self*

target*
method *
level *
limit *
	tolerance *¨
get_slice_bound4pandas.core.indexes.multi.MultiIndex.get_slice_bound"
builtins.int"builtins.int*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*ƒ
label∏
7Union[typing.Hashable,typing.Sequence[typing.Hashable]]"
typing.Hashable"typing.HashableW
 typing.Sequence[typing.Hashable]"
typing.Hashable"typing.Hashable"typing.Sequence*&
side
builtins.str"builtins.str*k

slice_locs/pandas.core.indexes.multi.MultiIndex.slice_locs*
self*
start *	
end *

step *J
get_loc,pandas.core.indexes.multi.MultiIndex.get_loc*
self*
key*˛
get_loc_level2pandas.core.indexes.multi.MultiIndex.get_loc_level"
Any*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
key
Any*
level
Any *0

drop_level
builtins.bool"builtins.bool *L
get_locs-pandas.core.indexes.multi.MultiIndex.get_locs*
self*
seq*^
truncate-pandas.core.indexes.multi.MultiIndex.truncate*
self*
before *
after *¡
equals+pandas.core.indexes.multi.MultiIndex.equals"
builtins.bool"builtins.bool*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
other
Any*V
equal_levels1pandas.core.indexes.multi.MultiIndex.equal_levels*
self*	
other*T
union*pandas.core.indexes.multi.MultiIndex.union*
self*	
other*

sort *‚
intersection1pandas.core.indexes.multi.MultiIndex.intersection"
Any*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
other
Any**
sort
builtins.bool"builtins.bool *^

difference/pandas.core.indexes.multi.MultiIndex.difference*
self*	
other*

sort *°
astype+pandas.core.indexes.multi.MultiIndex.astype"°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*¨
self°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*Í
dtypeﬁ
ÙTypeAlias[Union[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],typing.Mapping[Any,Unknown]]]…
ÈUnion[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],typing.Mapping[Any,Unknown]]û	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype8
typing.Mapping[Any,Unknown]
Any "typing.Mapping"pandas._typing.DtypeArg**
copy
builtins.bool"builtins.bool *R
insert+pandas.core.indexes.multi.MultiIndex.insert*
self*
loc*
item*H
delete+pandas.core.indexes.multi.MultiIndex.delete*
self*
loc*ø
isin)pandas.core.indexes.multi.MultiIndex.isin"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*V
selfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
values
Any*
level
Any 2∑
__getitem__0pandas.core.indexes.multi.MultiIndex.__getitem__˛
__getitem__0pandas.core.indexes.multi.MultiIndex.__getitem__"°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*§°
)pandas.core.indexes.multi.MultiIndex.SelfL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*‹	Ÿ	
ëUnion[builtins.slice,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],typing.Sequence[builtins.int],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[builtins.bool],typing.Sequence[builtins.bool],TypeAlias[Unknown]] 
builtins.slice"builtins.sliceä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Indexe
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.SeriesQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence8
TypeAlias[Unknown] "pandas._typing.np_ndarray_bool0:typing.overloadXÙ
__getitem__0pandas.core.indexes.multi.MultiIndex.__getitem__".
builtins.tuple[Any]
Any"builtins.tuple*NL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*
builtins.int"builtins.int0:typing.overloadXéA
PeriodIndex&pandas.core.indexes.period.PeriodIndex"6pandas.core.indexes.datetimelike.DatetimeIndexOpsMixin"1pandas.core.indexes.accessors.PeriodIndexFieldOps*ò
__new__.pandas.core.indexes.period.PeriodIndex.__new__"
Any*í
clsà
,Type[pandas.core.indexes.period.PeriodIndex]P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex"type*
data
Any *
ordinal
Any *
freq
Any *
tz
Any *
dtype
Any **
copy
builtins.bool"builtins.bool *
name
Any *
fields
Any*X
values-pandas.core.indexes.period.PeriodIndex.values*
self0:builtins.property`*¬
__contains__3pandas.core.indexes.period.PeriodIndex.__contains__"
builtins.bool"builtins.bool*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*	
Any*Í
	__array__0pandas.core.indexes.period.PeriodIndex.__array__"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*Z
selfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*
dtype
Any *l
__array_wrap__5pandas.core.indexes.period.PeriodIndex.__array_wrap__*
self*

result*
context *\
	asof_locs0pandas.core.indexes.period.PeriodIndex.asof_locs*
self*	
where*
mask*Ö
astype-pandas.core.indexes.period.PeriodIndex.astype"
Any*Z
selfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*
dtype
Any**
copy
builtins.bool"builtins.bool *'
how
builtins.str"builtins.str *˝
searchsorted3pandas.core.indexes.period.PeriodIndex.searchsorted"
Any*Z
selfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*
value
Any*(
side
builtins.str"builtins.str *
sorter
Any *Ã
is_full.pandas.core.indexes.period.PeriodIndex.is_full"
builtins.bool"builtins.bool*Z
selfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:builtins.property`*÷
inferred_type4pandas.core.indexes.period.PeriodIndex.inferred_type"
builtins.str"builtins.str*Z
selfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:builtins.property`*\
	get_value0pandas.core.indexes.period.PeriodIndex.get_value*
self*

series*
key*É
get_indexer2pandas.core.indexes.period.PeriodIndex.get_indexer*
self*

target*
method *
limit *
	tolerance *m
get_indexer_non_unique=pandas.core.indexes.period.PeriodIndex.get_indexer_non_unique*
self*

target*]
get_loc.pandas.core.indexes.period.PeriodIndex.get_loc*
self*
key*
	tolerance *T
insert-pandas.core.indexes.period.PeriodIndex.insert*
self*
loc*
item*Œ
join+pandas.core.indexes.period.PeriodIndex.join"
Any*Z
selfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*
other
Any*'
how
builtins.str"builtins.str *
level
Any *5
return_indexers
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *Ë
intersection3pandas.core.indexes.period.PeriodIndex.intersection"
Any*Z
selfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*
other
Any**
sort
builtins.bool"builtins.bool *`

difference1pandas.core.indexes.period.PeriodIndex.difference*
self*	
other*

sort *‘
memory_usage3pandas.core.indexes.period.PeriodIndex.memory_usage"
Any*Z
selfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex**
deep
builtins.bool"builtins.bool * 
freqstr.pandas.core.indexes.period.PeriodIndex.freqstr"
builtins.str"builtins.str*Z
selfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:builtins.property`2Ω
__sub__.pandas.core.indexes.period.PeriodIndex.__sub__º
__sub__.pandas.core.indexes.period.PeriodIndex.__sub__"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadX¸
__sub__.pandas.core.indexes.period.PeriodIndex.__sub__"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*¨©
+pandas.core.indexes.period.PeriodIndex.SelfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*¨©
+pandas.core.indexes.period.PeriodIndex.SelfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadXª

__sub__.pandas.core.indexes.period.PeriodIndex.__sub__"©
+pandas.core.indexes.period.PeriodIndex.SelfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*¨©
+pandas.core.indexes.period.PeriodIndex.SelfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*èå
»TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.int,pandas._libs.tslibs.offsets.BaseOffset]]í
ΩUnion[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.int,pandas._libs.tslibs.offsets.BaseOffset]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta&
numpy.timedelta64"numpy.timedelta64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64
builtins.int"builtins.intP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset"(pandas._libs.tslibs.period._PeriodAddSub0:typing.overloadXº
__sub__.pandas.core.indexes.period.PeriodIndex.__sub__"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*LJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType0:typing.overloadX∆
__sub__.pandas.core.indexes.period.PeriodIndex.__sub__"©
+pandas.core.indexes.period.PeriodIndex.SelfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*¨©
+pandas.core.indexes.period.PeriodIndex.SelfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*öó
]Union[pandas.core.indexes.timedeltas.TimedeltaIndex,pandas._libs.tslibs.timedeltas.Timedelta]^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndexT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:typing.overloadX2æ	
__rsub__/pandas.core.indexes.period.PeriodIndex.__rsub__æ
__rsub__/pandas.core.indexes.period.PeriodIndex.__rsub__"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadX˛
__rsub__/pandas.core.indexes.period.PeriodIndex.__rsub__"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*¨©
+pandas.core.indexes.period.PeriodIndex.SelfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*¨©
+pandas.core.indexes.period.PeriodIndex.SelfP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadXæ
__rsub__/pandas.core.indexes.period.PeriodIndex.__rsub__"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*LJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType0:typing.overloadXÌI

RangeIndex$pandas.core.indexes.range.RangeIndex"pandas.core.indexes.base.Index*≥
__new__,pandas.core.indexes.range.RangeIndex.__new__"
Any*å
clsÇ
*Type[pandas.core.indexes.range.RangeIndex]L
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex"type*∂
start®
8Union[builtins.int,pandas.core.indexes.range.RangeIndex]
builtins.int"builtins.intL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex *(
stop
builtins.int"builtins.int *(
step
builtins.int"builtins.int *
dtype
Any **
copy
builtins.bool"builtins.bool *
name
Any *ˇ
__init__-pandas.core.indexes.range.RangeIndex.__init__"
None*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*∂
start®
8Union[builtins.int,pandas.core.indexes.range.RangeIndex]
builtins.int"builtins.intL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex *(
stop
builtins.int"builtins.int *(
step
builtins.int"builtins.int *
dtype
Any **
copy
builtins.bool"builtins.bool *
name
Any *É

from_range/pandas.core.indexes.range.RangeIndex.from_range*
cls*
data*

name *
dtype 0:builtins.classmethodp*G

__reduce__/pandas.core.indexes.range.RangeIndex.__reduce__*
self*=
start*pandas.core.indexes.range.RangeIndex.start*
self*;
stop)pandas.core.indexes.range.RangeIndex.stop*
self*;
step)pandas.core.indexes.range.RangeIndex.step*
self*¬
nbytes+pandas.core.indexes.range.RangeIndex.nbytes"
builtins.int"builtins.int*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex0:builtins.property`*„
memory_usage1pandas.core.indexes.range.RangeIndex.memory_usage"
builtins.int"builtins.int*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex**
deep
builtins.bool"builtins.bool *Ã
dtype*pandas.core.indexes.range.RangeIndex.dtype"(
numpy.dtype[Any]
Any"numpy.dtype*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex0:builtins.property`* 
	is_unique.pandas.core.indexes.range.RangeIndex.is_unique"
builtins.bool"builtins.bool*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex0:builtins.property`*Ê
is_monotonic_increasing<pandas.core.indexes.range.RangeIndex.is_monotonic_increasing"
builtins.bool"builtins.bool*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex0:builtins.property`*Ê
is_monotonic_decreasing<pandas.core.indexes.range.RangeIndex.is_monotonic_decreasing"
builtins.bool"builtins.bool*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex0:builtins.property`*‘
has_duplicates3pandas.core.indexes.range.RangeIndex.has_duplicates"
builtins.bool"builtins.bool*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex0:builtins.property`*´
__contains__1pandas.core.indexes.range.RangeIndex.__contains__"
builtins.bool"builtins.bool*NL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*xv
&Union[builtins.int,numpy.integer[Any]]
builtins.int"builtins.int,
numpy.integer[Any]
Any"numpy.integer*[
get_loc,pandas.core.indexes.range.RangeIndex.get_loc*
self*
key*
	tolerance *Å
get_indexer0pandas.core.indexes.range.RangeIndex.get_indexer*
self*

target*
method *
limit *
	tolerance *?
tolist+pandas.core.indexes.range.RangeIndex.tolist*
self*˛
copy)pandas.core.indexes.range.RangeIndex.copy"
Any*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*
name
Any **
deep
builtins.bool"builtins.bool *
dtype
Any *
kwargs
Any*˚
min(pandas.core.indexes.range.RangeIndex.min"
Any*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*
axis
Any *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*˚
max(pandas.core.indexes.range.RangeIndex.max"
Any*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*
axis
Any *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*W
argsort,pandas.core.indexes.range.RangeIndex.argsort*
self*
args*

kwargs*–
	factorize.pandas.core.indexes.range.RangeIndex.factorize"◊
Tuple[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.indexes.range.RangeIndex]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex**
sort
builtins.bool"builtins.bool *5
use_na_sentinel
builtins.bool"builtins.bool *J
equals+pandas.core.indexes.range.RangeIndex.equals*
self*	
other*‚
intersection1pandas.core.indexes.range.RangeIndex.intersection"
Any*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*
other
Any**
sort
builtins.bool"builtins.bool *»
join)pandas.core.indexes.range.RangeIndex.join"
Any*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*
other
Any*'
how
builtins.str"builtins.str *
level
Any *5
return_indexers
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *•
__len__,pandas.core.indexes.range.RangeIndex.__len__"
builtins.int"builtins.int*NL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*æ
size)pandas.core.indexes.range.RangeIndex.size"
builtins.int"builtins.int*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex0:builtins.property`*E
__floordiv__1pandas.core.indexes.range.RangeIndex.__floordiv__* * *ß
all(pandas.core.indexes.range.RangeIndex.all"
builtins.bool"builtins.bool*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*ß
any(pandas.core.indexes.range.RangeIndex.any"
builtins.bool"builtins.bool*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*Ú
union*pandas.core.indexes.range.RangeIndex.union"å
|Union[pandas.core.indexes.base.Index[Any],pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.range.RangeIndex]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Indexl
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.IndexL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*V
selfL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*¿
other¥
RUnion[builtins.list[pandas._typing.HashableT],pandas.core.indexes.base.Index[Any]]ã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*
sort
Any 2˙
__getitem__0pandas.core.indexes.range.RangeIndex.__getitem__”
__getitem__0pandas.core.indexes.range.RangeIndex.__getitem__"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*NL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*‹	Ÿ	
ëUnion[builtins.slice,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],typing.Sequence[builtins.int],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[builtins.bool],typing.Sequence[builtins.bool],TypeAlias[Unknown]] 
builtins.slice"builtins.sliceä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Indexe
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.SeriesQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence8
TypeAlias[Unknown] "pandas._typing.np_ndarray_bool0:typing.overloadX‚
__getitem__0pandas.core.indexes.range.RangeIndex.__getitem__"
builtins.int"builtins.int*NL
$pandas.core.indexes.range.RangeIndex"$pandas.core.indexes.range.RangeIndex*
builtins.int"builtins.int0:typing.overloadX–A
TimedeltaIndex-pandas.core.indexes.timedeltas.TimedeltaIndex"7pandas.core.indexes.datetimelike.DatetimeTimedeltaMixin"6pandas.core.indexes.accessors.TimedeltaIndexProperties*ÿ
__new__5pandas.core.indexes.timedeltas.TimedeltaIndex.__new__"≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*î
clsä
8Type[pandas.core.indexes.timedeltas.TimedeltaIndex.Self]≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"type*Ê	
dataŸ	
ÉUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[builtins.str],typing.Sequence[Union[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,builtins.float]]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLikeJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listª
ttyping.Sequence[Union[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,builtins.float]]±
cUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,builtins.float](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta64 
builtins.float"builtins.float"typing.Sequence *¡
unit¥
†Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *ª
freqÆ
:Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset *0
closed"
builtins.object"builtins.object *D
dtype7
Literal[builtins.str]	
builtins.str"builtins.str **
copy
builtins.bool"builtins.bool *(
name
builtins.str"builtins.str *ó
__radd__6pandas.core.indexes.timedeltas.TimedeltaIndex.__radd__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*îë
[Union[pandas._libs.tslibs.timestamps.Timestamp,pandas.core.indexes.datetimes.DatetimeIndex]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*›
__sub__5pandas.core.indexes.timedeltas.TimedeltaIndex.__sub__"≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*»≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*áÑ
bUnion[pandas._libs.tslibs.timedeltas.Timedelta,pandas.core.indexes.timedeltas.TimedeltaIndex.Self]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*˚
__mul__5pandas.core.indexes.timedeltas.TimedeltaIndex.__mul__"≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*»≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*&$
builtins.complex"builtins.complex*É
__truediv__9pandas.core.indexes.timedeltas.TimedeltaIndex.__truediv__"≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*»≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*&$
builtins.complex"builtins.complex*Ò
astype4pandas.core.indexes.timedeltas.TimedeltaIndex.astype"
Any*h
self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*
dtype
Any**
copy
builtins.bool"builtins.bool *c
	get_value7pandas.core.indexes.timedeltas.TimedeltaIndex.get_value*
self*

series*
key*d
get_loc5pandas.core.indexes.timedeltas.TimedeltaIndex.get_loc*
self*
key*
	tolerance *í
searchsorted:pandas.core.indexes.timedeltas.TimedeltaIndex.searchsorted"
Any*h
self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*
value
Any*(
side
builtins.str"builtins.str *
sorter
Any *Î
inferred_type;pandas.core.indexes.timedeltas.TimedeltaIndex.inferred_type"
builtins.str"builtins.str*h
self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:builtins.property`*[
insert4pandas.core.indexes.timedeltas.TimedeltaIndex.insert*
self*
loc*
item*£
	to_series7pandas.core.indexes.timedeltas.TimedeltaIndex.to_series"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*h
self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*
index
Any *
name
Any 2ˇ
__add__5pandas.core.indexes.timedeltas.TimedeltaIndex.__add__”
__add__5pandas.core.indexes.timedeltas.TimedeltaIndex.__add__"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadXÒ
__add__5pandas.core.indexes.timedeltas.TimedeltaIndex.__add__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*\Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex0:typing.overloadXÚ
__add__5pandas.core.indexes.timedeltas.TimedeltaIndex.__add__"≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*»≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*áÑ
bUnion[pandas._libs.tslibs.timedeltas.Timedelta,pandas.core.indexes.timedeltas.TimedeltaIndex.Self]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta≈
2pandas.core.indexes.timedeltas.TimedeltaIndex.Self^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadX°“
Intervalpandas._libs.interval.Interval"#pandas._libs.interval.IntervalMixin*—
left#pandas._libs.interval.Interval.left"å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˝
selfÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval0:builtins.property`*”
right$pandas._libs.interval.Interval.right"å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˝
selfÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval0:builtins.property`*¢
closed%pandas._libs.interval.Interval.closed"Ÿ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType*˝
selfÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval0:builtins.property`*›
__init__'pandas._libs.interval.Interval.__init__"
None*˝
selfÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*ó
leftå
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ò
rightå
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *—
__hash__'pandas._libs.interval.Interval.__hash__"
builtins.int"builtins.int*˝
selfÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval2Ò

__contains__+pandas._libs.interval.Interval.__contains__é
__contains__+pandas._libs.interval.Interval.__contains__"
builtins.bool"builtins.bool*√¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._libs.interval.Interval*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:typing.overloadXé
__contains__+pandas._libs.interval.Interval.__contains__"
builtins.bool"builtins.bool*√¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:typing.overloadXÑ
__contains__+pandas._libs.interval.Interval.__contains__"
builtins.bool"builtins.bool*nl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadXä
__contains__+pandas._libs.interval.Interval.__contains__"
builtins.bool"builtins.bool*tr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX2∞
__add__&pandas._libs.interval.Interval.__add__ß
__add__&pandas._libs.interval.Interval.__add__"¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._libs.interval.Interval*√¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._libs.interval.Interval*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:typing.overloadXß
__add__&pandas._libs.interval.Interval.__add__"¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*√¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:typing.overloadX—
__add__&pandas._libs.interval.Interval.__add__"ˇ
Gpandas._libs.interval.Interval[pandas._libs.interval._OrderableScalarT]ì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float"pandas._libs.interval.Interval*nl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval*ñì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float0:typing.overloadX‘
__add__&pandas._libs.interval.Interval.__add__"r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*tr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX2Œ
__radd__'pandas._libs.interval.Interval.__radd__È
__radd__'pandas._libs.interval.Interval.__radd__"†
Fpandas._libs.interval.Interval[pandas._libs.interval._OrderableTimesT]µ
&pandas._libs.interval._OrderableTimesTà
XUnion[pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*£†
Fpandas._libs.interval.Interval[pandas._libs.interval._OrderableTimesT]µ
&pandas._libs.interval._OrderableTimesTà
XUnion[pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:typing.overloadX”
__radd__'pandas._libs.interval.Interval.__radd__"ˇ
Gpandas._libs.interval.Interval[pandas._libs.interval._OrderableScalarT]ì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float"pandas._libs.interval.Interval*nl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval*ñì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float0:typing.overloadX÷
__radd__'pandas._libs.interval.Interval.__radd__"r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*tr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX2∆
__sub__&pandas._libs.interval.Interval.__sub__Á
__sub__&pandas._libs.interval.Interval.__sub__"†
Fpandas._libs.interval.Interval[pandas._libs.interval._OrderableTimesT]µ
&pandas._libs.interval._OrderableTimesTà
XUnion[pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*£†
Fpandas._libs.interval.Interval[pandas._libs.interval._OrderableTimesT]µ
&pandas._libs.interval._OrderableTimesTà
XUnion[pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:typing.overloadX—
__sub__&pandas._libs.interval.Interval.__sub__"ˇ
Gpandas._libs.interval.Interval[pandas._libs.interval._OrderableScalarT]ì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float"pandas._libs.interval.Interval*nl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval*ñì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float0:typing.overloadX‘
__sub__&pandas._libs.interval.Interval.__sub__"r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*tr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX2Œ
__rsub__'pandas._libs.interval.Interval.__rsub__È
__rsub__'pandas._libs.interval.Interval.__rsub__"†
Fpandas._libs.interval.Interval[pandas._libs.interval._OrderableTimesT]µ
&pandas._libs.interval._OrderableTimesTà
XUnion[pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*£†
Fpandas._libs.interval.Interval[pandas._libs.interval._OrderableTimesT]µ
&pandas._libs.interval._OrderableTimesTà
XUnion[pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:typing.overloadX”
__rsub__'pandas._libs.interval.Interval.__rsub__"ˇ
Gpandas._libs.interval.Interval[pandas._libs.interval._OrderableScalarT]ì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float"pandas._libs.interval.Interval*nl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval*ñì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float0:typing.overloadX÷
__rsub__'pandas._libs.interval.Interval.__rsub__"r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*tr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX2“
__mul__&pandas._libs.interval.Interval.__mul__—
__mul__&pandas._libs.interval.Interval.__mul__"ˇ
Gpandas._libs.interval.Interval[pandas._libs.interval._OrderableScalarT]ì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float"pandas._libs.interval.Interval*nl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval*ñì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float0:typing.overloadX‘
__mul__&pandas._libs.interval.Interval.__mul__"r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*tr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadXÛ
__mul__&pandas._libs.interval.Interval.__mul__"¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*√¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX2⁄
__rmul__'pandas._libs.interval.Interval.__rmul__”
__rmul__'pandas._libs.interval.Interval.__rmul__"ˇ
Gpandas._libs.interval.Interval[pandas._libs.interval._OrderableScalarT]ì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float"pandas._libs.interval.Interval*nl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval*ñì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float0:typing.overloadX÷
__rmul__'pandas._libs.interval.Interval.__rmul__"r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*tr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadXı
__rmul__'pandas._libs.interval.Interval.__rmul__"¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*√¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX2Ô	
__truediv__*pandas._libs.interval.Interval.__truediv__÷
__truediv__*pandas._libs.interval.Interval.__truediv__"r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*nl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX‹
__truediv__*pandas._libs.interval.Interval.__truediv__"r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*tr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX˚
__truediv__*pandas._libs.interval.Interval.__truediv__"¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*√¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX2˙
__floordiv__+pandas._libs.interval.Interval.__floordiv__€
__floordiv__+pandas._libs.interval.Interval.__floordiv__"ˇ
Gpandas._libs.interval.Interval[pandas._libs.interval._OrderableScalarT]ì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float"pandas._libs.interval.Interval*nl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval*ñì
'pandas._libs.interval._OrderableScalarTf
"Union[builtins.int,builtins.float]
builtins.int"builtins.int 
builtins.float"builtins.float0:typing.overloadXﬁ
__floordiv__+pandas._libs.interval.Interval.__floordiv__"r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*tr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX˝
__floordiv__+pandas._libs.interval.Interval.__floordiv__"¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*√¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*" 
builtins.float"builtins.float0:typing.overloadX2„
overlaps'pandas._libs.interval.Interval.overlapsÈ
overlaps'pandas._libs.interval.Interval.overlaps"
builtins.bool"builtins.bool*˝
selfÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*˛
otherÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval0:typing.overloadXﬂ
overlaps'pandas._libs.interval.Interval.overlaps"
builtins.bool"builtins.bool*v
selfl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval*}
otherr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval0:typing.overloadXﬂ
overlaps'pandas._libs.interval.Interval.overlaps"
builtins.bool"builtins.bool*|
selfr
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval*w
otherl
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval0:typing.overloadX2¢
__gt__%pandas._libs.interval.Interval.__gt__‘
__gt__%pandas._libs.interval.Interval.__gt__"
builtins.bool"builtins.bool*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval0:typing.overloadXË
__gt__%pandas._libs.interval.Interval.__gt__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*èå
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadXÆ	
__gt__%pandas._libs.interval.Interval.__gt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*àÖ
ûUnion[pandas.core.series.Series[builtins.int],pandas.core.series.Series[builtins.float],pandas.core.series.TimestampSeries,pandas.core.series.TimedeltaSeries]b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.SeriesH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeriesH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX2¢
__lt__%pandas._libs.interval.Interval.__lt__‘
__lt__%pandas._libs.interval.Interval.__lt__"
builtins.bool"builtins.bool*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval0:typing.overloadXË
__lt__%pandas._libs.interval.Interval.__lt__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*èå
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadXÆ	
__lt__%pandas._libs.interval.Interval.__lt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*àÖ
ûUnion[pandas.core.series.Series[builtins.int],pandas.core.series.Series[builtins.float],pandas.core.series.TimestampSeries,pandas.core.series.TimedeltaSeries]b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.SeriesH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeriesH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX2¢
__ge__%pandas._libs.interval.Interval.__ge__‘
__ge__%pandas._libs.interval.Interval.__ge__"
builtins.bool"builtins.bool*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval0:typing.overloadXË
__ge__%pandas._libs.interval.Interval.__ge__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*èå
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadXÆ	
__ge__%pandas._libs.interval.Interval.__ge__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*àÖ
ûUnion[pandas.core.series.Series[builtins.int],pandas.core.series.Series[builtins.float],pandas.core.series.TimestampSeries,pandas.core.series.TimedeltaSeries]b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.SeriesH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeriesH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX2Ò
__le__%pandas._libs.interval.Interval.__le__‘
__le__%pandas._libs.interval.Interval.__le__"
builtins.bool"builtins.bool*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval0:typing.overloadXË
__le__%pandas._libs.interval.Interval.__le__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*èå
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadX2¶
__eq__%pandas._libs.interval.Interval.__eq__‘
__eq__%pandas._libs.interval.Interval.__eq__"
builtins.bool"builtins.bool*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval0:typing.overloadXË
__eq__%pandas._libs.interval.Interval.__eq__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*èå
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadXë	
__eq__%pandas._libs.interval.Interval.__eq__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*ÎË
<pandas.core.series.Series[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas.core.series.Series0:typing.overloadXû
__eq__%pandas._libs.interval.Interval.__eq__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*$"
builtins.object"builtins.object0:typing.overloadX2¶
__ne__%pandas._libs.interval.Interval.__ne__‘
__ne__%pandas._libs.interval.Interval.__ne__"
builtins.bool"builtins.bool*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval0:typing.overloadXË
__ne__%pandas._libs.interval.Interval.__ne__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*èå
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval*ÑÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadXë	
__ne__%pandas._libs.interval.Interval.__ne__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*ÎË
<pandas.core.series.Series[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas.core.series.Series0:typing.overloadXû
__ne__%pandas._libs.interval.Interval.__ne__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*ıÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval*$"
builtins.object"builtins.object0:typing.overloadXPrw
mid"pandas._libs.interval.Interval.midL
$pandas._libs.interval._MidDescriptor"$pandas._libs.interval._MidDescriptorrÉ
length%pandas._libs.interval.Interval.lengthR
'pandas._libs.interval._LengthDescriptor"'pandas._libs.interval._LengthDescriptorùΩt
Seriespandas.core.series.Series"pandas.core.base.IndexOpsMixin"pandas.core.generic.NDFrame*›
hasnans!pandas.core.series.Series.hasnans"
builtins.bool"builtins.bool*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*’?
divpandas.core.series.Series.div"h
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *†Z
rdivpandas.core.series.Series.rdiv"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[pandas.core.series.Series[pandas._typing.S1],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *ò
dtypepandas.core.series.Series.dtype"‹
STypeAlias[Union[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]]È
HUnion[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]I
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtypeP
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype"pandas._typing.DtypeObj*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*ö
dtypes pandas.core.series.Series.dtypes"‹
STypeAlias[Union[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]]È
HUnion[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]I
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtypeP
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype"pandas._typing.DtypeObj*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*É
values pandas.core.series.Series.values"≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*ã
arraypandas.core.series.Series.array"P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*à
ravelpandas.core.series.Series.ravel"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*)
order
builtins.str"builtins.str *º
__len__!pandas.core.series.Series.__len__"
builtins.int"builtins.int*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*•.
viewpandas.core.series.Series.view"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
dtype
Any *Î
__array_ufunc__)pandas.core.series.Series.__array_ufunc__"
Any*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*V
ufuncK
CallableType[builtins.function]&
builtins.function"builtins.function*(
method
builtins.str"builtins.str*
inputs
Any*
kwargs
Any*˚
	__array__#pandas.core.series.Series.__array__"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
dtype
Any *Â
axespandas.core.series.Series.axes",
builtins.list[Any]
Any"builtins.list*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*—1
takepandas.core.series.Series.take"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*=
indices0
typing.Sequence[Any]
Any"typing.Sequence*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *V
is_copyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
kwargs
Any*È-
__getattr__%pandas.core.series.Series.__getattr__"†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
builtins.str"builtins.str*∆
__setitem__%pandas.core.series.Series.__setitem__"
None*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*	
Any*	
Any*±2
repeat pandas.core.series.Series.repeat"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*´
repeatsù
/Union[builtins.int,builtins.list[builtins.int]]
builtins.int"builtins.intJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *≥
	to_xarray#pandas.core.series.Series.to_xarray"
Any*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Á.
itemspandas.core.series.Series.items"¬
9typing.Iterable[Tuple[typing.Hashable,pandas._typing.S1]]Û
(Tuple[typing.Hashable,pandas._typing.S1]"
typing.Hashable"typing.Hashable†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"typing.Iterable*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Œ
keyspandas.core.series.Series.keys",
builtins.list[Any]
Any"builtins.list*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ø
to_frame"pandas.core.series.Series.to_frame":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Y
nameM
Union[builtins.object,None]"
builtins.object"builtins.object
None *¶.
modepandas.core.series.Series.mode"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
dropna
Any *ﬂ
unique pandas.core.series.Series.unique"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*»

duplicated$pandas.core.series.Series.duplicated"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≤
keep•
[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.bool]]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition:
Literal[builtins.bool]	
builtins.bool"builtins.bool *Ú
idxmax pandas.core.series.Series.idxmax"`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*Ú
idxmin pandas.core.series.Series.idxmin"`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*Á.
roundpandas.core.series.Series.round"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*,
decimals
builtins.int"builtins.int *
args
Any*
kwargs
Any*˜0
corrpandas.core.series.Series.corr" 
builtins.float"builtins.float*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¯
otherÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ü
method˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str */
min_periods
builtins.int"builtins.int *æ/
covpandas.core.series.Series.cov" 
builtins.float"builtins.float*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¯
otherÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*W
min_periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *(
ddof
builtins.int"builtins.int *º.
diffpandas.core.series.Series.diff"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*+
periods
builtins.int"builtins.int *Û
autocorr"pandas.core.series.Series.autocorr" 
builtins.float"builtins.float*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*'
lag
builtins.int"builtins.int *6

__matmul__$pandas.core.series.Series.__matmul__* * *8
__rmatmul__%pandas.core.series.Series.__rmatmul__* * *ÔU
combine!pandas.core.series.Series.combine"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¯
otherÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*Ö

fill_valueÚ
ÆUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar
None *úE
combine_first'pandas.core.series.Series.combine_first"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¯
otherÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ï]
update pandas.core.series.Series.update"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*‰E
otherÿE
ÖUnion[pandas.core.series.Series[pandas._typing.S1],typing.Sequence[pandas._typing.S1],typing.Mapping[builtins.int,pandas._typing.S1]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Seriesÿ
"typing.Sequence[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"typing.SequenceÅ
.typing.Mapping[builtins.int,pandas._typing.S1]
builtins.int"builtins.int†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"typing.Mapping*ñ
argsort!pandas.core.series.Series.argsort"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *
order
None *Ô1
nlargest"pandas.core.series.Series.nlargest"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*%
n
builtins.int"builtins.int *Æ
keep°
ZUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str]]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition7
Literal[builtins.str]	
builtins.str"builtins.str *Ò1
	nsmallest#pandas.core.series.Series.nsmallest"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*%
n
builtins.int"builtins.int *Æ
keep°
ZUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str]]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition7
Literal[builtins.str]	
builtins.str"builtins.str *≈1
	swaplevel#pandas.core.series.Series.swaplevel"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ω
i≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *Ω
j≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level **
copy
builtins.bool"builtins.bool *‹.
reorder_levels(pandas.core.series.Series.reorder_levels"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*7
order,
builtins.list[Any]
Any"builtins.list*ï.
explode!pandas.core.series.Series.explode"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˝
unstack!pandas.core.series.Series.unstack":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¡
level≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *‘

fill_value¡
<Union[builtins.int,builtins.str,builtins.dict[Any,Any],None]
builtins.int"builtins.int
builtins.str"builtins.str9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None *ö/
mappandas.core.series.Series.map"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
arg
Any*y
	na_actionh
!Union[Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str
None *÷3
alignpandas.core.series.Series.align"‘
DTuple[pandas.core.series.Series[Any],pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*”
other«
AUnion[pandas.core.frame.DataFrame,pandas.core.series.Series[Any]]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*€
joinŒ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.JoinHow *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None **
copy
builtins.bool"builtins.bool *

fill_value
Any *È
method⁄
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *ò
	fill_axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *˜
broadcast_axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *¥6
reindex_like&pandas.core.series.Series.reindex_like"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¯
otherÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*‰
method’
òUnion[builtins.str,TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]
builtins.str"builtins.str‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions7
Literal[builtins.str]	
builtins.str"builtins.str
None **
copy
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *[
	toleranceJ
Union[builtins.float,None] 
builtins.float"builtins.float
None * 1
shiftpandas.core.series.Series.shift"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*+
periods
builtins.int"builtins.int *
freq
Any *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *_

fill_valueM
Union[builtins.object,None]"
builtins.object"builtins.object
None *ß
memory_usage&pandas.core.series.Series.memory_usage"
builtins.int"builtins.int*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*+
index
builtins.bool"builtins.bool **
deep
builtins.bool"builtins.bool *÷0
isinpandas.core.series.Series.isin"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ã
valuesø
_Union[typing.Iterable[Any],pandas.core.series.Series[pandas._typing.S1],builtins.dict[Any,Any]]0
typing.Iterable[Any]
Any"typing.IterableÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series9
builtins.dict[Any,Any]
Any
Any"builtins.dict*èE
between!pandas.core.series.Series.between"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ê
leftÖ
™Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],TypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalarû
ÄTypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]]¸
uUnion[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]0
typing.Sequence[Any]
Any"typing.Sequence9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayD
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"pandas._typing.ListLikeU*ë
rightÖ
™Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],TypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalarû
ÄTypeAlias[Union[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]]¸
uUnion[typing.Sequence[Any],numpy.ndarray[Any,Any],pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any]]0
typing.Sequence[Any]
Any"typing.Sequence9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayD
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"pandas._typing.ListLikeU*ÿ
	inclusive∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *á
isnapandas.core.series.Series.isna"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã
isnull pandas.core.series.Series.isnull"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*â
notnapandas.core.series.Series.notna"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ç
notnull!pandas.core.series.Series.notnull"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*…2
to_timestamp&pandas.core.series.Series.to_timestamp"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
freq
Any *Ê
how⁄
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str""pandas._typing.TimestampConvention **
copy
builtins.bool"builtins.bool *‰
	to_period#pandas.core.series.Series.to_period":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*P
freqD
Union[builtins.str,None]
builtins.str"builtins.str
None **
copy
builtins.bool"builtins.bool *º
strpandas.core.series.Series.str"Ñ
]pandas.core.strings.StringMethods[pandas.core.series.Series[Any],pandas.core.frame.DataFrame]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"!pandas.core.strings.StringMethods*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*±
dtpandas.core.series.Series.dt"|
<pandas.core.indexes.accessors.CombinedDatetimelikeProperties"<pandas.core.indexes.accessors.CombinedDatetimelikeProperties*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*Å
plotpandas.core.series.Series.plot"H
"pandas.plotting._core.PlotAccessor""pandas.plotting._core.PlotAccessor*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*Ù
histpandas.core.series.Series.hist"
Any*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*W
byM
Union[builtins.object,None]"
builtins.object"builtins.object
None *0
ax&
Union[Any,None]
Any
None **
grid
builtins.bool"builtins.bool *V

xlabelsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *V
xrotJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *V

ylabelsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *V
yrotJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *º
figsize¨
0Union[Tuple[builtins.float,builtins.float],None]l
$Tuple[builtins.float,builtins.float] 
builtins.float"builtins.float 
builtins.float"builtins.float
None *à
bins|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence *S
backendD
Union[builtins.str,None]
builtins.str"builtins.str
None *
kwargs
Any*Ì2
swapaxes"pandas.core.series.Series.swapaxes"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*í
axis1Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex*í
axis2Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex**
copy
builtins.bool"builtins.bool *º
	droplevel#pandas.core.series.Series.droplevel":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ω
level±
LUnion[TypeAlias[Union[typing.Hashable,builtins.int]],builtins.list[Unknown]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level)
builtins.list[Unknown] "builtins.list*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *Ô-
poppandas.core.series.Series.pop"†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*,
item"
typing.Hashable"typing.Hashable*À'
squeeze!pandas.core.series.Series.squeeze"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *ç.
__abs__!pandas.core.series.Series.__abs__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*µ1

add_prefix$pandas.core.series.Series.add_prefix"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*(
prefix
builtins.str"builtins.str*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *µ1

add_suffix$pandas.core.series.Series.add_suffix"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*(
suffix
builtins.str"builtins.str*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None * P
reindex!pandas.core.series.Series.reindex"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *π
method™
ãUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions7
Literal[builtins.str]	
builtins.str"builtins.str
None **
copy
builtins.bool"builtins.bool *m
level`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str *Ö

fill_valueÚ
ÆUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *[
	toleranceJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *∞=
filter pandas.core.series.Series.filter"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ö
items˜

ÎUnion[TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],None]˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLike
None *P
likeD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
regexD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *∂.
headpandas.core.series.Series.head"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*%
n
builtins.int"builtins.int *∂.
tailpandas.core.series.Series.tail"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*%
n
builtins.int"builtins.int *∂I
sample pandas.core.series.Series.sample"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*M
nD
Union[builtins.int,None]
builtins.int"builtins.int
None *V
fracJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *-
replace
builtins.bool"builtins.bool *Ñ
weightsÙ
èUnion[builtins.str,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],numpy.ndarray[Any,Any],None]
builtins.str"builtins.str˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLike9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray
None *ü

random_stateä

‰Union[TypeAlias[Union[builtins.int,TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],numpy.random._generator.Generator,numpy.random.bit_generator.BitGenerator,numpy.random.mtrand.RandomState]],None]î
ÿTypeAlias[Union[builtins.int,TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],numpy.random._generator.Generator,numpy.random.bit_generator.BitGenerator,numpy.random.mtrand.RandomState]]ò
ÕUnion[builtins.int,TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],numpy.random._generator.Generator,numpy.random.bit_generator.BitGenerator,numpy.random.mtrand.RandomState]
builtins.int"builtins.int≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeF
!numpy.random._generator.Generator"!numpy.random._generator.GeneratorR
'numpy.random.bit_generator.BitGenerator"'numpy.random.bit_generator.BitGeneratorB
numpy.random.mtrand.RandomState"numpy.random.mtrand.RandomState"pandas._typing.RandomState
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *2
ignore_index
builtins.bool"builtins.bool *ª.
copypandas.core.series.Series.copy"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series**
deep
builtins.bool"builtins.bool *°.
infer_objects'pandas.core.series.Series.infer_objects"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*û2
convert_dtypes(pandas.core.series.Series.convert_dtypes"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*3
infer_objects
builtins.bool"builtins.bool *4
convert_string
builtins.bool"builtins.bool *5
convert_integer
builtins.bool"builtins.bool *5
convert_boolean
builtins.bool"builtins.bool *ü
dtype_backendâ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.DtypeBackend *ˇE
interpolate%pandas.core.series.Series.interpolate"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
method·
ùTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ô
íUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.InterpolateOptions *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
inplace
builtins.bool"builtins.bool *û
limit_directionÜ
MUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None * 

limit_area∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *x
downcasth
!Union[Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str
None *
kwargs
Any*†P
asofpandas.core.series.Series.asof"ˇ&
÷Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas.core.series.Series[pandas._typing.S1]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*∑
where´
¬Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],typing.Sequence[Unknown]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar-
typing.Sequence[Unknown] "typing.Sequence*¡
subset≤
6Union[builtins.str,typing.Sequence[builtins.str],None]
builtins.str"builtins.strN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence
None *·;
clippandas.core.series.Series.clip"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
lower˛
ÜUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.float,None]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike 
builtins.float"builtins.float
None *å
upper˛
ÜUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.float,None]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike 
builtins.float"builtins.float
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *-
inplace
builtins.bool"builtins.bool *
kwargs
Any*ëE
asfreq pandas.core.series.Series.asfreq"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
freq
Any*È
method⁄
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions
None *√
how∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None */
	normalize
builtins.bool"builtins.bool *Ö

fill_valueÚ
ÆUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar
None *†2
at_time!pandas.core.series.Series.at_time"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*m
timec
!Union[builtins.str,datetime.time]
builtins.str"builtins.str
datetime.time"datetime.time**
asof
builtins.bool"builtins.bool *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *˜2
between_time&pandas.core.series.Series.between_time"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*s

start_timec
!Union[builtins.str,datetime.time]
builtins.str"builtins.str
datetime.time"datetime.time*q
end_timec
!Union[builtins.str,datetime.time]
builtins.str"builtins.str
datetime.time"datetime.time*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *ı*
resample"pandas.core.series.Series.resample"¶
>pandas.core.resample.Resampler[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"pandas.core.resample.Resampler*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
rule
Any*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *R
closedD
Union[builtins.str,None]
builtins.str"builtins.str
None *Q
labelD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ì

convention⁄
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str""pandas._typing.TimestampConvention *ƒ
kind∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *
loffset
Any *(
base
builtins.int"builtins.int *N
onD
Union[builtins.str,None]
builtins.str"builtins.str
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *§
originï
ùUnion[pandas._libs.tslibs.timestamps.Timestamp,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *“
offset√
AUnion[pandas._libs.tslibs.timedeltas.Timedelta,builtins.str,None]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta
builtins.str"builtins.str
None *¶.
firstpandas.core.series.Series.first"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
offset
Any*§.
lastpandas.core.series.Series.last"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
offset
Any*ø 
rankpandas.core.series.Series.rank"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *§
methodï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *2
numeric_only
builtins.bool"builtins.bool *â
	na_option˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str */
	ascending
builtins.bool"builtins.bool *)
pct
builtins.bool"builtins.bool *ˆN
wherepandas.core.series.Series.where"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ó
cond„
≥Union[pandas.core.series.Series[pandas._typing.S1],pandas.core.series.Series[builtins.bool],numpy.ndarray[Any,Any],CallableType[builtins.function],CallableType[builtins.function]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Seriese
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayK
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function*
other
Any *-
inplace
builtins.bool"builtins.bool *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
try_cast
builtins.bool"builtins.bool *ˇe
maskpandas.core.series.Series.mask"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*”
cond»
∂TypeAlias[Union[pandas.core.series.Series[builtins.bool],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],builtins.list[builtins.bool]]]Ò
´Union[pandas.core.series.Series[builtins.bool],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],builtins.list[builtins.bool]]e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Seriesà
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_boolM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.list"pandas._typing.MaskType*π)
other´)
≥Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas.core.series.Series[pandas._typing.S1],pandas.core.frame.DataFrame,CallableType[builtins.function],pandas._libs.missing.NAType,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrameK
CallableType[builtins.function]&
builtins.function"builtins.function:
pandas._libs.missing.NAType"pandas._libs.missing.NAType
None *-
inplace
builtins.bool"builtins.bool *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
try_cast
builtins.bool"builtins.bool *‡0
slice_shift%pandas.core.series.Series.slice_shift"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*+
periods
builtins.int"builtins.int *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *Î0
tshift pandas.core.series.Series.tshift"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*+
periods
builtins.int"builtins.int *
freq
Any *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *ê4
truncate"pandas.core.series.Series.truncate"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¨
beforeù
3Union[datetime.date,builtins.str,builtins.int,None]
datetime.date"datetime.date
builtins.str"builtins.str
builtins.int"builtins.int
None *´
afterù
3Union[datetime.date,builtins.str,builtins.int,None]
datetime.date"datetime.date
builtins.str"builtins.str
builtins.int"builtins.int
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None **
copy
builtins.bool"builtins.bool *˝2

tz_convert$pandas.core.series.Series.tz_convert"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
tz
Any*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None **
copy
builtins.bool"builtins.bool * 3
tz_localize%pandas.core.series.Series.tz_localize"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
tz
Any*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None **
copy
builtins.bool"builtins.bool *
	ambiguous
Any */
nonexistent
builtins.str"builtins.str *ç.
abspandas.core.series.Series.abs"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Áu
describe"pandas.core.series.Series.describe"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ù
percentilesâ
)Union[builtins.list[builtins.float],None]P
builtins.list[builtins.float] 
builtins.float"builtins.float"builtins.list
None *
include‡
BUnion[Literal[builtins.str],builtins.list[pandas._typing.S1],None]7
Literal[builtins.str]	
builtins.str"builtins.str‘
 builtins.list[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.list
None *÷-
exclude∆-
>Union[pandas._typing.S1,builtins.list[pandas._typing.S1],None]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype‘
 builtins.list[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.list
None *b
datetime_is_numericG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *ˆ/

pct_change$pandas.core.series.Series.pct_change"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*+
periods
builtins.int"builtins.int */
fill_method
builtins.str"builtins.str *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
freq
Any *
kwargs
Any*Ô$
first_valid_index+pandas.core.series.Series.first_valid_index"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì$
last_valid_index*pandas.core.series.Series.last_valid_index"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¢
value_counts&pandas.core.series.Series.value_counts"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*/
	normalize
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool */
	ascending
builtins.bool"builtins.bool *P
binsD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
dropna
builtins.bool"builtins.bool *¡.
	transpose#pandas.core.series.Series.transpose"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
args
Any*
kwargs
Any*†.
Tpandas.core.series.Series.T"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*ﬂP
__div__!pandas.core.series.Series.__div__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*©
__eq__ pandas.core.series.Series.__eq__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*$"
builtins.object"builtins.object*Õ:
__floordiv__&pandas.core.series.Series.__floordiv__"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ"ª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*πQ
__ge__ pandas.core.series.Series.__ge__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≥9∞9
 Union[pandas._typing.S1,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1],datetime.datetime,datetime.timedelta]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta*πQ
__gt__ pandas.core.series.Series.__gt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≥9∞9
 Union[pandas._typing.S1,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1],datetime.datetime,datetime.timedelta]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta*πQ
__le__ pandas.core.series.Series.__le__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≥9∞9
 Union[pandas._typing.S1,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1],datetime.datetime,datetime.timedelta]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta*πQ
__lt__ pandas.core.series.Series.__lt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≥9∞9
 Union[pandas._typing.S1,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1],datetime.datetime,datetime.timedelta]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta*ŒP
__mod__!pandas.core.series.Series.__mod__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ"ª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*©
__ne__ pandas.core.series.Series.__ne__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*$"
builtins.object"builtins.object*ŒP
__pow__!pandas.core.series.Series.__pow__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ"ª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˚P
__radd__"pandas.core.series.Series.__radd__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*È"Ê"
±Union[builtins.complex,builtins.str,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex
builtins.str"builtins.str˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*–P
__rdiv__"pandas.core.series.Series.__rdiv__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ"ª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ÁP
__rdivmod__%pandas.core.series.Series.__rdivmod__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*⁄P
__rfloordiv__'pandas.core.series.Series.__rfloordiv__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ"ª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*–P
__rmod__"pandas.core.series.Series.__rmod__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ"ª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*#
__rmul__"pandas.core.series.Series.__rmul__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*áÑ
ñUnion[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[Any]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ÁP
__rnatmul__%pandas.core.series.Series.__rnatmul__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*–P
__rpow__"pandas.core.series.Series.__rpow__"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ"ª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ß:
__rsub__"pandas.core.series.Series.__rsub__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ"ª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≠:
__truediv__%pandas.core.series.Series.__truediv__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ"ª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã

__invert__$pandas.core.series.Series.__invert__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
atpandas.core.series.Series.at"B
pandas.core.indexing._AtIndexer"pandas.core.indexing._AtIndexer*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*ü
catpandas.core.series.Series.cat"h
2pandas.core.arrays.categorical.CategoricalAccessor"2pandas.core.arrays.categorical.CategoricalAccessor*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*˚
iatpandas.core.series.Series.iat"D
 pandas.core.indexing._iAtIndexer" pandas.core.indexing._iAtIndexer*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*æ.
ilocpandas.core.series.Series.iloc"Ñ
8pandas.core.series._iLocIndexerSeries[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"%pandas.core.series._iLocIndexerSeries*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*∫.
locpandas.core.series.Series.loc"Ç
7pandas.core.series._LocIndexerSeries[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"$pandas.core.series._LocIndexerSeries*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.property`*≤X
addpandas.core.series.Series.add"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[pandas.core.series.Series[pandas._typing.S1],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *(
axis
builtins.int"builtins.int *Ò
allpandas.core.series.Series.all"
builtins.bool"builtins.bool*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *X
	bool_onlyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
skipna
builtins.bool"builtins.bool *
kwargs
Any*Ò
anypandas.core.series.Series.any"
builtins.bool"builtins.bool*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *X
	bool_onlyG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *,
skipna
builtins.bool"builtins.bool *
kwargs
Any*Ÿ1
cummax pandas.core.series.Series.cummax"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*Ÿ1
cummin pandas.core.series.Series.cummin"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*€1
cumprod!pandas.core.series.Series.cumprod"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*Ÿ1
cumsum pandas.core.series.Series.cumsum"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *,
skipna
builtins.bool"builtins.bool *
args
Any*
kwargs
Any*€?
divide pandas.core.series.Series.divide"h
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *‡U
divmod pandas.core.series.Series.divmod"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *îD
eqpandas.core.series.Series.eq"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas.core.series.Series[pandas._typing.S1]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *Ò
ewmpandas.core.series.Series.ewm"∆
Npandas.core.window.ewm.ExponentialMovingWindow[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series".pandas.core.window.ewm.ExponentialMovingWindow*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*U
comJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *V
spanJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Z
halflifeJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *W
alphaJ
Union[builtins.float,None] 
builtins.float"builtins.float
None */
min_periods
builtins.int"builtins.int *,
adjust
builtins.bool"builtins.bool */
	ignore_na
builtins.bool"builtins.bool *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex * 
	expanding#pandas.core.series.Series.expanding"∂
Fpandas.core.window.expanding.Expanding[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"&pandas.core.window.expanding.Expanding*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*/
min_periods
builtins.int"builtins.int *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *ù
methodé
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.CalculationMethod *≥@
floordiv"pandas.core.series.Series.floordiv"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *îD
gepandas.core.series.Series.ge"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas.core.series.Series[pandas._typing.S1]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *îD
gtpandas.core.series.Series.gt"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas.core.series.Series[pandas._typing.S1]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *√-
itempandas.core.series.Series.item"†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*”(
kurtpandas.core.series.Series.kurt"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *,
skipna
builtins.bool"builtins.bool *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*€(
kurtosis"pandas.core.series.Series.kurtosis"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *,
skipna
builtins.bool"builtins.bool *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*îD
lepandas.core.series.Series.le"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas.core.series.Series[pandas._typing.S1]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *îD
ltpandas.core.series.Series.lt"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas.core.series.Series[pandas._typing.S1]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *ø1
maxpandas.core.series.Series.max"†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *,
skipna
builtins.bool"builtins.bool *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*¿
meanpandas.core.series.Series.mean" 
builtins.float"builtins.float*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *,
skipna
builtins.bool"builtins.bool *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*ƒ
median pandas.core.series.Series.median" 
builtins.float"builtins.float*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *,
skipna
builtins.bool"builtins.bool *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*ø1
minpandas.core.series.Series.min"†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *,
skipna
builtins.bool"builtins.bool *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*¥V
modpandas.core.series.Series.mod"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *¥V
mulpandas.core.series.Series.mul"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *æV
multiply"pandas.core.series.Series.multiply"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *îD
nepandas.core.series.Series.ne"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas.core.series.Series[pandas._typing.S1]]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *Ú
nunique!pandas.core.series.Series.nunique"
builtins.int"builtins.int*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*,
dropna
builtins.bool"builtins.bool *¥V
powpandas.core.series.Series.pow"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *´)
prodpandas.core.series.Series.prod"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *-
	min_count
builtins.int"builtins.int *
kwargs
Any*±)
product!pandas.core.series.Series.product"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *-
	min_count
builtins.int"builtins.int *
kwargs
Any*†Z
raddpandas.core.series.Series.radd"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[pandas.core.series.Series[pandas._typing.S1],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *¶Z
rdivmod!pandas.core.series.Series.rdivmod"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[pandas.core.series.Series[pandas._typing.S1],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *∞3
	rfloordiv#pandas.core.series.Series.rfloordiv"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
other
Any*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *†Z
rmodpandas.core.series.Series.rmod"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[pandas.core.series.Series[pandas._typing.S1],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *†Z
rmulpandas.core.series.Series.rmul"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[pandas.core.series.Series[pandas._typing.S1],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *†Z
rpowpandas.core.series.Series.rpow"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[pandas.core.series.Series[pandas._typing.S1],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *†Z
rsubpandas.core.series.Series.rsub"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ã'
otherˇ&
÷Union[pandas.core.series.Series[pandas._typing.S1],TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *Æ3
rtruediv"pandas.core.series.Series.rtruediv"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
other
Any*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *§)
sempandas.core.series.Series.sem"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*¸(
skewpandas.core.series.Series.skew"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*ë
stdpandas.core.series.Series.std" 
builtins.float"builtins.float*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*¥V
subpandas.core.series.Series.sub"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *æV
subtract"pandas.core.series.Series.subtract"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*«"
otherª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *˝-
to_list!pandas.core.series.Series.to_list"‘
 builtins.list[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.list*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ô2
to_numpy"pandas.core.series.Series.to_numpy"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¨
dtypeû
ˆUnion[TypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]],None]ñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike
None **
copy
builtins.bool"builtins.bool *√
na_value≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar *
kwargs
Any*˚-
tolist pandas.core.series.Series.tolist"‘
 builtins.list[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.list*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ß
truediv!pandas.core.series.Series.truediv"h
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
other
Any*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *\

fill_valueJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *§)
varpandas.core.series.Series.var"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *(
ddof
builtins.int"builtins.int *2
numeric_only
builtins.bool"builtins.bool *
kwargs
Any*¨5
set_axis"pandas.core.series.Series.set_axis"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
labels
Any*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis **
copy
builtins.bool"builtins.bool *˚-
__iter__"pandas.core.series.Series.__iter__"ÿ
"typing.Iterator[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"typing.Iterator*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series2Í¥
__new__!pandas.core.series.Series.__new__≤O
__new__!pandas.core.series.Series.__new__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*µ
cls´
2Type[pandas.core.series.Series[pandas._typing.S1]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series"type*¯
dataÌ
ñUnion[pandas.core.indexes.datetimes.DatetimeIndex,typing.Sequence[Union[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]]]Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndexÛ
ctyping.Sequence[Union[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]]˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp$
numpy.datetime64"numpy.datetime64&
datetime.datetime"datetime.datetime"typing.Sequence*£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *ƒ&
dtype∂&
±TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]€
¶Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimestampDtypeArg *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None **
copy
builtins.bool"builtins.bool 0:typing.overloadXΩS
__new__!pandas.core.series.Series.__new__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*µ
cls´
2Type[pandas.core.series.Series[pandas._typing.S1]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series"type*Ö	
data˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLike*£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *¬&
dtype∂&
±TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]€
¶Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimestampDtypeArg*Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None **
copy
builtins.bool"builtins.bool 0:typing.overloadX£%
__new__!pandas.core.series.Series.__new__"B
pandas.core.series.PeriodSeries"pandas.core.series.PeriodSeries*µ
cls´
2Type[pandas.core.series.Series[pandas._typing.S1]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series"type*Z
dataP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *[
dtypeN
%pandas.core.dtypes.dtypes.PeriodDtype"%pandas.core.dtypes.dtypes.PeriodDtype *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None **
copy
builtins.bool"builtins.bool 0:typing.overloadX¯M
__new__!pandas.core.series.Series.__new__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*µ
cls´
2Type[pandas.core.series.Series[pandas._typing.S1]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series"type*à
data˝
öUnion[pandas.core.indexes.timedeltas.TimedeltaIndex,typing.Sequence[Union[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]]]^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex˚
etyping.Sequence[Union[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]]Ä
TUnion[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta64(
datetime.timedelta"datetime.timedelta"typing.Sequence*£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *˙$
dtypeÏ$
ÖTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Ω
˙Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimedeltaDtypeArg *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None **
copy
builtins.bool"builtins.bool 0:typing.overloadXË7
__new__!pandas.core.series.Series.__new__"¯
Dpandas.core.series.IntervalSeries[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"!pandas.core.series.IntervalSeries*µ
cls´
2Type[pandas.core.series.Series[pandas._typing.S1]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series"type*˛
dataÛ
âUnion[pandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]],pandas._libs.interval.Interval[pandas._libs.interval._OrderableT],typing.Sequence[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]]ê
mpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]Ú
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndexÚ
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval⁄
Rtyping.Sequence[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]Ú
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"typing.Sequence*£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *D
dtype7
Literal[builtins.str]	
builtins.str"builtins.str *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None **
copy
builtins.bool"builtins.bool 0:typing.overloadXè£
__new__!pandas.core.series.Series.__new__"¨
pandas.core.series.Series.SelfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series"pandas.core.series.Series*Á
cls›
$Type[pandas.core.series.Series.Self]¨
pandas.core.series.Series.SelfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series"pandas.core.series.Series"type*≤Q
dataßQ
ÑUnion[builtins.object,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1],builtins.dict[builtins.int,pandas._typing.S1],builtins.dict[builtins.str,pandas._typing.S1],None]"
builtins.object"builtins.object˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Seriesˇ
-builtins.dict[builtins.int,pandas._typing.S1]
builtins.int"builtins.int†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.dictˇ
-builtins.dict[builtins.str,pandas._typing.S1]
builtins.str"builtins.str†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.dict
None*–
dtypeƒ
Type[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"type*£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None **
copy
builtins.bool"builtins.bool 0:typing.overloadXÕä
__new__!pandas.core.series.Series.__new__"¨
pandas.core.series.Series.SelfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series"pandas.core.series.Series*Á
cls›
$Type[pandas.core.series.Series.Self]¨
pandas.core.series.Series.SelfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series"pandas.core.series.Series"type*îF
dataáF
èUnion[pandas.core.series.Series[pandas._typing.S1],builtins.dict[builtins.int,pandas._typing.S1],builtins.dict[builtins.str,pandas._typing.S1]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Seriesˇ
-builtins.dict[builtins.int,pandas._typing.S1]
builtins.int"builtins.int†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.dictˇ
-builtins.dict[builtins.str,pandas._typing.S1]
builtins.str"builtins.str†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.dict *£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *¨	
dtypeû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None **
copy
builtins.bool"builtins.bool 0:typing.overloadX÷8
__new__!pandas.core.series.Series.__new__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*µ
cls´
2Type[pandas.core.series.Series[pandas._typing.S1]]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series"type*∏
data´
˚Union[builtins.object,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],None]"
builtins.object"builtins.object˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLike
None *£

indexï

÷Union[TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]],None]≠
 TypeAlias[Union[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]]∆
øUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.dict[Any,Any],builtins.range,builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dict 
builtins.range"builtins.range.
builtins.tuple[Any]
Any"builtins.tuple"pandas._typing.Axes
None *¨	
dtypeû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None **
copy
builtins.bool"builtins.bool 0:typing.overloadX2√0
namepandas.core.series.Series.nameà
namepandas.core.series.Series.name"M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.propertyX`è
namepandas.core.series.Series.name"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*X
valueM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None0:.setter2∞Ç
__getitem__%pandas.core.series.Series.__getitem__¥S
__getitem__%pandas.core.series.Series.__getitem__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*∞;≠;
ÒUnion[builtins.list[builtins.str],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[pandas._typing.S1],builtins.slice,TypeAlias[Union[pandas.core.series.Series[builtins.bool],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],builtins.list[builtins.bool]]],builtins.tuple[Union[pandas._typing.S1,builtins.slice]]]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series 
builtins.slice"builtins.slice»
∂TypeAlias[Union[pandas.core.series.Series[builtins.bool],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],builtins.list[builtins.bool]]]Ò
´Union[pandas.core.series.Series[builtins.bool],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],builtins.list[builtins.bool]]e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Seriesà
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_boolM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.list"pandas._typing.MaskTypeº
7builtins.tuple[Union[pandas._typing.S1,builtins.slice]]
'Union[pandas._typing.S1,builtins.slice]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype 
builtins.slice"builtins.slice"builtins.tuple0:typing.overloadX¬.
__getitem__%pandas.core.series.Series.__getitem__"†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*b`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str0:typing.overloadX2Ì1
indexpandas.core.series.Series.indexØ
indexpandas.core.series.Series.index"Ò
OUnion[pandas.core.indexes.base.Index[Any],pandas.core.indexes.multi.MultiIndex]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:builtins.propertyX`ê
indexpandas.core.series.Series.index"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*W
idxN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index0:.setter2Œ€
reset_index%pandas.core.series.Series.reset_index¶
reset_index%pandas.core.series.Series.reset_index":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ñ
levelà
?typing.Sequence[TypeAlias[Union[typing.Hashable,builtins.int]]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level"typing.Sequence *F
drop:
Literal[builtins.bool]	
builtins.bool"builtins.bool *¿
name≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *6
allow_duplicates
builtins.bool"builtins.bool 0:typing.overloadX◊3
reset_index%pandas.core.series.Series.reset_index"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ñ
levelà
?typing.Sequence[TypeAlias[Union[typing.Hashable,builtins.int]]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level"typing.Sequence *D
drop:
Literal[builtins.bool]	
builtins.bool"builtins.bool*¿
name≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *6
allow_duplicates
builtins.bool"builtins.bool 0:typing.overloadX÷
reset_index%pandas.core.series.Series.reset_index"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ñ
levelà
?typing.Sequence[TypeAlias[Union[typing.Hashable,builtins.int]]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level"typing.Sequence **
drop
builtins.bool"builtins.bool *¿
name≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*6
allow_duplicates
builtins.bool"builtins.bool 0:typing.overloadXú
reset_index%pandas.core.series.Series.reset_index":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *F
drop:
Literal[builtins.bool]	
builtins.bool"builtins.bool *¿
name≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *6
allow_duplicates
builtins.bool"builtins.bool 0:typing.overloadXÕ3
reset_index%pandas.core.series.Series.reset_index"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *D
drop:
Literal[builtins.bool]	
builtins.bool"builtins.bool*¿
name≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *6
allow_duplicates
builtins.bool"builtins.bool 0:typing.overloadXÃ
reset_index%pandas.core.series.Series.reset_index"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None **
drop
builtins.bool"builtins.bool *¿
name≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*6
allow_duplicates
builtins.bool"builtins.bool 0:typing.overloadX2¯;
	to_string#pandas.core.series.Series.to_stringµ
	to_string#pandas.core.series.Series.to_string"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Œ
bufƒ
hUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.str]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathd
(pandas._typing.WriteBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.WriteBuffer**
na_rep
builtins.str"builtins.str *_
float_formatK
CallableType[builtins.function]&
builtins.function"builtins.function *,
header
builtins.bool"builtins.bool *+
index
builtins.bool"builtins.bool *,
length
builtins.bool"builtins.bool *+
dtype
builtins.bool"builtins.bool **
name
builtins.bool"builtins.bool *T
max_rowsD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
min_rowsD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overloadXç
	to_string#pandas.core.series.Series.to_string"
builtins.str"builtins.str*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
buf
None **
na_rep
builtins.str"builtins.str *_
float_formatK
CallableType[builtins.function]&
builtins.function"builtins.function *,
header
builtins.bool"builtins.bool *+
index
builtins.bool"builtins.bool *,
length
builtins.bool"builtins.bool *+
dtype
builtins.bool"builtins.bool **
name
builtins.bool"builtins.bool *T
max_rowsD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
min_rowsD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overloadX2–±
to_json!pandas.core.series.Series.to_jsonÒ+
to_json!pandas.core.series.Series.to_json"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*÷
path_or_bufƒ
hUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.str]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathd
(pandas._typing.WriteBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.WriteBuffer*C
orient7
Literal[builtins.str]	
builtins.str"builtins.str*À
date_format∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *4
double_precision
builtins.int"builtins.int *1
force_ascii
builtins.bool"builtins.bool *ÿ
	date_unit∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *û
default_handlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *E
lines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *+
index
builtins.bool"builtins.bool *R
indentD
Union[builtins.int,None]
builtins.int"builtins.int
None *A
mode7
Literal[builtins.str]	
builtins.str"builtins.str0:typing.overloadX…(
to_json!pandas.core.series.Series.to_json"
builtins.str"builtins.str*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
path_or_buf
None *C
orient7
Literal[builtins.str]	
builtins.str"builtins.str*À
date_format∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *4
double_precision
builtins.int"builtins.int *1
force_ascii
builtins.bool"builtins.bool *ÿ
	date_unit∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *û
default_handlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *E
lines:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *+
index
builtins.bool"builtins.bool *R
indentD
Union[builtins.int,None]
builtins.int"builtins.int
None *A
mode7
Literal[builtins.str]	
builtins.str"builtins.str0:typing.overloadXÉ0
to_json!pandas.core.series.Series.to_json"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*÷
path_or_bufƒ
hUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],pandas._typing.WriteBuffer[builtins.str]]Ô
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"pandas._typing.FilePathd
(pandas._typing.WriteBuffer[builtins.str]
builtins.str"builtins.str"pandas._typing.WriteBuffer*Ï
orient›
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]◊
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.JsonSeriesOrient
None *À
date_format∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *4
double_precision
builtins.int"builtins.int *1
force_ascii
builtins.bool"builtins.bool *ÿ
	date_unit∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *û
default_handlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *+
lines
builtins.bool"builtins.bool *Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *+
index
builtins.bool"builtins.bool *R
indentD
Union[builtins.int,None]
builtins.int"builtins.int
None *C
mode7
Literal[builtins.str]	
builtins.str"builtins.str 0:typing.overloadX€,
to_json!pandas.core.series.Series.to_json"
builtins.str"builtins.str*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
path_or_buf
None *Ï
orient›
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]◊
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.JsonSeriesOrient
None *À
date_format∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None *4
double_precision
builtins.int"builtins.int *1
force_ascii
builtins.bool"builtins.bool *ÿ
	date_unit∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *û
default_handlerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *+
lines
builtins.bool"builtins.bool *Õ
compressionπ
≈TypeAlias[Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]]…
∫Union[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],TypeAlias[builtins.dict[builtins.str,Any]]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strß
*TypeAlias[builtins.dict[builtins.str,Any]]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict"pandas._typing.CompressionDict"!pandas._typing.CompressionOptions *+
index
builtins.bool"builtins.bool *R
indentD
Union[builtins.int,None]
builtins.int"builtins.int
None *C
mode7
Literal[builtins.str]	
builtins.str"builtins.str 0:typing.overloadX2ä_
to_dict!pandas.core.series.Series.to_dictü.
to_dict!pandas.core.series.Series.to_dict"·
$builtins.dict[Any,pandas._typing.S1]
Any†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.dict*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:typing.overloadXπ0
to_dict!pandas.core.series.Series.to_dict"ä
1typing.Mapping[typing.Hashable,pandas._typing.S1]"
typing.Hashable"typing.Hashable†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"typing.Mapping*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ó
into„
<Union[Type[typing.Mapping[Any,Any]],typing.Mapping[Any,Any]]d
Type[typing.Mapping[Any,Any]];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping"type;
typing.Mapping[Any,Any]
Any
Any"typing.Mapping0:typing.overloadX2éÅ
groupby!pandas.core.series.Series.groupby°R
groupby!pandas.core.series.Series.groupby"Â&
ﬂpandas.core.groupby.generic.SeriesGroupBy[pandas._typing.S1,TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar")pandas.core.groupby.generic.SeriesGroupBy*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ª
by≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadXÌ6
groupby!pandas.core.series.Series.groupby"ã
epandas.core.groupby.generic.SeriesGroupBy[pandas._typing.S1,pandas._libs.tslibs.timestamps.Timestamp]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtypeT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp")pandas.core.groupby.generic.SeriesGroupBy*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*b
byZ
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadXÒ6
groupby!pandas.core.series.Series.groupby"ã
epandas.core.groupby.generic.SeriesGroupBy[pandas._typing.S1,pandas._libs.tslibs.timedeltas.Timedelta]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtypeT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta")pandas.core.groupby.generic.SeriesGroupBy*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*f
by^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadXŒ6
groupby!pandas.core.series.Series.groupby"ˆ
^pandas.core.groupby.generic.SeriesGroupBy[pandas._typing.S1,pandas._libs.tslibs.period.Period]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtypeF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period")pandas.core.groupby.generic.SeriesGroupBy*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*X
byP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadXø8
groupby!pandas.core.series.Series.groupby"¥
Upandas.core.groupby.generic.SeriesGroupBy[pandas._typing.S1,pandas._typing.IntervalT]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtypeå
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval")pandas.core.groupby.generic.SeriesGroupBy*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ä
byÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadX˙N
groupby!pandas.core.series.Series.groupby"–
Ppandas.core.groupby.generic.SeriesGroupBy[pandas._typing.S1,builtins.tuple[Any]]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype.
builtins.tuple[Any]
Any"builtins.tuple")pandas.core.groupby.generic.SeriesGroupBy*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*©
byû
´Union[pandas.core.indexes.multi.MultiIndex,TypeAlias[Union[builtins.tuple[Any],builtins.list[pandas._typing._HashableTa],TypeAlias[Union[numpy.ufunc,CallableType[builtins.function]]],builtins.list[Unknown],builtins.list[pandas.core.series.Series[Any]],numpy.ndarray[Any,Any],builtins.list[numpy.ndarray[Any,Any]],typing.Mapping[TypeAlias[Union[typing.Hashable,None]],Any],builtins.list[typing.Mapping[Unknown,Any]],builtins.list[pandas.core.indexes.base.Index[Any]],pandas.core.groupby.grouper.Grouper,builtins.list[pandas.core.groupby.grouper.Grouper]]]]L
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndexù
ˇTypeAlias[Union[builtins.tuple[Any],builtins.list[pandas._typing._HashableTa],TypeAlias[Union[numpy.ufunc,CallableType[builtins.function]]],builtins.list[Unknown],builtins.list[pandas.core.series.Series[Any]],numpy.ndarray[Any,Any],builtins.list[numpy.ndarray[Any,Any]],typing.Mapping[TypeAlias[Union[typing.Hashable,None]],Any],builtins.list[typing.Mapping[Unknown,Any]],builtins.list[pandas.core.indexes.base.Index[Any]],pandas.core.groupby.grouper.Grouper,builtins.list[pandas.core.groupby.grouper.Grouper]]]Ô
ÙUnion[builtins.tuple[Any],builtins.list[pandas._typing._HashableTa],TypeAlias[Union[numpy.ufunc,CallableType[builtins.function]]],builtins.list[Unknown],builtins.list[pandas.core.series.Series[Any]],numpy.ndarray[Any,Any],builtins.list[numpy.ndarray[Any,Any]],typing.Mapping[TypeAlias[Union[typing.Hashable,None]],Any],builtins.list[typing.Mapping[Unknown,Any]],builtins.list[pandas.core.indexes.base.Index[Any]],pandas.core.groupby.grouper.Grouper,builtins.list[pandas.core.groupby.grouper.Grouper]].
builtins.tuple[Any]
Any"builtins.tupleè
)builtins.list[pandas._typing._HashableTa]S
pandas._typing._HashableTa"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list¸
=TypeAlias[Union[numpy.ufunc,CallableType[builtins.function]]]ü
2Union[numpy.ufunc,CallableType[builtins.function]]
numpy.ufunc"numpy.ufuncK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Function)
builtins.list[Unknown] "builtins.listÑ
-builtins.list[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"builtins.list9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayq
%builtins.list[numpy.ndarray[Any,Any]]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.listÁ
:typing.Mapping[TypeAlias[Union[typing.Hashable,None]],Any]è
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label
Any"typing.Mappingu
*builtins.list[typing.Mapping[Unknown,Any]]8
typing.Mapping[Unknown,Any] 
Any"typing.Mapping"builtins.listì
2builtins.list[pandas.core.indexes.base.Index[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"builtins.listJ
#pandas.core.groupby.grouper.Grouper"#pandas.core.groupby.grouper.Grouperè
2builtins.list[pandas.core.groupby.grouper.Grouper]J
#pandas.core.groupby.grouper.Grouper"#pandas.core.groupby.grouper.Grouper"builtins.list"%pandas._typing.GroupByObjectNonScalar *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadXùJ
groupby!pandas.core.series.Series.groupby"¥!
Upandas.core.groupby.generic.SeriesGroupBy[pandas._typing.S1,pandas._typing.SeriesByT]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtypeå

pandas._typing.SeriesByTÌ	
«Union[builtins.str,builtins.bytes,datetime.date,builtins.bool,builtins.int,builtins.float,builtins.complex,datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval")pandas.core.groupby.generic.SeriesGroupBy*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ë

byﬂ

3pandas.core.series.Series[pandas._typing.SeriesByT]å

pandas._typing.SeriesByTÌ	
«Union[builtins.str,builtins.bytes,datetime.date,builtins.bool,builtins.int,builtins.float,builtins.complex,datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complex&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadXß8
groupby!pandas.core.series.Series.groupby"ô
@pandas.core.groupby.generic.SeriesGroupBy[pandas._typing.S1,Any]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype
Any")pandas.core.groupby.generic.SeriesGroupBy*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ç
byÑ
|Union[pandas.core.indexes.category.CategoricalIndex[Any],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any]]l
2pandas.core.indexes.category.CategoricalIndex[Any]
Any"-pandas.core.indexes.category.CategoricalIndexN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *.
as_index
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *0

group_keys
builtins.bool"builtins.bool *-
squeeze
builtins.bool"builtins.bool *.
observed
builtins.bool"builtins.bool *,
dropna
builtins.bool"builtins.bool 0:typing.overloadX2ÔF
countpandas.core.series.Series.countÏ
countpandas.core.series.Series.count"
builtins.int"builtins.int*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*
level
None 0:typing.overloadX’.
countpandas.core.series.Series.count"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*-
level"
typing.Hashable"typing.Hashable0:typing.overloadX2πÅ
drop_duplicates)pandas.core.series.Series.drop_duplicates∫2
drop_duplicates)pandas.core.series.Series.drop_duplicates"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≤
keep•
[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.bool]]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition:
Literal[builtins.bool]	
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadX”
drop_duplicates)pandas.core.series.Series.drop_duplicates"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≤
keep•
[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.bool]]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition:
Literal[builtins.bool]	
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXÁ2
drop_duplicates)pandas.core.series.Series.drop_duplicates"µ
8Union[pandas.core.series.Series[pandas._typing.S1],None]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≤
keep•
[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.bool]]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition:
Literal[builtins.bool]	
builtins.bool"builtins.bool *-
inplace
builtins.bool"builtins.bool 0:typing.overloadX2£Y
quantile"pandas.core.series.Series.quantile‰
quantile"pandas.core.series.Series.quantile" 
builtins.float"builtins.float*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*)
q 
builtins.float"builtins.float *◊
interpolation¡
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"$pandas._typing.QuantileInterpolation 0:typing.overloadXã<
quantile"pandas.core.series.Series.quantile"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ç	
q˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLike*◊
interpolation¡
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"$pandas._typing.QuantileInterpolation 0:typing.overloadX2ã
dotpandas.core.series.Series.dot„;
dotpandas.core.series.Series.dot"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¯
otherÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:typing.overloadXÈ.
dotpandas.core.series.Series.dot"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*E
other:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:typing.overloadX˜ 
dotpandas.core.series.Series.dot"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ü	
other˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLike0:typing.overloadX2¸_
searchsorted&pandas.core.series.Series.searchsorted€-
searchsorted&pandas.core.series.Series.searchsorted"J
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ü	
value˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLike*µ
side®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *Ü
sorter˜

ÎUnion[TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],None]˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLike
None 0:typing.overloadXÂ1
searchsorted&pandas.core.series.Series.searchsorted"
builtins.int"builtins.int*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ
value≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*µ
side®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *Ü
sorter˜

ÎUnion[TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],None]˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLike
None 0:typing.overloadX2À7
compare!pandas.core.series.Series.compare–
compare!pandas.core.series.Series.compare"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*O
otherD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ó

align_axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex*0

keep_shape
builtins.bool"builtins.bool *0

keep_equal
builtins.bool"builtins.bool 0:typing.overloadX…
compare!pandas.core.series.Series.compare":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*O
otherD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ö

align_axisá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn *0

keep_shape
builtins.bool"builtins.bool *0

keep_equal
builtins.bool"builtins.bool 0:typing.overloadX2Æ¶
sort_values%pandas.core.series.Series.sort_valuesÔ'
sort_values%pandas.core.series.Series.sort_values"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *2
ignore_index
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadX÷>
sort_values%pandas.core.series.Series.sort_values"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *2
ignore_index
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadX¨?
sort_values%pandas.core.series.Series.sort_values"µ
8Union[pandas.core.series.Series[pandas._typing.S1],None]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *V
inplaceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *2
ignore_index
builtins.bool"builtins.bool *í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadX2¥Ñ

sort_index$pandas.core.series.Series.sort_index≤*

sort_index$pandas.core.series.Series.sort_index"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *4
sort_remaining
builtins.bool"builtins.bool *2
ignore_index
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadX¿,

sort_index$pandas.core.series.Series.sort_index"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *‹
levelŒ
rUnion[TypeAlias[Union[typing.Hashable,builtins.int]],builtins.list[builtins.int],builtins.list[builtins.str],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.LevelJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *4
sort_remaining
builtins.bool"builtins.bool *2
ignore_index
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadXá-

sort_index$pandas.core.series.Series.sort_index"~
*Union[pandas.core.series.Series[Any],None]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *‹
levelŒ
rUnion[TypeAlias[Union[typing.Hashable,builtins.int]],builtins.list[builtins.int],builtins.list[builtins.str],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.LevelJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None *º
	ascending™
3Union[builtins.bool,typing.Sequence[builtins.bool]]
builtins.bool"builtins.boolQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence *V
inplaceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *‹
kindœ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.SortKind *õ
na_positioná
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition *4
sort_remaining
builtins.bool"builtins.bool *2
ignore_index
builtins.bool"builtins.bool *í
keyÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None 0:typing.overloadX2¡l
	aggregate#pandas.core.series.Series.aggregateÈ2
	aggregate#pandas.core.series.Series.aggregate"†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*∆
funcª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *
args
Any*
kwargs
Any0:typing.overloadX¢9
	aggregate#pandas.core.series.Series.aggregate"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≥
func¶
ßTypeAlias[Union[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]]]Œ
úUnion[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]]®
Ybuiltins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase"builtins.listˇ
;TypeAlias[typing.Mapping[pandas._typing.HashableT,Unknown]]ó
0typing.Mapping[pandas._typing.HashableT,Unknown]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable "typing.Mapping"$pandas._typing.AggFuncTypeDictSeries"'pandas._typing.AggFuncTypeSeriesToFrame *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *
args
Any*
kwargs
Any0:typing.overloadX2ØV
	transform#pandas.core.series.Series.transformµ3
	transform#pandas.core.series.Series.transform"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*∆
funcª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *
args
Any*
kwargs
Any0:typing.overloadXƒ"
	transform#pandas.core.series.Series.transform":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*à
func˝
∫Union[builtins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]],TypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]]®
Ybuiltins.list[TypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]]]ª
JTypeAlias[Union[CallableType[builtins.function],builtins.str,numpy.ufunc]] 
?Union[CallableType[builtins.function],builtins.str,numpy.ufunc]K
CallableType[builtins.function]&
builtins.function"builtins.function
builtins.str"builtins.str
numpy.ufunc"numpy.ufunc"pandas._typing.AggFuncTypeBase"builtins.listê
YTypeAlias[typing.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]]ã
Ntyping.Mapping[pandas._typing.HashableT,Union[Unknown,builtins.list[Unknown]]]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.HashableV
%Union[Unknown,builtins.list[Unknown]] )
builtins.list[Unknown] "builtins.list"typing.Mapping"#pandas._typing.AggFuncTypeDictFrame*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *
args
Any*
kwargs
Any0:typing.overloadX2“3
applypandas.core.series.Series.apply◊
applypandas.core.series.Series.apply"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*2
convertDType
builtins.bool"builtins.bool *:
args.
builtins.tuple[Any]
Any"builtins.tuple *
kwds
Any0:typing.overloadXÕ
applypandas.core.series.Series.apply":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*2
convertDType
builtins.bool"builtins.bool *:
args.
builtins.tuple[Any]
Any"builtins.tuple *
kwds
Any0:typing.overloadX2óß
rename pandas.core.series.Series.rename÷*
rename pandas.core.series.Series.rename"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Û
indexÂ
àUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],typing.Hashable,None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer"
typing.Hashable"typing.Hashable
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
copy
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadXﬂ*
rename pandas.core.series.Series.rename"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ
index∞
xUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
copy
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX˙%
rename pandas.core.series.Series.rename"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Z
indexM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
copy
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX≤+
rename pandas.core.series.Series.rename"~
*Union[pandas.core.series.Series[Any],None]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Û
indexÂ
àUnion[TypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]],typing.Hashable,None]ß
lTypeAlias[Union[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]]ú
aUnion[typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]],CallableType[builtins.function]]Á
:typing.Mapping[Any,TypeAlias[Union[typing.Hashable,None]]]
Anyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label"typing.MappingK
CallableType[builtins.function]&
builtins.function"builtins.function"pandas._typing.Renamer"
typing.Hashable"typing.Hashable
None *¸
axisÔ
ôUnion[TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]],None]ƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis
None **
copy
builtins.bool"builtins.bool *-
inplace
builtins.bool"builtins.bool *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX2ΩÖ
droppandas.core.series.Series.drop¸+
droppandas.core.series.Series.drop"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˙
labelsÎ
cUnion[typing.Hashable,builtins.list[pandas._typing.HashableT1],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *˘
indexÎ
cUnion[typing.Hashable,builtins.list[pandas._typing.HashableT2],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *˚
columnsÎ
cUnion[typing.Hashable,builtins.list[pandas._typing.HashableT3],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX∫,
droppandas.core.series.Series.drop"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˙
labelsÎ
cUnion[typing.Hashable,builtins.list[pandas._typing.HashableT1],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *˘
indexÎ
cUnion[typing.Hashable,builtins.list[pandas._typing.HashableT2],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *˚
columnsÎ
cUnion[typing.Hashable,builtins.list[pandas._typing.HashableT3],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadXÿ,
droppandas.core.series.Series.drop"~
*Union[pandas.core.series.Series[Any],None]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˙
labelsÎ
cUnion[typing.Hashable,builtins.list[pandas._typing.HashableT1],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT1]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *—
axisƒ
çTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]]ö
ÇUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndexá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn"pandas._typing.Axis *˘
indexÎ
cUnion[typing.Hashable,builtins.list[pandas._typing.HashableT2],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *˚
columnsÎ
cUnion[typing.Hashable,builtins.list[pandas._typing.HashableT3],pandas.core.indexes.base.Index[Any]]"
typing.Hashable"typing.Hashableç
(builtins.list[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index *å
level˛
:Union[TypeAlias[Union[typing.Hashable,builtins.int]],None]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level
None *-
inplace
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX2´å
fillna pandas.core.series.Series.fillnaˇI
fillna pandas.core.series.Series.fillna"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*û)
valueê)
™Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,builtins.dict[Any,Any],pandas.core.series.Series[pandas._typing.S1],pandas.core.frame.DataFrame,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType9
builtins.dict[Any,Any]
Any
Any"builtins.dictÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *È
method⁄
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXÊ`
fillna pandas.core.series.Series.fillna"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*û)
valueê)
™Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,builtins.dict[Any,Any],pandas.core.series.Series[pandas._typing.S1],pandas.core.frame.DataFrame,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType9
builtins.dict[Any,Any]
Any
Any"builtins.dictÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *È
method⁄
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadXìa
fillna pandas.core.series.Series.fillna"µ
8Union[pandas.core.series.Series[pandas._typing.S1],None]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*û)
valueê)
™Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,builtins.dict[Any,Any],pandas.core.series.Series[pandas._typing.S1],pandas.core.frame.DataFrame,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType9
builtins.dict[Any,Any]
Any
Any"builtins.dictÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
None *È
method⁄
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *-
inplace
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadX2ëÖ
replace!pandas.core.series.Series.replace≤^
replace!pandas.core.series.Series.replace"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*∑

to_replace§
~Union[builtins.str,builtins.list[Any],builtins.dict[Any,Any],pandas.core.series.Series[pandas._typing.S1],builtins.float,None]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dictÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series 
builtins.float"builtins.float
None *ñ
valueà
ÅUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,builtins.dict[Any,Any],builtins.list[Any],builtins.str,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType9
builtins.dict[Any,Any]
Any
Any"builtins.dict,
builtins.list[Any]
Any"builtins.list
builtins.str"builtins.str
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
regex
Any *˛
methodÔ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ReplaceMethod 0:typing.overloadXÀG
replace!pandas.core.series.Series.replace"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*∑

to_replace§
~Union[builtins.str,builtins.list[Any],builtins.dict[Any,Any],pandas.core.series.Series[pandas._typing.S1],builtins.float,None]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dictÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series 
builtins.float"builtins.float
None *ñ
valueà
ÅUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,builtins.dict[Any,Any],builtins.list[Any],builtins.str,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType9
builtins.dict[Any,Any]
Any
Any"builtins.dict,
builtins.list[Any]
Any"builtins.list
builtins.str"builtins.str
None *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
regex
Any *˛
methodÔ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ReplaceMethod *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadXﬂ^
replace!pandas.core.series.Series.replace"µ
8Union[pandas.core.series.Series[pandas._typing.S1],None]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*∑

to_replace§
~Union[builtins.str,builtins.list[Any],builtins.dict[Any,Any],pandas.core.series.Series[pandas._typing.S1],builtins.float,None]
builtins.str"builtins.str,
builtins.list[Any]
Any"builtins.list9
builtins.dict[Any,Any]
Any
Any"builtins.dictÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series 
builtins.float"builtins.float
None *ñ
valueà
ÅUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.missing.NAType,builtins.dict[Any,Any],builtins.list[Any],builtins.str,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar:
pandas._libs.missing.NAType"pandas._libs.missing.NAType9
builtins.dict[Any,Any]
Any
Any"builtins.dict,
builtins.list[Any]
Any"builtins.list
builtins.str"builtins.str
None *-
inplace
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
regex
Any *˛
methodÔ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ReplaceMethod 0:typing.overloadX2ÊÅ
dropna pandas.core.series.Series.dropnaË
dropna pandas.core.series.Series.dropna"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*√
how∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None 0:typing.overloadXœ2
dropna pandas.core.series.Series.dropna"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *√
how∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None 0:typing.overloadX¸2
dropna pandas.core.series.Series.dropna"µ
8Union[pandas.core.series.Series[pandas._typing.S1],None]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *-
inplace
builtins.bool"builtins.bool *√
how∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None 0:typing.overloadX2÷î
astype pandas.core.series.Series.astype…$
astype pandas.core.series.Series.astype"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*‡	
dtype‘	
èTypeAlias[Union[Type[builtins.bool],Literal[builtins.str],pandas.core.arrays.boolean.BooleanDtype,Literal[builtins.str],Type[numpy.bool_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ù
ÑUnion[Type[builtins.bool],Literal[builtins.str],pandas.core.arrays.boolean.BooleanDtype,Literal[builtins.str],Type[numpy.bool_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]=
Type[builtins.bool]
builtins.bool"builtins.bool"type7
Literal[builtins.str]	
builtins.str"builtins.strR
'pandas.core.arrays.boolean.BooleanDtype"'pandas.core.arrays.boolean.BooleanDtype7
Literal[builtins.str]	
builtins.str"builtins.str7
Type[numpy.bool_]
numpy.bool_"numpy.bool_"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.BooleanDtypeArg**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX‘x
astype pandas.core.series.Series.astype"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ó]
dtype‚]
‰Union[TypeAlias[Union[Type[builtins.int],Literal[builtins.str],pandas.core.arrays.integer.Int8Dtype,pandas.core.arrays.integer.Int16Dtype,pandas.core.arrays.integer.Int32Dtype,pandas.core.arrays.integer.Int64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[TypeAlias[Any]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[pandas.core.arrays.integer.UInt8Dtype,pandas.core.arrays.integer.UInt16Dtype,pandas.core.arrays.integer.UInt32Dtype,pandas.core.arrays.integer.UInt64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]¢'
æTypeAlias[Union[Type[builtins.int],Literal[builtins.str],pandas.core.arrays.integer.Int8Dtype,pandas.core.arrays.integer.Int16Dtype,pandas.core.arrays.integer.Int32Dtype,pandas.core.arrays.integer.Int64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[TypeAlias[Any]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]¿
≥Union[Type[builtins.int],Literal[builtins.str],pandas.core.arrays.integer.Int8Dtype,pandas.core.arrays.integer.Int16Dtype,pandas.core.arrays.integer.Int32Dtype,pandas.core.arrays.integer.Int64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[TypeAlias[Any]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.signedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]:
Type[builtins.int]
builtins.int"builtins.int"type7
Literal[builtins.str]	
builtins.str"builtins.strL
$pandas.core.arrays.integer.Int8Dtype"$pandas.core.arrays.integer.Int8DtypeN
%pandas.core.arrays.integer.Int16Dtype"%pandas.core.arrays.integer.Int16DtypeN
%pandas.core.arrays.integer.Int32Dtype"%pandas.core.arrays.integer.Int32DtypeN
%pandas.core.arrays.integer.Int64Dtype"%pandas.core.arrays.integer.Int64Dtype7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str´
)Type[numpy.signedinteger[TypeAlias[Any]]]v
#numpy.signedinteger[TypeAlias[Any]]:
TypeAlias[Any]
Any"numpy._typing._nbit._NBitByte"numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strc
"Type[numpy.signedinteger[Unknown]]5
numpy.signedinteger[Unknown] "numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strc
"Type[numpy.signedinteger[Unknown]]5
numpy.signedinteger[Unknown] "numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strc
"Type[numpy.signedinteger[Unknown]]5
numpy.signedinteger[Unknown] "numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strc
"Type[numpy.signedinteger[Unknown]]5
numpy.signedinteger[Unknown] "numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strc
"Type[numpy.signedinteger[Unknown]]5
numpy.signedinteger[Unknown] "numpy.signedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IntDtypeArg—%
ûTypeAlias[Union[pandas.core.arrays.integer.UInt8Dtype,pandas.core.arrays.integer.UInt16Dtype,pandas.core.arrays.integer.UInt32Dtype,pandas.core.arrays.integer.UInt64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]é
ìUnion[pandas.core.arrays.integer.UInt8Dtype,pandas.core.arrays.integer.UInt16Dtype,pandas.core.arrays.integer.UInt32Dtype,pandas.core.arrays.integer.UInt64Dtype,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Type[numpy.unsignedinteger[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]N
%pandas.core.arrays.integer.UInt8Dtype"%pandas.core.arrays.integer.UInt8DtypeP
&pandas.core.arrays.integer.UInt16Dtype"&pandas.core.arrays.integer.UInt16DtypeP
&pandas.core.arrays.integer.UInt32Dtype"&pandas.core.arrays.integer.UInt32DtypeP
&pandas.core.arrays.integer.UInt64Dtype"&pandas.core.arrays.integer.UInt64Dtype7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.stri
$Type[numpy.unsignedinteger[Unknown]]9
numpy.unsignedinteger[Unknown] "numpy.unsignedinteger"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.UIntDtypeArg**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX¥$
astype pandas.core.series.Series.astype"b
'pandas.core.series.Series[builtins.str]
builtins.str"builtins.str"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Œ	
dtype¬	
åTypeAlias[Union[Type[builtins.str],Literal[builtins.str],pandas.core.arrays.string_.StringDtype,Literal[builtins.str],Type[numpy.str_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]í
ÅUnion[Type[builtins.str],Literal[builtins.str],pandas.core.arrays.string_.StringDtype,Literal[builtins.str],Type[numpy.str_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]:
Type[builtins.str]
builtins.str"builtins.str"type7
Literal[builtins.str]	
builtins.str"builtins.strP
&pandas.core.arrays.string_.StringDtype"&pandas.core.arrays.string_.StringDtype7
Literal[builtins.str]	
builtins.str"builtins.str4
Type[numpy.str_]

numpy.str_"
numpy.str_"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.StrDtypeArg**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadXÀ"
astype pandas.core.series.Series.astype"h
)pandas.core.series.Series[builtins.bytes] 
builtins.bytes"builtins.bytes"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ﬂ
dtype”
”TypeAlias[Union[Type[builtins.bytes],Literal[builtins.str],Type[numpy.bytes_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]⁄
»Union[Type[builtins.bytes],Literal[builtins.str],Type[numpy.bytes_],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]@
Type[builtins.bytes] 
builtins.bytes"builtins.bytes"type7
Literal[builtins.str]	
builtins.str"builtins.str:
Type[numpy.bytes_]
numpy.bytes_"numpy.bytes_"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.BytesDtypeArg**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadXº9
astype pandas.core.series.Series.astype"h
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*–
dtypeƒ
…TypeAlias[Union[Type[builtins.float],Literal[builtins.str],pandas.core.arrays.floating.Float32Dtype,pandas.core.arrays.floating.Float64Dtype,Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[TypeAlias[Any]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]’
æUnion[Type[builtins.float],Literal[builtins.str],pandas.core.arrays.floating.Float32Dtype,pandas.core.arrays.floating.Float64Dtype,Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[TypeAlias[Any]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.floating[Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]@
Type[builtins.float] 
builtins.float"builtins.float"type7
Literal[builtins.str]	
builtins.str"builtins.strT
(pandas.core.arrays.floating.Float32Dtype"(pandas.core.arrays.floating.Float32DtypeT
(pandas.core.arrays.floating.Float64Dtype"(pandas.core.arrays.floating.Float64Dtype7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strú
$Type[numpy.floating[TypeAlias[Any]]]l
numpy.floating[TypeAlias[Any]]:
TypeAlias[Any]
Any"numpy._typing._nbit._NBitHalf"numpy.floating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
Type[numpy.floating[Unknown]]+
numpy.floating[Unknown] "numpy.floating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
Type[numpy.floating[Unknown]]+
numpy.floating[Unknown] "numpy.floating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
Type[numpy.floating[Unknown]]+
numpy.floating[Unknown] "numpy.floating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FloatDtypeArg**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX±0
astype pandas.core.series.Series.astype"n
+pandas.core.series.Series[builtins.complex]$
builtins.complex"builtins.complex"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ø
dtype≥
¬TypeAlias[Union[Type[builtins.complex],Literal[builtins.str],Type[numpy.complexfloating[TypeAlias[Any],Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]…
∑Union[Type[builtins.complex],Literal[builtins.str],Type[numpy.complexfloating[TypeAlias[Any],Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Type[numpy.complexfloating[Unknown,Unknown]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]F
Type[builtins.complex]$
builtins.complex"builtins.complex"type7
Literal[builtins.str]	
builtins.str"builtins.str∆
3Type[numpy.complexfloating[TypeAlias[Any],Unknown]]Ü
-numpy.complexfloating[TypeAlias[Any],Unknown]<
TypeAlias[Any]
Any"numpy._typing._nbit._NBitSingle "numpy.complexfloating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str{
,Type[numpy.complexfloating[Unknown,Unknown]]C
&numpy.complexfloating[Unknown,Unknown]  "numpy.complexfloating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str{
,Type[numpy.complexfloating[Unknown,Unknown]]C
&numpy.complexfloating[Unknown,Unknown]  "numpy.complexfloating"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ComplexDtypeArg**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadXƒ?
astype pandas.core.series.Series.astype"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¯$
dtypeÏ$
ÖTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Ω
˙Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimedeltaDtypeArg**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadXéA
astype pandas.core.series.Series.astype"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¬&
dtype∂&
±TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]€
¶Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimestampDtypeArg**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX¨
astype pandas.core.series.Series.astype"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*‰
dtypeÿ
RTypeAlias[Union[pandas.core.dtypes.dtypes.CategoricalDtype,Literal[builtins.str]]]ﬁ
GUnion[pandas.core.dtypes.dtypes.CategoricalDtype,Literal[builtins.str]]X
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.CategoryDtypeArg**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadXá(
astype pandas.core.series.Series.astype"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ø
dtype≥
ŒUnion[TypeAlias[Union[Type[builtins.object],Literal[builtins.str],Type[numpy.object_],Literal[builtins.str]]],TypeAlias[Union[Type[numpy.void],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]]]„
gTypeAlias[Union[Type[builtins.object],Literal[builtins.str],Type[numpy.object_],Literal[builtins.str]]]÷
\Union[Type[builtins.object],Literal[builtins.str],Type[numpy.object_],Literal[builtins.str]]C
Type[builtins.object]"
builtins.object"builtins.object"type7
Literal[builtins.str]	
builtins.str"builtins.str=
Type[numpy.object_]
numpy.object_"numpy.object_"type7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.ObjectDtypeArg∆
dTypeAlias[Union[Type[numpy.void],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]æ
YUnion[Type[numpy.void],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]4
Type[numpy.void]

numpy.void"
numpy.void"type7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.VoidDtypeArgP
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype‹
STypeAlias[Union[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]]È
HUnion[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]I
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtypeP
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype"pandas._typing.DtypeObj**
copy
builtins.bool"builtins.bool *ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise 0:typing.overloadX2©P
ffillpandas.core.series.Series.ffill 
ffillpandas.core.series.Series.ffill"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadX±3
ffillpandas.core.series.Series.ffill"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadX2ƒ≤
bfillpandas.core.series.Series.bfill 
bfillpandas.core.series.Series.bfill"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadX±3
bfillpandas.core.series.Series.bfill"Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadXòb
bfillpandas.core.series.Series.bfill"µ
8Union[pandas.core.series.Series[pandas._typing.S1],None]Ï
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ë/
valueÖ/
xUnion[pandas._typing.S1,builtins.dict[Any,Any],pandas.core.series.Series[pandas._typing.S1],pandas.core.frame.DataFrame]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype9
builtins.dict[Any,Any]
Any
Any"builtins.dictÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *-
inplace
builtins.bool"builtins.bool *Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *{
downcastk
"Union[builtins.dict[Any,Any],None]9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None 0:typing.overloadX2œÜ
__add__!pandas.core.series.Series.__add__…
__add__!pandas.core.series.Series.__add__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*JH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries0:typing.overloadX€
__add__!pandas.core.series.Series.__add__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*\Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex0:typing.overloadX’
__add__!pandas.core.series.Series.__add__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:typing.overloadXû<
__add__!pandas.core.series.Series.__add__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*¢$ü$
ÏUnion[builtins.complex,builtins.str,pandas._libs.tslibs.timedeltas.Timedelta,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1],numpy.timedelta64]$
builtins.complex"builtins.complex
builtins.str"builtins.strT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series&
numpy.timedelta64"numpy.timedelta640:typing.overloadX2§?
__and__!pandas.core.series.Series.__and__ß 
__and__!pandas.core.series.Series.__and__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*äá
’Union[builtins.bool,builtins.list[builtins.bool],builtins.list[builtins.int],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.bool]]
builtins.bool"builtins.boolM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.listJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listà
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_boole
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series0:typing.overloadXÀ
__and__!pandas.core.series.Series.__and__"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*±Æ
öUnion[builtins.int,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.int]]
builtins.int"builtins.intä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintb
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series0:typing.overloadX2Ë>
__mul__!pandas.core.series.Series.__mul__≥
__mul__!pandas.core.series.Series.__mul__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≥∞
dUnion[pandas._libs.tslibs.timedeltas.Timedelta,pandas.core.series.TimedeltaSeries,numpy.timedelta64]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltaH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries&
numpy.timedelta64"numpy.timedelta640:typing.overloadXÉ$
__mul__!pandas.core.series.Series.__mul__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*áÑ
ñUnion[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[Any]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series0:typing.overloadX2û?
__or__ pandas.core.series.Series.__or__• 
__or__ pandas.core.series.Series.__or__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*äá
’Union[builtins.bool,builtins.list[builtins.bool],builtins.list[builtins.int],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.bool]]
builtins.bool"builtins.boolM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.listJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listà
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_boole
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series0:typing.overloadX…
__or__ pandas.core.series.Series.__or__"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*±Æ
öUnion[builtins.int,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.int]]
builtins.int"builtins.intä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintb
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series0:typing.overloadX2™?
__rand__"pandas.core.series.Series.__rand__© 
__rand__"pandas.core.series.Series.__rand__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*äá
’Union[builtins.bool,builtins.list[builtins.bool],builtins.list[builtins.int],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.bool]]
builtins.bool"builtins.boolM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.listJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listà
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_boole
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series0:typing.overloadXÕ
__rand__"pandas.core.series.Series.__rand__"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*±Æ
öUnion[builtins.int,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.int]]
builtins.int"builtins.intä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintb
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series0:typing.overloadX2§?
__ror__!pandas.core.series.Series.__ror__ß 
__ror__!pandas.core.series.Series.__ror__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*äá
’Union[builtins.bool,builtins.list[builtins.bool],builtins.list[builtins.int],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.bool]]
builtins.bool"builtins.boolM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.listJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listà
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_boole
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series0:typing.overloadXÀ
__ror__!pandas.core.series.Series.__ror__"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*±Æ
öUnion[builtins.int,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.int]]
builtins.int"builtins.intä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintb
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series0:typing.overloadX2ÛS
__rtruediv__&pandas.core.series.Series.__rtruediv__Û
__rtruediv__&pandas.core.series.Series.__rtruediv__"h
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*JH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadXƒ:
__rtruediv__&pandas.core.series.Series.__rtruediv__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*æ"ª"
§Union[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[pandas._typing.S1]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series0:typing.overloadX2™?
__rxor__"pandas.core.series.Series.__rxor__© 
__rxor__"pandas.core.series.Series.__rxor__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*äá
’Union[builtins.bool,builtins.list[builtins.bool],builtins.list[builtins.int],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.bool]]
builtins.bool"builtins.boolM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.listJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listà
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_boole
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series0:typing.overloadXÕ
__rxor__"pandas.core.series.Series.__rxor__"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*±Æ
öUnion[builtins.int,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.int]]
builtins.int"builtins.intä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintb
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series0:typing.overloadX2ÜK
__sub__!pandas.core.series.Series.__sub__å
__sub__!pandas.core.series.Series.__sub__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*π∂
Cpandas.core.series.Series[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas.core.series.Series*¬ø
íUnion[pandas._libs.tslibs.timedeltas.Timedelta,pandas.core.series.TimedeltaSeries,pandas.core.indexes.timedeltas.TimedeltaIndex,numpy.timedelta64]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltaH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex&
numpy.timedelta64"numpy.timedelta640:typing.overloadXå
__sub__!pandas.core.series.Series.__sub__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*π∂
Cpandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas.core.series.Series*¬ø
íUnion[pandas._libs.tslibs.timedeltas.Timedelta,pandas.core.series.TimedeltaSeries,pandas.core.indexes.timedeltas.TimedeltaIndex,numpy.timedelta64]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltaH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex&
numpy.timedelta64"numpy.timedelta640:typing.overloadX≥
__sub__!pandas.core.series.Series.__sub__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*≥∞
dUnion[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,pandas.core.series.TimestampSeries]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetimeH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries0:typing.overloadXÉ$
__sub__!pandas.core.series.Series.__sub__"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*áÑ
ñUnion[builtins.complex,TypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]],pandas.core.series.Series[Any]]$
builtins.complex"builtins.complex˙
ﬂTypeAlias[Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]]Ó
‘Union[TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],builtins.dict[builtins.str,numpy.ndarray[Any,Any]],builtins.list[Any],builtins.tuple[Any],pandas.core.indexes.base.Index[Any]]≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeú
2builtins.dict[builtins.str,numpy.ndarray[Any,Any]]
builtins.str"builtins.str9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tupleN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index"#pandas.core.series.Series._ListLikeD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series0:typing.overloadX2§?
__xor__!pandas.core.series.Series.__xor__ß 
__xor__!pandas.core.series.Series.__xor__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*äá
’Union[builtins.bool,builtins.list[builtins.bool],builtins.list[builtins.int],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.bool]]
builtins.bool"builtins.boolM
builtins.list[builtins.bool]
builtins.bool"builtins.bool"builtins.listJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listà
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_boole
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series0:typing.overloadXÀ
__xor__!pandas.core.series.Series.__xor__"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*ÔÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*±Æ
öUnion[builtins.int,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],pandas.core.series.Series[builtins.int]]
builtins.int"builtins.intä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintb
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series0:typing.overloadX2àP
rolling!pandas.core.series.Series.rollingÛ'
rolling!pandas.core.series.Series.rolling"¨
Apandas.core.window.rolling.Window[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"!pandas.core.window.rolling.Window*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ä
window˝
{Union[builtins.int,builtins.str,datetime.timedelta,pandas._libs.tslibs.offsets.BaseOffset,pandas.core.indexers.BaseIndexer]
builtins.int"builtins.int
builtins.str"builtins.str(
datetime.timedelta"datetime.timedeltaP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffsetD
 pandas.core.indexers.BaseIndexer" pandas.core.indexers.BaseIndexer*W
min_periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
center
builtins.bool"builtins.bool *N
onD
Union[builtins.str,None]
builtins.str"builtins.str
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *Ó
closedﬂ
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]Ÿ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType
None *P
stepD
Union[builtins.int,None]
builtins.int"builtins.int
None *ù
methodé
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.CalculationMethod **
win_type
builtins.str"builtins.str0:typing.overloadX„'
rolling!pandas.core.series.Series.rolling"Æ
Bpandas.core.window.rolling.Rolling[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series""pandas.core.window.rolling.Rolling*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*ä
window˝
{Union[builtins.int,builtins.str,datetime.timedelta,pandas._libs.tslibs.offsets.BaseOffset,pandas.core.indexers.BaseIndexer]
builtins.int"builtins.int
builtins.str"builtins.str(
datetime.timedelta"datetime.timedeltaP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffsetD
 pandas.core.indexers.BaseIndexer" pandas.core.indexers.BaseIndexer*W
min_periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
center
builtins.bool"builtins.bool *N
onD
Union[builtins.str,None]
builtins.str"builtins.str
None *ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *Ó
closedﬂ
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]Ÿ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType
None *P
stepD
Union[builtins.int,None]
builtins.int"builtins.int
None *ù
methodé
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.CalculationMethod *
win_type
None 0:typing.overloadX2È>
sumpandas.core.series.Series.sumÚ
sumpandas.core.series.Series.sum"
Any*X
selfN
#pandas.core.series.Series[NoReturn]
NoReturn
"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *-
	min_count
builtins.int"builtins.int *
kwargs
Any0:typing.overloadXû
sumpandas.core.series.Series.sum"
builtins.int"builtins.int*o
selfe
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *-
	min_count
builtins.int"builtins.int *
kwargs
Any0:typing.overloadX¨2
sumpandas.core.series.Series.sum"†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None *U
skipnaG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *
level
None *2
numeric_only
builtins.bool"builtins.bool *-
	min_count
builtins.int"builtins.int *
kwargs
Any0:typing.overloadX2Œ¢
rename_axis%pandas.core.series.Series.rename_axisÎP
rename_axis%pandas.core.series.Series.rename_axis"
None*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*‹
mapperÕ
¡Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._typing.ListLike]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object *©
indexõ
˝Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._typing.ListLike,CallableType[builtins.function],builtins.dict[Any,Any],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.objectK
CallableType[builtins.function]&
builtins.function"builtins.function9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None *´
columnsõ
˝Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._typing.ListLike,CallableType[builtins.function],builtins.dict[Any,Any],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.objectK
CallableType[builtins.function]&
builtins.function"builtins.function9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None **
copy
builtins.bool"builtins.bool *G
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool0:typing.overloadX©Q
rename_axis%pandas.core.series.Series.rename_axis"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*˜
selfÏ
,pandas.core.series.Series[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.series.Series*‹
mapperÕ
¡Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._typing.ListLike]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.object *©
indexõ
˝Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._typing.ListLike,CallableType[builtins.function],builtins.dict[Any,Any],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.objectK
CallableType[builtins.function]&
builtins.function"builtins.function9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None *´
columnsõ
˝Union[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._typing.ListLike,CallableType[builtins.function],builtins.dict[Any,Any],None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarP
pandas._typing.ListLike"
builtins.object"builtins.object"builtins.objectK
CallableType[builtins.function]&
builtins.function"builtins.function9
builtins.dict[Any,Any]
Any
Any"builtins.dict
None *Ì
axis‡
IUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]],None]Ü
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex
None **
copy
builtins.bool"builtins.bool *I
inplace:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadXPr8
__hash__"pandas.core.series.Series.__hash__
NonerÑ
aggpandas.core.series.Series.agg^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.functionrR
sparse pandas.core.series.Series.sparse&
builtins.ellipsis"builtins.ellipsis÷¡
Period!pandas._libs.tslibs.period.Period"&pandas._libs.tslibs.period.PeriodMixin*†
__init__*pandas._libs.tslibs.period.Period.__init__"
None*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*§
valueñ
ÉUnion[pandas._libs.tslibs.period.Period,builtins.str,datetime.datetime,datetime.date,pandas._libs.tslibs.timestamps.Timestamp,None]F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period
builtins.str"builtins.str&
datetime.datetime"datetime.datetime
datetime.date"datetime.dateT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp
None * 
freqΩ
?Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset,None]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset
None *S
ordinalD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
yearD
Union[builtins.int,None]
builtins.int"builtins.int
None *Q
monthD
Union[builtins.int,None]
builtins.int"builtins.int
None *S
quarterD
Union[builtins.int,None]
builtins.int"builtins.int
None *O
dayD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
hourD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
minuteD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
secondD
Union[builtins.int,None]
builtins.int"builtins.int
None *≥
day%pandas._libs.tslibs.period.Period.day"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*ø
	dayofweek+pandas._libs.tslibs.period.Period.dayofweek"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*ø
	dayofyear+pandas._libs.tslibs.period.Period.dayofyear"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*√
daysinmonth-pandas._libs.tslibs.period.Period.daysinmonth"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*«
days_in_month/pandas._libs.tslibs.period.Period.days_in_month"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*ı
end_time*pandas._libs.tslibs.period.Period.end_time"T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*È
freq&pandas._libs.tslibs.period.Period.freq"P
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*ª
freqstr)pandas._libs.tslibs.period.Period.freqstr"
builtins.str"builtins.str*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*µ
hour&pandas._libs.tslibs.period.Period.hour"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*π
minute(pandas._libs.tslibs.period.Period.minute"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*∑
month'pandas._libs.tslibs.period.Period.month"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*ª
quarter)pandas._libs.tslibs.period.Period.quarter"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*∑
qyear'pandas._libs.tslibs.period.Period.qyear"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*π
second(pandas._libs.tslibs.period.Period.second"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*ª
ordinal)pandas._libs.tslibs.period.Period.ordinal"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*«
is_leap_year.pandas._libs.tslibs.period.Period.is_leap_year"
builtins.bool"builtins.bool*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*˘

start_time,pandas._libs.tslibs.period.Period.start_time"T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*µ
week&pandas._libs.tslibs.period.Period.week"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*ª
weekday)pandas._libs.tslibs.period.Period.weekday"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*¡

weekofyear,pandas._libs.tslibs.period.Period.weekofyear"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*µ
year&pandas._libs.tslibs.period.Period.year"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*√
day_of_year-pandas._libs.tslibs.period.Period.day_of_year"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*√
day_of_week-pandas._libs.tslibs.period.Period.day_of_week"
builtins.int"builtins.int*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:builtins.property`*¯
asfreq(pandas._libs.tslibs.period.Period.asfreq"F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*π
freqÆ
:Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset*Ì
how·
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")pandas._libs.tslibs.period._PeriodFreqHow *—
now%pandas._libs.tslibs.period.Period.now"F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*Ç
clsy
'Type[pandas._libs.tslibs.period.Period]F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period"type*ª
freqÆ
:Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset 0:builtins.classmethodp*Õ
strftime*pandas._libs.tslibs.period.Period.strftime"
builtins.str"builtins.str*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*%
fmt
builtins.str"builtins.str*¯
to_timestamp.pandas._libs.tslibs.period.Period.to_timestamp"T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*P
selfF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period* 
freqΩ
?Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset,None]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset
None *¬
how∂
´TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]—	
†Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]·
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")pandas._libs.tslibs.period._PeriodFreqHow7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"0pandas._libs.tslibs.period._PeriodToTimestampHow 2∞
__sub__)pandas._libs.tslibs.period.Period.__sub__Ì
__sub__)pandas._libs.tslibs.period.Period.__sub__"F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*èå
»TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.int,pandas._libs.tslibs.offsets.BaseOffset]]í
ΩUnion[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.int,pandas._libs.tslibs.offsets.BaseOffset]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta&
numpy.timedelta64"numpy.timedelta64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64
builtins.int"builtins.intP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset"(pandas._libs.tslibs.period._PeriodAddSub0:typing.overloadXØ
__sub__)pandas._libs.tslibs.period.Period.__sub__"P
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadX≠
__sub__)pandas._libs.tslibs.period.Period.__sub__"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*LJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType0:typing.overloadX∑
__sub__)pandas._libs.tslibs.period.Period.__sub__"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadX£
__sub__)pandas._libs.tslibs.period.Period.__sub__"B
pandas.core.series.PeriodSeries"pandas.core.series.PeriodSeries*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*JH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX«
__sub__)pandas._libs.tslibs.period.Period.__sub__"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadX2…
__add__)pandas._libs.tslibs.period.Period.__add__Ì
__add__)pandas._libs.tslibs.period.Period.__add__"F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*èå
»TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.int,pandas._libs.tslibs.offsets.BaseOffset]]í
ΩUnion[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.int,pandas._libs.tslibs.offsets.BaseOffset]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta&
numpy.timedelta64"numpy.timedelta64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64
builtins.int"builtins.intP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset"(pandas._libs.tslibs.period._PeriodAddSub0:typing.overloadX≠
__add__)pandas._libs.tslibs.period.Period.__add__"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*LJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType0:typing.overloadX∑
__add__)pandas._libs.tslibs.period.Period.__add__"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*PN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index0:typing.overloadX∏
__add__)pandas._libs.tslibs.period.Period.__add__"B
pandas.core.series.PeriodSeries"pandas.core.series.PeriodSeries*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*ﬁ€
IUnion[pandas.core.series.OffsetSeries,pandas.core.series.TimedeltaSeries]B
pandas.core.series.OffsetSeries"pandas.core.series.OffsetSeriesH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX2’
__eq__(pandas._libs.tslibs.period.Period.__eq__˚
__eq__(pandas._libs.tslibs.period.Period.__eq__"
builtins.bool"builtins.bool*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadXÎ
__eq__(pandas._libs.tslibs.period.Period.__eq__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadXæ
__eq__(pandas._libs.tslibs.period.Period.__eq__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*DB
pandas.core.series.PeriodSeries"pandas.core.series.PeriodSeries0:typing.overloadXÛ
__eq__(pandas._libs.tslibs.period.Period.__eq__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*$"
builtins.object"builtins.object0:typing.overloadX2ﬂ	
__ge__(pandas._libs.tslibs.period.Period.__ge__˚
__ge__(pandas._libs.tslibs.period.Period.__ge__"
builtins.bool"builtins.bool*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadXÎ
__ge__(pandas._libs.tslibs.period.Period.__ge__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadXæ
__ge__(pandas._libs.tslibs.period.Period.__ge__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*DB
pandas.core.series.PeriodSeries"pandas.core.series.PeriodSeries0:typing.overloadX2ﬂ	
__gt__(pandas._libs.tslibs.period.Period.__gt__˚
__gt__(pandas._libs.tslibs.period.Period.__gt__"
builtins.bool"builtins.bool*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadXÎ
__gt__(pandas._libs.tslibs.period.Period.__gt__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadXæ
__gt__(pandas._libs.tslibs.period.Period.__gt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*DB
pandas.core.series.PeriodSeries"pandas.core.series.PeriodSeries0:typing.overloadX2ﬂ	
__le__(pandas._libs.tslibs.period.Period.__le__˚
__le__(pandas._libs.tslibs.period.Period.__le__"
builtins.bool"builtins.bool*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadXÎ
__le__(pandas._libs.tslibs.period.Period.__le__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadXæ
__le__(pandas._libs.tslibs.period.Period.__le__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*DB
pandas.core.series.PeriodSeries"pandas.core.series.PeriodSeries0:typing.overloadX2ﬂ	
__lt__(pandas._libs.tslibs.period.Period.__lt__˚
__lt__(pandas._libs.tslibs.period.Period.__lt__"
builtins.bool"builtins.bool*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadXÎ
__lt__(pandas._libs.tslibs.period.Period.__lt__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadXæ
__lt__(pandas._libs.tslibs.period.Period.__lt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*DB
pandas.core.series.PeriodSeries"pandas.core.series.PeriodSeries0:typing.overloadX2’
__ne__(pandas._libs.tslibs.period.Period.__ne__˚
__ne__(pandas._libs.tslibs.period.Period.__ne__"
builtins.bool"builtins.bool*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadXÎ
__ne__(pandas._libs.tslibs.period.Period.__ne__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadXæ
__ne__(pandas._libs.tslibs.period.Period.__ne__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*DB
pandas.core.series.PeriodSeries"pandas.core.series.PeriodSeries0:typing.overloadXÛ
__ne__(pandas._libs.tslibs.period.Period.__ne__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*$"
builtins.object"builtins.object0:typing.overloadX2º
__radd__*pandas._libs.tslibs.period.Period.__radd__Ô
__radd__*pandas._libs.tslibs.period.Period.__radd__"F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*èå
»TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.int,pandas._libs.tslibs.offsets.BaseOffset]]í
ΩUnion[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.int,pandas._libs.tslibs.offsets.BaseOffset]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta&
numpy.timedelta64"numpy.timedelta64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64
builtins.int"builtins.intP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset"(pandas._libs.tslibs.period._PeriodAddSub0:typing.overloadX∑
__radd__*pandas._libs.tslibs.period.Period.__radd__"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*PN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index0:typing.overloadX•
__radd__*pandas._libs.tslibs.period.Period.__radd__"B
pandas.core.series.PeriodSeries"pandas.core.series.PeriodSeries*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*JH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadXØ
__radd__*pandas._libs.tslibs.period.Period.__radd__"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*LJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType0:typing.overloadXÌÇ
	Timedelta(pandas._libs.tslibs.timedeltas.Timedelta"datetime.timedelta*·5
__new__0pandas._libs.tslibs.timedeltas.Timedelta.__new__"±
-pandas._libs.tslibs.timedeltas.Timedelta.SelfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˚
clsÒ
3Type[pandas._libs.tslibs.timedeltas.Timedelta.Self]±
-pandas._libs.tslibs.timedeltas.Timedelta.SelfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"type*‰
value÷
nUnion[builtins.str,builtins.int,pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64]
builtins.str"builtins.str
builtins.int"builtins.intT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta&
numpy.timedelta64"numpy.timedelta64 *¬#
unitµ#
ŸTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ü
ŒUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"3pandas._libs.tslibs.timedeltas.TimeDeltaUnitChoices *Õ
days¿
<Union[builtins.float,numpy.integer[Any],numpy.floating[Any]] 
builtins.float"builtins.float,
numpy.integer[Any]
Any"numpy.integer.
numpy.floating[Any]
Any"numpy.floating *–
seconds¿
<Union[builtins.float,numpy.integer[Any],numpy.floating[Any]] 
builtins.float"builtins.float,
numpy.integer[Any]
Any"numpy.integer.
numpy.floating[Any]
Any"numpy.floating *’
microseconds¿
<Union[builtins.float,numpy.integer[Any],numpy.floating[Any]] 
builtins.float"builtins.float,
numpy.integer[Any]
Any"numpy.integer.
numpy.floating[Any]
Any"numpy.floating *’
milliseconds¿
<Union[builtins.float,numpy.integer[Any],numpy.floating[Any]] 
builtins.float"builtins.float,
numpy.integer[Any]
Any"numpy.integer.
numpy.floating[Any]
Any"numpy.floating *–
minutes¿
<Union[builtins.float,numpy.integer[Any],numpy.floating[Any]] 
builtins.float"builtins.float,
numpy.integer[Any]
Any"numpy.integer.
numpy.floating[Any]
Any"numpy.floating *Œ
hours¿
<Union[builtins.float,numpy.integer[Any],numpy.floating[Any]] 
builtins.float"builtins.float,
numpy.integer[Any]
Any"numpy.integer.
numpy.floating[Any]
Any"numpy.floating *Œ
weeks¿
<Union[builtins.float,numpy.integer[Any],numpy.floating[Any]] 
builtins.float"builtins.float,
numpy.integer[Any]
Any"numpy.integer.
numpy.floating[Any]
Any"numpy.floating * 
days-pandas._libs.tslibs.timedeltas.Timedelta.days"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:builtins.property`*ÿ
nanoseconds4pandas._libs.tslibs.timedeltas.Timedelta.nanoseconds"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:builtins.property`*–
seconds0pandas._libs.tslibs.timedeltas.Timedelta.seconds"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:builtins.property`*⁄
microseconds5pandas._libs.tslibs.timedeltas.Timedelta.microseconds"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:builtins.property`*…
total_seconds6pandas._libs.tslibs.timedeltas.Timedelta.total_seconds" 
builtins.float"builtins.float*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*”
to_pytimedelta7pandas._libs.tslibs.timedeltas.Timedelta.to_pytimedelta"(
datetime.timedelta"datetime.timedelta*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*—
to_timedelta647pandas._libs.tslibs.timedeltas.Timedelta.to_timedelta64"&
numpy.timedelta64"numpy.timedelta64*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*‘
asm8-pandas._libs.tslibs.timedeltas.Timedelta.asm8"&
numpy.timedelta64"numpy.timedelta64*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:builtins.property`*Ê
round.pandas._libs.tslibs.timedeltas.Timedelta.round"±
-pandas._libs.tslibs.timedeltas.Timedelta.SelfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*º
self±
-pandas._libs.tslibs.timedeltas.Timedelta.SelfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*π
freqÆ
:Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset*Ê
floor.pandas._libs.tslibs.timedeltas.Timedelta.floor"±
-pandas._libs.tslibs.timedeltas.Timedelta.SelfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*º
self±
-pandas._libs.tslibs.timedeltas.Timedelta.SelfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*π
freqÆ
:Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset*‰
ceil-pandas._libs.tslibs.timedeltas.Timedelta.ceil"±
-pandas._libs.tslibs.timedeltas.Timedelta.SelfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*º
self±
-pandas._libs.tslibs.timedeltas.Timedelta.SelfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*π
freqÆ
:Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset*‰
resolution_string:pandas._libs.tslibs.timedeltas.Timedelta.resolution_string"
builtins.str"builtins.str*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:builtins.property`*È
__neg__0pandas._libs.tslibs.timedeltas.Timedelta.__neg__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*È
__pos__0pandas._libs.tslibs.timedeltas.Timedelta.__pos__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*È
__abs__0pandas._libs.tslibs.timedeltas.Timedelta.__abs__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˚
__rtruediv__5pandas._libs.tslibs.timedeltas.Timedelta.__rtruediv__" 
builtins.float"builtins.float*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*π∂
fUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,pandas._libs.tslibs.nattype.NaTType](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltaJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*¸

__divmod__3pandas._libs.tslibs.timedeltas.Timedelta.__divmod__"¥
<Tuple[builtins.int,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.intT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta**(
datetime.timedelta"datetime.timedelta*ª
__hash__1pandas._libs.tslibs.timedeltas.Timedelta.__hash__"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*Ω
	isoformat2pandas._libs.tslibs.timedeltas.Timedelta.isoformat"
builtins.str"builtins.str*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*≈
to_numpy1pandas._libs.tslibs.timedeltas.Timedelta.to_numpy"&
numpy.timedelta64"numpy.timedelta64*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ê

components3pandas._libs.tslibs.timedeltas.Timedelta.components"’
lTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]∑
aTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int")pandas._libs.tslibs.timedeltas.Components*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta0:builtins.property`*‡
view-pandas._libs.tslibs.timedeltas.Timedelta.view""
builtins.object"builtins.object*^
selfT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*§

dtypeñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike 2À+
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__Ñ
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadX˛
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˝˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:typing.overloadX¬
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*LJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType0:typing.overloadX∫
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadXÍ
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"
datetime.date"datetime.date*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta* 
datetime.date"datetime.date0:typing.overloadXŒ
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadX‚
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*\Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex0:typing.overloadX∑
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadX∑
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXÍ
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadXæ
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*JH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadXæ
__add__0pandas._libs.tslibs.timedeltas.Timedelta.__add__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*JH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries0:typing.overloadX2Ú
__radd__1pandas._libs.tslibs.timedeltas.Timedelta.__radd__®
__radd__1pandas._libs.tslibs.timedeltas.Timedelta.__radd__"T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*&$
numpy.datetime64"numpy.datetime640:typing.overloadXÜ
__radd__1pandas._libs.tslibs.timedeltas.Timedelta.__radd__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadXƒ
__radd__1pandas._libs.tslibs.timedeltas.Timedelta.__radd__"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*LJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType0:typing.overloadXπ
__radd__1pandas._libs.tslibs.timedeltas.Timedelta.__radd__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXπ
__radd__1pandas._libs.tslibs.timedeltas.Timedelta.__radd__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXÏ
__radd__1pandas._libs.tslibs.timedeltas.Timedelta.__radd__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadX–
__radd__1pandas._libs.tslibs.timedeltas.Timedelta.__radd__"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadX2ù
__sub__0pandas._libs.tslibs.timedeltas.Timedelta.__sub__Ñ
__sub__0pandas._libs.tslibs.timedeltas.Timedelta.__sub__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadX¬
__sub__0pandas._libs.tslibs.timedeltas.Timedelta.__sub__"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*LJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType0:typing.overloadX∑
__sub__0pandas._libs.tslibs.timedeltas.Timedelta.__sub__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXÍ
__sub__0pandas._libs.tslibs.timedeltas.Timedelta.__sub__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadXÏ
__sub__0pandas._libs.tslibs.timedeltas.Timedelta.__sub__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˜Ù
mUnion[pandas.core.series.TimedeltaSeries,pandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]]H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries∂
Cpandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas.core.series.Series0:typing.overloadX2∂$
__rsub__1pandas._libs.tslibs.timedeltas.Timedelta.__rsub__Ü
__rsub__1pandas._libs.tslibs.timedeltas.Timedelta.__rsub__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadX∆
__rsub__1pandas._libs.tslibs.timedeltas.Timedelta.__rsub__"T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*√¿
@Union[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp$
numpy.datetime64"numpy.datetime640:typing.overloadXƒ
__rsub__1pandas._libs.tslibs.timedeltas.Timedelta.__rsub__"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*LJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType0:typing.overloadXº
__rsub__1pandas._libs.tslibs.timedeltas.Timedelta.__rsub__"F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*HF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period0:typing.overloadX–
__rsub__1pandas._libs.tslibs.timedeltas.Timedelta.__rsub__"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*RP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadX‰
__rsub__1pandas._libs.tslibs.timedeltas.Timedelta.__rsub__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*\Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex0:typing.overloadXπ
__rsub__1pandas._libs.tslibs.timedeltas.Timedelta.__rsub__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXπ
__rsub__1pandas._libs.tslibs.timedeltas.Timedelta.__rsub__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXÏ
__rsub__1pandas._libs.tslibs.timedeltas.Timedelta.__rsub__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadX2ö
__mul__0pandas._libs.tslibs.timedeltas.Timedelta.__mul__¢
__mul__0pandas._libs.tslibs.timedeltas.Timedelta.__mul__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*" 
builtins.float"builtins.float0:typing.overloadX¢
__mul__0pandas._libs.tslibs.timedeltas.Timedelta.__mul__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÒÓ
bUnion[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray 0:typing.overloadXÿ
__mul__0pandas._libs.tslibs.timedeltas.Timedelta.__mul__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*db
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series0:typing.overloadXﬁ
__mul__0pandas._libs.tslibs.timedeltas.Timedelta.__mul__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*jh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series0:typing.overloadX÷
__mul__0pandas._libs.tslibs.timedeltas.Timedelta.__mul__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*À»
bUnion[pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]]l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index0:typing.overloadX2§
__rmul__1pandas._libs.tslibs.timedeltas.Timedelta.__rmul__§
__rmul__1pandas._libs.tslibs.timedeltas.Timedelta.__rmul__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*" 
builtins.float"builtins.float0:typing.overloadX¢
__rmul__1pandas._libs.tslibs.timedeltas.Timedelta.__rmul__"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*;9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray0:typing.overloadX⁄
__rmul__1pandas._libs.tslibs.timedeltas.Timedelta.__rmul__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*db
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series0:typing.overloadX‡
__rmul__1pandas._libs.tslibs.timedeltas.Timedelta.__rmul__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*jh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series0:typing.overloadXÿ
__rmul__1pandas._libs.tslibs.timedeltas.Timedelta.__rmul__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*À»
bUnion[pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]]l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index0:typing.overloadX2æ&
__floordiv__5pandas._libs.tslibs.timedeltas.Timedelta.__floordiv__÷
__floordiv__5pandas._libs.tslibs.timedeltas.Timedelta.__floordiv__"
builtins.int"builtins.int*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadX¨
__floordiv__5pandas._libs.tslibs.timedeltas.Timedelta.__floordiv__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*" 
builtins.float"builtins.float0:typing.overloadX¨
__floordiv__5pandas._libs.tslibs.timedeltas.Timedelta.__floordiv__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÒÓ
bUnion[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray 0:typing.overloadX¡
__floordiv__5pandas._libs.tslibs.timedeltas.Timedelta.__floordiv__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadX‡
__floordiv__5pandas._libs.tslibs.timedeltas.Timedelta.__floordiv__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*À»
bUnion[pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]]l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index0:typing.overloadX‚
__floordiv__5pandas._libs.tslibs.timedeltas.Timedelta.__floordiv__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*db
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series0:typing.overloadXË
__floordiv__5pandas._libs.tslibs.timedeltas.Timedelta.__floordiv__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*jh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series0:typing.overloadX‚
__floordiv__5pandas._libs.tslibs.timedeltas.Timedelta.__floordiv__"b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*JH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX„
__floordiv__5pandas._libs.tslibs.timedeltas.Timedelta.__floordiv__" 
builtins.float"builtins.float*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*åâ
/Union[pandas._libs.tslibs.nattype.NaTType,None]J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType
None0:typing.overloadX2¡
__rfloordiv__6pandas._libs.tslibs.timedeltas.Timedelta.__rfloordiv__…
__rfloordiv__6pandas._libs.tslibs.timedeltas.Timedelta.__rfloordiv__"
builtins.int"builtins.int*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÙÒ
OUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,builtins.str](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta
builtins.str"builtins.str0:typing.overloadXÂ
__rfloordiv__6pandas._libs.tslibs.timedeltas.Timedelta.__rfloordiv__" 
builtins.float"builtins.float*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*åâ
/Union[pandas._libs.tslibs.nattype.NaTType,None]J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType
None0:typing.overloadX√
__rfloordiv__6pandas._libs.tslibs.timedeltas.Timedelta.__rfloordiv__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadX2ƒ
__truediv__4pandas._libs.tslibs.timedeltas.Timedelta.__truediv__é
__truediv__4pandas._libs.tslibs.timedeltas.Timedelta.__truediv__" 
builtins.float"builtins.float*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*π∂
fUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,pandas._libs.tslibs.nattype.NaTType](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltaJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType0:typing.overloadX™
__truediv__4pandas._libs.tslibs.timedeltas.Timedelta.__truediv__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*" 
builtins.float"builtins.float0:typing.overloadX™
__truediv__4pandas._libs.tslibs.timedeltas.Timedelta.__truediv__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÒÓ
bUnion[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray 0:typing.overloadXÊ
__truediv__4pandas._libs.tslibs.timedeltas.Timedelta.__truediv__"h
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*JH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX‡
__truediv__4pandas._libs.tslibs.timedeltas.Timedelta.__truediv__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*db
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Series0:typing.overloadXÊ
__truediv__4pandas._libs.tslibs.timedeltas.Timedelta.__truediv__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*jh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series0:typing.overloadXﬁ
__truediv__4pandas._libs.tslibs.timedeltas.Timedelta.__truediv__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*À»
bUnion[pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]]l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index0:typing.overloadX2≈
__eq__/pandas._libs.tslibs.timedeltas.Timedelta.__eq__Ã
__eq__/pandas._libs.tslibs.timedeltas.Timedelta.__eq__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadXá
__eq__/pandas._libs.tslibs.timedeltas.Timedelta.__eq__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˜Ù
mUnion[pandas.core.series.TimedeltaSeries,pandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]]H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries∂
Cpandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas.core.series.Series0:typing.overloadX•	
__eq__/pandas._libs.tslibs.timedeltas.Timedelta.__eq__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ˆÛ
àUnion[pandas.core.indexes.timedeltas.TimedeltaIndex,TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndexÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXà
__eq__/pandas._libs.tslibs.timedeltas.Timedelta.__eq__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*$"
builtins.object"builtins.object0:typing.overloadX2≈
__ne__/pandas._libs.tslibs.timedeltas.Timedelta.__ne__Ã
__ne__/pandas._libs.tslibs.timedeltas.Timedelta.__ne__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadXá
__ne__/pandas._libs.tslibs.timedeltas.Timedelta.__ne__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˜Ù
mUnion[pandas.core.series.TimedeltaSeries,pandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]]H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries∂
Cpandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas.core.series.Series0:typing.overloadX•	
__ne__/pandas._libs.tslibs.timedeltas.Timedelta.__ne__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ˆÛ
àUnion[pandas.core.indexes.timedeltas.TimedeltaIndex,TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndexÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXà
__ne__/pandas._libs.tslibs.timedeltas.Timedelta.__ne__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*$"
builtins.object"builtins.object0:typing.overloadX2¬
__mod__0pandas._libs.tslibs.timedeltas.Timedelta.__mod__™
__mod__0pandas._libs.tslibs.timedeltas.Timedelta.__mod__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta**(
datetime.timedelta"datetime.timedelta0:typing.overloadX¢
__mod__0pandas._libs.tslibs.timedeltas.Timedelta.__mod__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*" 
builtins.float"builtins.float0:typing.overloadX¢
__mod__0pandas._libs.tslibs.timedeltas.Timedelta.__mod__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*≠™
XUnion[pandas.core.series.Series[builtins.int],pandas.core.series.Series[builtins.float]]b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.Series0:typing.overloadX÷
__mod__0pandas._libs.tslibs.timedeltas.Timedelta.__mod__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*À»
bUnion[pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]]l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index0:typing.overloadX¢
__mod__0pandas._libs.tslibs.timedeltas.Timedelta.__mod__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÒÓ
bUnion[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray 0:typing.overloadXè
__mod__0pandas._libs.tslibs.timedeltas.Timedelta.__mod__"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*öó
{Union[pandas.core.series.Series[builtins.int],pandas.core.series.Series[builtins.float],pandas.core.series.TimedeltaSeries]b
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.SeriesH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX2∫
__le__/pandas._libs.tslibs.timedeltas.Timedelta.__le__Ã
__le__/pandas._libs.tslibs.timedeltas.Timedelta.__le__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadX•	
__le__/pandas._libs.tslibs.timedeltas.Timedelta.__le__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ˆÛ
àUnion[pandas.core.indexes.timedeltas.TimedeltaIndex,TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndexÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXá
__le__/pandas._libs.tslibs.timedeltas.Timedelta.__le__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˜Ù
mUnion[pandas.core.series.TimedeltaSeries,pandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]]H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries∂
Cpandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas.core.series.Series0:typing.overloadX2∫
__lt__/pandas._libs.tslibs.timedeltas.Timedelta.__lt__Ã
__lt__/pandas._libs.tslibs.timedeltas.Timedelta.__lt__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadX•	
__lt__/pandas._libs.tslibs.timedeltas.Timedelta.__lt__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ˆÛ
àUnion[pandas.core.indexes.timedeltas.TimedeltaIndex,TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndexÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXá
__lt__/pandas._libs.tslibs.timedeltas.Timedelta.__lt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˜Ù
mUnion[pandas.core.series.TimedeltaSeries,pandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]]H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries∂
Cpandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas.core.series.Series0:typing.overloadX2∫
__ge__/pandas._libs.tslibs.timedeltas.Timedelta.__ge__Ã
__ge__/pandas._libs.tslibs.timedeltas.Timedelta.__ge__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadX•	
__ge__/pandas._libs.tslibs.timedeltas.Timedelta.__ge__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ˆÛ
àUnion[pandas.core.indexes.timedeltas.TimedeltaIndex,TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndexÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXá
__ge__/pandas._libs.tslibs.timedeltas.Timedelta.__ge__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˜Ù
mUnion[pandas.core.series.TimedeltaSeries,pandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]]H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries∂
Cpandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas.core.series.Series0:typing.overloadX2∫
__gt__/pandas._libs.tslibs.timedeltas.Timedelta.__gt__Ã
__gt__/pandas._libs.tslibs.timedeltas.Timedelta.__gt__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ÉÄ
TUnion[datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64](
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta640:typing.overloadX•	
__gt__/pandas._libs.tslibs.timedeltas.Timedelta.__gt__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*ˆÛ
àUnion[pandas.core.indexes.timedeltas.TimedeltaIndex,TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndexÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXá
__gt__/pandas._libs.tslibs.timedeltas.Timedelta.__gt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*˜Ù
mUnion[pandas.core.series.TimedeltaSeries,pandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]]H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries∂
Cpandas.core.series.Series[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas.core.series.Series0:typing.overloadXrâ
min,pandas._libs.tslibs.timedeltas.Timedelta.minT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedeltarâ
max,pandas._libs.tslibs.timedeltas.Timedelta.maxT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedeltaró

resolution3pandas._libs.tslibs.timedeltas.Timedelta.resolutionT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltarU
value.pandas._libs.tslibs.timedeltas.Timedelta.value
builtins.int"builtins.intâé
	Timestamp(pandas._libs.tslibs.timestamps.Timestamp"datetime.datetime*≤
__new__0pandas._libs.tslibs.timestamps.Timestamp.__new__"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˚
clsÒ
3Type[pandas._libs.tslibs.timestamps.Timestamp.Self]±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"type*◊
ts_input∆
fUnion[numpy.integer[Any],builtins.float,builtins.str,datetime.date,datetime.datetime,numpy.datetime64],
numpy.integer[Any]
Any"numpy.integer 
builtins.float"builtins.float
builtins.str"builtins.str
datetime.date"datetime.date&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64 *ı
freqË
LUnion[builtins.int,builtins.str,pandas._libs.tslibs.offsets.BaseOffset,None]
builtins.int"builtins.int
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset
None *Æ
tz£
5Union[builtins.str,datetime.tzinfo,builtins.int,None]
builtins.str"builtins.str"
datetime.tzinfo"datetime.tzinfo
builtins.int"builtins.int
None *{
unito
%Union[builtins.str,builtins.int,None]
builtins.str"builtins.str
builtins.int"builtins.int
None *P
yearD
Union[builtins.int,None]
builtins.int"builtins.int
None *Q
monthD
Union[builtins.int,None]
builtins.int"builtins.int
None *O
dayD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
hourD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
minuteD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
secondD
Union[builtins.int,None]
builtins.int"builtins.int
None *W
microsecondD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

nanosecondD
Union[builtins.int,None]
builtins.int"builtins.int
None *[
tzinfoM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None *ƒ
fold∑
7Union[Literal[builtins.int],Literal[builtins.int],None]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int
None * 
year-pandas._libs.tslibs.timestamps.Timestamp.year"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*Ã
month.pandas._libs.tslibs.timestamps.Timestamp.month"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*»
day,pandas._libs.tslibs.timestamps.Timestamp.day"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`* 
hour-pandas._libs.tslibs.timestamps.Timestamp.hour"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*Œ
minute/pandas._libs.tslibs.timestamps.Timestamp.minute"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*Œ
second/pandas._libs.tslibs.timestamps.Timestamp.second"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*ÿ
microsecond4pandas._libs.tslibs.timestamps.Timestamp.microsecond"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*÷

nanosecond3pandas._libs.tslibs.timestamps.Timestamp.nanosecond"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*ˇ
tzinfo/pandas._libs.tslibs.timestamps.Timestamp.tzinfo"M
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*˜
tz+pandas._libs.tslibs.timestamps.Timestamp.tz"M
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`* 
fold-pandas._libs.tslibs.timestamps.Timestamp.fold"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*¡
fromtimestamp6pandas._libs.tslibs.timestamps.Timestamp.fromtimestamp"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˚
clsÒ
3Type[pandas._libs.tslibs.timestamps.Timestamp.Self]±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"type*'
t 
builtins.float"builtins.float*Ç
tzx
(Union[datetime.tzinfo,builtins.str,None]"
datetime.tzinfo"datetime.tzinfo
builtins.str"builtins.str
None 0:builtins.classmethodp*√
utcfromtimestamp9pandas._libs.tslibs.timestamps.Timestamp.utcfromtimestamp"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˚
clsÒ
3Type[pandas._libs.tslibs.timestamps.Timestamp.Self]±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"type*(
ts 
builtins.float"builtins.float0:builtins.classmethodp*à
today.pandas._libs.tslibs.timestamps.Timestamp.today"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˚
clsÒ
3Type[pandas._libs.tslibs.timestamps.Timestamp.Self]±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"type*Ç
tzx
(Union[datetime.tzinfo,builtins.str,None]"
datetime.tzinfo"datetime.tzinfo
builtins.str"builtins.str
None 0:builtins.classmethodp*’
fromordinal4pandas._libs.tslibs.timestamps.Timestamp.fromordinal"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˚
clsÒ
3Type[pandas._libs.tslibs.timestamps.Timestamp.Self]±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"type*)
ordinal
builtins.int"builtins.int*
freq
None *Ç
tzx
(Union[datetime.tzinfo,builtins.str,None]"
datetime.tzinfo"datetime.tzinfo
builtins.str"builtins.str
None 0:builtins.classmethodp*Ñ
now,pandas._libs.tslibs.timestamps.Timestamp.now"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˚
clsÒ
3Type[pandas._libs.tslibs.timestamps.Timestamp.Self]±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"type*Ç
tzx
(Union[datetime.tzinfo,builtins.str,None]"
datetime.tzinfo"datetime.tzinfo
builtins.str"builtins.str
None 0:builtins.classmethodp*Ö
utcnow/pandas._libs.tslibs.timestamps.Timestamp.utcnow"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˚
clsÒ
3Type[pandas._libs.tslibs.timestamps.Timestamp.Self]±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"type0:builtins.classmethodp*Ï
combine0pandas._libs.tslibs.timestamps.Timestamp.combine"&
datetime.datetime"datetime.datetime*ò
clsé
.Type[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"type*(
date
datetime.date"datetime.date*(
time
datetime.time"datetime.time0:builtins.classmethodp*¬
fromisoformat6pandas._libs.tslibs.timestamps.Timestamp.fromisoformat"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˚
clsÒ
3Type[pandas._libs.tslibs.timestamps.Timestamp.Self]±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"type*-
date_string
builtins.str"builtins.str0:builtins.classmethodp*Â
strftime1pandas._libs.tslibs.timestamps.Timestamp.strftime"
builtins.str"builtins.str*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*(
format
builtins.str"builtins.str*Ê

__format__3pandas._libs.tslibs.timestamps.Timestamp.__format__"
builtins.str"builtins.str*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*%
fmt
builtins.str"builtins.str*Ω
	toordinal2pandas._libs.tslibs.timestamps.Timestamp.toordinal"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*œ
	timetuple2pandas._libs.tslibs.timestamps.Timestamp.timetuple"≠
ÜTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]ç
{Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"time.struct_time*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*¡
	timestamp2pandas._libs.tslibs.timestamps.Timestamp.timestamp" 
builtins.float"builtins.float*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*’
utctimetuple5pandas._libs.tslibs.timestamps.Timestamp.utctimetuple"≠
ÜTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]]ç
{Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"time.struct_time*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*µ
date-pandas._libs.tslibs.timestamps.Timestamp.date"
datetime.date"datetime.date*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*µ
time-pandas._libs.tslibs.timestamps.Timestamp.time"
datetime.time"datetime.time*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*π
timetz/pandas._libs.tslibs.timestamps.Timestamp.timetz"
datetime.time"datetime.time*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*ﬁ
replace0pandas._libs.tslibs.timestamps.Timestamp.replace"T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*P
yearD
Union[builtins.int,None]
builtins.int"builtins.int
None *Q
monthD
Union[builtins.int,None]
builtins.int"builtins.int
None *O
dayD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
hourD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
minuteD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
secondD
Union[builtins.int,None]
builtins.int"builtins.int
None *W
microsecondD
Union[builtins.int,None]
builtins.int"builtins.int
None *[
tzinfoM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None *ƒ
fold∑
7Union[Literal[builtins.int],Literal[builtins.int],None]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int
None *ç

astimezone3pandas._libs.tslibs.timestamps.Timestamp.astimezone"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*º
self±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*W
tzM
Union[datetime.tzinfo,None]"
datetime.tzinfo"datetime.tzinfo
None *µ
ctime.pandas._libs.tslibs.timestamps.Timestamp.ctime"
builtins.str"builtins.str*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*î
	isoformat2pandas._libs.tslibs.timestamps.Timestamp.isoformat"
builtins.str"builtins.str*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*'
sep
builtins.str"builtins.str *,
timespec
builtins.str"builtins.str *π
strptime1pandas._libs.tslibs.timestamps.Timestamp.strptime"
NoReturn
*ò
clsé
.Type[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"type*
date_string
NoReturn
*
format
NoReturn
0:builtins.classmethodp*˜
	utcoffset2pandas._libs.tslibs.timestamps.Timestamp.utcoffset"V
Union[datetime.timedelta,None](
datetime.timedelta"datetime.timedelta
None*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*ﬂ
tzname/pandas._libs.tslibs.timestamps.Timestamp.tzname"D
Union[builtins.str,None]
builtins.str"builtins.str
None*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*Î
dst,pandas._libs.tslibs.timestamps.Timestamp.dst"V
Union[datetime.timedelta,None](
datetime.timedelta"datetime.timedelta
None*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*ª
__hash__1pandas._libs.tslibs.timestamps.Timestamp.__hash__"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*π
weekday0pandas._libs.tslibs.timestamps.Timestamp.weekday"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*ø

isoweekday3pandas._libs.tslibs.timestamps.Timestamp.isoweekday"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*°
isocalendar4pandas._libs.tslibs.timestamps.Timestamp.isocalendar"˚
8TypeAlias[Tuple[builtins.int,builtins.int,builtins.int]]ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int"/pandas._libs.tslibs.timestamps._IsoCalendarDate*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*‹
is_leap_year5pandas._libs.tslibs.timestamps.Timestamp.is_leap_year"
builtins.bool"builtins.bool*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*‡
is_month_start7pandas._libs.tslibs.timestamps.Timestamp.is_month_start"
builtins.bool"builtins.bool*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*‰
is_quarter_start9pandas._libs.tslibs.timestamps.Timestamp.is_quarter_start"
builtins.bool"builtins.bool*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*ﬁ
is_year_start6pandas._libs.tslibs.timestamps.Timestamp.is_year_start"
builtins.bool"builtins.bool*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*‹
is_month_end5pandas._libs.tslibs.timestamps.Timestamp.is_month_end"
builtins.bool"builtins.bool*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*‡
is_quarter_end7pandas._libs.tslibs.timestamps.Timestamp.is_quarter_end"
builtins.bool"builtins.bool*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*⁄
is_year_end4pandas._libs.tslibs.timestamps.Timestamp.is_year_end"
builtins.bool"builtins.bool*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*˚
to_pydatetime6pandas._libs.tslibs.timestamps.Timestamp.to_pydatetime"&
datetime.datetime"datetime.datetime*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp**
warn
builtins.bool"builtins.bool *Õ
to_datetime646pandas._libs.tslibs.timestamps.Timestamp.to_datetime64"$
numpy.datetime64"numpy.datetime64*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*¥
	to_period2pandas._libs.tslibs.timestamps.Timestamp.to_period"F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp* 
freqΩ
?Union[pandas._libs.tslibs.offsets.BaseOffset,builtins.str,None]P
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset
builtins.str"builtins.str
None *‘
to_julian_date7pandas._libs.tslibs.timestamps.Timestamp.to_julian_date"®
/TypeAlias[numpy.floating[numpy._typing._64Bit]]d
$numpy.floating[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.floating"numpy.float64*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*“
asm8-pandas._libs.tslibs.timestamps.Timestamp.asm8"$
numpy.datetime64"numpy.datetime64*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*∑

tz_convert3pandas._libs.tslibs.timestamps.Timestamp.tz_convert"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*º
self±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*Ä
tzx
(Union[datetime.tzinfo,builtins.str,None]"
datetime.tzinfo"datetime.tzinfo
builtins.str"builtins.str
None*ï
tz_localize4pandas._libs.tslibs.timestamps.Timestamp.tz_localize"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*º
self±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*Ä
tzx
(Union[datetime.tzinfo,builtins.str,None]"
datetime.tzinfo"datetime.tzinfo
builtins.str"builtins.str
None*Â
	ambiguous”
KTypeAlias[Union[builtins.bool,Literal[builtins.str],Literal[builtins.str]]]÷
@Union[builtins.bool,Literal[builtins.str],Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")pandas._libs.tslibs.timestamps._Ambiguous *Ò
nonexistent›
•TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta]]É
öUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta"+pandas._libs.tslibs.timestamps._Nonexistent *≤
	normalize2pandas._libs.tslibs.timestamps.Timestamp.normalize"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*º
self±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*Æ
round.pandas._libs.tslibs.timestamps.Timestamp.round"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*º
self±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*&
freq
builtins.str"builtins.str*Â
	ambiguous”
KTypeAlias[Union[builtins.bool,Literal[builtins.str],Literal[builtins.str]]]÷
@Union[builtins.bool,Literal[builtins.str],Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")pandas._libs.tslibs.timestamps._Ambiguous *Ò
nonexistent›
•TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta]]É
öUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta"+pandas._libs.tslibs.timestamps._Nonexistent *Æ
floor.pandas._libs.tslibs.timestamps.Timestamp.floor"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*º
self±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*&
freq
builtins.str"builtins.str*Â
	ambiguous”
KTypeAlias[Union[builtins.bool,Literal[builtins.str],Literal[builtins.str]]]÷
@Union[builtins.bool,Literal[builtins.str],Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")pandas._libs.tslibs.timestamps._Ambiguous *Ò
nonexistent›
•TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta]]É
öUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta"+pandas._libs.tslibs.timestamps._Nonexistent *¨
ceil-pandas._libs.tslibs.timestamps.Timestamp.ceil"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*º
self±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*&
freq
builtins.str"builtins.str*Â
	ambiguous”
KTypeAlias[Union[builtins.bool,Literal[builtins.str],Literal[builtins.str]]]÷
@Union[builtins.bool,Literal[builtins.str],Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")pandas._libs.tslibs.timestamps._Ambiguous *Ò
nonexistent›
•TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta]]É
öUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.strT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta"+pandas._libs.tslibs.timestamps._Nonexistent *è
day_name1pandas._libs.tslibs.timestamps.Timestamp.day_name"
builtins.str"builtins.str*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*R
localeD
Union[builtins.str,None]
builtins.str"builtins.str
None *ì

month_name3pandas._libs.tslibs.timestamps.Timestamp.month_name"
builtins.str"builtins.str*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*R
localeD
Union[builtins.str,None]
builtins.str"builtins.str
None *ÿ
day_of_week4pandas._libs.tslibs.timestamps.Timestamp.day_of_week"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*‘
	dayofweek2pandas._libs.tslibs.timestamps.Timestamp.dayofweek"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*ÿ
day_of_year4pandas._libs.tslibs.timestamps.Timestamp.day_of_year"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*‘
	dayofyear2pandas._libs.tslibs.timestamps.Timestamp.dayofyear"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*÷

weekofyear3pandas._libs.tslibs.timestamps.Timestamp.weekofyear"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*–
quarter0pandas._libs.tslibs.timestamps.Timestamp.quarter"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`* 
week-pandas._libs.tslibs.timestamps.Timestamp.week"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*√
to_numpy1pandas._libs.tslibs.timestamps.Timestamp.to_numpy"$
numpy.datetime64"numpy.datetime64*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*‹
days_in_month6pandas._libs.tslibs.timestamps.Timestamp.days_in_month"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`*ÿ
daysinmonth4pandas._libs.tslibs.timestamps.Timestamp.daysinmonth"
builtins.int"builtins.int*^
selfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp0:builtins.property`2
__le__/pandas._libs.tslibs.timestamps.Timestamp.__le__∆
__le__/pandas._libs.tslibs.timestamps.Timestamp.__le__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˝˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,numpy.datetime64]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime640:typing.overloadXè

__le__/pandas._libs.tslibs.timestamps.Timestamp.__le__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*€ÿ
~Union[pandas.core.indexes.base.Index[Any],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXŸ
__le__/pandas._libs.tslibs.timestamps.Timestamp.__le__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*JH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries0:typing.overloadX2
__lt__/pandas._libs.tslibs.timestamps.Timestamp.__lt__∆
__lt__/pandas._libs.tslibs.timestamps.Timestamp.__lt__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˝˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,numpy.datetime64]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime640:typing.overloadXè

__lt__/pandas._libs.tslibs.timestamps.Timestamp.__lt__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*€ÿ
~Union[pandas.core.indexes.base.Index[Any],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXŸ
__lt__/pandas._libs.tslibs.timestamps.Timestamp.__lt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*JH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries0:typing.overloadX2
__ge__/pandas._libs.tslibs.timestamps.Timestamp.__ge__∆
__ge__/pandas._libs.tslibs.timestamps.Timestamp.__ge__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˝˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,numpy.datetime64]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime640:typing.overloadXè

__ge__/pandas._libs.tslibs.timestamps.Timestamp.__ge__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*€ÿ
~Union[pandas.core.indexes.base.Index[Any],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXŸ
__ge__/pandas._libs.tslibs.timestamps.Timestamp.__ge__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*JH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries0:typing.overloadX2
__gt__/pandas._libs.tslibs.timestamps.Timestamp.__gt__∆
__gt__/pandas._libs.tslibs.timestamps.Timestamp.__gt__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˝˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,numpy.datetime64]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime640:typing.overloadXè

__gt__/pandas._libs.tslibs.timestamps.Timestamp.__gt__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*€ÿ
~Union[pandas.core.indexes.base.Index[Any],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadXŸ
__gt__/pandas._libs.tslibs.timestamps.Timestamp.__gt__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*JH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries0:typing.overloadX2À
__add__0pandas._libs.tslibs.timestamps.Timestamp.__add__∑
__add__0pandas._libs.tslibs.timestamps.Timestamp.__add__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadX©
__add__0pandas._libs.tslibs.timestamps.Timestamp.__add__"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*¥±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*ÎË
LUnion[datetime.timedelta,numpy.timedelta64,pandas._libs.tslibs.offsets.Tick](
datetime.timedelta"datetime.timedelta&
numpy.timedelta64"numpy.timedelta64D
 pandas._libs.tslibs.offsets.Tick" pandas._libs.tslibs.offsets.Tick0:typing.overloadXæ
__add__0pandas._libs.tslibs.timestamps.Timestamp.__add__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*JH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadXÊ
__add__0pandas._libs.tslibs.timestamps.Timestamp.__add__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadX2–
__radd__1pandas._libs.tslibs.timestamps.Timestamp.__radd__È
__radd__1pandas._libs.tslibs.timestamps.Timestamp.__radd__"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*¥±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp**(
datetime.timedelta"datetime.timedelta0:typing.overloadXË
__radd__1pandas._libs.tslibs.timestamps.Timestamp.__radd__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadXπ
__radd__1pandas._libs.tslibs.timestamps.Timestamp.__radd__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadX2Ã
__sub__0pandas._libs.tslibs.timestamps.Timestamp.__sub__˛
__sub__0pandas._libs.tslibs.timestamps.Timestamp.__sub__"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˝˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,numpy.datetime64]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime640:typing.overloadX©
__sub__0pandas._libs.tslibs.timestamps.Timestamp.__sub__"±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*¥±
-pandas._libs.tslibs.timestamps.Timestamp.SelfT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*ÎË
LUnion[datetime.timedelta,numpy.timedelta64,pandas._libs.tslibs.offsets.Tick](
datetime.timedelta"datetime.timedelta&
numpy.timedelta64"numpy.timedelta64D
 pandas._libs.tslibs.offsets.Tick" pandas._libs.tslibs.offsets.Tick0:typing.overloadXÊ
__sub__0pandas._libs.tslibs.timestamps.Timestamp.__sub__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*`^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex0:typing.overloadXæ
__sub__0pandas._libs.tslibs.timestamps.Timestamp.__sub__"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*JH
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries0:typing.overloadX∑
__sub__0pandas._libs.tslibs.timestamps.Timestamp.__sub__"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*ÜÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray0:typing.overloadX2˚
__eq__/pandas._libs.tslibs.timestamps.Timestamp.__eq__∆
__eq__/pandas._libs.tslibs.timestamps.Timestamp.__eq__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˝˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,numpy.datetime64]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime640:typing.overloadXŸ
__eq__/pandas._libs.tslibs.timestamps.Timestamp.__eq__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*JH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries0:typing.overloadXè

__eq__/pandas._libs.tslibs.timestamps.Timestamp.__eq__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*€ÿ
~Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.indexes.base.Index[Any]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index0:typing.overloadXà
__eq__/pandas._libs.tslibs.timestamps.Timestamp.__eq__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*$"
builtins.object"builtins.object0:typing.overloadX2˚
__ne__/pandas._libs.tslibs.timestamps.Timestamp.__ne__∆
__ne__/pandas._libs.tslibs.timestamps.Timestamp.__ne__"
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*˝˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,numpy.datetime64]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime640:typing.overloadXŸ
__ne__/pandas._libs.tslibs.timestamps.Timestamp.__ne__"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*JH
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries0:typing.overloadXè

__ne__/pandas._libs.tslibs.timestamps.Timestamp.__ne__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*€ÿ
~Union[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],pandas.core.indexes.base.Index[Any]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArrayN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index0:typing.overloadXà
__ne__/pandas._libs.tslibs.timestamps.Timestamp.__ne__":
Literal[builtins.bool]	
builtins.bool"builtins.bool*VT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*$"
builtins.object"builtins.object0:typing.overloadXrâ
min,pandas._libs.tslibs.timestamps.Timestamp.minT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamprâ
max,pandas._libs.tslibs.timestamps.Timestamp.maxT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestampró

resolution3pandas._libs.tslibs.timestamps.Timestamp.resolutionT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltarU
value.pandas._libs.tslibs.timestamps.Timestamp.value
builtins.int"builtins.intÉ
CategoricalDtype*pandas.core.dtypes.dtypes.CategoricalDtype".pandas.core.dtypes.dtypes.PandasExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype*í
__init__3pandas.core.dtypes.dtypes.CategoricalDtype.__init__"
None*b
selfX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*∆

categories≥
aUnion[pandas.core.series.Series[Any],pandas.core.indexes.base.Index[Any],builtins.list[Any],None]D
pandas.core.series.Series[Any]
Any"pandas.core.series.SeriesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index,
builtins.list[Any]
Any"builtins.list
None *ô
orderedâ
$TypeAlias[Union[builtins.bool,None]]G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None"pandas._typing.Ordered *é

categories5pandas.core.dtypes.dtypes.CategoricalDtype.categories"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*b
selfX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype0:builtins.property`*ƒ
ordered2pandas.core.dtypes.dtypes.CategoricalDtype.ordered"â
$TypeAlias[Union[builtins.bool,None]]G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None"pandas._typing.Ordered*b
selfX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype0:builtins.property`“	
DatetimeTZDtype)pandas.core.dtypes.dtypes.DatetimeTZDtype".pandas.core.dtypes.dtypes.PandasExtensionDtype*†
__init__2pandas.core.dtypes.dtypes.DatetimeTZDtype.__init__"
None*`
selfV
)pandas.core.dtypes.dtypes.DatetimeTZDtype")pandas.core.dtypes.dtypes.DatetimeTZDtype*C
unit7
Literal[builtins.str]	
builtins.str"builtins.str *Æ
tz£
5Union[builtins.str,builtins.int,datetime.tzinfo,None]
builtins.str"builtins.str
builtins.int"builtins.int"
datetime.tzinfo"datetime.tzinfo
None *Ë
unit.pandas.core.dtypes.dtypes.DatetimeTZDtype.unit"7
Literal[builtins.str]	
builtins.str"builtins.str*`
selfV
)pandas.core.dtypes.dtypes.DatetimeTZDtype")pandas.core.dtypes.dtypes.DatetimeTZDtype0:builtins.property`*œ
tz,pandas.core.dtypes.dtypes.DatetimeTZDtype.tz""
datetime.tzinfo"datetime.tzinfo*`
selfV
)pandas.core.dtypes.dtypes.DatetimeTZDtype")pandas.core.dtypes.dtypes.DatetimeTZDtype0:builtins.property`*É
na_value2pandas.core.dtypes.dtypes.DatetimeTZDtype.na_value"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*`
selfV
)pandas.core.dtypes.dtypes.DatetimeTZDtype")pandas.core.dtypes.dtypes.DatetimeTZDtype0:builtins.property`Û
IntervalDtype'pandas.core.dtypes.dtypes.IntervalDtype".pandas.core.dtypes.dtypes.PandasExtensionDtype*Ä
__init__0pandas.core.dtypes.dtypes.IntervalDtype.__init__"
None*\
selfR
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype*Ÿ
subtype…
ÉUnion[builtins.str,TypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]],None]
builtins.str"builtins.strñ

ÍTypeAlias[Union[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]]]ˇ
ﬂUnion[numpy.dtype[Any],None,builtins.type,numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]],builtins.str,TypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]](
numpy.dtype[Any]
Any"numpy.dtype
None
builtins.type"builtins.typeê
:numpy._typing._dtype_like._SupportsDType[numpy.dtype[Any]](
numpy.dtype[Any]
Any"numpy.dtype"(numpy._typing._dtype_like._SupportsDType
builtins.str"builtins.strì
lTypeAlias[Union[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]]ˆ
aUnion[Tuple[TypeAlias[Any],builtins.int],Unknown,builtins.list[Any],TypeAlias[TypedDict],Unknown]ç
"Tuple[TypeAlias[Any],builtins.int]G
TypeAlias[Any]
Any"*numpy._typing._dtype_like._DTypeLikeNested
builtins.int"builtins.int ,
builtins.list[Any]
Any"builtins.listM
TypeAlias[TypedDict]
	TypedDict"$numpy._typing._dtype_like._DTypeDict "(numpy._typing._dtype_like._VoidDTypeLike"#numpy._typing._dtype_like.DTypeLike
None *Ö
subtype/pandas.core.dtypes.dtypes.IntervalDtype.subtype"T
Union[numpy.dtype[Any],None](
numpy.dtype[Any]
Any"numpy.dtype
None*\
selfR
'pandas.core.dtypes.dtypes.IntervalDtype"'pandas.core.dtypes.dtypes.IntervalDtype0:builtins.property`µ
PeriodDtype%pandas.core.dtypes.dtypes.PeriodDtype".pandas.core.dtypes.dtypes.PandasExtensionDtype*‹
__init__.pandas.core.dtypes.dtypes.PeriodDtype.__init__"
None*X
selfN
%pandas.core.dtypes.dtypes.PeriodDtype"%pandas.core.dtypes.dtypes.PeriodDtype*ª
freqÆ
:Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset *ı
freq*pandas.core.dtypes.dtypes.PeriodDtype.freq"P
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset*X
selfN
%pandas.core.dtypes.dtypes.PeriodDtype"%pandas.core.dtypes.dtypes.PeriodDtype0:builtins.property`*˜
na_value.pandas.core.dtypes.dtypes.PeriodDtype.na_value"J
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*X
selfN
%pandas.core.dtypes.dtypes.PeriodDtype"%pandas.core.dtypes.dtypes.PeriodDtype0:builtins.property`µ	

DateOffset&pandas._libs.tslibs.offsets.DateOffset"/pandas._libs.tslibs.offsets.RelativeDeltaOffset*Õ
__init__/pandas._libs.tslibs.offsets.DateOffset.__init__"
None*Z
selfP
&pandas._libs.tslibs.offsets.DateOffset"&pandas._libs.tslibs.offsets.DateOffset*%
n
builtins.int"builtins.int */
	normalize
builtins.bool"builtins.bool *)
years
builtins.int"builtins.int **
months
builtins.int"builtins.int *)
weeks
builtins.int"builtins.int *(
days
builtins.int"builtins.int *)
hours
builtins.int"builtins.int *+
minutes
builtins.int"builtins.int *+
seconds
builtins.int"builtins.int *0
milliseconds
builtins.int"builtins.int *0
microseconds
builtins.int"builtins.int */
nanoseconds
builtins.int"builtins.int *(
year
builtins.int"builtins.int *)
month
builtins.int"builtins.int *'
day
builtins.int"builtins.int *+
weekday
builtins.int"builtins.int *(
hour
builtins.int"builtins.int **
minute
builtins.int"builtins.int **
second
builtins.int"builtins.int */
microsecond
builtins.int"builtins.int *.

nanosecond
builtins.int"builtins.int ⁄
value_counts#pandas.core.algorithms.value_counts"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*–
values√
ôUnion[TypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]],builtins.list[Any],builtins.tuple[Any]]ƒ
kTypeAlias[Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]]µ
`Union[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any],numpy.ndarray[Any,Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.AnyArrayLike,
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tuple**
sort
builtins.bool"builtins.bool */
	ascending
builtins.bool"builtins.bool */
	normalize
builtins.bool"builtins.bool *P
binsD
Union[builtins.int,None]
builtins.int"builtins.int
None *,
dropna
builtins.bool"builtins.bool ë
arraypandas.core.construction.array"P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray*a
dataW
 typing.Sequence[builtins.object]"
builtins.object"builtins.object"typing.Sequence*Ü
dtype¯
PUnion[builtins.str,numpy.dtype[Any],pandas.core.dtypes.base.ExtensionDtype,None]
builtins.str"builtins.str(
numpy.dtype[Any]
Any"numpy.dtypeP
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype
None **
copy
builtins.bool"builtins.bool Ÿ

date_range(pandas.core.indexes.datetimes.date_range"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*ê
startÇ
ñUnion[builtins.str,TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]],None]
builtins.str"builtins.strº
}TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]]î
rUnion[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]
datetime.date"datetime.date˚
]TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._typing.DatetimeLike""pandas._typing.DateAndDatetimeLike
None *é
endÇ
ñUnion[builtins.str,TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]],None]
builtins.str"builtins.strº
}TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]]î
rUnion[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]
datetime.date"datetime.date˚
]TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._typing.DatetimeLike""pandas._typing.DateAndDatetimeLike
None *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *˜
freqÍ
vUnion[builtins.str,datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,pandas._libs.tslibs.offsets.BaseOffset]
builtins.str"builtins.str(
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltaP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset *s
tzi
#Union[builtins.str,datetime.tzinfo]
builtins.str"builtins.str"
datetime.tzinfo"datetime.tzinfo */
	normalize
builtins.bool"builtins.bool *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *Î
	inclusiveŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType *‚
unit’
cUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None “

period_range'pandas.core.indexes.period.period_range"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*§
startñ
ÉUnion[builtins.str,datetime.datetime,datetime.date,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.period.Period,None]
builtins.str"builtins.str&
datetime.datetime"datetime.datetime
datetime.date"datetime.dateT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period
None *¢
endñ
ÉUnion[builtins.str,datetime.datetime,datetime.date,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.period.Period,None]
builtins.str"builtins.str&
datetime.datetime"datetime.datetime
datetime.date"datetime.dateT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period
None *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None * 
freqΩ
?Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset,None]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset
None *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None õ
timedelta_range.pandas.core.indexes.timedeltas.timedelta_range"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*∫
start¨
∞TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]] 
•Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta&
numpy.timedelta64"numpy.timedelta64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64 
builtins.float"builtins.float
builtins.str"builtins.str"(pandas._typing.TimedeltaConvertibleTypes *∏
end¨
∞TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]] 
•Union[pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,numpy.timedelta64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta&
numpy.timedelta64"numpy.timedelta64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64 
builtins.float"builtins.float
builtins.str"builtins.str"(pandas._typing.TimedeltaConvertibleTypes *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *Ü
freq˘
{Union[builtins.str,pandas._libs.tslibs.offsets.DateOffset,pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,None]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.DateOffset"&pandas._libs.tslibs.offsets.DateOffsetT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta
None *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *∆
closed∑
7Union[Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None ≥
set_eng_float_format-pandas.io.formats.format.set_eng_float_format"
None*,
accuracy
builtins.int"builtins.int *4
use_eng_prefix
builtins.bool"builtins.bool "°
	factorize pandas.core.algorithms.factorize„
	factorize pandas.core.algorithms.factorize"Æ
4Tuple[numpy.ndarray[Any,Any],numpy.ndarray[Any,Any]]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*≥
values¶
3Union[typing.Sequence[Any],numpy.recarray[Any,Any]]0
typing.Sequence[Any]
Any"typing.Sequence;
numpy.recarray[Any,Any]
Any
Any"numpy.recarray**
sort
builtins.bool"builtins.bool *5
use_na_sentinel
builtins.bool"builtins.bool *U
	size_hintD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overloadX¬
	factorize pandas.core.algorithms.factorize"–
ATuple[numpy.ndarray[Any,Any],pandas.core.indexes.base.Index[Any]]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*
values„
IUnion[pandas.core.indexes.base.Index[Any],pandas.core.series.Series[Any]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series**
sort
builtins.bool"builtins.bool *5
use_na_sentinel
builtins.bool"builtins.bool *U
	size_hintD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overloadX∆
	factorize pandas.core.algorithms.factorize"·
HTuple[numpy.ndarray[Any,Any],pandas.core.arrays.categorical.Categorical]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*d
valuesX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical**
sort
builtins.bool"builtins.bool *5
use_na_sentinel
builtins.bool"builtins.bool *U
	size_hintD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overloadX"Â
uniquepandas.core.algorithms.uniqueÏ
uniquepandas.core.algorithms.unique"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*\
valuesP
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex0:typing.overloadX§
uniquepandas.core.algorithms.unique"l
2pandas.core.indexes.category.CategoricalIndex[Any]
Any"-pandas.core.indexes.category.CategoricalIndex*x
valuesl
2pandas.core.indexes.category.CategoricalIndex[Any]
Any"-pandas.core.indexes.category.CategoricalIndex0:typing.overloadX—
uniquepandas.core.algorithms.unique"Å
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*é
valuesÅ
Dpandas.core.indexes.interval.IntervalIndex[pandas._typing.IntervalT]å
pandas._typing.IntervalTN
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex0:typing.overloadX”
uniquepandas.core.algorithms.unique"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*Z
valuesN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index0:typing.overloadX¸
uniquepandas.core.algorithms.unique"X
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical*d
valuesX
*pandas.core.arrays.categorical.Categorical"*pandas.core.arrays.categorical.Categorical0:typing.overloadXÊ
uniquepandas.core.algorithms.unique"’
DUnion[numpy.ndarray[Any,Any],pandas.core.arrays.base.ExtensionArray]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayP
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray*P
valuesD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series0:typing.overloadX§
uniquepandas.core.algorithms.unique"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*™
valuesù
0Union[numpy.ndarray[Any,Any],builtins.list[Any]]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray,
builtins.list[Any]
Any"builtins.list0:typing.overloadXÏ
uniquepandas.core.algorithms.unique"P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray*\
valuesP
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray0:typing.overloadX"÷<
bdate_range)pandas.core.indexes.datetimes.bdate_range˚
bdate_range)pandas.core.indexes.datetimes.bdate_range"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*ê
startÇ
ñUnion[builtins.str,TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]],None]
builtins.str"builtins.strº
}TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]]î
rUnion[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]
datetime.date"datetime.date˚
]TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._typing.DatetimeLike""pandas._typing.DateAndDatetimeLike
None *é
endÇ
ñUnion[builtins.str,TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]],None]
builtins.str"builtins.strº
}TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]]î
rUnion[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]
datetime.date"datetime.date˚
]TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._typing.DatetimeLike""pandas._typing.DateAndDatetimeLike
None *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *˜
freqÍ
vUnion[builtins.str,datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,pandas._libs.tslibs.offsets.BaseOffset]
builtins.str"builtins.str(
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltaP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset *s
tzi
#Union[builtins.str,datetime.tzinfo]
builtins.str"builtins.str"
datetime.tzinfo"datetime.tzinfo */
	normalize
builtins.bool"builtins.bool *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *T
weekmaskD
Union[builtins.str,None]
builtins.str"builtins.str
None *
holidays
None *Î
	inclusiveŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadXù"
bdate_range)pandas.core.indexes.datetimes.bdate_range"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*ê
startÇ
ñUnion[builtins.str,TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]],None]
builtins.str"builtins.strº
}TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]]î
rUnion[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]
datetime.date"datetime.date˚
]TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._typing.DatetimeLike""pandas._typing.DateAndDatetimeLike
None *é
endÇ
ñUnion[builtins.str,TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]],None]
builtins.str"builtins.strº
}TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]]î
rUnion[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]
datetime.date"datetime.date˚
]TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._typing.DatetimeLike""pandas._typing.DateAndDatetimeLike
None *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *ı
freqÍ
vUnion[builtins.str,datetime.timedelta,pandas._libs.tslibs.timedeltas.Timedelta,pandas._libs.tslibs.offsets.BaseOffset]
builtins.str"builtins.str(
datetime.timedelta"datetime.timedeltaT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.TimedeltaP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffset*s
tzi
#Union[builtins.str,datetime.tzinfo]
builtins.str"builtins.str"
datetime.tzinfo"datetime.tzinfo */
	normalize
builtins.bool"builtins.bool *Y
nameM
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None *T
weekmaskD
Union[builtins.str,None]
builtins.str"builtins.str
None *ª
holidays¨
¢typing.Sequence[Union[builtins.str,TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]]]]Û
ëUnion[builtins.str,TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]]]
builtins.str"builtins.strº
}TypeAlias[Union[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]]î
rUnion[datetime.date,TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]]
datetime.date"datetime.date˚
]TypeAlias[Union[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]]˙
RUnion[datetime.datetime,numpy.datetime64,pandas._libs.tslibs.timestamps.Timestamp]&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._typing.DatetimeLike""pandas._typing.DateAndDatetimeLike"typing.Sequence*Î
	inclusiveŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadX"·ì
interval_range+pandas.core.indexes.interval.interval_rangeﬂ
interval_range+pandas.core.indexes.interval.interval_range"Ù
Xpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.int]]l
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*)
start
builtins.int"builtins.int *'
end
builtins.int"builtins.int *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
freqD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadX…
interval_range+pandas.core.indexes.interval.interval_range"Ù
Xpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.int]]l
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*'
start
builtins.int"builtins.int*
end
None *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
freqD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadX…
interval_range+pandas.core.indexes.interval.interval_range"Ù
Xpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.int]]l
,pandas._libs.interval.Interval[builtins.int]
builtins.int"builtins.int"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*
start
None *%
end
builtins.int"builtins.int*S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
freqD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadXÔ
interval_range+pandas.core.indexes.interval.interval_range"¸
Zpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.float]]r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*-
start 
builtins.float"builtins.float *+
end 
builtins.float"builtins.float *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
freqD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadX’
interval_range+pandas.core.indexes.interval.interval_range"¸
Zpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.float]]r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*+
start 
builtins.float"builtins.float*
end
None *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
freqD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadX’
interval_range+pandas.core.indexes.interval.interval_range"¸
Zpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[builtins.float]]r
.pandas._libs.interval.Interval[builtins.float] 
builtins.float"builtins.float"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*
start
None *)
end 
builtins.float"builtins.float*S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *P
freqD
Union[builtins.int,None]
builtins.int"builtins.int
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadXÁ
interval_range+pandas.core.indexes.interval.interval_range"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ó
startã
]TypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]]˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp$
numpy.datetime64"numpy.datetime64&
datetime.datetime"datetime.datetime"+pandas.core.indexes.interval._TimestampLike*ó
endã
]TypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]]˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp$
numpy.datetime64"numpy.datetime64&
datetime.datetime"datetime.datetime"+pandas.core.indexes.interval._TimestampLike *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *Ü
freq˘
{Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset,pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,None]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffsetT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadX‚
interval_range+pandas.core.indexes.interval.interval_range"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*
start
None *ï
endã
]TypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]]˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp$
numpy.datetime64"numpy.datetime64&
datetime.datetime"datetime.datetime"+pandas.core.indexes.interval._TimestampLike*S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *Ü
freq˘
{Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset,pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,None]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffsetT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadX‚
interval_range+pandas.core.indexes.interval.interval_range"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timestamps.Timestamp]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ó
startã
]TypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]]˙
RUnion[pandas._libs.tslibs.timestamps.Timestamp,numpy.datetime64,datetime.datetime]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp$
numpy.datetime64"numpy.datetime64&
datetime.datetime"datetime.datetime"+pandas.core.indexes.interval._TimestampLike*
end
None *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *Ü
freq˘
{Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset,pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,None]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffsetT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadX˜
interval_range+pandas.core.indexes.interval.interval_range"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ü
startì
_TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]]Ä
TUnion[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta64(
datetime.timedelta"datetime.timedelta"+pandas.core.indexes.interval._TimedeltaLike*ü
endì
_TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]]Ä
TUnion[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta64(
datetime.timedelta"datetime.timedelta"+pandas.core.indexes.interval._TimedeltaLike *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *Ü
freq˘
{Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset,pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,None]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffsetT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadXÍ
interval_range+pandas.core.indexes.interval.interval_range"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*
start
None *ù
endì
_TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]]Ä
TUnion[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta64(
datetime.timedelta"datetime.timedelta"+pandas.core.indexes.interval._TimedeltaLike*S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *Ü
freq˘
{Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset,pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,None]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffsetT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadXÍ
interval_range+pandas.core.indexes.interval.interval_range"Â
tpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]]¿
Hpandas._libs.interval.Interval[pandas._libs.tslibs.timedeltas.Timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ü
startì
_TypeAlias[Union[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]]Ä
TUnion[pandas._libs.tslibs.timedeltas.Timedelta,numpy.timedelta64,datetime.timedelta]T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta&
numpy.timedelta64"numpy.timedelta64(
datetime.timedelta"datetime.timedelta"+pandas.core.indexes.interval._TimedeltaLike*
end
None *S
periodsD
Union[builtins.int,None]
builtins.int"builtins.int
None *Ü
freq˘
{Union[builtins.str,pandas._libs.tslibs.offsets.BaseOffset,pandas._libs.tslibs.timedeltas.Timedelta,datetime.timedelta,None]
builtins.str"builtins.strP
&pandas._libs.tslibs.offsets.BaseOffset"&pandas._libs.tslibs.offsets.BaseOffsetT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta(
datetime.timedelta"datetime.timedelta
None *.
name"
typing.Hashable"typing.Hashable *Ë
closedŸ
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"!pandas._typing.IntervalClosedType 0:typing.overloadX"Û\
to_datetime'pandas.core.tools.datetimes.to_datetime¶
to_datetime'pandas.core.tools.datetimes.to_datetime"T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp*ƒ
arg∫
pTypeAlias[Union[TypeAlias[Union[builtins.float,builtins.str]],datetime.datetime,numpy.datetime64,datetime.date]]ó
eUnion[TypeAlias[Union[builtins.float,builtins.str]],datetime.datetime,numpy.datetime64,datetime.date]Ω
-TypeAlias[Union[builtins.float,builtins.str]]f
"Union[builtins.float,builtins.str] 
builtins.float"builtins.float
builtins.str"builtins.str""pandas.core.tools.datetimes.Scalar&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64
datetime.date"datetime.date"*pandas.core.tools.datetimes.DatetimeScalar*ó
errorsà
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.IgnoreRaise *.
dayfirst
builtins.bool"builtins.bool */
	yearfirst
builtins.bool"builtins.bool *)
utc
builtins.bool"builtins.bool *R
formatD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
exact
builtins.bool"builtins.bool *P
unitD
Union[builtins.str,None]
builtins.str"builtins.str
None *;
infer_datetime_format
builtins.bool"builtins.bool *ÿ	
origin…	
ÔUnion[Literal[builtins.str],Literal[builtins.str],TypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str‡
ºTypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]]Ú
±Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime
datetime.date"datetime.date$
numpy.datetime64"numpy.datetime64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64 
builtins.float"builtins.float
builtins.str"builtins.str"(pandas._typing.TimestampConvertibleTypes *+
cache
builtins.bool"builtins.bool 0:typing.overloadX˜
to_datetime'pandas.core.tools.datetimes.to_datetime"˘
SUnion[pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.nattype.NaTType]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*ƒ
arg∫
pTypeAlias[Union[TypeAlias[Union[builtins.float,builtins.str]],datetime.datetime,numpy.datetime64,datetime.date]]ó
eUnion[TypeAlias[Union[builtins.float,builtins.str]],datetime.datetime,numpy.datetime64,datetime.date]Ω
-TypeAlias[Union[builtins.float,builtins.str]]f
"Union[builtins.float,builtins.str] 
builtins.float"builtins.float
builtins.str"builtins.str""pandas.core.tools.datetimes.Scalar&
datetime.datetime"datetime.datetime$
numpy.datetime64"numpy.datetime64
datetime.date"datetime.date"*pandas.core.tools.datetimes.DatetimeScalar*C
errors7
Literal[builtins.str]	
builtins.str"builtins.str*.
dayfirst
builtins.bool"builtins.bool */
	yearfirst
builtins.bool"builtins.bool *)
utc
builtins.bool"builtins.bool *R
formatD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
exact
builtins.bool"builtins.bool *P
unitD
Union[builtins.str,None]
builtins.str"builtins.str
None *;
infer_datetime_format
builtins.bool"builtins.bool *ÿ	
origin…	
ÔUnion[Literal[builtins.str],Literal[builtins.str],TypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str‡
ºTypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]]Ú
±Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime
datetime.date"datetime.date$
numpy.datetime64"numpy.datetime64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64 
builtins.float"builtins.float
builtins.str"builtins.str"(pandas._typing.TimestampConvertibleTypes *+
cache
builtins.bool"builtins.bool 0:typing.overloadX™
to_datetime'pandas.core.tools.datetimes.to_datetime"H
"pandas.core.series.TimestampSeries""pandas.core.series.TimestampSeries*È
argﬂ
hUnion[pandas.core.series.Series[Any],TypeAlias[Union[TypeAlias[TypedDict],pandas.core.frame.DataFrame]]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series™
BTypeAlias[Union[TypeAlias[TypedDict],pandas.core.frame.DataFrame]]¡
7Union[TypeAlias[TypedDict],pandas.core.frame.DataFrame]H
TypeAlias[TypedDict]
	TypedDict"pandas._typing.FulldatetimeDict:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"pandas._typing.DictConvertible*Ç
errorsÛ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.IgnoreRaiseCoerce *.
dayfirst
builtins.bool"builtins.bool */
	yearfirst
builtins.bool"builtins.bool *)
utc
builtins.bool"builtins.bool *R
formatD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
exact
builtins.bool"builtins.bool *P
unitD
Union[builtins.str,None]
builtins.str"builtins.str
None *;
infer_datetime_format
builtins.bool"builtins.bool *ÿ	
origin…	
ÔUnion[Literal[builtins.str],Literal[builtins.str],TypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str‡
ºTypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]]Ú
±Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime
datetime.date"datetime.date$
numpy.datetime64"numpy.datetime64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64 
builtins.float"builtins.float
builtins.str"builtins.str"(pandas._typing.TimestampConvertibleTypes *+
cache
builtins.bool"builtins.bool 0:typing.overloadXÍ
to_datetime'pandas.core.tools.datetimes.to_datetime"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*ó
argç
œUnion[typing.Sequence[Union[builtins.float,datetime.datetime]],builtins.list[builtins.str],builtins.tuple[Union[builtins.float,builtins.str,datetime.datetime]],TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]],Unknown,Unknown,pandas.core.indexes.base.Index[Any],pandas.core.arrays.base.ExtensionArray]¬
8typing.Sequence[Union[builtins.float,datetime.datetime]]u
'Union[builtins.float,datetime.datetime] 
builtins.float"builtins.float&
datetime.datetime"datetime.datetime"typing.SequenceJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list˘
Dbuiltins.tuple[Union[builtins.float,builtins.str,datetime.datetime]]†
4Union[builtins.float,builtins.str,datetime.datetime] 
builtins.float"builtins.float
builtins.str"builtins.str&
datetime.datetime"datetime.datetime"builtins.tupleÉ
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray  N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexP
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray*Ç
errorsÛ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.IgnoreRaiseCoerce *.
dayfirst
builtins.bool"builtins.bool */
	yearfirst
builtins.bool"builtins.bool *)
utc
builtins.bool"builtins.bool *R
formatD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
exact
builtins.bool"builtins.bool *P
unitD
Union[builtins.str,None]
builtins.str"builtins.str
None *;
infer_datetime_format
builtins.bool"builtins.bool *ÿ	
origin…	
ÔUnion[Literal[builtins.str],Literal[builtins.str],TypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str‡
ºTypeAlias[Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]]Ú
±Union[pandas._libs.tslibs.timestamps.Timestamp,datetime.datetime,datetime.date,numpy.datetime64,TypeAlias[numpy.signedinteger[numpy._typing._64Bit]],builtins.float,builtins.str]T
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.Timestamp&
datetime.datetime"datetime.datetime
datetime.date"datetime.date$
numpy.datetime64"numpy.datetime64µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64 
builtins.float"builtins.float
builtins.str"builtins.str"(pandas._typing.TimestampConvertibleTypes *+
cache
builtins.bool"builtins.bool 0:typing.overloadX"°\

to_numeric$pandas.core.tools.numeric.to_numeric∫

to_numeric$pandas.core.tools.numeric.to_numeric" 
builtins.float"builtins.float*º
arg≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*∑
errors®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *Ä
downcastÔ
nTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]]’
cUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"#pandas.core.tools.numeric._Downcast *“
dtype_backendº
tUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Literal[pandas._libs.lib._NoDefault]]]â
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.DtypeBackendµ
/TypeAlias[Literal[pandas._libs.lib._NoDefault]]d
$Literal[pandas._libs.lib._NoDefault]	:
pandas._libs.lib._NoDefault"pandas._libs.lib._NoDefault"pandas._libs.lib.NoDefault 0:typing.overloadXÿ$

to_numeric$pandas.core.tools.numeric.to_numeric"≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*º
arg≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.Scalar*C
errors7
Literal[builtins.str]	
builtins.str"builtins.str*Ä
downcastÔ
nTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]]’
cUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"#pandas.core.tools.numeric._Downcast *“
dtype_backendº
tUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Literal[pandas._libs.lib._NoDefault]]]â
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.DtypeBackendµ
/TypeAlias[Literal[pandas._libs.lib._NoDefault]]d
$Literal[pandas._libs.lib._NoDefault]	:
pandas._libs.lib._NoDefault"pandas._libs.lib._NoDefault"pandas._libs.lib.NoDefault 0:typing.overloadXò

to_numeric$pandas.core.tools.numeric.to_numeric"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*Î
arg·
DUnion[builtins.list[Any],builtins.tuple[Any],numpy.ndarray[Any,Any]],
builtins.list[Any]
Any"builtins.list.
builtins.tuple[Any]
Any"builtins.tuple9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*Ç
errorsÛ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.IgnoreRaiseCoerce *Ä
downcastÔ
nTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]]’
cUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"#pandas.core.tools.numeric._Downcast *“
dtype_backendº
tUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Literal[pandas._libs.lib._NoDefault]]]â
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.DtypeBackendµ
/TypeAlias[Literal[pandas._libs.lib._NoDefault]]d
$Literal[pandas._libs.lib._NoDefault]	:
pandas._libs.lib._NoDefault"pandas._libs.lib._NoDefault"pandas._libs.lib.NoDefault 0:typing.overloadXπ

to_numeric$pandas.core.tools.numeric.to_numeric"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*M
argD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*Ç
errorsÛ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.IgnoreRaiseCoerce *Ä
downcastÔ
nTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]]’
cUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],None]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str
None"#pandas.core.tools.numeric._Downcast *“
dtype_backendº
tUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Literal[pandas._libs.lib._NoDefault]]]â
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.DtypeBackendµ
/TypeAlias[Literal[pandas._libs.lib._NoDefault]]d
$Literal[pandas._libs.lib._NoDefault]	:
pandas._libs.lib._NoDefault"pandas._libs.lib._NoDefault"pandas._libs.lib.NoDefault 0:typing.overloadX"œù
to_timedelta)pandas.core.tools.timedeltas.to_timedeltaï1
to_timedelta)pandas.core.tools.timedeltas.to_timedelta"T
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta*≠
arg£
5Union[builtins.str,builtins.float,datetime.timedelta]
builtins.str"builtins.str 
builtins.float"builtins.float(
datetime.timedelta"datetime.timedelta*π+
unit¨+
ÂUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]µ#
ŸTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ü
ŒUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"3pandas._libs.tslibs.timedeltas.TimeDeltaUnitChoices
None *Ç
errorsÛ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.IgnoreRaiseCoerce 0:typing.overloadX®0
to_timedelta)pandas.core.tools.timedeltas.to_timedelta"H
"pandas.core.series.TimedeltaSeries""pandas.core.series.TimedeltaSeries*M
argD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*π+
unit¨+
ÂUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]µ#
ŸTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ü
ŒUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"3pandas._libs.tslibs.timedeltas.TimeDeltaUnitChoices
None *Ç
errorsÛ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.IgnoreRaiseCoerce 0:typing.overloadX–;
to_timedelta)pandas.core.tools.timedeltas.to_timedelta"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*ﬁ
arg‘
ŒUnion[typing.Sequence[Union[builtins.float,datetime.timedelta]],builtins.list[Union[builtins.str,builtins.float,datetime.timedelta]],builtins.tuple[Union[builtins.str,builtins.float,datetime.timedelta]],builtins.range,TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]],pandas.core.indexes.base.Index[Any]]∆
9typing.Sequence[Union[builtins.float,datetime.timedelta]]x
(Union[builtins.float,datetime.timedelta] 
builtins.float"builtins.float(
datetime.timedelta"datetime.timedelta"typing.Sequence˚
Dbuiltins.list[Union[builtins.str,builtins.float,datetime.timedelta]]£
5Union[builtins.str,builtins.float,datetime.timedelta]
builtins.str"builtins.str 
builtins.float"builtins.float(
datetime.timedelta"datetime.timedelta"builtins.list˝
Ebuiltins.tuple[Union[builtins.str,builtins.float,datetime.timedelta]]£
5Union[builtins.str,builtins.float,datetime.timedelta]
builtins.str"builtins.str 
builtins.float"builtins.float(
datetime.timedelta"datetime.timedelta"builtins.tuple 
builtins.range"builtins.range≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLikeN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*π+
unit¨+
ÂUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],None]µ#
ŸTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ü
ŒUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"3pandas._libs.tslibs.timedeltas.TimeDeltaUnitChoices
None *Ç
errorsÛ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.IgnoreRaiseCoerce 0:typing.overloadX"¨
isnapandas.core.dtypes.missing.isnaΩ
isnapandas.core.dtypes.missing.isna":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*C
obj:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:typing.overloadXÚ
isnapandas.core.dtypes.missing.isna"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*M
objD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series0:typing.overloadXß
isnapandas.core.dtypes.missing.isna"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*‚
objÿ
çUnion[pandas.core.indexes.base.Index[Any],builtins.list[Any],TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index,
builtins.list[Any]
Any"builtins.list≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike0:typing.overloadX£
isnapandas.core.dtypes.missing.isna"
builtins.bool"builtins.bool*ƒ
obj∫
ÓUnion[TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]],pandas._libs.tslibs.nattype.NaTType,pandas._libs.missing.NAType,None]≤
¢TypeAlias[Union[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]]Ò

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complex"pandas._typing.ScalarJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType:
pandas._libs.missing.NAType"pandas._libs.missing.NAType
None0:typing.overloadX"Ö
notna pandas.core.dtypes.missing.notnaø
notna pandas.core.dtypes.missing.notna":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*C
obj:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame0:typing.overloadXÙ
notna pandas.core.dtypes.missing.notna"e
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.Series*M
objD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series0:typing.overloadX©
notna pandas.core.dtypes.missing.notna"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*‚
objÿ
çUnion[pandas.core.indexes.base.Index[Any],builtins.list[Any],TypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]]N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index,
builtins.list[Any]
Any"builtins.list≈
OTypeAlias[Union[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]]’
DUnion[pandas.core.arrays.base.ExtensionArray,numpy.ndarray[Any,Any]]P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"pandas._typing.ArrayLike0:typing.overloadXÙ
notna pandas.core.dtypes.missing.notna"
builtins.bool"builtins.bool*ì
objâ
bUnion[pandas._typing.ScalarT,pandas._libs.tslibs.nattype.NaTType,pandas._libs.missing.NAType,None]é
pandas._typing.ScalarTÒ

óUnion[TypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],builtins.complex]¨
ˇTypeAlias[Union[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]Ö
ÙUnion[builtins.str,builtins.bytes,datetime.date,datetime.datetime,datetime.timedelta,numpy.datetime64,numpy.timedelta64,builtins.bool,builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedelta$
numpy.datetime64"numpy.datetime64&
numpy.timedelta64"numpy.timedelta64
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._typing.IndexIterScalar$
builtins.complex"builtins.complexJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType:
pandas._libs.missing.NAType"pandas._libs.missing.NAType
None0:typing.overloadX*ã
__annotations__pandas.core.api.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*s

IndexSlicepandas.core.indexing.IndexSliceD
 pandas.core.indexing._IndexSlice" pandas.core.indexing._IndexSlice*r
NaTpandas._libs.tslibs.nattype.NaTJ
#pandas._libs.tslibs.nattype.NaTType"#pandas._libs.tslibs.nattype.NaTType*Y
NApandas._libs.missing.NA:
pandas._libs.missing.NAType"pandas._libs.missing.NAType*ã
isnull!pandas.core.dtypes.missing.isnull^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.function*ç
notnull"pandas.core.dtypes.missing.notnull^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.function