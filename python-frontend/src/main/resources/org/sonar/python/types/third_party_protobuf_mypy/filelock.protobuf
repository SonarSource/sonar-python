
filelock•
AcquireReturnProxy filelock._api.AcquireReturnProxy"builtins.object*”
__init__)filelock._api.AcquireReturnProxy.__init__"
None*N
selfD
 filelock._api.AcquireReturnProxy" filelock._api.AcquireReturnProxy*B
lock8
filelock._api.BaseFileLock"filelock._api.BaseFileLock*π
	__enter__*filelock._api.AcquireReturnProxy.__enter__"8
filelock._api.BaseFileLock"filelock._api.BaseFileLock*FD
 filelock._api.AcquireReturnProxy" filelock._api.AcquireReturnProxy*‡
__exit__)filelock._api.AcquireReturnProxy.__exit__"
None*FD
 filelock._api.AcquireReturnProxy" filelock._api.AcquireReturnProxy*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonerg
lock%filelock._api.AcquireReturnProxy.lock8
filelock._api.BaseFileLock"filelock._api.BaseFileLock
BaseFileLockfilelock._api.BaseFileLock"abc.ABC*Ø
__init__#filelock._api.BaseFileLock.__init__"
None*B
self8
filelock._api.BaseFileLock"filelock._api.BaseFileLock*
	lock_filep
$Union[builtins.str,os.PathLike[Any]]
builtins.str"builtins.str(
os.PathLike[Any]
Any"os.PathLike*/
timeout 
builtins.float"builtins.float *™
	lock_file$filelock._api.BaseFileLock.lock_file"
builtins.str"builtins.str*B
self8
filelock._api.BaseFileLock"filelock._api.BaseFileLock0:builtins.property`*ï
_acquire#filelock._api.BaseFileLock._acquire"
None*B
self8
filelock._api.BaseFileLock"filelock._api.BaseFileLock0:abc.abstractmethod@*ï
_release#filelock._api.BaseFileLock._release"
None*B
self8
filelock._api.BaseFileLock"filelock._api.BaseFileLock0:abc.abstractmethod@*¨
	is_locked$filelock._api.BaseFileLock.is_locked"
builtins.bool"builtins.bool*B
self8
filelock._api.BaseFileLock"filelock._api.BaseFileLock0:builtins.property`*´
acquire"filelock._api.BaseFileLock.acquire"D
 filelock._api.AcquireReturnProxy" filelock._api.AcquireReturnProxy*B
self8
filelock._api.BaseFileLock"filelock._api.BaseFileLock*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *5
poll_interval 
builtins.float"builtins.float *`
poll_intervallJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *®
release"filelock._api.BaseFileLock.release"
None*B
self8
filelock._api.BaseFileLock"filelock._api.BaseFileLock*+
force
builtins.bool"builtins.bool *ß
	__enter__$filelock._api.BaseFileLock.__enter__"8
filelock._api.BaseFileLock"filelock._api.BaseFileLock*:8
filelock._api.BaseFileLock"filelock._api.BaseFileLock*Œ
__exit__#filelock._api.BaseFileLock.__exit__"
None*:8
filelock._api.BaseFileLock"filelock._api.BaseFileLock*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*s
__del__"filelock._api.BaseFileLock.__del__"
None*:8
filelock._api.BaseFileLock"filelock._api.BaseFileLock2ÿ
timeout"filelock._api.BaseFileLock.timeout¨
timeout"filelock._api.BaseFileLock.timeout" 
builtins.float"builtins.float*B
self8
filelock._api.BaseFileLock"filelock._api.BaseFileLock0:builtins.propertyX`˘
timeout"filelock._api.BaseFileLock.timeout"
None*B
self8
filelock._api.BaseFileLock"filelock._api.BaseFileLock*q
valuef
"Union[builtins.float,builtins.str] 
builtins.float"builtins.float
builtins.str"builtins.str0:.setterrQ

_lock_file%filelock._api.BaseFileLock._lock_file
builtins.str"builtins.strr
_lock_file_fd(filelock._api.BaseFileLock._lock_file_fdD
Union[builtins.int,None]
builtins.int"builtins.int
NonerY
_thread_lock'filelock._api.BaseFileLock._thread_lock 
threading.Lock"threading.LockrW
_lock_counter(filelock._api.BaseFileLock._lock_counter
builtins.int"builtins.intrQ
_timeout#filelock._api.BaseFileLock._timeout 
builtins.float"builtins.float´
Timeoutfilelock._error.Timeout"builtins.TimeoutError*°
__init__ filelock._error.Timeout.__init__"
None*<
self2
filelock._error.Timeout"filelock._error.Timeout*+
	lock_file
builtins.str"builtins.str*~
__str__filelock._error.Timeout.__str__"
builtins.str"builtins.str*42
filelock._error.Timeout"filelock._error.TimeoutrL
	lock_file!filelock._error.Timeout.lock_file
builtins.str"builtins.strÕ
SoftFileLockfilelock._soft.SoftFileLock"filelock._api.BaseFileLock*Ä
_acquire$filelock._soft.SoftFileLock._acquire"
None*D
self:
filelock._soft.SoftFileLock"filelock._soft.SoftFileLock*Ä
_release$filelock._soft.SoftFileLock._release"
None*D
self:
filelock._soft.SoftFileLock"filelock._soft.SoftFileLockÕ
UnixFileLockfilelock._unix.UnixFileLock"filelock._api.BaseFileLock*Ä
_acquire$filelock._unix.UnixFileLock._acquire"
None*D
self:
filelock._unix.UnixFileLock"filelock._unix.UnixFileLock*Ä
_release$filelock._unix.UnixFileLock._release"
None*D
self:
filelock._unix.UnixFileLock"filelock._unix.UnixFileLockY
WindowsFileLock!filelock._windows.WindowsFileLock"filelock._api.BaseFileLock"abc.ABC*i
__path__filelock.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Ñ
__annotations__filelock.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*E
	has_fcntlfilelock._unix.has_fcntl
builtins.bool"builtins.bool*A
versionfilelock.version.version
builtins.str"builtins.str*A
__version__filelock.__version__
builtins.str"builtins.str*Ö
	_FileLockfilelock._FileLockd
 Type[filelock._api.BaseFileLock]8
filelock._api.BaseFileLock"filelock._api.BaseFileLock"type*É
FileLockfilelock.FileLockd
 Type[filelock._api.BaseFileLock]8
filelock._api.BaseFileLock"filelock._api.BaseFileLock"type*g
__all__filelock.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list