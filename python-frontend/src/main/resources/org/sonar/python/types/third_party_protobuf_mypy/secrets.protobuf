
secretsÜ
SystemRandomrandom.SystemRandom"random.Random*ß
getrandbitsrandom.SystemRandom.getrandbits"
builtins.int"builtins.int*4
self*
random.SystemRandom"random.SystemRandom*#
k
builtins.int"builtins.int*í
getstaterandom.SystemRandom.getstate"
NoReturn
*4
self*
random.SystemRandom"random.SystemRandom*
args
Any*
kwds
Any*í
setstaterandom.SystemRandom.setstate"
NoReturn
*4
self*
random.SystemRandom"random.SystemRandom*
args
Any*
kwds
Anyu
	randbelowsecrets.randbelow"
builtins.int"builtins.int*7
exclusive_upper_bound
builtins.int"builtins.int_
randbitssecrets.randbits"
builtins.int"builtins.int*#
k
builtins.int"builtins.int˝
choicesecrets.choice"C

secrets._T"
builtins.object"builtins.object"builtins.object*ù
seqì
+_typeshed.SupportsLenAndGetItem[secrets._T]C

secrets._T"
builtins.object"builtins.object"builtins.object"_typeshed.SupportsLenAndGetItemò
token_bytessecrets.token_bytes" 
builtins.bytes"builtins.bytes*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None ê
	token_hexsecrets.token_hex"
builtins.str"builtins.str*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None ò
token_urlsafesecrets.token_urlsafe"
builtins.str"builtins.str*R
nbytesD
Union[builtins.int,None]
builtins.int"builtins.int
None "´
compare_digesthmac.compare_digestí
compare_digesthmac.compare_digest"
builtins.bool"builtins.bool*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer0:typing.overloadXÓ
compare_digesthmac.compare_digest"
builtins.bool"builtins.bool*HF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*HF
typing.AnyStr"
builtins.object"builtins.object"builtins.object0:typing.overloadX*É
__annotations__secrets.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*f
__all__secrets.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list