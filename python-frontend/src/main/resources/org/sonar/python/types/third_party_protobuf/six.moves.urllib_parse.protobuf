
six.moves.urllib_parse÷
DefragResulturllib.parse.DefragResult"urllib.parse._DefragResultBase"urllib.parse._ResultMixinStr*–
geturl urllib.parse.DefragResult.geturl"
builtins.str"builtins.str*j
self`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.strz38z39z310z311z312z313j38j39j310j311j312j313€
SplitResulturllib.parse.SplitResult"urllib.parse._SplitResultBase""urllib.parse._NetlocResultMixinStr*“
geturlurllib.parse.SplitResult.geturl"
builtins.str"builtins.str*Ï
self·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz38z39z310z311z312z313j38j39j310j311j312j313Ü
ParseResulturllib.parse.ParseResult"urllib.parse._ParseResultBase""urllib.parse._NetlocResultMixinStr*˝
geturlurllib.parse.ParseResult.geturl"
builtins.str"builtins.str*ó
selfå
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strz38z39z310z311z312z313j38j39j310j311j312j313˜
DefragResultBytesurllib.parse.DefragResultBytes"urllib.parse._DefragResultBase"urllib.parse._ResultMixinBytes*Â
geturl%urllib.parse.DefragResultBytes.geturl" 
builtins.bytes"builtins.bytes*v
selfl
$Tuple[builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytesz38z39z310z311z312z313j38j39j310j311j312j313é
SplitResultBytesurllib.parse.SplitResultBytes"urllib.parse._SplitResultBase"$urllib.parse._NetlocResultMixinBytes*˘
geturl$urllib.parse.SplitResultBytes.geturl" 
builtins.bytes"builtins.bytes*ä
selfˇ
QTuple[builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytesz38z39z310z311z312z313j38j39j310j311j312j313ø
ParseResultBytesurllib.parse.ParseResultBytes"urllib.parse._ParseResultBase"$urllib.parse._NetlocResultMixinBytes*™
geturl$urllib.parse.ParseResultBytes.geturl" 
builtins.bytes"builtins.bytes*ª
self∞
`Tuple[builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytesz38z39z310z311z312z313j38j39j310j311j312j313ñ
parse_qsurllib.parse.parse_qs"â
9builtins.dict[typing.AnyStr,builtins.list[typing.AnyStr]]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectu
builtins.list[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.dict*w
qso
Union[typing.AnyStr,None]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
None*7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool *,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str *Z
max_num_fieldsD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
	separator
builtins.str"builtins.str z38z39z310z311z312z313ä
	parse_qslurllib.parse.parse_qsl"˚
1builtins.list[Tuple[typing.AnyStr,typing.AnyStr]]∂
"Tuple[typing.AnyStr,typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectF
typing.AnyStr"
builtins.object"builtins.object"builtins.object"builtins.list*w
qso
Union[typing.AnyStr,None]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
None*7
keep_blank_values
builtins.bool"builtins.bool *4
strict_parsing
builtins.bool"builtins.bool *,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str *Z
max_num_fieldsD
Union[builtins.int,None]
builtins.int"builtins.int
None *-
	separator
builtins.str"builtins.str z38z39z310z311z312z313°
quote_from_bytesurllib.parse.quote_from_bytes"
builtins.str"builtins.str*Ä
bsx
(Union[builtins.bytes,builtins.bytearray] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*∞
safe£
1Union[builtins.str,typing.Iterable[builtins.int]]
builtins.str"builtins.strN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable z38z39z310z311z312z313≈
unquoteurllib.parse.unquote"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str z38£
unquoteurllib.parse.unquote"
builtins.str"builtins.str*r
stringf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str z39z310z311z312z313¢
unquote_to_bytesurllib.parse.unquote_to_bytes" 
builtins.bytes"builtins.bytes*∞
string£
5Union[builtins.str,builtins.bytes,builtins.bytearray]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearrayz38z39z310z311z312z313Á
unquote_plusurllib.parse.unquote_plus"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str z38z39z310z311z312z313Ü
urljoinurllib.parse.urljoin"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*P
baseF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*x
urlo
Union[typing.AnyStr,None]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
None*5
allow_fragments
builtins.bool"builtins.bool z38z39z310z311z312z313"ö
quoteurllib.parse.quote’
quoteurllib.parse.quote"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*∞
safe£
1Union[builtins.str,typing.Iterable[builtins.int]]
builtins.str"builtins.strN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadXà
quoteurllib.parse.quote"
builtins.str"builtins.str*Ñ
stringx
(Union[builtins.bytes,builtins.bytearray] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*∞
safe£
1Union[builtins.str,typing.Iterable[builtins.int]]
builtins.str"builtins.strN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable 0:typing.overloadX"38"39"310"311"312"313"∏

quote_plusurllib.parse.quote_plusﬂ

quote_plusurllib.parse.quote_plus"
builtins.str"builtins.str*(
string
builtins.str"builtins.str*∞
safe£
1Union[builtins.str,typing.Iterable[builtins.int]]
builtins.str"builtins.strN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadXí

quote_plusurllib.parse.quote_plus"
builtins.str"builtins.str*Ñ
stringx
(Union[builtins.bytes,builtins.bytearray] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray*∞
safe£
1Union[builtins.str,typing.Iterable[builtins.int]]
builtins.str"builtins.strN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable 0:typing.overloadX"38"39"310"311"312"313"„
	urldefragurllib.parse.urldefragé
	urldefragurllib.parse.urldefrag"¨
+TypeAlias[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"urllib.parse.DefragResult*%
url
builtins.str"builtins.str0:typing.overloadXê
	urldefragurllib.parse.urldefrag"¡
/TypeAlias[Tuple[builtins.bytes,builtins.bytes]]l
$Tuple[builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes"urllib.parse.DefragResultBytes*ë
urlá
-Union[builtins.bytes,builtins.bytearray,None] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray
None0:typing.overloadX"38"39"310"311"312"313"ã 
	urlencodeurllib.parse.urlencodeŸ	
	urlencodeurllib.parse.urlencode"
builtins.str"builtins.str*°
queryï
£TypeAlias[Union[typing.Mapping[Any,Any],typing.Mapping[Any,typing.Sequence[Any]],typing.Sequence[Tuple[Any,Any]],typing.Sequence[Tuple[Any,typing.Sequence[Any]]]]]—
òUnion[typing.Mapping[Any,Any],typing.Mapping[Any,typing.Sequence[Any]],typing.Sequence[Tuple[Any,Any]],typing.Sequence[Tuple[Any,typing.Sequence[Any]]]];
typing.Mapping[Any,Any]
Any
Any"typing.Mappingu
(typing.Mapping[Any,typing.Sequence[Any]]
Any0
typing.Sequence[Any]
Any"typing.Sequence"typing.MappingX
typing.Sequence[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"typing.Sequence£
0typing.Sequence[Tuple[Any,typing.Sequence[Any]]]^
Tuple[Any,typing.Sequence[Any]]
Any0
typing.Sequence[Any]
Any"typing.Sequence"typing.Sequence"urllib.parse._QueryType*+
doseq
builtins.bool"builtins.bool *(
safe
builtins.str"builtins.str *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *\
	quote_viaK
CallableType[builtins.function]&
builtins.function"builtins.function 0:typing.overloadXÙ

	urlencodeurllib.parse.urlencode"
builtins.str"builtins.str*°
queryï
£TypeAlias[Union[typing.Mapping[Any,Any],typing.Mapping[Any,typing.Sequence[Any]],typing.Sequence[Tuple[Any,Any]],typing.Sequence[Tuple[Any,typing.Sequence[Any]]]]]—
òUnion[typing.Mapping[Any,Any],typing.Mapping[Any,typing.Sequence[Any]],typing.Sequence[Tuple[Any,Any]],typing.Sequence[Tuple[Any,typing.Sequence[Any]]]];
typing.Mapping[Any,Any]
Any
Any"typing.Mappingu
(typing.Mapping[Any,typing.Sequence[Any]]
Any0
typing.Sequence[Any]
Any"typing.Sequence"typing.MappingX
typing.Sequence[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"typing.Sequence£
0typing.Sequence[Tuple[Any,typing.Sequence[Any]]]^
Tuple[Any,typing.Sequence[Any]]
Any0
typing.Sequence[Any]
Any"typing.Sequence"typing.Sequence"urllib.parse._QueryType*)
doseq
builtins.bool"builtins.bool*ƒ
safeπ
urllib.parse._Q£
1Union[builtins.str,typing.Iterable[builtins.int]]
builtins.str"builtins.strN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *\
	quote_viaK
CallableType[builtins.function]&
builtins.function"builtins.function 0:typing.overloadXˆ

	urlencodeurllib.parse.urlencode"
builtins.str"builtins.str*°
queryï
£TypeAlias[Union[typing.Mapping[Any,Any],typing.Mapping[Any,typing.Sequence[Any]],typing.Sequence[Tuple[Any,Any]],typing.Sequence[Tuple[Any,typing.Sequence[Any]]]]]—
òUnion[typing.Mapping[Any,Any],typing.Mapping[Any,typing.Sequence[Any]],typing.Sequence[Tuple[Any,Any]],typing.Sequence[Tuple[Any,typing.Sequence[Any]]]];
typing.Mapping[Any,Any]
Any
Any"typing.Mappingu
(typing.Mapping[Any,typing.Sequence[Any]]
Any0
typing.Sequence[Any]
Any"typing.Sequence"typing.MappingX
typing.Sequence[Tuple[Any,Any]]$
Tuple[Any,Any]
Any
Any"typing.Sequence£
0typing.Sequence[Tuple[Any,typing.Sequence[Any]]]^
Tuple[Any,typing.Sequence[Any]]
Any0
typing.Sequence[Any]
Any"typing.Sequence"typing.Sequence"urllib.parse._QueryType*+
doseq
builtins.bool"builtins.bool *ƒ
safeπ
urllib.parse._Q£
1Union[builtins.str,typing.Iterable[builtins.int]]
builtins.str"builtins.strN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *\
	quote_viaK
CallableType[builtins.function]&
builtins.function"builtins.function 0:typing.overloadX"38"39"310"311"312"313"ø
urlparseurllib.parse.urlparseœ
urlparseurllib.parse.urlparse"å
_TypeAlias[Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]]å
TTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"urllib.parse.ParseResult*%
url
builtins.str"builtins.str**
scheme
builtins.str"builtins.str *5
allow_fragments
builtins.bool"builtins.bool 0:typing.overloadX≠
urlparseurllib.parse.urlparse"¡
kTypeAlias[Tuple[builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes]]∞
`Tuple[builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes"urllib.parse.ParseResultBytes*ë
urlá
-Union[builtins.bytes,builtins.bytearray,None] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray
None*Â
scheme÷
CUnion[builtins.bytes,builtins.bytearray,None,Literal[builtins.str]] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray
None7
Literal[builtins.str]	
builtins.str"builtins.str *5
allow_fragments
builtins.bool"builtins.bool 0:typing.overloadX"38"39"310"311"312"313"∏
urlspliturllib.parse.urlsplitó
urlspliturllib.parse.urlsplit"‘
RTypeAlias[Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]]·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"urllib.parse.SplitResult*%
url
builtins.str"builtins.str**
scheme
builtins.str"builtins.str *5
allow_fragments
builtins.bool"builtins.bool 0:typing.overloadXÌ
urlspliturllib.parse.urlsplit"Å
\TypeAlias[Tuple[builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes]]ˇ
QTuple[builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes"urllib.parse.SplitResultBytes*ë
urlá
-Union[builtins.bytes,builtins.bytearray,None] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray
None*Â
scheme÷
CUnion[builtins.bytes,builtins.bytearray,None,Literal[builtins.str]] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray
None7
Literal[builtins.str]	
builtins.str"builtins.str *5
allow_fragments
builtins.bool"builtins.bool 0:typing.overloadX"38"39"310"æ

urlspliturllib.parse.urlsplitó
urlspliturllib.parse.urlsplit"‘
RTypeAlias[Tuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]]·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str"urllib.parse.SplitResult*%
url
builtins.str"builtins.str**
scheme
builtins.str"builtins.str *5
allow_fragments
builtins.bool"builtins.bool 0:typing.overloadXÒ
urlspliturllib.parse.urlsplit"Å
\TypeAlias[Tuple[builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes]]ˇ
QTuple[builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes,builtins.bytes] 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes 
builtins.bytes"builtins.bytes"urllib.parse.SplitResultBytes*S
urlJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*®
schemeô
0Union[builtins.bytes,None,Literal[builtins.str]] 
builtins.bytes"builtins.bytes
None7
Literal[builtins.str]	
builtins.str"builtins.str *5
allow_fragments
builtins.bool"builtins.bool 0:typing.overloadX"311"312"313"»

urlunparseurllib.parse.urlunparseΩ

urlunparseurllib.parse.urlunparse"=
Literal[builtins.bytes]	 
builtins.bytes"builtins.bytes*B

components2
typing.Iterable[None]
None"typing.Iterable0:typing.overloadXƒ

urlunparseurllib.parse.urlunparse"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*ø

componentsÆ
*typing.Iterable[Union[typing.AnyStr,None]]o
Union[typing.AnyStr,None]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
None"typing.Iterable0:typing.overloadX"38"39"310"311"312"313"»

urlunspliturllib.parse.urlunsplitΩ

urlunspliturllib.parse.urlunsplit"=
Literal[builtins.bytes]	 
builtins.bytes"builtins.bytes*B

components2
typing.Iterable[None]
None"typing.Iterable0:typing.overloadXƒ

urlunspliturllib.parse.urlunsplit"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*ø

componentsÆ
*typing.Iterable[Union[typing.AnyStr,None]]o
Union[typing.AnyStr,None]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
None"typing.Iterable0:typing.overloadX"38"39"310"311"312"313*Æ
__annotations__&six.moves.urllib_parse.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313