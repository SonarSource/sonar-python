
multiprocessing.sharedctypesó
_AcquireFunc)multiprocessing.sharedctypes._AcquireFunc"builtins.object*»
__call__2multiprocessing.sharedctypes._AcquireFunc.__call__"
builtins.bool"builtins.bool*`
selfV
)multiprocessing.sharedctypes._AcquireFunc")multiprocessing.sharedctypes._AcquireFunc*+
block
builtins.bool"builtins.bool *Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None XÚ 
SynchronizedBase-multiprocessing.sharedctypes.SynchronizedBase"builtins.object*“
__init__6multiprocessing.sharedctypes.SynchronizedBase.__init__"
None*‡
self’
Omultiprocessing.sharedctypes.SynchronizedBase[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"-multiprocessing.sharedctypes.SynchronizedBase*
obj
Any*€
lockŒ
`Union[TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]],None]›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike
None *1
ctx&
Union[Any,None]
Any
None *”

__reduce__8multiprocessing.sharedctypes.SynchronizedBase.__reduce__"ß
ÜTuple[CallableType[builtins.function],Tuple[Any,TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]]K
CallableType[builtins.function]&
builtins.function"builtins.functionÃ
_Tuple[Any,TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]
Any›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike*‡
self’
Omultiprocessing.sharedctypes.SynchronizedBase[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"-multiprocessing.sharedctypes.SynchronizedBase*¯
get_obj5multiprocessing.sharedctypes.SynchronizedBase.get_obj"S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData*‡
self’
Omultiprocessing.sharedctypes.SynchronizedBase[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"-multiprocessing.sharedctypes.SynchronizedBase*Ö
get_lock6multiprocessing.sharedctypes.SynchronizedBase.get_lock"›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike*‡
self’
Omultiprocessing.sharedctypes.SynchronizedBase[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"-multiprocessing.sharedctypes.SynchronizedBase*ø
	__enter__7multiprocessing.sharedctypes.SynchronizedBase.__enter__"
builtins.bool"builtins.bool*ÿ’
Omultiprocessing.sharedctypes.SynchronizedBase[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"-multiprocessing.sharedctypes.SynchronizedBase*Ä
__exit__6multiprocessing.sharedctypes.SynchronizedBase.__exit__"
None*ÿ’
Omultiprocessing.sharedctypes.SynchronizedBase[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"-multiprocessing.sharedctypes.SynchronizedBase*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
NonePrò
acquire5multiprocessing.sharedctypes.SynchronizedBase.acquireV
)multiprocessing.sharedctypes._AcquireFunc")multiprocessing.sharedctypes._AcquireFuncrç
release5multiprocessing.sharedctypes.SynchronizedBase.releaseK
CallableType[builtins.function]&
builtins.function"builtins.functionˇ
Synchronized)multiprocessing.sharedctypes.Synchronized"-multiprocessing.sharedctypes.SynchronizedBasePrí
value/multiprocessing.sharedctypes.Synchronized.valueX
multiprocessing.sharedctypes._T"
builtins.object"builtins.object"builtins.objectŒ
SynchronizedArray.multiprocessing.sharedctypes.SynchronizedArray"-multiprocessing.sharedctypes.SynchronizedBase*º
__len__6multiprocessing.sharedctypes.SynchronizedArray.__len__"
builtins.int"builtins.int*⁄◊
Pmultiprocessing.sharedctypes.SynchronizedArray[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData".multiprocessing.sharedctypes.SynchronizedArray*õ
__getitem__:multiprocessing.sharedctypes.SynchronizedArray.__getitem__"S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData*⁄◊
Pmultiprocessing.sharedctypes.SynchronizedArray[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData".multiprocessing.sharedctypes.SynchronizedArray*
builtins.int"builtins.int*ß
__setitem__:multiprocessing.sharedctypes.SynchronizedArray.__setitem__"
None*⁄◊
Pmultiprocessing.sharedctypes.SynchronizedArray[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData".multiprocessing.sharedctypes.SynchronizedArray*
builtins.int"builtins.int*US
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData*ô
__getslice__;multiprocessing.sharedctypes.SynchronizedArray.__getslice__"ï
/builtins.list[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"builtins.list*‚
self◊
Pmultiprocessing.sharedctypes.SynchronizedArray[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData".multiprocessing.sharedctypes.SynchronizedArray*'
start
builtins.int"builtins.int*&
stop
builtins.int"builtins.int*¥
__setslice__;multiprocessing.sharedctypes.SynchronizedArray.__setslice__"
None*‚
self◊
Pmultiprocessing.sharedctypes.SynchronizedArray[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData".multiprocessing.sharedctypes.SynchronizedArray*'
start
builtins.int"builtins.int*&
stop
builtins.int"builtins.int*¶
valuesô
1typing.Iterable[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"typing.IterablePµ
SynchronizedString/multiprocessing.sharedctypes.SynchronizedString".multiprocessing.sharedctypes.SynchronizedArrayr`
value5multiprocessing.sharedctypes.SynchronizedString.value 
builtins.bytes"builtins.bytesr\
raw3multiprocessing.sharedctypes.SynchronizedString.raw 
builtins.bytes"builtins.bytes‹
copy!multiprocessing.sharedctypes.copy"S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData*\
objS
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"ö
RawValue%multiprocessing.sharedctypes.RawValueÕ
RawValue%multiprocessing.sharedctypes.RawValue"S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData*ú
typecode_or_typeÖ
&Type[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"type*
args
Any0:typing.overloadXñ
RawValue%multiprocessing.sharedctypes.RawValue"
Any*2
typecode_or_type
builtins.str"builtins.str*
args
Any0:typing.overloadX"Â
RawArray%multiprocessing.sharedctypes.RawArrayì
RawArray%multiprocessing.sharedctypes.RawArray"ì
.ctypes.Array[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"ctypes.Array*ú
typecode_or_typeÖ
&Type[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"type*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence0:typing.overloadXõ
RawArray%multiprocessing.sharedctypes.RawArray"
Any*2
typecode_or_type
builtins.str"builtins.str*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence0:typing.overloadX"¢
Value"multiprocessing.sharedctypes.Value•
Value"multiprocessing.sharedctypes.Value"S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData*ú
typecode_or_typeÖ
&Type[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"type*
args
Any*D
lock:
Literal[builtins.bool]	
builtins.bool"builtins.bool*ï
ctxâ
/Union[multiprocessing.context.BaseContext,None]J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext
None 0:typing.overloadXÑ	
Value"multiprocessing.sharedctypes.Value"’
Omultiprocessing.sharedctypes.SynchronizedBase[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"-multiprocessing.sharedctypes.SynchronizedBase*ú
typecode_or_typeÖ
&Type[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"type*
args
Any*ü
lockí
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike *ï
ctxâ
/Union[multiprocessing.context.BaseContext,None]J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext
None 0:typing.overloadXØ
Value"multiprocessing.sharedctypes.Value"l
2multiprocessing.sharedctypes.SynchronizedBase[Any]
Any"-multiprocessing.sharedctypes.SynchronizedBase*2
typecode_or_type
builtins.str"builtins.str*
args
Any*ü
lockí
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike *ï
ctxâ
/Union[multiprocessing.context.BaseContext,None]J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext
None 0:typing.overloadXì
Value"multiprocessing.sharedctypes.Value"
Any*ü
typecode_or_typeà
'Union[builtins.str,Type[ctypes._CData]]
builtins.str"builtins.str=
Type[ctypes._CData]
ctypes._CData"ctypes._CData"type*
args
Any*˙
lockÌ
iUnion[builtins.bool,TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]
builtins.bool"builtins.bool›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike *ï
ctxâ
/Union[multiprocessing.context.BaseContext,None]J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext
None 0:typing.overloadX"∫ 
Array"multiprocessing.sharedctypes.Array™
Array"multiprocessing.sharedctypes.Array"S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData*ú
typecode_or_typeÖ
&Type[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"type*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*D
lock:
Literal[builtins.bool]	
builtins.bool"builtins.bool*ï
ctxâ
/Union[multiprocessing.context.BaseContext,None]J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext
None 0:typing.overloadXã

Array"multiprocessing.sharedctypes.Array"◊
Pmultiprocessing.sharedctypes.SynchronizedArray[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData".multiprocessing.sharedctypes.SynchronizedArray*ú
typecode_or_typeÖ
&Type[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"type*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*ü
lockí
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike *ï
ctxâ
/Union[multiprocessing.context.BaseContext,None]J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext
None 0:typing.overloadX∂
Array"multiprocessing.sharedctypes.Array"n
3multiprocessing.sharedctypes.SynchronizedArray[Any]
Any".multiprocessing.sharedctypes.SynchronizedArray*2
typecode_or_type
builtins.str"builtins.str*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*ü
lockí
rUnion[Literal[builtins.bool],TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike *ï
ctxâ
/Union[multiprocessing.context.BaseContext,None]J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext
None 0:typing.overloadXò
Array"multiprocessing.sharedctypes.Array"
Any*ü
typecode_or_typeà
'Union[builtins.str,Type[ctypes._CData]]
builtins.str"builtins.str=
Type[ctypes._CData]
ctypes._CData"ctypes._CData"type*ï
size_or_initializer|
(Union[builtins.int,typing.Sequence[Any]]
builtins.int"builtins.int0
typing.Sequence[Any]
Any"typing.Sequence*˙
lockÌ
iUnion[builtins.bool,TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]]
builtins.bool"builtins.bool›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike *ï
ctxâ
/Union[multiprocessing.context.BaseContext,None]J
#multiprocessing.context.BaseContext"#multiprocessing.context.BaseContext
None 0:typing.overloadX"±
synchronized)multiprocessing.sharedctypes.synchronizedÂ
synchronized)multiprocessing.sharedctypes.synchronized"—
Jmultiprocessing.sharedctypes.Synchronized[multiprocessing.sharedctypes._T]X
multiprocessing.sharedctypes._T"
builtins.object"builtins.object"builtins.object")multiprocessing.sharedctypes.Synchronized*Ø
obj•
4ctypes._SimpleCData[multiprocessing.sharedctypes._T]X
multiprocessing.sharedctypes._T"
builtins.object"builtins.object"builtins.object"ctypes._SimpleCData*€
lockŒ
`Union[TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]],None]›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike
None *1
ctx&
Union[Any,None]
Any
None 0:typing.overloadXô
synchronized)multiprocessing.sharedctypes.synchronized"b
/multiprocessing.sharedctypes.SynchronizedString"/multiprocessing.sharedctypes.SynchronizedString*T
objK
ctypes.Array[ctypes.c_char]
ctypes.c_char"ctypes.c_char"ctypes.Array*€
lockŒ
`Union[TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]],None]›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike
None *1
ctx&
Union[Any,None]
Any
None 0:typing.overloadXŸ
synchronized)multiprocessing.sharedctypes.synchronized"◊
Pmultiprocessing.sharedctypes.SynchronizedArray[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData".multiprocessing.sharedctypes.SynchronizedArray*ù
objì
.ctypes.Array[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"ctypes.Array*€
lockŒ
`Union[TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]],None]›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike
None *1
ctx&
Union[Any,None]
Any
None 0:typing.overloadXï
synchronized)multiprocessing.sharedctypes.synchronized"’
Omultiprocessing.sharedctypes.SynchronizedBase[multiprocessing.sharedctypes._CT]S
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData"-multiprocessing.sharedctypes.SynchronizedBase*\
objS
 multiprocessing.sharedctypes._CT
ctypes._CData"ctypes._CData"ctypes._CData*€
lockŒ
`Union[TypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]],None]›
TTypeAlias[Union[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]]€
IUnion[multiprocessing.synchronize.Lock,multiprocessing.synchronize.RLock]D
 multiprocessing.synchronize.Lock" multiprocessing.synchronize.LockF
!multiprocessing.synchronize.RLock"!multiprocessing.synchronize.RLock"%multiprocessing.synchronize._LockLike
None *1
ctx&
Union[Any,None]
Any
None 0:typing.overloadX*ò
__annotations__,multiprocessing.sharedctypes.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*{
__all__$multiprocessing.sharedctypes.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list