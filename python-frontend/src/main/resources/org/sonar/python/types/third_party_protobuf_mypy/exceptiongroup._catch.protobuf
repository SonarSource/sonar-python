
exceptiongroup._catch´
_Catcherexceptiongroup._catch._Catcher"builtins.object*–
__init__'exceptiongroup._catch._Catcher.__init__"
None*J
self@
exceptiongroup._catch._Catcher"exceptiongroup._catch._Catcher*ƒ
handler_map≤
gtyping.Mapping[builtins.tuple[Type[builtins.BaseException]],TypeAlias[CallableType[builtins.function]]]ò
,builtins.tuple[Type[builtins.BaseException]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type"builtins.tupleõ
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"exceptiongroup._catch._Handler"typing.Mapping*É
	__enter__(exceptiongroup._catch._Catcher.__enter__"
None*B@
exceptiongroup._catch._Catcher"exceptiongroup._catch._Catcher*
__exit__'exceptiongroup._catch._Catcher.__exit__"
builtins.bool"builtins.bool*B@
exceptiongroup._catch._Catcher"exceptiongroup._catch._Catcher*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*Æ
handle_exception/exceptiongroup._catch._Catcher.handle_exception"b
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*J
self@
exceptiongroup._catch._Catcher"exceptiongroup._catch._Catcher*9
exc0
builtins.BaseException"builtins.BaseExceptionr
_handler_map+exceptiongroup._catch._Catcher._handler_map≤
gtyping.Mapping[builtins.tuple[Type[builtins.BaseException]],TypeAlias[CallableType[builtins.function]]]ò
,builtins.tuple[Type[builtins.BaseException]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type"builtins.tupleõ
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"exceptiongroup._catch._Handler"typing.Mappingé
catchexceptiongroup._catch.catch"V
'contextlib.AbstractContextManager[None]
None"!contextlib.AbstractContextManager*èå
åtyping.Mapping[Union[Type[builtins.BaseException],typing.Iterable[Type[builtins.BaseException]]],TypeAlias[CallableType[builtins.function]]]Ã
QUnion[Type[builtins.BaseException],typing.Iterable[Type[builtins.BaseException]]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"typeö
-typing.Iterable[Type[builtins.BaseException]]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type"typing.Iterableõ
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"exceptiongroup._catch._Handler"typing.Mapping*ë
__annotations__%exceptiongroup._catch.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict