
tarfile•X
_listbuiltins.list"typing.MutableSequence*¶
copybuiltins.list.copy"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*â
appendbuiltins.list.append"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313*∫
extendbuiltins.list.extend"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterablez38z39z310z311z312z313*ø
popbuiltins.list.pop"D
builtins._T"
builtins.object"builtins.object"builtins.object*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z38z39z310z311z312z313*´
indexbuiltins.list.index"
builtins.int"builtins.int*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.object*FB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *FB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z38z39z310z311z312z313*õ
countbuiltins.list.count"
builtins.int"builtins.int*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313*œ
insertbuiltins.list.insert"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313*â
removebuiltins.list.remove"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313*œ
__len__builtins.list.__len__"
builtins.int"builtins.int*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*™
__iter__builtins.list.__iter__"u
typing.Iterator[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterator*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*Ë
__delitem__builtins.list.__delitem__"
None*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*¢ü
5Union[typing_extensions.SupportsIndex,builtins.slice]B
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex 
builtins.slice"builtins.slicez38z39z310z311z312z313*
__iadd__builtins.list.__iadd__"ò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*õò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterablez38z39z310z311z312z313*Í
__mul__builtins.list.__mul__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz38z39z310z311z312z313*Ï
__rmul__builtins.list.__rmul__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz38z39z310z311z312z313*Ω
__imul__builtins.list.__imul__"ò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*õò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz38z39z310z311z312z313*Å
__contains__builtins.list.__contains__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*$"
builtins.object"builtins.objectz38z39z310z311z312z313*≤
__reversed__builtins.list.__reversed__"u
typing.Iterator[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterator*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*ƒ
__gt__builtins.list.__gt__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*ƒ
__ge__builtins.list.__ge__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*ƒ
__lt__builtins.list.__lt__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*ƒ
__le__builtins.list.__le__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*≠
__class_getitem__builtins.list.__class_getitem__"(
types.GenericAlias"types.GenericAlias*ß
clsù
 Type[builtins.list[builtins._T]]q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"type*	
Anypz39z310z311z312z3132π
__init__builtins.list.__init__æ
__init__builtins.list.__init__"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list0:typing.overloadX∑
__init__builtins.list.__init__"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterable0:typing.overloadX"38"39"310"311"312"3132»
sortbuiltins.list.sort—
sortbuiltins.list.sort"
None*—
self∆
0builtins.list[_typeshed.SupportsRichComparisonT]Ç
!_typeshed.SupportsRichComparisonT⁄
FUnion[_typeshed.SupportsDunderLT[Any],_typeshed.SupportsDunderGT[Any]]F
_typeshed.SupportsDunderLT[Any]
Any"_typeshed.SupportsDunderLTF
_typeshed.SupportsDunderGT[Any]
Any"_typeshed.SupportsDunderGT"builtins.list*
key
None *-
reverse
builtins.bool"builtins.bool 0:typing.overloadXª
sortbuiltins.list.sort"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*T
keyK
CallableType[builtins.function]&
builtins.function"builtins.function*-
reverse
builtins.bool"builtins.bool 0:typing.overloadX"38"39"310"311"312"3132—
__getitem__builtins.list.__getitem__æ
__getitem__builtins.list.__getitem__"D
builtins._T"
builtins.object"builtins.object"builtins.object*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex0:typing.overloadX…
__getitem__builtins.list.__getitem__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*" 
builtins.slice"builtins.slice0:typing.overloadX"38"39"310"311"312"3132Ì
__setitem__builtins.list.__setitem__ 
__setitem__builtins.list.__setitem__"
None*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*FD
builtins._T"
builtins.object"builtins.object"builtins.object0:typing.overloadXŸ
__setitem__builtins.list.__setitem__"
None*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*" 
builtins.slice"builtins.slice*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterable0:typing.overloadX"38"39"310"311"312"3132Â
__add__builtins.list.__add__í
__add__builtins.list.__add__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list0:typing.overloadXë
__add__builtins.list.__add__"Ô
-builtins.list[Union[builtins._S,builtins._T]]Æ
Union[builtins._S,builtins._T]D
builtins._S"
builtins.object"builtins.object"builtins.objectD
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._S]D
builtins._S"
builtins.object"builtins.object"builtins.object"builtins.list0:typing.overloadX"38"39"310"311"312"313Pj38j39j310j311j312j313rH
__hash__builtins.list.__hash__
None*38*39*310*311*312*313ÿ
_GzipReadableFileobjgzip._ReadableFileobj"builtins.object*∫
readgzip._ReadableFileobj.read" 
builtins.bytes"builtins.bytes*8
self.
gzip._ReadableFileobj"gzip._ReadableFileobj*
builtins.int"builtins.intz38z39z310z311z312z313*º
seekgzip._ReadableFileobj.seek""
builtins.object"builtins.object*8
self.
gzip._ReadableFileobj"gzip._ReadableFileobj*
builtins.int"builtins.intz38z39z310z311z312z313Xj38j39j310j311j312j313¬
_GzipWritableFileobjgzip._WritableFileobj"builtins.object*¬
writegzip._WritableFileobj.write""
builtins.object"builtins.object*8
self.
gzip._WritableFileobj"gzip._WritableFileobj*" 
builtins.bytes"builtins.bytesz38z39z310z311z312z313*û
flushgzip._WritableFileobj.flush""
builtins.object"builtins.object*8
self.
gzip._WritableFileobj"gzip._WritableFileobjz38z39z310z311z312z313Xj38j39j310j311j312j313˚
_Fileobjtarfile._Fileobj"builtins.object*´
readtarfile._Fileobj.read" 
builtins.bytes"builtins.bytes*.
self$
tarfile._Fileobj"tarfile._Fileobj*
builtins.int"builtins.intz38z39z310z311z312z313*≥
writetarfile._Fileobj.write""
builtins.object"builtins.object*.
self$
tarfile._Fileobj"tarfile._Fileobj*" 
builtins.bytes"builtins.bytesz38z39z310z311z312z313*á
telltarfile._Fileobj.tell"
builtins.int"builtins.int*.
self$
tarfile._Fileobj"tarfile._Fileobjz38z39z310z311z312z313*≠
seektarfile._Fileobj.seek""
builtins.object"builtins.object*.
self$
tarfile._Fileobj"tarfile._Fileobj*
builtins.int"builtins.intz38z39z310z311z312z313*è
closetarfile._Fileobj.close""
builtins.object"builtins.object*.
self$
tarfile._Fileobj"tarfile._Fileobjz38z39z310z311z312z313Xj38j39j310j311j312j313ó
_Bz2ReadableFileobjtarfile._Bz2ReadableFileobj"bz2._ReadableFileobj*∞
close!tarfile._Bz2ReadableFileobj.close""
builtins.object"builtins.object*D
self:
tarfile._Bz2ReadableFileobj"tarfile._Bz2ReadableFileobjz38z39z310z311z312z313j38j39j310j311j312j313ó
_Bz2WritableFileobjtarfile._Bz2WritableFileobj"bz2._WritableFileobj*∞
close!tarfile._Bz2WritableFileobj.close""
builtins.object"builtins.object*D
self:
tarfile._Bz2WritableFileobj"tarfile._Bz2WritableFileobjz38z39z310z311z312z313j38j39j310j311j312j313ø
ExFileObjecttarfile.ExFileObject"io.BufferedReader*È
__init__tarfile.ExFileObject.__init__"
None*6
self,
tarfile.ExFileObject"tarfile.ExFileObject*/
tarfile"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313j38j39j310j311j312j313£˚
TarFiletarfile.TarFile"builtins.object*·
__init__tarfile.TarFile.__init__"
None*,
self"
tarfile.TarFile"tarfile.TarFile*√
name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *”
mode∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *_
fileobjP
Union[tarfile._Fileobj,None]$
tarfile._Fileobj"tarfile._Fileobj
None *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *É
tarinfot
!Union[Type[tarfile.TarInfo],None]C
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None *W
copybufsizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z38z39z310z311z312z313*‚
	__enter__tarfile.TarFile.__enter__"M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile*OM
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFilez38z39z310z311z312z313*…
__exit__tarfile.TarFile.__exit__"
None*$"
tarfile.TarFile"tarfile.TarFile*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez38z39z310z311z312z313*ø
__iter__tarfile.TarFile.__iter__"W
 typing.Iterator[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"typing.Iterator*$"
tarfile.TarFile"tarfile.TarFilez38z39z310z311z312z313*ﬁ
opentarfile.TarFile.open"M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile*|
clss
Type[tarfile.TarFile.Self]M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile"type*√
name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *(
mode
builtins.str"builtins.str *å
fileobj}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None *+
bufsize
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *É
tarinfot
!Union[Type[tarfile.TarInfo],None]C
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:builtins.classmethodpz38z39z310z311z312z313*∫
taropentarfile.TarFile.taropen"M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile*|
clss
Type[tarfile.TarFile.Self]M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile"type*¡
name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None*”
mode∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *_
fileobjP
Union[tarfile._Fileobj,None]$
tarfile._Fileobj"tarfile._Fileobj
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *É
tarinfot
!Union[Type[tarfile.TarInfo],None]C
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:builtins.classmethodpz38z39z310z311z312z313*∏
xzopentarfile.TarFile.xzopen"M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile*|
clss
Type[tarfile.TarFile.Self]M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile"type*¡
name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None*Ñ
mode˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *å
fileobj}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None *R
presetD
Union[builtins.int,None]
builtins.int"builtins.int
None *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *É
tarinfot
!Union[Type[tarfile.TarInfo],None]C
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:builtins.classmethodpz38z39z310z311z312z313*º
	getmembertarfile.TarFile.getmember""
tarfile.TarInfo"tarfile.TarInfo*,
self"
tarfile.TarFile"tarfile.TarFile*&
name
builtins.str"builtins.strz38z39z310z311z312z313*«

getmemberstarfile.TarFile.getmembers"S
builtins.list[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"builtins.list*,
self"
tarfile.TarFile"tarfile.TarFilez38z39z310z311z312z313*∫
getnamestarfile.TarFile.getnames"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*,
self"
tarfile.TarFile"tarfile.TarFilez38z39z310z311z312z313*ø
listtarfile.TarFile.list"
None*,
self"
tarfile.TarFile"tarfile.TarFile*-
verbose
builtins.bool"builtins.bool *ù
membersç
*Union[builtins.list[tarfile.TarInfo],None]S
builtins.list[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"builtins.list
None z38z39z310z311z312z313*µ
nexttarfile.TarFile.next"M
Union[tarfile.TarInfo,None]"
tarfile.TarInfo"tarfile.TarInfo
None*,
self"
tarfile.TarFile"tarfile.TarFilez38z39z310z311z312z313*ù

extractalltarfile.TarFile.extractall"
None*,
self"
tarfile.TarFile"tarfile.TarFile*√
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath *£
membersì
,Union[typing.Iterable[tarfile.TarInfo],None]W
 typing.Iterable[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"typing.Iterable
None *3
numeric_owner
builtins.bool"builtins.bool z38z39z310z311z312z313*ô
extracttarfile.TarFile.extract"
None*,
self"
tarfile.TarFile"tarfile.TarFile*u
memberi
#Union[builtins.str,tarfile.TarInfo]
builtins.str"builtins.str"
tarfile.TarInfo"tarfile.TarInfo*√
path∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath */
	set_attrs
builtins.bool"builtins.bool *3
numeric_owner
builtins.bool"builtins.bool z38z39z310z311z312z313*À
_extract_membertarfile.TarFile._extract_member"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*,

targetpath
builtins.str"builtins.str*/
	set_attrs
builtins.bool"builtins.bool *3
numeric_owner
builtins.bool"builtins.bool z38z39z310z311z312z313*Í
extractfiletarfile.TarFile.extractfile"}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None*,
self"
tarfile.TarFile"tarfile.TarFile*u
memberi
#Union[builtins.str,tarfile.TarInfo]
builtins.str"builtins.str"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*Ò
makedirtarfile.TarFile.makedir"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz38z39z310z311z312z313*Û
makefiletarfile.TarFile.makefile"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz38z39z310z311z312z313*˘
makeunknowntarfile.TarFile.makeunknown"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz38z39z310z311z312z313*Û
makefifotarfile.TarFile.makefifo"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz38z39z310z311z312z313*Ò
makedevtarfile.TarFile.makedev"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz38z39z310z311z312z313*Û
makelinktarfile.TarFile.makelink"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz38z39z310z311z312z313*†
chowntarfile.TarFile.chown"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*1
numeric_owner
builtins.bool"builtins.boolz38z39z310z311z312z313*Ì
chmodtarfile.TarFile.chmod"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz38z39z310z311z312z313*Ì
utimetarfile.TarFile.utime"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*«

targetpath∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz38z39z310z311z312z313*ˇ
addtarfile.TarFile.add"
None*,
self"
tarfile.TarFile"tarfile.TarFile*Ù
nameÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*Œ
arcnameæ
DUnion[TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]],None]È
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath
None */
	recursive
builtins.bool"builtins.bool *ï
filterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z38z39z310z311z312z313*∂
addfiletarfile.TarFile.addfile"
None*,
self"
tarfile.TarFile"tarfile.TarFile*/
tarinfo"
tarfile.TarInfo"tarfile.TarInfo*å
fileobj}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None z38z39z310z311z312z313*¿

gettarinfotarfile.TarFile.gettarinfo""
tarfile.TarInfo"tarfile.TarInfo*,
self"
tarfile.TarFile"tarfile.TarFile*√
name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *S
arcnameD
Union[builtins.str,None]
builtins.str"builtins.str
None *å
fileobj}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None z38z39z310z311z312z313*r
closetarfile.TarFile.close"
None*,
self"
tarfile.TarFile"tarfile.TarFilez38z39z310z311z312z3132ç 
gzopentarfile.TarFile.gzopen≠
gzopentarfile.TarFile.gzopen"M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile*|
clss
Type[tarfile.TarFile.Self]M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile"type*¡
name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None*C
mode7
Literal[builtins.str]	
builtins.str"builtins.str *n
fileobj_
!Union[gzip._ReadableFileobj,None].
gzip._ReadableFileobj"gzip._ReadableFileobj
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *É
tarinfot
!Union[Type[tarfile.TarInfo],None]C
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overload:builtins.classmethodXpû
gzopentarfile.TarFile.gzopen"M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile*|
clss
Type[tarfile.TarFile.Self]M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile"type*¡
name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None*≥
mode®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*n
fileobj_
!Union[gzip._WritableFileobj,None].
gzip._WritableFileobj"gzip._WritableFileobj
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *É
tarinfot
!Union[Type[tarfile.TarInfo],None]C
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overload:builtins.classmethodXp"38"39"310"311"312"3132π 
bz2opentarfile.TarFile.bz2open≥
bz2opentarfile.TarFile.bz2open"M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile*|
clss
Type[tarfile.TarFile.Self]M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile"type*¡
name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None*≥
mode®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*Ä
fileobjq
'Union[tarfile._Bz2WritableFileobj,None]:
tarfile._Bz2WritableFileobj"tarfile._Bz2WritableFileobj
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *É
tarinfot
!Union[Type[tarfile.TarInfo],None]C
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overload:builtins.classmethodXp¬
bz2opentarfile.TarFile.bz2open"M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile*|
clss
Type[tarfile.TarFile.Self]M
tarfile.TarFile.Self"
tarfile.TarFile"tarfile.TarFile"tarfile.TarFile"type*¡
name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None*C
mode7
Literal[builtins.str]	
builtins.str"builtins.str *Ä
fileobjq
'Union[tarfile._Bz2ReadableFileobj,None]:
tarfile._Bz2ReadableFileobj"tarfile._Bz2ReadableFileobj
None *1
compresslevel
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *É
tarinfot
!Union[Type[tarfile.TarInfo],None]C
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None 0:typing.overload:builtins.classmethodXp"38"39"310"311"312"313j38j39j310j311j312j313rª
	OPEN_METHtarfile.TarFile.OPEN_METHw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*38*39*310*311*312*313rÒ
nametarfile.TarFile.name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None*38*39*310*311*312*313rÅ
modetarfile.TarFile.mode∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str*38*39*310*311*312*313rê
fileobjtarfile.TarFile.fileobjP
Union[tarfile._Fileobj,None]$
tarfile._Fileobj"tarfile._Fileobj
None*38*39*310*311*312*313rÇ
formattarfile.TarFile.formatD
Union[builtins.int,None]
builtins.int"builtins.int
None*38*39*310*311*312*313rÉ
tarinfotarfile.TarFile.tarinfoC
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type*38*39*310*311*312*313rè
dereferencetarfile.TarFile.dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*38*39*310*311*312*313rë
ignore_zerostarfile.TarFile.ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*38*39*310*311*312*313rÜ
encodingtarfile.TarFile.encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None*38*39*310*311*312*313rZ
errorstarfile.TarFile.errors
builtins.str"builtins.str*38*39*310*311*312*313rò

fileobjecttarfile.TarFile.fileobjectR
Type[tarfile.ExFileObject],
tarfile.ExFileObject"tarfile.ExFileObject"type*38*39*310*311*312*313rÖ
pax_headerstarfile.TarFile.pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None*38*39*310*311*312*313rÄ
debugtarfile.TarFile.debugD
Union[builtins.int,None]
builtins.int"builtins.int
None*38*39*310*311*312*313rä

errorleveltarfile.TarFile.errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None*38*39*310*311*312*313rZ
offsettarfile.TarFile.offset
builtins.int"builtins.int*38*39*310*311*312*313L
TarErrortarfile.TarError"builtins.Exceptionj38j39j310j311j312j313L
	ReadErrortarfile.ReadError"tarfile.TarErrorj38j39j310j311j312j313Z
CompressionErrortarfile.CompressionError"tarfile.TarErrorj38j39j310j311j312j313P
StreamErrortarfile.StreamError"tarfile.TarErrorj38j39j310j311j312j313R
ExtractErrortarfile.ExtractError"tarfile.TarErrorj38j39j310j311j312j313P
HeaderErrortarfile.HeaderError"tarfile.TarErrorj38j39j310j311j312j313ı@
TarInfotarfile.TarInfo"builtins.object*¢
__init__tarfile.TarInfo.__init__"
None*,
self"
tarfile.TarInfo"tarfile.TarInfo*(
name
builtins.str"builtins.str z38z39z310z311z312z313*ˇ
frombuftarfile.TarInfo.frombuf"M
tarfile.TarInfo.Self"
tarfile.TarInfo"tarfile.TarInfo"tarfile.TarInfo*|
clss
Type[tarfile.TarInfo.Self]M
tarfile.TarInfo.Self"
tarfile.TarInfo"tarfile.TarInfo"tarfile.TarInfo"type*Å
bufx
(Union[builtins.bytes,builtins.bytearray] 
builtins.bytes"builtins.bytes(
builtins.bytearray"builtins.bytearray**
encoding
builtins.str"builtins.str*(
errors
builtins.str"builtins.str0:builtins.classmethodpz38z39z310z311z312z313*ﬁ
fromtarfiletarfile.TarInfo.fromtarfile"M
tarfile.TarInfo.Self"
tarfile.TarInfo"tarfile.TarInfo"tarfile.TarInfo*|
clss
Type[tarfile.TarInfo.Self]M
tarfile.TarInfo.Self"
tarfile.TarInfo"tarfile.TarInfo"tarfile.TarInfo"type*/
tarfile"
tarfile.TarFile"tarfile.TarFile0:builtins.classmethodpz38z39z310z311z312z313*Œ
get_infotarfile.TarInfo.get_info"›
vtyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.str¥
YUnion[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int 
builtins.bytes"builtins.bytesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*‡
tobuftarfile.TarInfo.tobuf" 
builtins.bytes"builtins.bytes*,
self"
tarfile.TarInfo"tarfile.TarInfo*R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str z38z39z310z311z312z313*Á
create_ustar_header#tarfile.TarInfo.create_ustar_header" 
builtins.bytes"builtins.bytes*,
self"
tarfile.TarInfo"tarfile.TarInfo*Ë
info›
vtyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.str¥
YUnion[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int 
builtins.bytes"builtins.bytesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping**
encoding
builtins.str"builtins.str*(
errors
builtins.str"builtins.strz38z39z310z311z312z313*„
create_gnu_header!tarfile.TarInfo.create_gnu_header" 
builtins.bytes"builtins.bytes*,
self"
tarfile.TarInfo"tarfile.TarInfo*Ë
info›
vtyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.str¥
YUnion[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int 
builtins.bytes"builtins.bytesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping**
encoding
builtins.str"builtins.str*(
errors
builtins.str"builtins.strz38z39z310z311z312z313*π
create_pax_header!tarfile.TarInfo.create_pax_header" 
builtins.bytes"builtins.bytes*,
self"
tarfile.TarInfo"tarfile.TarInfo*Ë
info›
vtyping.Mapping[builtins.str,Union[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]]
builtins.str"builtins.str¥
YUnion[builtins.str,builtins.int,builtins.bytes,typing.Mapping[builtins.str,builtins.str]]
builtins.str"builtins.str
builtins.int"builtins.int 
builtins.bytes"builtins.bytesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping"typing.Mapping**
encoding
builtins.str"builtins.strz38z39z310z311z312z313*ı
create_pax_global_header(tarfile.TarInfo.create_pax_global_header" 
builtins.bytes"builtins.bytes*L
clsC
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type*à
pax_headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping0:builtins.classmethodpz38z39z310z311z312z313*ä
isfiletarfile.TarInfo.isfile"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*à
isregtarfile.TarInfo.isreg"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*é
issparsetarfile.TarInfo.issparse"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*à
isdirtarfile.TarInfo.isdir"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*à
issymtarfile.TarInfo.issym"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*à
islnktarfile.TarInfo.islnk"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*à
ischrtarfile.TarInfo.ischr"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*à
isblktarfile.TarInfo.isblk"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*ä
isfifotarfile.TarInfo.isfifo"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z313*à
isdevtarfile.TarInfo.isdev"
builtins.bool"builtins.bool*,
self"
tarfile.TarInfo"tarfile.TarInfoz38z39z310z311z312z3132‚
linkpathtarfile.TarInfo.linkpathâ
linkpathtarfile.TarInfo.linkpath"
builtins.str"builtins.str*,
self"
tarfile.TarInfo"tarfile.TarInfo0:builtins.propertyX`ì
linkpathtarfile.TarInfo.linkpath"
None*,
self"
tarfile.TarInfo"tarfile.TarInfo**
linkname
builtins.str"builtins.str0:.setter"38"39"310"311"312"313j38j39j310j311j312j313rV
nametarfile.TarInfo.name
builtins.str"builtins.str*38*39*310*311*312*313rV
pathtarfile.TarInfo.path
builtins.str"builtins.str*38*39*310*311*312*313rV
sizetarfile.TarInfo.size
builtins.int"builtins.int*38*39*310*311*312*313rX
mtimetarfile.TarInfo.mtime
builtins.int"builtins.int*38*39*310*311*312*313rZ
chksumtarfile.TarInfo.chksum
builtins.int"builtins.int*38*39*310*311*312*313r^
devmajortarfile.TarInfo.devmajor
builtins.int"builtins.int*38*39*310*311*312*313r^
devminortarfile.TarInfo.devminor
builtins.int"builtins.int*38*39*310*311*312*313rZ
offsettarfile.TarInfo.offset
builtins.int"builtins.int*38*39*310*311*312*313rd
offset_datatarfile.TarInfo.offset_data
builtins.int"builtins.int*38*39*310*311*312*313rà
sparsetarfile.TarInfo.sparseJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*38*39*310*311*312*313rç
tarfiletarfile.TarInfo.tarfileM
Union[tarfile.TarFile,None]"
tarfile.TarFile"tarfile.TarFile
None*38*39*310*311*312*313rV
modetarfile.TarInfo.mode
builtins.int"builtins.int*38*39*310*311*312*313rZ
typetarfile.TarInfo.type 
builtins.bytes"builtins.bytes*38*39*310*311*312*313r^
linknametarfile.TarInfo.linkname
builtins.str"builtins.str*38*39*310*311*312*313rT
uidtarfile.TarInfo.uid
builtins.int"builtins.int*38*39*310*311*312*313rT
gidtarfile.TarInfo.gid
builtins.int"builtins.int*38*39*310*311*312*313rX
unametarfile.TarInfo.uname
builtins.str"builtins.str*38*39*310*311*312*313rX
gnametarfile.TarInfo.gname
builtins.str"builtins.str*38*39*310*311*312*313rø
pax_headerstarfile.TarInfo.pax_headersw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping*38*39*310*311*312*313Ó
opentarfile.open""
tarfile.TarFile"tarfile.TarFile*√
name∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *(
mode
builtins.str"builtins.str *å
fileobj}
%Union[typing.IO[builtins.bytes],None]H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO
None *+
bufsize
builtins.int"builtins.int *R
formatD
Union[builtins.int,None]
builtins.int"builtins.int
None *É
tarinfot
!Union[Type[tarfile.TarInfo],None]C
Type[tarfile.TarInfo]"
tarfile.TarInfo"tarfile.TarInfo"type
None *Z
dereferenceG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *[
ignore_zerosG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None **
errors
builtins.str"builtins.str *–
pax_headersº
5Union[typing.Mapping[builtins.str,builtins.str],None]w
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping
None *Q
debugD
Union[builtins.int,None]
builtins.int"builtins.int
None *V

errorlevelD
Union[builtins.int,None]
builtins.int"builtins.int
None *Y
compresslevelD
Union[builtins.int,None]
builtins.int"builtins.int
None z38z39z310z311z312z313à

is_tarfiletarfile.is_tarfile"
builtins.bool"builtins.bool*¡
name∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz38Ú

is_tarfiletarfile.is_tarfile"
builtins.bool"builtins.bool*ó
nameå
ÑUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],typing.IO[builtins.bytes]]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IOz39z310z311z312z313*ü
__annotations__tarfile.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*Ç
__all__tarfile.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*P
NULtarfile.NUL 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*X
	BLOCKSIZEtarfile.BLOCKSIZE
builtins.int"builtins.int*38*39*310*311*312*313*Z

RECORDSIZEtarfile.RECORDSIZE
builtins.int"builtins.int*38*39*310*311*312*313*\
	GNU_MAGICtarfile.GNU_MAGIC 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*`
POSIX_MAGICtarfile.POSIX_MAGIC 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*\
LENGTH_NAMEtarfile.LENGTH_NAME
builtins.int"builtins.int*38*39*310*311*312*313*\
LENGTH_LINKtarfile.LENGTH_LINK
builtins.int"builtins.int*38*39*310*311*312*313*`
LENGTH_PREFIXtarfile.LENGTH_PREFIX
builtins.int"builtins.int*38*39*310*311*312*313*X
REGTYPEtarfile.REGTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*Z
AREGTYPEtarfile.AREGTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*X
LNKTYPEtarfile.LNKTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*X
SYMTYPEtarfile.SYMTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*Z
CONTTYPEtarfile.CONTTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*X
BLKTYPEtarfile.BLKTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*X
DIRTYPEtarfile.DIRTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*Z
FIFOTYPEtarfile.FIFOTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*X
CHRTYPEtarfile.CHRTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*j
GNUTYPE_LONGNAMEtarfile.GNUTYPE_LONGNAME 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*j
GNUTYPE_LONGLINKtarfile.GNUTYPE_LONGLINK 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*f
GNUTYPE_SPARSEtarfile.GNUTYPE_SPARSE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*X
XHDTYPEtarfile.XHDTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*X
XGLTYPEtarfile.XGLTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*h
SOLARIS_XHDTYPEtarfile.SOLARIS_XHDTYPE 
builtins.bytes"builtins.bytes*38*39*310*311*312*313*^
USTAR_FORMATtarfile.USTAR_FORMAT
builtins.int"builtins.int*38*39*310*311*312*313*Z

GNU_FORMATtarfile.GNU_FORMAT
builtins.int"builtins.int*38*39*310*311*312*313*Z

PAX_FORMATtarfile.PAX_FORMAT
builtins.int"builtins.int*38*39*310*311*312*313*b
DEFAULT_FORMATtarfile.DEFAULT_FORMAT
builtins.int"builtins.int*38*39*310*311*312*313*ö
SUPPORTED_TYPEStarfile.SUPPORTED_TYPESR
builtins.tuple[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.tuple*38*39*310*311*312*313*ñ
REGULAR_TYPEStarfile.REGULAR_TYPESR
builtins.tuple[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.tuple*38*39*310*311*312*313*é
	GNU_TYPEStarfile.GNU_TYPESR
builtins.tuple[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.tuple*38*39*310*311*312*313*ä

PAX_FIELDStarfile.PAX_FIELDSL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*38*39*310*311*312*313*ƒ
PAX_NUMBER_FIELDStarfile.PAX_NUMBER_FIELDSx
)builtins.dict[builtins.str,builtins.type]
builtins.str"builtins.str
builtins.type"builtins.type"builtins.dict*38*39*310*311*312*313*ê
PAX_NAME_FIELDStarfile.PAX_NAME_FIELDSH
builtins.set[builtins.str]
builtins.str"builtins.str"builtins.set*38*39*310*311*312*313*V
ENCODINGtarfile.ENCODING
builtins.str"builtins.str*38*39*310*311*312*313