
anyio._core._tasks®
_IgnoredTaskStatus%anyio._core._tasks._IgnoredTaskStatus"anyio.abc._tasks.TaskStatus*Õ
started-anyio._core._tasks._IgnoredTaskStatus.started"
None*X
selfN
%anyio._core._tasks._IgnoredTaskStatus"%anyio._core._tasks._IgnoredTaskStatus*/
value"
builtins.object"builtins.object €
CancelScopeanyio._core._tasks.CancelScope"builtins.object*Œ
__new__&anyio._core._tasks.CancelScope.__new__"@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope*y
clsp
$Type[anyio._core._tasks.CancelScope]@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope"type*0
deadline 
builtins.float"builtins.float *,
shield
builtins.bool"builtins.bool *Ö
cancel%anyio._core._tasks.CancelScope.cancel"
None*J
self@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope*¿
cancel_called,anyio._core._tasks.CancelScope.cancel_called"
builtins.bool"builtins.bool*J
self@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope0:builtins.property`*∆
cancelled_caught/anyio._core._tasks.CancelScope.cancelled_caught"
builtins.bool"builtins.bool*J
self@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope0:builtins.property`*ª
	__enter__(anyio._core._tasks.CancelScope.__enter__"@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope*B@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope*ô
__exit__'anyio._core._tasks.CancelScope.__exit__"G
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*B@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None2¥
deadline'anyio._core._tasks.CancelScope.deadline∫
deadline'anyio._core._tasks.CancelScope.deadline" 
builtins.float"builtins.float*J
self@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope0:builtins.propertyX`¡
deadline'anyio._core._tasks.CancelScope.deadline"
None*J
self@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope*+
value 
builtins.float"builtins.float0:.setter2§
shield%anyio._core._tasks.CancelScope.shield¥
shield%anyio._core._tasks.CancelScope.shield"
builtins.bool"builtins.bool*J
self@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope0:builtins.propertyX`ª
shield%anyio._core._tasks.CancelScope.shield"
None*J
self@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope*)
value
builtins.bool"builtins.bool0:.setter¯
move_on_after anyio._core._tasks.move_on_after"@
anyio._core._tasks.CancelScope"anyio._core._tasks.CancelScope*U
delayJ
Union[builtins.float,None] 
builtins.float"builtins.float
None*,
shield
builtins.bool"builtins.bool m
current_effective_deadline-anyio._core._tasks.current_effective_deadline" 
builtins.float"builtins.floats
create_task_group$anyio._core._tasks.create_task_group"8
anyio.abc._tasks.TaskGroup"anyio.abc._tasks.TaskGroup*é
__annotations__"anyio._core._tasks.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*ç
TASK_STATUS_IGNORED&anyio._core._tasks.TASK_STATUS_IGNOREDN
%anyio._core._tasks._IgnoredTaskStatus"%anyio._core._tasks._IgnoredTaskStatus