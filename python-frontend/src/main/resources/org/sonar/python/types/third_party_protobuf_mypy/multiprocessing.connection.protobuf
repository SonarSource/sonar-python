
multiprocessing.connection≠%
_ConnectionBase*multiprocessing.connection._ConnectionBase"builtins.object*›
__init__3multiprocessing.connection._ConnectionBase.__init__"
None*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*N
handleB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*.
readable
builtins.bool"builtins.bool *.
writable
builtins.bool"builtins.bool *÷
closed1multiprocessing.connection._ConnectionBase.closed"
builtins.bool"builtins.bool*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase0:builtins.property`*⁄
readable3multiprocessing.connection._ConnectionBase.readable"
builtins.bool"builtins.bool*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase0:builtins.property`*⁄
writable3multiprocessing.connection._ConnectionBase.writable"
builtins.bool"builtins.bool*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase0:builtins.property`*Ω
fileno1multiprocessing.connection._ConnectionBase.fileno"
builtins.int"builtins.int*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*ß
close0multiprocessing.connection._ConnectionBase.close"
None*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*í	

send_bytes5multiprocessing.connection._ConnectionBase.send_bytes"
None*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*‡
buf÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer**
offset
builtins.int"builtins.int *P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None *∑
send/multiprocessing.connection._ConnectionBase.send"
None*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*
obj
Any*†

recv_bytes5multiprocessing.connection._ConnectionBase.recv_bytes" 
builtins.bytes"builtins.bytes*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*U
	maxlengthD
Union[builtins.int,None]
builtins.int"builtins.int
None *ç
recv_bytes_into:multiprocessing.connection._ConnectionBase.recv_bytes_into"
builtins.int"builtins.int*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*
buf
Any**
offset
builtins.int"builtins.int *§
recv/multiprocessing.connection._ConnectionBase.recv"
Any*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*ñ
poll/multiprocessing.connection._ConnectionBase.poll"
builtins.bool"builtins.bool*b
selfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None *º
	__enter__4multiprocessing.connection._ConnectionBase.__enter__"π
/multiprocessing.connection._ConnectionBase.SelfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*ºπ
/multiprocessing.connection._ConnectionBase.SelfX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*˛
__exit__3multiprocessing.connection._ConnectionBase.__exit__"
None*ZX
*multiprocessing.connection._ConnectionBase"*multiprocessing.connection._ConnectionBase*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None_

Connection%multiprocessing.connection.Connection"*multiprocessing.connection._ConnectionBaseß
Listener#multiprocessing.connection.Listener"builtins.object*Ü
__init__,multiprocessing.connection.Listener.__init__"
None*T
selfJ
#multiprocessing.connection.Listener"#multiprocessing.connection.Listener*è
addressˇ
KUnion[TypeAlias[Union[builtins.str,Tuple[builtins.str,builtins.int]]],None]£
?TypeAlias[Union[builtins.str,Tuple[builtins.str,builtins.int]]]∏
4Union[builtins.str,Tuple[builtins.str,builtins.int]]
builtins.str"builtins.str`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"#multiprocessing.connection._Address
None *R
familyD
Union[builtins.str,None]
builtins.str"builtins.str
None *+
backlog
builtins.int"builtins.int *Y
authkeyJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None *⁄
accept*multiprocessing.connection.Listener.accept"N
%multiprocessing.connection.Connection"%multiprocessing.connection.Connection*T
selfJ
#multiprocessing.connection.Listener"#multiprocessing.connection.Listener*í
close)multiprocessing.connection.Listener.close"
None*T
selfJ
#multiprocessing.connection.Listener"#multiprocessing.connection.Listener*…
address+multiprocessing.connection.Listener.address"£
?TypeAlias[Union[builtins.str,Tuple[builtins.str,builtins.int]]]∏
4Union[builtins.str,Tuple[builtins.str,builtins.int]]
builtins.str"builtins.str`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"#multiprocessing.connection._Address*T
selfJ
#multiprocessing.connection.Listener"#multiprocessing.connection.Listener0:builtins.property`*±
last_accepted1multiprocessing.connection.Listener.last_accepted"ˇ
KUnion[TypeAlias[Union[builtins.str,Tuple[builtins.str,builtins.int]]],None]£
?TypeAlias[Union[builtins.str,Tuple[builtins.str,builtins.int]]]∏
4Union[builtins.str,Tuple[builtins.str,builtins.int]]
builtins.str"builtins.str`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"#multiprocessing.connection._Address
None*T
selfJ
#multiprocessing.connection.Listener"#multiprocessing.connection.Listener0:builtins.property`*˝
	__enter__-multiprocessing.connection.Listener.__enter__"ù
(multiprocessing.connection.Listener.SelfJ
#multiprocessing.connection.Listener"#multiprocessing.connection.Listener"#multiprocessing.connection.Listener*†ù
(multiprocessing.connection.Listener.SelfJ
#multiprocessing.connection.Listener"#multiprocessing.connection.Listener"#multiprocessing.connection.Listener*È
__exit__,multiprocessing.connection.Listener.__exit__"
None*LJ
#multiprocessing.connection.Listener"#multiprocessing.connection.Listener*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None⁄
deliver_challenge,multiprocessing.connection.deliver_challenge"
None*^

connectionN
%multiprocessing.connection.Connection"%multiprocessing.connection.Connection*-
authkey 
builtins.bytes"builtins.bytesÿ
answer_challenge+multiprocessing.connection.answer_challenge"
None*^

connectionN
%multiprocessing.connection.Connection"%multiprocessing.connection.Connection*-
authkey 
builtins.bytes"builtins.bytes§
waitmultiprocessing.connection.wait"√
Vbuiltins.list[Union[multiprocessing.connection.Connection,socket.socket,builtins.int]]Ÿ
GUnion[multiprocessing.connection.Connection,socket.socket,builtins.int]N
%multiprocessing.connection.Connection"%multiprocessing.connection.Connection
socket.socket"socket.socket
builtins.int"builtins.int"builtins.list*Ÿ
object_list«
Xtyping.Iterable[Union[multiprocessing.connection.Connection,socket.socket,builtins.int]]Ÿ
GUnion[multiprocessing.connection.Connection,socket.socket,builtins.int]N
%multiprocessing.connection.Connection"%multiprocessing.connection.Connection
socket.socket"socket.socket
builtins.int"builtins.int"typing.Iterable*Y
timeoutJ
Union[builtins.float,None] 
builtins.float"builtins.float
None ﬁ
Client!multiprocessing.connection.Client"N
%multiprocessing.connection.Connection"%multiprocessing.connection.Connection*±
address£
?TypeAlias[Union[builtins.str,Tuple[builtins.str,builtins.int]]]∏
4Union[builtins.str,Tuple[builtins.str,builtins.int]]
builtins.str"builtins.str`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int"#multiprocessing.connection._Address*R
familyD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y
authkeyJ
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None Œ
Pipemultiprocessing.connection.Pipe"ˆ
RTuple[multiprocessing.connection.Connection,multiprocessing.connection.Connection]N
%multiprocessing.connection.Connection"%multiprocessing.connection.ConnectionN
%multiprocessing.connection.Connection"%multiprocessing.connection.Connection*,
duplex
builtins.bool"builtins.bool *ñ
__annotations__*multiprocessing.connection.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*y
__all__"multiprocessing.connection.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list