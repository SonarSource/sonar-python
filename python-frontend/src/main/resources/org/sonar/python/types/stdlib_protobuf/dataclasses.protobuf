
dataclasses∑'
Typebuiltins.type"builtins.object*ü
__base__builtins.type.__base__"
builtins.type"builtins.type*(
self
builtins.type"builtins.type0:builtins.property`z38z39z310z311z312z313*ß
__basicsize__builtins.type.__basicsize__"
builtins.int"builtins.int*(
self
builtins.type"builtins.type0:builtins.property`z38z39z310z311z312z313*Í
__dict__builtins.type.__dict__"i
(types.MappingProxyType[builtins.str,Any]
builtins.str"builtins.str
Any"types.MappingProxyType*(
self
builtins.type"builtins.type0:builtins.property`z38z39z310z311z312z313*©
__dictoffset__builtins.type.__dictoffset__"
builtins.int"builtins.int*(
self
builtins.type"builtins.type0:builtins.property`z38z39z310z311z312z313*ü
	__flags__builtins.type.__flags__"
builtins.int"builtins.int*(
self
builtins.type"builtins.type0:builtins.property`z38z39z310z311z312z313*•
__itemsize__builtins.type.__itemsize__"
builtins.int"builtins.int*(
self
builtins.type"builtins.type0:builtins.property`z38z39z310z311z312z313*Œ
__mro__builtins.type.__mro__"O
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*(
self
builtins.type"builtins.type0:builtins.property`z38z39z310z311z312z313*Ÿ
__text_signature__ builtins.type.__text_signature__"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
builtins.type"builtins.type0:builtins.property`z38z39z310z311z312z313*Ø
__weakrefoffset__builtins.type.__weakrefoffset__"
builtins.int"builtins.int*(
self
builtins.type"builtins.type0:builtins.property`z38z39z310z311z312z313*ó
__call__builtins.type.__call__"
Any*(
self
builtins.type"builtins.type*
args
Any*
kwds
Anyz38z39z310z311z312z313*ñ
__subclasses__builtins.type.__subclasses__"w
builtins.list[_typeshed.Self]G
_typeshed.Self"
builtins.object"builtins.object"builtins.object"builtins.list*Q
selfG
_typeshed.Self"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313*≠
mrobuiltins.type.mro"M
builtins.list[builtins.type]
builtins.type"builtins.type"builtins.list*(
self
builtins.type"builtins.typez38z39z310z311z312z313*•
__instancecheck__builtins.type.__instancecheck__"
builtins.bool"builtins.bool*(
self
builtins.type"builtins.type*	
Anyz38z39z310z311z312z313*º
__subclasscheck__builtins.type.__subclasscheck__"
builtins.bool"builtins.bool*(
self
builtins.type"builtins.type* 
builtins.type"builtins.typez38z39z310z311z312z313*≥
__prepare__builtins.type.__prepare__"Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping*J
metacls=
Type[builtins.type]
builtins.type"builtins.type"type*
builtins.str"builtins.str*QO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*
kwds
Any0:builtins.classmethodpz38z39z310z311z312z313*É
__or__builtins.type.__or__""
types.UnionType"types.UnionType* 
builtins.type"builtins.type*	
Anyz310z311z312z313*Ö
__ror__builtins.type.__ror__""
types.UnionType"types.UnionType* 
builtins.type"builtins.type*	
Anyz310z311z312z3132°
__init__builtins.type.__init__ë
__init__builtins.type.__init__"
None*(
self
builtins.type"builtins.type*$"
builtins.object"builtins.object0:typing.overloadXÃ
__init__builtins.type.__init__"
None*(
self
builtins.type"builtins.type*
builtins.str"builtins.str*QO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*YW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
kwds
Any0:typing.overloadX"38"39"310"311"312"3132÷
__new__builtins.type.__new__√
__new__builtins.type.__new__"
builtins.type"builtins.type*F
cls=
Type[builtins.type]
builtins.type"builtins.type"type*$"
builtins.object"builtins.object0:typing.overloadX—
__new__builtins.type.__new__"G
_typeshed.Self"
builtins.object"builtins.object"builtins.object*p
clsg
Type[_typeshed.Self]G
_typeshed.Self"
builtins.object"builtins.object"builtins.object"type*
builtins.str"builtins.str*QO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*YW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
kwds
Any0:typing.overloadX"38"39"310"311"312"313j38j39j310j311j312j313rë
	__bases__builtins.type.__bases__O
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*38*39*310*311*312*313r`

__module__builtins.type.__module__
builtins.str"builtins.str*38*39*310*311*312*313rd
__qualname__builtins.type.__qualname__
builtins.str"builtins.str*38*39*310*311*312*313µ
_MISSING_TYPEdataclasses._MISSING_TYPE"	enum.EnumHj38j39j310j311j312j313r`
MISSING!dataclasses._MISSING_TYPE.MISSING
	enum.auto"	enum.auto*38*39*310*311*312*313°
_DefaultFactorydataclasses._DefaultFactory"builtins.object*ø
__call__$dataclasses._DefaultFactory.__call__"J
dataclasses._T_co"
builtins.object"builtins.object"builtins.object*§
selfô
.dataclasses._DefaultFactory[dataclasses._T_co]J
dataclasses._T_co"
builtins.object"builtins.object"builtins.object"dataclasses._DefaultFactoryz38z39z310z311z312z313PXj38j39j310j311j312j313æ
Fielddataclasses.Field"builtins.object*õ
__init__dataclasses.Field.__init__"
None*â
self
!dataclasses.Field[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"dataclasses.Field*T
defaultG
dataclasses._T"
builtins.object"builtins.object"builtins.object*`
default_factoryK
CallableType[builtins.function]&
builtins.function"builtins.function*(
init
builtins.bool"builtins.bool*(
repr
builtins.bool"builtins.bool*Q
hashG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*+
compare
builtins.bool"builtins.bool*I
metadata;
typing.Mapping[Any,Any]
Any
Any"typing.Mappingz38z39*‘
__init__dataclasses.Field.__init__"
None*â
self
!dataclasses.Field[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"dataclasses.Field*T
defaultG
dataclasses._T"
builtins.object"builtins.object"builtins.object*`
default_factoryK
CallableType[builtins.function]&
builtins.function"builtins.function*(
init
builtins.bool"builtins.bool*(
repr
builtins.bool"builtins.bool*Q
hashG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*+
compare
builtins.bool"builtins.bool*I
metadata;
typing.Mapping[Any,Any]
Any
Any"typing.Mapping*+
kw_only
builtins.bool"builtins.boolz310z311z312z313*±
__set_name__dataclasses.Field.__set_name__"
None*â
self
!dataclasses.Field[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"dataclasses.Field*'
owner
	Type[Any]
Any"type*&
name
builtins.str"builtins.strz38z39z310z311z312z313*Œ
__class_getitem__#dataclasses.Field.__class_getitem__"(
types.GenericAlias"types.GenericAlias*º
cls≤
'Type[dataclasses.Field[dataclasses._T]]
!dataclasses.Field[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"dataclasses.Field"type*
item
Anypz39z310z311z312z313Pj38j39j310j311j312j313rX
namedataclasses.Field.name
builtins.str"builtins.str*38*39*310*311*312*313r£
typedataclasses.Field.typeg
Type[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"type*38*39*310*311*312*313r®
defaultdataclasses.Field.defaultÂ
8Union[dataclasses._T,Literal[dataclasses._MISSING_TYPE]]G
dataclasses._T"
builtins.object"builtins.object"builtins.object^
"Literal[dataclasses._MISSING_TYPE]	6
dataclasses._MISSING_TYPE"dataclasses._MISSING_TYPE*38*39*310*311*312*313r¢
default_factory!dataclasses.Field.default_factoryœ
UUnion[dataclasses._DefaultFactory[dataclasses._T],Literal[dataclasses._MISSING_TYPE]]ì
+dataclasses._DefaultFactory[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"dataclasses._DefaultFactory^
"Literal[dataclasses._MISSING_TYPE]	6
dataclasses._MISSING_TYPE"dataclasses._MISSING_TYPE*38*39*310*311*312*313rZ
reprdataclasses.Field.repr
builtins.bool"builtins.bool*38*39*310*311*312*313rÉ
hashdataclasses.Field.hashG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None*38*39*310*311*312*313rZ
initdataclasses.Field.init
builtins.bool"builtins.bool*38*39*310*311*312*313r`
comparedataclasses.Field.compare
builtins.bool"builtins.bool*38*39*310*311*312*313rè
metadatadataclasses.Field.metadataK
types.MappingProxyType[Any,Any]
Any
Any"types.MappingProxyType*38*39*310*311*312*313rˆ
kw_onlydataclasses.Field.kw_onlyª
7Union[builtins.bool,Literal[dataclasses._MISSING_TYPE]]
builtins.bool"builtins.bool^
"Literal[dataclasses._MISSING_TYPE]	6
dataclasses._MISSING_TYPE"dataclasses._MISSING_TYPE*310*311*312*313k
FrozenInstanceErrordataclasses.FrozenInstanceError"builtins.AttributeErrorj38j39j310j311j312j313Ú
_InitVarMetadataclasses._InitVarMeta"builtins.type*¥
__getitem__$dataclasses._InitVarMeta.__getitem__"8
dataclasses.InitVar[Any]
Any"dataclasses.InitVar*64
dataclasses._InitVarMeta"dataclasses._InitVarMeta*	
Anyz38j38µ
InitVardataclasses.InitVar"builtins.object*“
__init__dataclasses.InitVar.__init__"
None*é
selfÉ
#dataclasses.InitVar[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"dataclasses.InitVar*q
typeg
Type[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"typez38z39z310z311z312z3132Ã
__class_getitem__%dataclasses.InitVar.__class_getitem__ê
__class_getitem__%dataclasses.InitVar.__class_getitem__"É
#dataclasses.InitVar[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"dataclasses.InitVar*√
clsπ
)Type[dataclasses.InitVar[dataclasses._T]]É
#dataclasses.InitVar[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"dataclasses.InitVar"type*q
typeg
Type[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"type0:typing.overloadXp‰
__class_getitem__%dataclasses.InitVar.__class_getitem__"8
dataclasses.InitVar[Any]
Any"dataclasses.InitVar*√
clsπ
)Type[dataclasses.InitVar[dataclasses._T]]É
#dataclasses.InitVar[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"dataclasses.InitVar"type*
type
Any0:typing.overloadXp"39"310"311"312"313@Pbdataclasses._InitVarMetaj38j39j310j311j312j313r•
typedataclasses.InitVar.typeg
Type[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"type*38*39*310*311*312*313C
KW_ONLYdataclasses.KW_ONLY"builtins.objectj310j311j312j313∞
fieldsdataclasses.fields"n
&builtins.tuple[dataclasses.Field[Any]]4
dataclasses.Field[Any]
Any"dataclasses.Field"builtins.tuple*Ö
class_or_instanceÌ
DUnion[_typeshed.DataclassInstance,Type[_typeshed.DataclassInstance]]:
_typeshed.DataclassInstance"_typeshed.DataclassInstanceg
!Type[_typeshed.DataclassInstance]:
_typeshed.DataclassInstance"_typeshed.DataclassInstance"typez38z39z310z311z312z313˚
make_dataclassdataclasses.make_dataclass"
builtins.type"builtins.type**
cls_name
builtins.str"builtins.str*„
fields÷
ltyping.Iterable[Union[builtins.str,Tuple[builtins.str,builtins.type],Tuple[builtins.str,builtins.type,Any]]]‘
[Union[builtins.str,Tuple[builtins.str,builtins.type],Tuple[builtins.str,builtins.type,Any]]
builtins.str"builtins.strc
!Tuple[builtins.str,builtins.type]
builtins.str"builtins.str
builtins.type"builtins.typep
%Tuple[builtins.str,builtins.type,Any]
builtins.str"builtins.str
builtins.type"builtins.type
Any"typing.Iterable*\
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple *§
	namespaceí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None **
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *(
eq
builtins.bool"builtins.bool *+
order
builtins.bool"builtins.bool *1
unsafe_hash
builtins.bool"builtins.bool *,
frozen
builtins.bool"builtins.bool z38z39Ü

make_dataclassdataclasses.make_dataclass"
builtins.type"builtins.type**
cls_name
builtins.str"builtins.str*„
fields÷
ltyping.Iterable[Union[builtins.str,Tuple[builtins.str,builtins.type],Tuple[builtins.str,builtins.type,Any]]]‘
[Union[builtins.str,Tuple[builtins.str,builtins.type],Tuple[builtins.str,builtins.type,Any]]
builtins.str"builtins.strc
!Tuple[builtins.str,builtins.type]
builtins.str"builtins.str
builtins.type"builtins.typep
%Tuple[builtins.str,builtins.type,Any]
builtins.str"builtins.str
builtins.type"builtins.type
Any"typing.Iterable*\
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple *§
	namespaceí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None **
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *(
eq
builtins.bool"builtins.bool *+
order
builtins.bool"builtins.bool *1
unsafe_hash
builtins.bool"builtins.bool *,
frozen
builtins.bool"builtins.bool *0

match_args
builtins.bool"builtins.bool *-
kw_only
builtins.bool"builtins.bool *+
slots
builtins.bool"builtins.bool z310∫

make_dataclassdataclasses.make_dataclass"
builtins.type"builtins.type**
cls_name
builtins.str"builtins.str*„
fields÷
ltyping.Iterable[Union[builtins.str,Tuple[builtins.str,builtins.type],Tuple[builtins.str,builtins.type,Any]]]‘
[Union[builtins.str,Tuple[builtins.str,builtins.type],Tuple[builtins.str,builtins.type,Any]]
builtins.str"builtins.strc
!Tuple[builtins.str,builtins.type]
builtins.str"builtins.str
builtins.type"builtins.typep
%Tuple[builtins.str,builtins.type,Any]
builtins.str"builtins.str
builtins.type"builtins.type
Any"typing.Iterable*\
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple *§
	namespaceí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None **
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *(
eq
builtins.bool"builtins.bool *+
order
builtins.bool"builtins.bool *1
unsafe_hash
builtins.bool"builtins.bool *,
frozen
builtins.bool"builtins.bool *0

match_args
builtins.bool"builtins.bool *-
kw_only
builtins.bool"builtins.bool *+
slots
builtins.bool"builtins.bool *2
weakref_slot
builtins.bool"builtins.bool z311ì
make_dataclassdataclasses.make_dataclass"
builtins.type"builtins.type**
cls_name
builtins.str"builtins.str*„
fields÷
ltyping.Iterable[Union[builtins.str,Tuple[builtins.str,builtins.type],Tuple[builtins.str,builtins.type,Any]]]‘
[Union[builtins.str,Tuple[builtins.str,builtins.type],Tuple[builtins.str,builtins.type,Any]]
builtins.str"builtins.strc
!Tuple[builtins.str,builtins.type]
builtins.str"builtins.str
builtins.type"builtins.typep
%Tuple[builtins.str,builtins.type,Any]
builtins.str"builtins.str
builtins.type"builtins.type
Any"typing.Iterable*\
basesO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple *§
	namespaceí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None **
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *(
eq
builtins.bool"builtins.bool *+
order
builtins.bool"builtins.bool *1
unsafe_hash
builtins.bool"builtins.bool *,
frozen
builtins.bool"builtins.bool *0

match_args
builtins.bool"builtins.bool *-
kw_only
builtins.bool"builtins.bool *+
slots
builtins.bool"builtins.bool *2
weakref_slot
builtins.bool"builtins.bool *R
moduleD
Union[builtins.str,None]
builtins.str"builtins.str
None z312z313æ
replacedataclasses.replace"t
dataclasses._DataclassT:
_typeshed.DataclassInstance"_typeshed.DataclassInstance"_typeshed.DataclassInstance*vt
dataclasses._DataclassT:
_typeshed.DataclassInstance"_typeshed.DataclassInstance"_typeshed.DataclassInstance*
changes
Anyz38z39z310z311z312z313"´
asdictdataclasses.asdictœ
asdictdataclasses.asdict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*C
obj:
_typeshed.DataclassInstance"_typeshed.DataclassInstance0:typing.overloadXû
asdictdataclasses.asdict"G
dataclasses._T"
builtins.object"builtins.object"builtins.object*C
obj:
_typeshed.DataclassInstance"_typeshed.DataclassInstance*]
dict_factoryK
CallableType[builtins.function]&
builtins.function"builtins.function0:typing.overloadX"38"39"310"311"312"313"â
astupledataclasses.astuple®
astupledataclasses.astuple".
builtins.tuple[Any]
Any"builtins.tuple*C
obj:
_typeshed.DataclassInstance"_typeshed.DataclassInstance0:typing.overloadX°
astupledataclasses.astuple"G
dataclasses._T"
builtins.object"builtins.object"builtins.object*C
obj:
_typeshed.DataclassInstance"_typeshed.DataclassInstance*^
tuple_factoryK
CallableType[builtins.function]&
builtins.function"builtins.function0:typing.overloadX"38"39"310"311"312"313"‚
	dataclassdataclasses.dataclassê
	dataclassdataclasses.dataclass"K
CallableType[builtins.function]&
builtins.function"builtins.function*

None0:typing.overloadXã
	dataclassdataclasses.dataclass"g
Type[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"type*ig
Type[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"type0:typing.overloadXî
	dataclassdataclasses.dataclass"K
CallableType[builtins.function]&
builtins.function"builtins.function**
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *(
eq
builtins.bool"builtins.bool *+
order
builtins.bool"builtins.bool *1
unsafe_hash
builtins.bool"builtins.bool *,
frozen
builtins.bool"builtins.bool 0:typing.overloadX"38"39"Ì
	dataclassdataclasses.dataclassê
	dataclassdataclasses.dataclass"K
CallableType[builtins.function]&
builtins.function"builtins.function*

None0:typing.overloadXã
	dataclassdataclasses.dataclass"g
Type[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"type*ig
Type[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"type0:typing.overloadX¢
	dataclassdataclasses.dataclass"K
CallableType[builtins.function]&
builtins.function"builtins.function**
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *(
eq
builtins.bool"builtins.bool *+
order
builtins.bool"builtins.bool *1
unsafe_hash
builtins.bool"builtins.bool *,
frozen
builtins.bool"builtins.bool *0

match_args
builtins.bool"builtins.bool *-
kw_only
builtins.bool"builtins.bool *+
slots
builtins.bool"builtins.bool 0:typing.overloadX"310"´
	dataclassdataclasses.dataclassê
	dataclassdataclasses.dataclass"K
CallableType[builtins.function]&
builtins.function"builtins.function*

None0:typing.overloadXã
	dataclassdataclasses.dataclass"g
Type[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"type*ig
Type[dataclasses._T]G
dataclasses._T"
builtins.object"builtins.object"builtins.object"type0:typing.overloadX÷
	dataclassdataclasses.dataclass"K
CallableType[builtins.function]&
builtins.function"builtins.function**
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *(
eq
builtins.bool"builtins.bool *+
order
builtins.bool"builtins.bool *1
unsafe_hash
builtins.bool"builtins.bool *,
frozen
builtins.bool"builtins.bool *0

match_args
builtins.bool"builtins.bool *-
kw_only
builtins.bool"builtins.bool *+
slots
builtins.bool"builtins.bool *2
weakref_slot
builtins.bool"builtins.bool 0:typing.overloadX"311"312"313"ü
fielddataclasses.field™
fielddataclasses.field"G
dataclasses._T"
builtins.object"builtins.object"builtins.object*T
defaultG
dataclasses._T"
builtins.object"builtins.object"builtins.object**
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *S
hashG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
compare
builtins.bool"builtins.bool *~
metadatan
#Union[typing.Mapping[Any,Any],None];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping
None 0:typing.overloadX∂
fielddataclasses.field"G
dataclasses._T"
builtins.object"builtins.object"builtins.object*`
default_factoryK
CallableType[builtins.function]&
builtins.function"builtins.function**
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *S
hashG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
compare
builtins.bool"builtins.bool *~
metadatan
#Union[typing.Mapping[Any,Any],None];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping
None 0:typing.overloadXî
fielddataclasses.field"
Any**
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *S
hashG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
compare
builtins.bool"builtins.bool *~
metadatan
#Union[typing.Mapping[Any,Any],None];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping
None 0:typing.overloadX"38"39"∏
fielddataclasses.fieldŸ
fielddataclasses.field"G
dataclasses._T"
builtins.object"builtins.object"builtins.object*T
defaultG
dataclasses._T"
builtins.object"builtins.object"builtins.object**
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *S
hashG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
compare
builtins.bool"builtins.bool *~
metadatan
#Union[typing.Mapping[Any,Any],None];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping
None *-
kw_only
builtins.bool"builtins.bool 0:typing.overloadXÂ
fielddataclasses.field"G
dataclasses._T"
builtins.object"builtins.object"builtins.object*`
default_factoryK
CallableType[builtins.function]&
builtins.function"builtins.function**
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *S
hashG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
compare
builtins.bool"builtins.bool *~
metadatan
#Union[typing.Mapping[Any,Any],None];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping
None *-
kw_only
builtins.bool"builtins.bool 0:typing.overloadX√
fielddataclasses.field"
Any**
init
builtins.bool"builtins.bool **
repr
builtins.bool"builtins.bool *S
hashG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *-
compare
builtins.bool"builtins.bool *~
metadatan
#Union[typing.Mapping[Any,Any],None];
typing.Mapping[Any,Any]
Any
Any"typing.Mapping
None *-
kw_only
builtins.bool"builtins.bool 0:typing.overloadX"310"311"312"313"õ
is_dataclassdataclasses.is_dataclassæ
is_dataclassdataclasses.is_dataclass":
Literal[builtins.bool]	
builtins.bool"builtins.bool*C
obj:
_typeshed.DataclassInstance"_typeshed.DataclassInstance0:typing.overloadXÜ
is_dataclassdataclasses.is_dataclass"
builtins.bool"builtins.bool*'
obj
builtins.type"builtins.type0:typing.overloadXä
is_dataclassdataclasses.is_dataclass"
builtins.bool"builtins.bool*+
obj"
builtins.object"builtins.object0:typing.overloadX"38"39"310"311"312"313*£
__annotations__dataclasses.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*Ü
__all__dataclasses.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*r
MISSINGdataclasses.MISSING6
dataclasses._MISSING_TYPE"dataclasses._MISSING_TYPE*38*39*310*311*312*313