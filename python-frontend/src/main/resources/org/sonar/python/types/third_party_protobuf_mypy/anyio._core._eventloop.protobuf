
anyio._core._eventloopø
runanyio._core._eventloop.run"X
anyio._core._eventloop.T_Retval"
builtins.object"builtins.object"builtins.object*U
funcK
CallableType[builtins.function]&
builtins.function"builtins.function*
args
Any*+
backend
builtins.str"builtins.str *™
backend_optionsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None §
sleepanyio._core._eventloop.sleep"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*+
delay 
builtins.float"builtins.floatHá
sleep_forever$anyio._core._eventloop.sleep_forever"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.CoroutineH≥
sleep_until"anyio._core._eventloop.sleep_until"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.Coroutine*.
deadline 
builtins.float"builtins.floatHU
current_time#anyio._core._eventloop.current_time" 
builtins.float"builtins.floatâ
get_all_backends'anyio._core._eventloop.get_all_backends"L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple£
get_cancelled_exc_class.anyio._core._eventloop.get_cancelled_exc_class"X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"typeÓ
claim_worker_thread*anyio._core._eventloop.claim_worker_thread"P
typing.Generator[Any,None,None]
Any
None
None"typing.Generator*å
backend_classy
'Type[anyio.abc._eventloop.AsyncBackend]F
!anyio.abc._eventloop.AsyncBackend"!anyio.abc._eventloop.AsyncBackend"type*-
token"
builtins.object"builtins.object0:contextlib.contextmanagerì
get_async_backend(anyio._core._eventloop.get_async_backend"y
'Type[anyio.abc._eventloop.AsyncBackend]F
!anyio.abc._eventloop.AsyncBackend"!anyio.abc._eventloop.AsyncBackend"type*Y
asynclib_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *í
__annotations__&anyio._core._eventloop.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*ç
BACKENDSanyio._core._eventloop.BACKENDS`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str*m
PosArgsTanyio._core._eventloop.PosArgsT@
typing_extensions.TypeVarTuple"typing_extensions.TypeVarTuple*W
threadlocals#anyio._core._eventloop.threadlocals"
threading.local"threading.local*©
loaded_backends&anyio._core._eventloop.loaded_backendsÌ
Cbuiltins.dict[builtins.str,Type[anyio.abc._eventloop.AsyncBackend]]
builtins.str"builtins.stry
'Type[anyio.abc._eventloop.AsyncBackend]F
!anyio.abc._eventloop.AsyncBackend"!anyio.abc._eventloop.AsyncBackend"type"builtins.dict