
pandas._typing› 
type_tbuiltins.type"builtins.object*É
__base__builtins.type.__base__"
builtins.type"builtins.type*(
self
builtins.type"builtins.type0:builtins.property`*ã
__basicsize__builtins.type.__basicsize__"
builtins.int"builtins.int*(
self
builtins.type"builtins.type0:builtins.property`*Œ
__dict__builtins.type.__dict__"i
(types.MappingProxyType[builtins.str,Any]
builtins.str"builtins.str
Any"types.MappingProxyType*(
self
builtins.type"builtins.type0:builtins.property`*ç
__dictoffset__builtins.type.__dictoffset__"
builtins.int"builtins.int*(
self
builtins.type"builtins.type0:builtins.property`*É
	__flags__builtins.type.__flags__"
builtins.int"builtins.int*(
self
builtins.type"builtins.type0:builtins.property`*â
__itemsize__builtins.type.__itemsize__"
builtins.int"builtins.int*(
self
builtins.type"builtins.type0:builtins.property`*≤
__mro__builtins.type.__mro__"O
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*(
self
builtins.type"builtins.type0:builtins.property`*Ω
__text_signature__ builtins.type.__text_signature__"D
Union[builtins.str,None]
builtins.str"builtins.str
None*(
self
builtins.type"builtins.type0:builtins.property`*ì
__weakrefoffset__builtins.type.__weakrefoffset__"
builtins.int"builtins.int*(
self
builtins.type"builtins.type0:builtins.property`*{
__call__builtins.type.__call__"
Any*(
self
builtins.type"builtins.type*
args
Any*
kwds
Any*˙
__subclasses__builtins.type.__subclasses__"w
builtins.list[_typeshed.Self]G
_typeshed.Self"
builtins.object"builtins.object"builtins.object"builtins.list*Q
selfG
_typeshed.Self"
builtins.object"builtins.object"builtins.object*ë
mrobuiltins.type.mro"M
builtins.list[builtins.type]
builtins.type"builtins.type"builtins.list*(
self
builtins.type"builtins.type*â
__instancecheck__builtins.type.__instancecheck__"
builtins.bool"builtins.bool*(
self
builtins.type"builtins.type*	
Any*†
__subclasscheck__builtins.type.__subclasscheck__"
builtins.bool"builtins.bool*(
self
builtins.type"builtins.type* 
builtins.type"builtins.type*ó
__prepare__builtins.type.__prepare__"Ä
,typing.Mapping[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object"typing.Mapping*J
metacls=
Type[builtins.type]
builtins.type"builtins.type"type*
builtins.str"builtins.str*QO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*
kwds
Any0:builtins.classmethodp2Ö
__init__builtins.type.__init__ë
__init__builtins.type.__init__"
None*(
self
builtins.type"builtins.type*$"
builtins.object"builtins.object0:typing.overloadXÃ
__init__builtins.type.__init__"
None*(
self
builtins.type"builtins.type*
builtins.str"builtins.str*QO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*YW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
kwds
Any0:typing.overloadX2∫
__new__builtins.type.__new__√
__new__builtins.type.__new__"
builtins.type"builtins.type*F
cls=
Type[builtins.type]
builtins.type"builtins.type"type*$"
builtins.object"builtins.object0:typing.overloadX—
__new__builtins.type.__new__"G
_typeshed.Self"
builtins.object"builtins.object"builtins.object*p
clsg
Type[_typeshed.Self]G
_typeshed.Self"
builtins.object"builtins.object"builtins.object"type*
builtins.str"builtins.str*QO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple*YW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
kwds
Any0:typing.overloadXru
	__bases__builtins.type.__bases__O
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuplerD

__module__builtins.type.__module__
builtins.str"builtins.strrH
__qualname__builtins.type.__qualname__
builtins.str"builtins.strF
YearMonthDayDictpandas._typing.YearMonthDayDict"typing._TypedDictF
FulldatetimeDictpandas._typing.FulldatetimeDict"typing._TypedDict¡

BaseBufferpandas._typing.BaseBuffer"builtins.object*ù
modepandas._typing.BaseBuffer.mode"
builtins.str"builtins.str*@
self6
pandas._typing.BaseBuffer"pandas._typing.BaseBuffer0:builtins.property`*»
seekpandas._typing.BaseBuffer.seek"
builtins.int"builtins.int*@
self6
pandas._typing.BaseBuffer"pandas._typing.BaseBuffer*
builtins.int"builtins.int* 
builtins.int"builtins.int *ê
seekable"pandas._typing.BaseBuffer.seekable"
builtins.bool"builtins.bool*@
self6
pandas._typing.BaseBuffer"pandas._typing.BaseBuffer*Ü
tellpandas._typing.BaseBuffer.tell"
builtins.int"builtins.int*@
self6
pandas._typing.BaseBuffer"pandas._typing.BaseBufferXò

ReadBufferpandas._typing.ReadBuffer"pandas._typing.BaseBuffer*œ
readpandas._typing.ReadBuffer.read"R
pandas._typing.AnyStr_cov"
builtins.object"builtins.object"builtins.object*∞
self•
4pandas._typing.ReadBuffer[pandas._typing.AnyStr_cov]R
pandas._typing.AnyStr_cov"
builtins.object"builtins.object"builtins.object"pandas._typing.ReadBuffer* 
builtins.int"builtins.int PXÚ
WriteBufferpandas._typing.WriteBuffer"pandas._typing.BaseBuffer*Ω
write pandas._typing.WriteBuffer.write"
Any*≤
selfß
5pandas._typing.WriteBuffer[pandas._typing.AnyStr_con]R
pandas._typing.AnyStr_con"
builtins.object"builtins.object"builtins.object"pandas._typing.WriteBuffer*TR
pandas._typing.AnyStr_con"
builtins.object"builtins.object"builtins.object*Á
flush pandas._typing.WriteBuffer.flush"
Any*≤
selfß
5pandas._typing.WriteBuffer[pandas._typing.AnyStr_con]R
pandas._typing.AnyStr_con"
builtins.object"builtins.object"builtins.object"pandas._typing.WriteBufferPX˜
ReadPickleBufferpandas._typing.ReadPickleBuffer"pandas._typing.ReadBuffer*§
readline(pandas._typing.ReadPickleBuffer.readline" 
builtins.bytes"builtins.bytes*L
selfB
pandas._typing.ReadPickleBuffer"pandas._typing.ReadPickleBufferX≠

ReadCsvBufferpandas._typing.ReadCsvBuffer"pandas._typing.ReadBuffer*ˆ
__iter__%pandas._typing.ReadCsvBuffer.__iter__"ë
*typing.Iterator[pandas._typing.AnyStr_cov]R
pandas._typing.AnyStr_cov"
builtins.object"builtins.object"builtins.object"typing.Iterator*Æ´
7pandas._typing.ReadCsvBuffer[pandas._typing.AnyStr_cov]R
pandas._typing.AnyStr_cov"
builtins.object"builtins.object"builtins.object"pandas._typing.ReadCsvBuffer*Ñ
fileno#pandas._typing.ReadCsvBuffer.fileno"
builtins.int"builtins.int*∂
self´
7pandas._typing.ReadCsvBuffer[pandas._typing.AnyStr_cov]R
pandas._typing.AnyStr_cov"
builtins.object"builtins.object"builtins.object"pandas._typing.ReadCsvBuffer*æ
readline%pandas._typing.ReadCsvBuffer.readline"R
pandas._typing.AnyStr_cov"
builtins.object"builtins.object"builtins.object*∂
self´
7pandas._typing.ReadCsvBuffer[pandas._typing.AnyStr_cov]R
pandas._typing.AnyStr_cov"
builtins.object"builtins.object"builtins.object"pandas._typing.ReadCsvBuffer*ù
closed#pandas._typing.ReadCsvBuffer.closed"
builtins.bool"builtins.bool*∂
self´
7pandas._typing.ReadCsvBuffer[pandas._typing.AnyStr_cov]R
pandas._typing.AnyStr_cov"
builtins.object"builtins.object"builtins.object"pandas._typing.ReadCsvBuffer0:builtins.property`PX∆
WriteExcelBufferpandas._typing.WriteExcelBuffer"pandas._typing.WriteBuffer*Ú
truncate(pandas._typing.WriteExcelBuffer.truncate"
builtins.int"builtins.int*L
selfB
pandas._typing.WriteExcelBuffer"pandas._typing.WriteExcelBuffer*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None XP
_WindowingNumbaKwargs$pandas._typing._WindowingNumbaKwargs"typing._TypedDictD
StyleExportDictpandas._typing.StyleExportDict"typing._TypedDict*ä
__annotations__pandas._typing.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
npnumpy *
nptnumpy.typing *
pdpandas *m
__all__pandas._typing.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list