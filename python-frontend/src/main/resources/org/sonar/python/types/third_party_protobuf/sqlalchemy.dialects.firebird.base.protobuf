
!sqlalchemy.dialects.firebird.base„
BIGINTsqlalchemy.sql.sqltypes.BIGINT""sqlalchemy.sql.sqltypes.BigIntegerj38j39j310j311j312j313ry
__visit_name__-sqlalchemy.sql.sqltypes.BIGINT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313ﬁ
BLOBsqlalchemy.sql.sqltypes.BLOB"#sqlalchemy.sql.sqltypes.LargeBinaryj38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.BLOB.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313◊
DATEsqlalchemy.sql.sqltypes.DATE"sqlalchemy.sql.sqltypes.Datej38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.DATE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313€
FLOATsqlalchemy.sql.sqltypes.FLOAT"sqlalchemy.sql.sqltypes.Floatj38j39j310j311j312j313rx
__visit_name__,sqlalchemy.sql.sqltypes.FLOAT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313„
INTEGERsqlalchemy.sql.sqltypes.INTEGER"sqlalchemy.sql.sqltypes.Integerj38j39j310j311j312j313rz
__visit_name__.sqlalchemy.sql.sqltypes.INTEGER.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313„
NUMERICsqlalchemy.sql.sqltypes.NUMERIC"sqlalchemy.sql.sqltypes.Numericj38j39j310j311j312j313rz
__visit_name__.sqlalchemy.sql.sqltypes.NUMERIC.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313Î
SMALLINT sqlalchemy.sql.sqltypes.SMALLINT"$sqlalchemy.sql.sqltypes.SmallIntegerj38j39j310j311j312j313r{
__visit_name__/sqlalchemy.sql.sqltypes.SMALLINT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313◊
TEXTsqlalchemy.sql.sqltypes.TEXT"sqlalchemy.sql.sqltypes.Textj38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.TEXT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313◊
TIMEsqlalchemy.sql.sqltypes.TIME"sqlalchemy.sql.sqltypes.Timej38j39j310j311j312j313rw
__visit_name__+sqlalchemy.sql.sqltypes.TIME.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313¿
	TIMESTAMP!sqlalchemy.sql.sqltypes.TIMESTAMP" sqlalchemy.sql.sqltypes.DateTime*ﬁ
__init__*sqlalchemy.sql.sqltypes.TIMESTAMP.__init__"
None*P
selfF
!sqlalchemy.sql.sqltypes.TIMESTAMP"!sqlalchemy.sql.sqltypes.TIMESTAMP*.
timezone
builtins.bool"builtins.bool z38z39z310z311z312z313*s
get_dbapi_type0sqlalchemy.sql.sqltypes.TIMESTAMP.get_dbapi_type*
self*	
dbapiz38z39z310z311z312z313j38j39j310j311j312j313r|
__visit_name__0sqlalchemy.sql.sqltypes.TIMESTAMP.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313ˇ
Integersqlalchemy.sql.sqltypes.Integer"0sqlalchemy.sql.sqltypes._LookupExpressionAdapter""sqlalchemy.sql.type_api.TypeEngine*q
get_dbapi_type.sqlalchemy.sql.sqltypes.Integer.get_dbapi_type*
self*	
dbapiz38z39z310z311z312z313*w
python_type+sqlalchemy.sql.sqltypes.Integer.python_type*
self0:builtins.property`z38z39z310z311z312z313*y
literal_processor1sqlalchemy.sql.sqltypes.Integer.literal_processor*
self*
dialectz38z39z310z311z312z313j38j39j310j311j312j313rz
__visit_name__.sqlalchemy.sql.sqltypes.Integer.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313±
_StringType-sqlalchemy.dialects.firebird.base._StringType"sqlalchemy.sql.sqltypes.String*œ
__init__6sqlalchemy.dialects.firebird.base._StringType.__init__"
None*h
self^
-sqlalchemy.dialects.firebird.base._StringType"-sqlalchemy.dialects.firebird.base._StringType*j
charset[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313j38j39j310j311j312j313re
charset5sqlalchemy.dialects.firebird.base._StringType.charset
Any*38*39*310*311*312*313
VARCHAR)sqlalchemy.dialects.firebird.base.VARCHAR"-sqlalchemy.dialects.firebird.base._StringType"sqlalchemy.sql.sqltypes.VARCHAR*∆
__init__2sqlalchemy.dialects.firebird.base.VARCHAR.__init__"
None*`
selfV
)sqlalchemy.dialects.firebird.base.VARCHAR")sqlalchemy.dialects.firebird.base.VARCHAR*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313j38j39j310j311j312j313rÑ
__visit_name__8sqlalchemy.dialects.firebird.base.VARCHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313€
CHAR&sqlalchemy.dialects.firebird.base.CHAR"-sqlalchemy.dialects.firebird.base._StringType"sqlalchemy.sql.sqltypes.CHAR*Ω
__init__/sqlalchemy.dialects.firebird.base.CHAR.__init__"
None*Z
selfP
&sqlalchemy.dialects.firebird.base.CHAR"&sqlalchemy.dialects.firebird.base.CHAR*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313j38j39j310j311j312j313rÅ
__visit_name__5sqlalchemy.dialects.firebird.base.CHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313˛
_FBDateTime-sqlalchemy.dialects.firebird.base._FBDateTime" sqlalchemy.sql.sqltypes.DateTime*Å
bind_processor<sqlalchemy.dialects.firebird.base._FBDateTime.bind_processor*
self*
dialectz38z39z310z311z312z313j38j39j310j311j312j313Ω
FBTypeCompiler0sqlalchemy.dialects.firebird.base.FBTypeCompiler"+sqlalchemy.sql.compiler.GenericTypeCompiler*à
visit_boolean>sqlalchemy.dialects.firebird.base.FBTypeCompiler.visit_boolean*
self*	
type_*
kwz38z39z310z311z312z313*ä
visit_datetime?sqlalchemy.dialects.firebird.base.FBTypeCompiler.visit_datetime*
self*	
type_*
kwz38z39z310z311z312z313*Ç

visit_TEXT;sqlalchemy.dialects.firebird.base.FBTypeCompiler.visit_TEXT*
self*	
type_*
kwz38z39z310z311z312z313*Ç

visit_BLOB;sqlalchemy.dialects.firebird.base.FBTypeCompiler.visit_BLOB*
self*	
type_*
kwz38z39z310z311z312z313*Ç

visit_CHAR;sqlalchemy.dialects.firebird.base.FBTypeCompiler.visit_CHAR*
self*	
type_*
kwz38z39z310z311z312z313*à
visit_VARCHAR>sqlalchemy.dialects.firebird.base.FBTypeCompiler.visit_VARCHAR*
self*	
type_*
kwz38z39z310z311z312z313j38j39j310j311j312j313¶

FBCompiler,sqlalchemy.dialects.firebird.base.FBCompiler"#sqlalchemy.sql.compiler.SQLCompiler*É
visit_now_func;sqlalchemy.dialects.firebird.base.FBCompiler.visit_now_func*
self*
fn*
kwz38z39z310z311z312z313*≠
visit_startswith_op_binaryGsqlalchemy.dialects.firebird.base.FBCompiler.visit_startswith_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313*µ
visit_not_startswith_op_binaryKsqlalchemy.dialects.firebird.base.FBCompiler.visit_not_startswith_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313*ô
visit_mod_binary=sqlalchemy.dialects.firebird.base.FBCompiler.visit_mod_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313*´
visit_alias8sqlalchemy.dialects.firebird.base.FBCompiler.visit_alias"
Any*f
self\
,sqlalchemy.dialects.firebird.base.FBCompiler",sqlalchemy.dialects.firebird.base.FBCompiler*
alias
Any*,
asfrom
builtins.bool"builtins.bool *
kwargs
Anyz38z39z310z311z312z313*ë
visit_substring_funcAsqlalchemy.dialects.firebird.base.FBCompiler.visit_substring_func*
self*
func*
kwz38z39z310z311z312z313*è
visit_length_func>sqlalchemy.dialects.firebird.base.FBCompiler.visit_length_func*
self*
function*
kwz38z39z310z311z312z313*â
function_argspec=sqlalchemy.dialects.firebird.base.FBCompiler.function_argspec*
self*
func*
kwz38z39z310z311z312z313*o
default_from9sqlalchemy.dialects.firebird.base.FBCompiler.default_from*
selfz38z39z310z311z312z313*Ñ
visit_sequence;sqlalchemy.dialects.firebird.base.FBCompiler.visit_sequence*
self*
seq*
kwz38z39z310z311z312z313*ï
get_select_precolumnsBsqlalchemy.dialects.firebird.base.FBCompiler.get_select_precolumns*
self*

select*
kwz38z39z310z311z312z313*É
limit_clause9sqlalchemy.dialects.firebird.base.FBCompiler.limit_clause*
self*

select*
kwz38z39z310z311z312z313*ï
returning_clause=sqlalchemy.dialects.firebird.base.FBCompiler.returning_clause*
self*
stmt*
returning_colsz38z39z310z311z312z313j38j39j310j311j312j313rã
ansi_bind_rules<sqlalchemy.dialects.firebird.base.FBCompiler.ansi_bind_rules
builtins.bool"builtins.bool*38*39*310*311*312*313rÇ
visit_char_length_funcCsqlalchemy.dialects.firebird.base.FBCompiler.visit_char_length_func
Any*38*39*310*311*312*313∑
FBDDLCompiler/sqlalchemy.dialects.firebird.base.FBDDLCompiler"#sqlalchemy.sql.compiler.DDLCompiler*ê
visit_create_sequenceEsqlalchemy.dialects.firebird.base.FBDDLCompiler.visit_create_sequence*
self*

createz38z39z310z311z312z313*ä
visit_drop_sequenceCsqlalchemy.dialects.firebird.base.FBDDLCompiler.visit_drop_sequence*
self*
dropz38z39z310z311z312z313*ì
visit_computed_columnEsqlalchemy.dialects.firebird.base.FBDDLCompiler.visit_computed_column*
self*
	generatedz38z39z310z311z312z313j38j39j310j311j312j313±
FBIdentifierPreparer6sqlalchemy.dialects.firebird.base.FBIdentifierPreparer"*sqlalchemy.sql.compiler.IdentifierPreparer*É
__init__?sqlalchemy.dialects.firebird.base.FBIdentifierPreparer.__init__"
None*z
selfp
6sqlalchemy.dialects.firebird.base.FBIdentifierPreparer"6sqlalchemy.dialects.firebird.base.FBIdentifierPreparer*
dialect
Anyz38z39z310z311z312z313j38j39j310j311j312j313r|
reserved_wordsEsqlalchemy.dialects.firebird.base.FBIdentifierPreparer.reserved_words
Any*38*39*310*311*312*313rî
illegal_initial_charactersQsqlalchemy.dialects.firebird.base.FBIdentifierPreparer.illegal_initial_characters
Any*38*39*310*311*312*313á
FBExecutionContext4sqlalchemy.dialects.firebird.base.FBExecutionContext"builtins.object*ç
fire_sequenceBsqlalchemy.dialects.firebird.base.FBExecutionContext.fire_sequence*
self*
seq*	
type_z38z39z310z311z312z313j38j39j310j311j312j313Õ5
	FBDialect+sqlalchemy.dialects.firebird.base.FBDialect"builtins.object*Ù
__init__4sqlalchemy.dialects.firebird.base.FBDialect.__init__"
None*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*
args
Any*
kwargs
Anyz38z39z310z311z312z313*È

initialize6sqlalchemy.dialects.firebird.base.FBDialect.initialize"
None*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Anyz38z39z310z311z312z313*Í
	has_table5sqlalchemy.dialects.firebird.base.FBDialect.has_table"
Any*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*Û
has_sequence8sqlalchemy.dialects.firebird.base.FBDialect.has_sequence"
Any*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Any*
sequence_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*Ó
get_table_names;sqlalchemy.dialects.firebird.base.FBDialect.get_table_names"
Any*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*Ï
get_view_names:sqlalchemy.dialects.firebird.base.FBDialect.get_view_names"
Any*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*é
get_view_definition?sqlalchemy.dialects.firebird.base.FBDialect.get_view_definition"
Any*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Any*
	view_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*ã
get_pk_constraint=sqlalchemy.dialects.firebird.base.FBDialect.get_pk_constraint"
Any*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*©
get_column_sequence?sqlalchemy.dialects.firebird.base.FBDialect.get_column_sequence"
Any*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Any*

table_name
Any*
column_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*ˇ
get_columns7sqlalchemy.dialects.firebird.base.FBDialect.get_columns"
Any*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*â
get_foreign_keys<sqlalchemy.dialects.firebird.base.FBDialect.get_foreign_keys"
Any*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313*ˇ
get_indexes7sqlalchemy.dialects.firebird.base.FBDialect.get_indexes"
Any*d
selfZ
+sqlalchemy.dialects.firebird.base.FBDialect"+sqlalchemy.dialects.firebird.base.FBDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313j38j39j310j311j312j313rr
name0sqlalchemy.dialects.firebird.base.FBDialect.name
builtins.str"builtins.str*38*39*310*311*312*313rú
supports_statement_cacheDsqlalchemy.dialects.firebird.base.FBDialect.supports_statement_cache
builtins.bool"builtins.bool*38*39*310*311*312*313rî
max_identifier_lengthAsqlalchemy.dialects.firebird.base.FBDialect.max_identifier_length
builtins.int"builtins.int*38*39*310*311*312*313rê
supports_sequences>sqlalchemy.dialects.firebird.base.FBDialect.supports_sequences
builtins.bool"builtins.bool*38*39*310*311*312*313rê
sequences_optional>sqlalchemy.dialects.firebird.base.FBDialect.sequences_optional
builtins.bool"builtins.bool*38*39*310*311*312*313rö
supports_default_valuesCsqlalchemy.dialects.firebird.base.FBDialect.supports_default_values
builtins.bool"builtins.bool*38*39*310*311*312*313rí
postfetch_lastrowid?sqlalchemy.dialects.firebird.base.FBDialect.postfetch_lastrowid
builtins.bool"builtins.bool*38*39*310*311*312*313rö
supports_native_booleanCsqlalchemy.dialects.firebird.base.FBDialect.supports_native_boolean
builtins.bool"builtins.bool*38*39*310*311*312*313rö
requires_name_normalizeCsqlalchemy.dialects.firebird.base.FBDialect.requires_name_normalize
builtins.bool"builtins.bool*38*39*310*311*312*313rñ
supports_empty_insertAsqlalchemy.dialects.firebird.base.FBDialect.supports_empty_insert
builtins.bool"builtins.bool*38*39*310*311*312*313ry
statement_compiler>sqlalchemy.dialects.firebird.base.FBDialect.statement_compiler
Any*38*39*310*311*312*313rm
ddl_compiler8sqlalchemy.dialects.firebird.base.FBDialect.ddl_compiler
Any*38*39*310*311*312*313re
preparer4sqlalchemy.dialects.firebird.base.FBDialect.preparer
Any*38*39*310*311*312*313ro
type_compiler9sqlalchemy.dialects.firebird.base.FBDialect.type_compiler
Any*38*39*310*311*312*313re
colspecs4sqlalchemy.dialects.firebird.base.FBDialect.colspecs
Any*38*39*310*311*312*313ro
ischema_names9sqlalchemy.dialects.firebird.base.FBDialect.ischema_names
Any*38*39*310*311*312*313r{
construct_arguments?sqlalchemy.dialects.firebird.base.FBDialect.construct_arguments
Any*38*39*310*311*312*313ry
implicit_returning>sqlalchemy.dialects.firebird.base.FBDialect.implicit_returning
Any*38*39*310*311*312*313*π
__annotations__1sqlalchemy.dialects.firebird.base.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*g
RESERVED_WORDS0sqlalchemy.dialects.firebird.base.RESERVED_WORDS
Any*38*39*310*311*312*313*[
colspecs*sqlalchemy.dialects.firebird.base.colspecs
Any*38*39*310*311*312*313*e
ischema_names/sqlalchemy.dialects.firebird.base.ischema_names
Any*38*39*310*311*312*313