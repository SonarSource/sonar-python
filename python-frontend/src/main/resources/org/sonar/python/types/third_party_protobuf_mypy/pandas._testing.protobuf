
pandas._testing.
getSeriesDatapandas._testing.getSeriesDataˆ
assert_almost_equal#pandas._testing.assert_almost_equal"
Any*
left
Any*
right
Any*v
check_dtypec
!Union[builtins.bool,builtins.str]
builtins.bool"builtins.bool
builtins.str"builtins.str *}
check_less_precisec
!Union[builtins.bool,builtins.int]
builtins.bool"builtins.bool
builtins.int"builtins.int *
kwargs
Anyö
assert_dict_equal!pandas._testing.assert_dict_equal"
Any*
left
Any*
right
Any*2
compare_keys
builtins.bool"builtins.bool ˜
assert_index_equal"pandas._testing.assert_index_equal"
None*X
leftN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*Y
rightN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.IndexÓ
assert_class_equal"pandas._testing.assert_class_equal"
Any*
left
Any*
right
Any*p
exactc
!Union[builtins.bool,builtins.str]
builtins.bool"builtins.bool
builtins.str"builtins.str *
obj
Any ¢
assert_attr_equal!pandas._testing.assert_attr_equal"
Any*
attr
Any*
left
Any*
right
Any*'
obj
builtins.str"builtins.str u
"assert_is_valid_plot_return_object2pandas._testing.assert_is_valid_plot_return_object"
None*
objs
AnyP
assert_is_sorted pandas._testing.assert_is_sorted"
None*
seq
Anyç
assert_categorical_equal(pandas._testing.assert_categorical_equal"
None*
left
Any*
right
Any*1
check_dtype
builtins.bool"builtins.bool *:
check_category_order
builtins.bool"builtins.bool *'
obj
builtins.str"builtins.str œ
assert_interval_array_equal+pandas._testing.assert_interval_array_equal"
None*
left
Any*
right
Any*)
exact
builtins.str"builtins.str *'
obj
builtins.str"builtins.str †
assert_period_array_equal)pandas._testing.assert_period_array_equal"
None*
left
Any*
right
Any*'
obj
builtins.str"builtins.str §
assert_datetime_array_equal+pandas._testing.assert_datetime_array_equal"
None*
left
Any*
right
Any*'
obj
builtins.str"builtins.str ¶
assert_timedelta_array_equal,pandas._testing.assert_timedelta_array_equal"
None*
left
Any*
right
Any*'
obj
builtins.str"builtins.str µ
assert_numpy_array_equal(pandas._testing.assert_numpy_array_equal"
Any*
left
Any*
right
Any*0

strict_nan
builtins.bool"builtins.bool *1
check_dtype
builtins.bool"builtins.bool *
err_msg
Any *

check_same
Any *'
obj
builtins.str"builtins.str ù
assert_extension_array_equal,pandas._testing.assert_extension_array_equal"
None*
left
Any*
right
Any*1
check_dtype
builtins.bool"builtins.bool *8
check_less_precise
builtins.bool"builtins.bool *1
check_exact
builtins.bool"builtins.bool ó
assert_frame_equal"pandas._testing.assert_frame_equal"
None*D
left:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*E
right:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*õ
check_dtypeá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *†
check_index_typeá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *°
check_column_typeá
*Union[builtins.bool,Literal[builtins.str]]
builtins.bool"builtins.bool7
Literal[builtins.str]	
builtins.str"builtins.str *6
check_frame_type
builtins.bool"builtins.bool *}
check_less_precisec
!Union[builtins.int,builtins.bool]
builtins.int"builtins.int
builtins.bool"builtins.bool *1
check_names
builtins.bool"builtins.bool */
	by_blocks
builtins.bool"builtins.bool *1
check_exact
builtins.bool"builtins.bool *?
check_datetimelike_compat
builtins.bool"builtins.bool *7
check_categorical
builtins.bool"builtins.bool *0

check_like
builtins.bool"builtins.bool *0

check_freq
builtins.bool"builtins.bool *0

check_flag
builtins.bool"builtins.bool *,
rtol 
builtins.float"builtins.float *,
atol 
builtins.float"builtins.float *'
obj
builtins.str"builtins.str r
assert_equalpandas._testing.assert_equal"
None*
left
Any*
right
Any*
kwargs
AnyÕ
assert_sp_array_equal%pandas._testing.assert_sp_array_equal"
None*
left
Any*
right
Any*1
check_dtype
builtins.bool"builtins.bool *0

check_kind
builtins.bool"builtins.bool *6
check_fill_value
builtins.bool"builtins.bool *?
consolidate_block_indices
builtins.bool"builtins.bool m
assert_contains_all#pandas._testing.assert_contains_all"
None*
iterable
Any*
dic
Anyu
assert_copypandas._testing.assert_copy"
None*
iter1
Any*
iter2
Any*

eql_kwargs
Any¨
assert_produces_warning'pandas._testing.assert_produces_warning"
None*
expected_warning
Any *0
filter_level
builtins.str"builtins.str *
clear
Any *6
check_stacklevel
builtins.bool"builtins.bool *=
raise_on_extra_warnings
builtins.bool"builtins.bool "Æ
assert_series_equal#pandas._testing.assert_series_equalÑ	
assert_series_equal#pandas._testing.assert_series_equal"
None*N
leftD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*O
rightD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*1
check_dtype
builtins.bool"builtins.bool *{
check_index_typec
!Union[builtins.bool,builtins.str]
builtins.bool"builtins.bool
builtins.str"builtins.str *7
check_series_type
builtins.bool"builtins.bool *1
check_names
builtins.bool"builtins.bool *1
check_exact
builtins.bool"builtins.bool *?
check_datetimelike_compat
builtins.bool"builtins.bool *7
check_categorical
builtins.bool"builtins.bool *:
check_category_order
builtins.bool"builtins.bool *0

check_freq
builtins.bool"builtins.bool *1
check_flags
builtins.bool"builtins.bool *,
rtol 
builtins.float"builtins.float *,
atol 
builtins.float"builtins.float *'
obj
builtins.str"builtins.str *K
check_index:
Literal[builtins.bool]	
builtins.bool"builtins.bool*L

check_like:
Literal[builtins.bool]	
builtins.bool"builtins.bool 0:typing.overloadXÍ
assert_series_equal#pandas._testing.assert_series_equal"
None*N
leftD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*O
rightD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*1
check_dtype
builtins.bool"builtins.bool *{
check_index_typec
!Union[builtins.bool,builtins.str]
builtins.bool"builtins.bool
builtins.str"builtins.str *7
check_series_type
builtins.bool"builtins.bool *1
check_names
builtins.bool"builtins.bool *1
check_exact
builtins.bool"builtins.bool *?
check_datetimelike_compat
builtins.bool"builtins.bool *7
check_categorical
builtins.bool"builtins.bool *:
check_category_order
builtins.bool"builtins.bool *0

check_freq
builtins.bool"builtins.bool *1
check_flags
builtins.bool"builtins.bool *,
rtol 
builtins.float"builtins.float *,
atol 
builtins.float"builtins.float *'
obj
builtins.str"builtins.str *M
check_index:
Literal[builtins.bool]	
builtins.bool"builtins.bool *0

check_like
builtins.bool"builtins.bool 0:typing.overloadX*p
__path__pandas._testing.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*ã
__annotations__pandas._testing.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict