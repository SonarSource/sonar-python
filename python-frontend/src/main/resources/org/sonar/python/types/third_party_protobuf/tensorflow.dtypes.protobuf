
tensorflow.dtypes£
_boolbuiltins.bool"builtins.int*ø
__new__builtins.bool.__new__"
builtins.bool"builtins.bool*r
clsi
Type[builtins.bool.Self]E
builtins.bool.Self
builtins.bool"builtins.bool"builtins.bool"type*&"
builtins.object"builtins.object z38z39z310z311z312z313*«
__getnewargs__builtins.bool.__getnewargs__"5
Tuple[builtins.int]
builtins.int"builtins.int*(
self
builtins.bool"builtins.boolz38z39z310z311z312z3132ð
__and__builtins.bool.__and__™
__and__builtins.bool.__and__"
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool0:typing.overloadX•
__and__builtins.bool.__and__"
builtins.int"builtins.int* 
builtins.bool"builtins.bool*
builtins.int"builtins.int0:typing.overloadX"38"39"310"311"312"3132ê
__or__builtins.bool.__or__—
__or__builtins.bool.__or__"
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool0:typing.overloadX“
__or__builtins.bool.__or__"
builtins.int"builtins.int* 
builtins.bool"builtins.bool*
builtins.int"builtins.int0:typing.overloadX"38"39"310"311"312"3132ð
__xor__builtins.bool.__xor__™
__xor__builtins.bool.__xor__"
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool0:typing.overloadX•
__xor__builtins.bool.__xor__"
builtins.int"builtins.int* 
builtins.bool"builtins.bool*
builtins.int"builtins.int0:typing.overloadX"38"39"310"311"312"3132ö
__rand__builtins.bool.__rand__›
__rand__builtins.bool.__rand__"
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool0:typing.overloadX—
__rand__builtins.bool.__rand__"
builtins.int"builtins.int* 
builtins.bool"builtins.bool*
builtins.int"builtins.int0:typing.overloadX"38"39"310"311"312"3132ð
__ror__builtins.bool.__ror__™
__ror__builtins.bool.__ror__"
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool0:typing.overloadX•
__ror__builtins.bool.__ror__"
builtins.int"builtins.int* 
builtins.bool"builtins.bool*
builtins.int"builtins.int0:typing.overloadX"38"39"310"311"312"3132ö
__rxor__builtins.bool.__rxor__›
__rxor__builtins.bool.__rxor__"
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool* 
builtins.bool"builtins.bool0:typing.overloadX—
__rxor__builtins.bool.__rxor__"
builtins.int"builtins.int* 
builtins.bool"builtins.bool*
builtins.int"builtins.int0:typing.overloadX"38"39"310"311"312"3138j38j39j310j311j312j313S

_DTypeMetatensorflow.dtypes._DTypeMeta"abc.ABCMetaj38j39j310j311j312j313¤
DTypetensorflow.dtypes.DType"builtins.object*³
nametensorflow.dtypes.DType.name"
builtins.str"builtins.str*<
self2
tensorflow.dtypes.DType"tensorflow.dtypes.DType0:builtins.property`z38z39z310z311z312z313*ø
as_numpy_dtype&tensorflow.dtypes.DType.as_numpy_dtype"M
Type[numpy.number[Any]]*
numpy.number[Any]
Any"numpy.number"type*<
self2
tensorflow.dtypes.DType"tensorflow.dtypes.DType0:builtins.property`z38z39z310z311z312z313*Ó
is_numpy_compatible+tensorflow.dtypes.DType.is_numpy_compatible"
builtins.bool"builtins.bool*<
self2
tensorflow.dtypes.DType"tensorflow.dtypes.DType0:builtins.property`z38z39z310z311z312z313*»
is_booltensorflow.dtypes.DType.is_bool"
builtins.bool"builtins.bool*<
self2
tensorflow.dtypes.DType"tensorflow.dtypes.DType0:builtins.property`z38z39z310z311z312z313*Ã
is_floating#tensorflow.dtypes.DType.is_floating"
builtins.bool"builtins.bool*<
self2
tensorflow.dtypes.DType"tensorflow.dtypes.DType0:builtins.property`z38z39z310z311z312z313*Á

is_integer"tensorflow.dtypes.DType.is_integer"
builtins.bool"builtins.bool*<
self2
tensorflow.dtypes.DType"tensorflow.dtypes.DType0:builtins.property`z38z39z310z311z312z313*Å
is_quantized$tensorflow.dtypes.DType.is_quantized"
builtins.bool"builtins.bool*<
self2
tensorflow.dtypes.DType"tensorflow.dtypes.DType0:builtins.property`z38z39z310z311z312z313*Ã
is_unsigned#tensorflow.dtypes.DType.is_unsigned"
builtins.bool"builtins.bool*<
self2
tensorflow.dtypes.DType"tensorflow.dtypes.DType0:builtins.property`z38z39z310z311z312z313*×
__getattr__#tensorflow.dtypes.DType.__getattr__"1
TypeAlias[Any]
Any"_typeshed.Incomplete*42
tensorflow.dtypes.DType"tensorflow.dtypes.DType*
builtins.str"builtins.strz38z39z310z311z312z313@btensorflow.dtypes._DTypeMetaj38j39j310j311j312j313«
as_dtypetensorflow.dtypes.as_dtype"2
tensorflow.dtypes.DType"tensorflow.dtypes.DType*²

type_value¡
GTypeAlias[Union[tensorflow.dtypes.DType,builtins.str,numpy.dtype[Any]]]¼
<Union[tensorflow.dtypes.DType,builtins.str,numpy.dtype[Any]]2
tensorflow.dtypes.DType"tensorflow.dtypes.DType
builtins.str"builtins.str(
numpy.dtype[Any]
Any"numpy.dtype"tensorflow._DTypeLikez38z39z310z311z312z313›
__getattr__tensorflow.dtypes.__getattr__"1
TypeAlias[Any]
Any"_typeshed.Incomplete*
builtins.str"builtins.strz38z39z310z311z312z313*©
__annotations__!tensorflow.dtypes.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*)
npnumpy *38*39*310*311*312*313*n
booltensorflow.dtypes.bool2
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*z

complex128tensorflow.dtypes.complex1282
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*x
	complex64tensorflow.dtypes.complex642
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*v
bfloat16tensorflow.dtypes.bfloat162
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*t
float16tensorflow.dtypes.float162
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*n
halftensorflow.dtypes.half2
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*t
float32tensorflow.dtypes.float322
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*t
float64tensorflow.dtypes.float642
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*r
doubletensorflow.dtypes.double2
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*n
int8tensorflow.dtypes.int82
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*p
int16tensorflow.dtypes.int162
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*p
int32tensorflow.dtypes.int322
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*p
int64tensorflow.dtypes.int642
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*p
uint8tensorflow.dtypes.uint82
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*r
uint16tensorflow.dtypes.uint162
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*r
uint32tensorflow.dtypes.uint322
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*r
uint64tensorflow.dtypes.uint642
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*p
qint8tensorflow.dtypes.qint82
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*r
qint16tensorflow.dtypes.qint162
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*r
qint32tensorflow.dtypes.qint322
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*r
quint8tensorflow.dtypes.quint82
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*t
quint16tensorflow.dtypes.quint162
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313*r
stringtensorflow.dtypes.string2
tensorflow.dtypes.DType"tensorflow.dtypes.DType*38*39*310*311*312*313