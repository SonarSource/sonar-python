
lib2to3.fixes.fix_unicodeõ

FixUnicode$lib2to3.fixes.fix_unicode.FixUnicode"lib2to3.fixer_base.BaseFix*ñ

start_tree/lib2to3.fixes.fix_unicode.FixUnicode.start_tree"
None*V
selfL
$lib2to3.fixes.fix_unicode.FixUnicode"$lib2to3.fixes.fix_unicode.FixUnicode*4
tree*
lib2to3.pytree.Node"lib2to3.pytree.Node*ø
filenameé
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]—
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz38z39z310z311z312z313z314*}
	transform.lib2to3.fixes.fix_unicode.FixUnicode.transform*
self*
node*
resultsz38z39z310z311z312z313z314j38j39j310j311j312j313j314r 
BM_compatible2lib2to3.fixes.fix_unicode.FixUnicode.BM_compatible:
Literal[builtins.bool]	
builtins.bool"builtins.bool*38*39*310*311*312*313*314ra
PATTERN,lib2to3.fixes.fix_unicode.FixUnicode.PATTERN
Any*38*39*310*311*312*313*314rŠ
unicode_literals5lib2to3.fixes.fix_unicode.FixUnicode.unicode_literals
builtins.bool"builtins.bool*38*39*310*311*312*313*314*¶
__annotations__)lib2to3.fixes.fix_unicode.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314