
sqlalchemy.future­

Connection#sqlalchemy.future.engine.Connection"!sqlalchemy.engine.base.Connection*X
begin)sqlalchemy.future.engine.Connection.begin*
selfz38z39z310z311z312z313*f
begin_nested0sqlalchemy.future.engine.Connection.begin_nested*
selfz38z39z310z311z312z313*°
commit*sqlalchemy.future.engine.Connection.commit"
None*T
selfJ
#sqlalchemy.future.engine.Connection"#sqlalchemy.future.engine.Connectionz38z39z310z311z312z313*´
rollback,sqlalchemy.future.engine.Connection.rollback"
None*T
selfJ
#sqlalchemy.future.engine.Connection"#sqlalchemy.future.engine.Connectionz38z39z310z311z312z313*®
close)sqlalchemy.future.engine.Connection.close"
None*T
selfJ
#sqlalchemy.future.engine.Connection"#sqlalchemy.future.engine.Connectionz38z39z310z311z312z313*®
execute+sqlalchemy.future.engine.Connection.execute"
Any*T
selfJ
#sqlalchemy.future.engine.Connection"#sqlalchemy.future.engine.Connection*
	statement
Any*m

parameters[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *t
execution_options[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*¬
scalar*sqlalchemy.future.engine.Connection.scalar"
Any*T
selfJ
#sqlalchemy.future.engine.Connection"#sqlalchemy.future.engine.Connection*
	statement
Any*m

parameters[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *t
execution_options[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313j38j39j310j311j312j313•
Enginesqlalchemy.future.engine.Engine"sqlalchemy.engine.base.Engine*¢
begin%sqlalchemy.future.engine.Engine.begin"
None*L
selfB
sqlalchemy.future.engine.Engine"sqlalchemy.future.engine.Enginez38z39z310z311z312z313*X
connect'sqlalchemy.future.engine.Engine.connect*
selfz38z39z310z311z312z313j38j39j310j311j312j313r_
transaction+sqlalchemy.future.engine.Engine.transaction
Any*38*39*310*311*312*313ra
run_callable,sqlalchemy.future.engine.Engine.run_callable
Any*38*39*310*311*312*313rW
execute'sqlalchemy.future.engine.Engine.execute
Any*38*39*310*311*312*313rU
scalar&sqlalchemy.future.engine.Engine.scalar
Any*38*39*310*311*312*313r_
table_names+sqlalchemy.future.engine.Engine.table_names
Any*38*39*310*311*312*313r[
	has_table)sqlalchemy.future.engine.Engine.has_table
Any*38*39*310*311*312*313"ˆ 
create_engine&sqlalchemy.future.engine.create_engine—
create_engine&sqlalchemy.future.engine.create_engine"N
%sqlalchemy.engine.mock.MockConnection"%sqlalchemy.engine.mock.MockConnection*œ
url’
¦Union[TypeAlias[Tuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]],builtins.str]Æ

’TypeAlias[Tuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]]‘
‡Tuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
Nonex
(Union[builtins.str,builtins.object,None]
builtins.str"builtins.str"
builtins.object"builtins.object
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
NoneÒ
fsqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]
builtins.str"builtins.str 
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple"'sqlalchemy.cimmutabledict.immutabledict"sqlalchemy.engine.url.URL
builtins.str"builtins.str*E
strategy7
Literal[builtins.str]	
builtins.str"builtins.str*
kwargs
Any0:typing.overloadX˜
create_engine&sqlalchemy.future.engine.create_engine"B
sqlalchemy.future.engine.Engine"sqlalchemy.future.engine.Engine*œ
url’
¦Union[TypeAlias[Tuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]],builtins.str]Æ

’TypeAlias[Tuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]]‘
‡Tuple[builtins.str,Union[builtins.str,None],Union[builtins.str,builtins.object,None],Union[builtins.str,None],Union[builtins.int,None],Union[builtins.str,None],sqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]]
builtins.str"builtins.strD
Union[builtins.str,None]
builtins.str"builtins.str
Nonex
(Union[builtins.str,builtins.object,None]
builtins.str"builtins.str"
builtins.object"builtins.object
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
NoneD
Union[builtins.int,None]
builtins.int"builtins.int
NoneD
Union[builtins.str,None]
builtins.str"builtins.str
NoneÒ
fsqlalchemy.cimmutabledict.immutabledict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]
builtins.str"builtins.str 
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple"'sqlalchemy.cimmutabledict.immutabledict"sqlalchemy.engine.url.URL
builtins.str"builtins.str*i
module[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *9
enable_from_linting
builtins.bool"builtins.bool *,
future
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX"38"39"310"311"312"313*Ž
__path__sqlalchemy.future.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*©
__annotations__!sqlalchemy.future.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*G
selectsqlalchemy.future.select
Any*38*39*310*311*312*313