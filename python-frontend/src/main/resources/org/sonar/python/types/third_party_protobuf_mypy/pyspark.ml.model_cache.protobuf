
pyspark.ml.model_cacheº

ModelCache!pyspark.ml.model_cache.ModelCache"builtins.object*Ð
add%pyspark.ml.model_cache.ModelCache.add"
None* 
uuid
	uuid.UUID"	uuid.UUID*[

predict_fnK
CallableType[builtins.function]&
builtins.function"builtins.function0:builtins.staticmethodh*ò
get%pyspark.ml.model_cache.ModelCache.get"†
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None* 
uuid
	uuid.UUID"	uuid.UUID0:builtins.staticmethodhrƒ
_models)pyspark.ml.model_cache.ModelCache._modelsM
 collections.OrderedDict[Any,Any]
Any
Any"collections.OrderedDictrV
	_capacity+pyspark.ml.model_cache.ModelCache._capacity
builtins.int"builtins.intrR
_lock'pyspark.ml.model_cache.ModelCache._lock 
threading.Lock"threading.Lock*’
__annotations__&pyspark.ml.model_cache.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict