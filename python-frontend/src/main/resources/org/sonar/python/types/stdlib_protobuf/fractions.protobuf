
	fractionsµè
Fractionfractions.Fraction"numbers.Rational*˘

from_floatfractions.Fraction.from_float"Y
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction*å
clsÇ
Type[fractions.Fraction.Self]Y
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction"type*'
f 
builtins.float"builtins.float0:builtins.classmethodpz38z39z310z311z312z313z314*É
from_decimalfractions.Fraction.from_decimal"Y
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction*å
clsÇ
Type[fractions.Fraction.Self]Y
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction"type*-
dec$
_decimal.Decimal"_decimal.Decimal0:builtins.classmethodpz38z39z310z311z312z313z314*Ì
limit_denominator$fractions.Fraction.limit_denominator"(
fractions.Fraction"fractions.Fraction*2
self(
fractions.Fraction"fractions.Fraction*3
max_denominator
builtins.int"builtins.int z38z39z310z311z312z313z314*Ó
as_integer_ratio#fractions.Fraction.as_integer_ratio"`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*∞
	numeratorfractions.Fraction.numerator"
builtins.int"builtins.int*/
a(
fractions.Fraction"fractions.Fraction0:builtins.property`z38z39z310z311z312z313z314*¥
denominatorfractions.Fraction.denominator"
builtins.int"builtins.int*/
a(
fractions.Fraction"fractions.Fraction0:builtins.property`z38z39z310z311z312z313z314*ú
__pos__fractions.Fraction.__pos__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*ú
__neg__fractions.Fraction.__neg__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*ú
__abs__fractions.Fraction.__abs__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*ô
	__trunc__fractions.Fraction.__trunc__"
builtins.int"builtins.int*/
a(
fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*ô
	__floor__fractions.Fraction.__floor__"
builtins.int"builtins.int*/
a(
fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*ó
__ceil__fractions.Fraction.__ceil__"
builtins.int"builtins.int*/
a(
fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*ö
__hash__fractions.Fraction.__hash__"
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*∂
__eq__fractions.Fraction.__eq__"
builtins.bool"builtins.bool**(
fractions.Fraction"fractions.Fraction*$"
builtins.object"builtins.objectz38z39z310z311z312z313z314* 
__lt__fractions.Fraction.__lt__"
builtins.bool"builtins.bool**(
fractions.Fraction"fractions.Fraction*∑¥
KTypeAlias[Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]]»
@Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]
builtins.int"builtins.int 
builtins.float"builtins.float$
_decimal.Decimal"_decimal.Decimal
numbers.Real"numbers.Real"fractions._ComparableNumz38z39z310z311z312z313z314* 
__gt__fractions.Fraction.__gt__"
builtins.bool"builtins.bool**(
fractions.Fraction"fractions.Fraction*∑¥
KTypeAlias[Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]]»
@Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]
builtins.int"builtins.int 
builtins.float"builtins.float$
_decimal.Decimal"_decimal.Decimal
numbers.Real"numbers.Real"fractions._ComparableNumz38z39z310z311z312z313z314* 
__le__fractions.Fraction.__le__"
builtins.bool"builtins.bool**(
fractions.Fraction"fractions.Fraction*∑¥
KTypeAlias[Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]]»
@Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]
builtins.int"builtins.int 
builtins.float"builtins.float$
_decimal.Decimal"_decimal.Decimal
numbers.Real"numbers.Real"fractions._ComparableNumz38z39z310z311z312z313z314* 
__ge__fractions.Fraction.__ge__"
builtins.bool"builtins.bool**(
fractions.Fraction"fractions.Fraction*∑¥
KTypeAlias[Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]]»
@Union[builtins.int,builtins.float,_decimal.Decimal,numbers.Real]
builtins.int"builtins.int 
builtins.float"builtins.float$
_decimal.Decimal"_decimal.Decimal
numbers.Real"numbers.Real"fractions._ComparableNumz38z39z310z311z312z313z314*ô
__bool__fractions.Fraction.__bool__"
builtins.bool"builtins.bool*/
a(
fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*à
__copy__fractions.Fraction.__copy__"Y
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction*c
selfY
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*£
__deepcopy__fractions.Fraction.__deepcopy__"Y
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction*c
selfY
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction*
memo
Anyz38z39z310z311z312z313z314*µ
realfractions.Fraction.real"(
fractions.Fraction"fractions.Fraction*2
self(
fractions.Fraction"fractions.Fraction0:builtins.property`z38z39z310z311z312z313z314*ƒ
imagfractions.Fraction.imag"7
Literal[builtins.int]	
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fraction0:builtins.property`z38z39z310z311z312z313z314*®
	conjugatefractions.Fraction.conjugate"(
fractions.Fraction"fractions.Fraction*2
self(
fractions.Fraction"fractions.Fractionz38z39z310z311z312z313z314*‘
__int__fractions.Fraction.__int__"
builtins.int"builtins.int**(
fractions.Fraction"fractions.Fraction*OK
CallableType[builtins.function]&
builtins.function"builtins.function z311z312z313z3142´	
__new__fractions.Fraction.__new__Ê
__new__fractions.Fraction.__new__"Y
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction*å
clsÇ
Type[fractions.Fraction.Self]Y
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction"type*}
	numeratorl
$Union[builtins.int,numbers.Rational]
builtins.int"builtins.int$
numbers.Rational"numbers.Rational *é
denominator{
)Union[builtins.int,numbers.Rational,None]
builtins.int"builtins.int$
numbers.Rational"numbers.Rational
None *0

_normalize
builtins.bool"builtins.bool 0:typing.overloadX˘
__new__fractions.Fraction.__new__"Y
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction*å
clsÇ
Type[fractions.Fraction.Self]Y
fractions.Fraction.Self(
fractions.Fraction"fractions.Fraction"fractions.Fraction"type*†ù
3Union[builtins.float,_decimal.Decimal,builtins.str] 
builtins.float"builtins.float$
_decimal.Decimal"_decimal.Decimal
builtins.str"builtins.str*0

_normalize
builtins.bool"builtins.bool 0:typing.overloadX"38"39"310"311"312"313"3142µ
__add__fractions.Fraction.__add__Ü
__add__fractions.Fraction.__add__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadX¨
__add__fractions.Fraction.__add__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX¥
__add__fractions.Fraction.__add__"$
builtins.complex"builtins.complex**(
fractions.Fraction"fractions.Fraction*&$
builtins.complex"builtins.complex0:typing.overloadX"38"39"310"311"312"313"3142Ω
__radd__fractions.Fraction.__radd__à
__radd__fractions.Fraction.__radd__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadXÆ
__radd__fractions.Fraction.__radd__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX∂
__radd__fractions.Fraction.__radd__"$
builtins.complex"builtins.complex**(
fractions.Fraction"fractions.Fraction*&$
builtins.complex"builtins.complex0:typing.overloadX"38"39"310"311"312"313"3142µ
__sub__fractions.Fraction.__sub__Ü
__sub__fractions.Fraction.__sub__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadX¨
__sub__fractions.Fraction.__sub__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX¥
__sub__fractions.Fraction.__sub__"$
builtins.complex"builtins.complex**(
fractions.Fraction"fractions.Fraction*&$
builtins.complex"builtins.complex0:typing.overloadX"38"39"310"311"312"313"3142Ω
__rsub__fractions.Fraction.__rsub__à
__rsub__fractions.Fraction.__rsub__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadXÆ
__rsub__fractions.Fraction.__rsub__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX∂
__rsub__fractions.Fraction.__rsub__"$
builtins.complex"builtins.complex**(
fractions.Fraction"fractions.Fraction*&$
builtins.complex"builtins.complex0:typing.overloadX"38"39"310"311"312"313"3142µ
__mul__fractions.Fraction.__mul__Ü
__mul__fractions.Fraction.__mul__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadX¨
__mul__fractions.Fraction.__mul__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX¥
__mul__fractions.Fraction.__mul__"$
builtins.complex"builtins.complex**(
fractions.Fraction"fractions.Fraction*&$
builtins.complex"builtins.complex0:typing.overloadX"38"39"310"311"312"313"3142Ω
__rmul__fractions.Fraction.__rmul__à
__rmul__fractions.Fraction.__rmul__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadXÆ
__rmul__fractions.Fraction.__rmul__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX∂
__rmul__fractions.Fraction.__rmul__"$
builtins.complex"builtins.complex**(
fractions.Fraction"fractions.Fraction*&$
builtins.complex"builtins.complex0:typing.overloadX"38"39"310"311"312"313"3142’
__truediv__fractions.Fraction.__truediv__é
__truediv__fractions.Fraction.__truediv__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadX¥
__truediv__fractions.Fraction.__truediv__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadXº
__truediv__fractions.Fraction.__truediv__"$
builtins.complex"builtins.complex**(
fractions.Fraction"fractions.Fraction*&$
builtins.complex"builtins.complex0:typing.overloadX"38"39"310"311"312"313"3142›
__rtruediv__fractions.Fraction.__rtruediv__ê
__rtruediv__fractions.Fraction.__rtruediv__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadX∂
__rtruediv__fractions.Fraction.__rtruediv__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadXæ
__rtruediv__fractions.Fraction.__rtruediv__"$
builtins.complex"builtins.complex**(
fractions.Fraction"fractions.Fraction*&$
builtins.complex"builtins.complex0:typing.overloadX"38"39"310"311"312"313"3142ê
__floordiv__fractions.Fraction.__floordiv__Ñ
__floordiv__fractions.Fraction.__floordiv__"
builtins.int"builtins.int**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadX∂
__floordiv__fractions.Fraction.__floordiv__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX"38"39"310"311"312"313"3142ñ
__rfloordiv__ fractions.Fraction.__rfloordiv__Ü
__rfloordiv__ fractions.Fraction.__rfloordiv__"
builtins.int"builtins.int**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadX∏
__rfloordiv__ fractions.Fraction.__rfloordiv__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX"38"39"310"311"312"313"3142˛
__mod__fractions.Fraction.__mod__Ü
__mod__fractions.Fraction.__mod__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadX¨
__mod__fractions.Fraction.__mod__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX"38"39"310"311"312"313"3142Ñ
__rmod__fractions.Fraction.__rmod__à
__rmod__fractions.Fraction.__rmod__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadXÆ
__rmod__fractions.Fraction.__rmod__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX"38"39"310"311"312"313"3142≤

__divmod__fractions.Fraction.__divmod__÷

__divmod__fractions.Fraction.__divmod__"r
&Tuple[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*tr
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadXä

__divmod__fractions.Fraction.__divmod__"x
(Tuple[builtins.float,fractions.Fraction] 
builtins.float"builtins.float(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*" 
builtins.float"builtins.float0:typing.overloadX"38"39"310"311"312"313"3142Ã
__rdivmod__fractions.Fraction.__rdivmod__‚
__rdivmod__fractions.Fraction.__rdivmod__"r
&Tuple[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction*/
a(
fractions.Fraction"fractions.Fraction*y
br
&Union[builtins.int,fractions.Fraction]
builtins.int"builtins.int(
fractions.Fraction"fractions.Fraction0:typing.overloadXñ
__rdivmod__fractions.Fraction.__rdivmod__"x
(Tuple[builtins.float,fractions.Fraction] 
builtins.float"builtins.float(
fractions.Fraction"fractions.Fraction*/
a(
fractions.Fraction"fractions.Fraction*'
b 
builtins.float"builtins.float0:typing.overloadX"38"39"310"311"312"313"3142∑
__pow__fractions.Fraction.__pow__∞
__pow__fractions.Fraction.__pow__"(
fractions.Fraction"fractions.Fraction**(
fractions.Fraction"fractions.Fraction*
builtins.int"builtins.int0:typing.overloadXÑ
__pow__fractions.Fraction.__pow__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*zx
(Union[builtins.float,fractions.Fraction] 
builtins.float"builtins.float(
fractions.Fraction"fractions.Fraction0:typing.overloadX¥
__pow__fractions.Fraction.__pow__"$
builtins.complex"builtins.complex**(
fractions.Fraction"fractions.Fraction*&$
builtins.complex"builtins.complex0:typing.overloadX"38"39"310"311"312"313"3142ä
__rpow__fractions.Fraction.__rpow__Ü
__rpow__fractions.Fraction.__rpow__" 
builtins.float"builtins.float**(
fractions.Fraction"fractions.Fraction*zx
(Union[builtins.float,fractions.Fraction] 
builtins.float"builtins.float(
fractions.Fraction"fractions.Fraction0:typing.overloadX∂
__rpow__fractions.Fraction.__rpow__"$
builtins.complex"builtins.complex**(
fractions.Fraction"fractions.Fraction*&$
builtins.complex"builtins.complex0:typing.overloadX"38"39"310"311"312"313"3142¿
	__round__fractions.Fraction.__round__©
	__round__fractions.Fraction.__round__"
builtins.int"builtins.int*2
self(
fractions.Fraction"fractions.Fraction*
ndigits
None 0:typing.overloadX«
	__round__fractions.Fraction.__round__"(
fractions.Fraction"fractions.Fraction*2
self(
fractions.Fraction"fractions.Fraction*)
ndigits
builtins.int"builtins.int0:typing.overloadX"38"39"310"311"312"313"314j38j39j310j311j312j313j314"†
gcdfractions.gcdë
gcdfractions.gcd"
builtins.int"builtins.int*#
a
builtins.int"builtins.int*#
b
builtins.int"builtins.int0:typing.overloadX°
gcdfractions.gcd"$
numbers.Integral"numbers.Integral*+
a$
numbers.Integral"numbers.Integral*#
b
builtins.int"builtins.int0:typing.overloadX°
gcdfractions.gcd"$
numbers.Integral"numbers.Integral*#
a
builtins.int"builtins.int*+
b$
numbers.Integral"numbers.Integral0:typing.overloadX©
gcdfractions.gcd"$
numbers.Integral"numbers.Integral*+
a$
numbers.Integral"numbers.Integral*+
b$
numbers.Integral"numbers.Integral0:typing.overloadX"38*¶
__annotations__fractions.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*â
__all__fractions.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*314