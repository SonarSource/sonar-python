
pydoc•X
_listbuiltins.list"typing.MutableSequence*¶
copybuiltins.list.copy"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*â
appendbuiltins.list.append"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313*∫
extendbuiltins.list.extend"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterablez38z39z310z311z312z313*ø
popbuiltins.list.pop"D
builtins._T"
builtins.object"builtins.object"builtins.object*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z38z39z310z311z312z313*´
indexbuiltins.list.index"
builtins.int"builtins.int*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.object*FB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex *FB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex z38z39z310z311z312z313*õ
countbuiltins.list.count"
builtins.int"builtins.int*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313*œ
insertbuiltins.list.insert"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313*â
removebuiltins.list.remove"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*FD
builtins._T"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313*œ
__len__builtins.list.__len__"
builtins.int"builtins.int*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*™
__iter__builtins.list.__iter__"u
typing.Iterator[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterator*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*Ë
__delitem__builtins.list.__delitem__"
None*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*¢ü
5Union[typing_extensions.SupportsIndex,builtins.slice]B
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex 
builtins.slice"builtins.slicez38z39z310z311z312z313*
__iadd__builtins.list.__iadd__"ò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*õò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterablez38z39z310z311z312z313*Í
__mul__builtins.list.__mul__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz38z39z310z311z312z313*Ï
__rmul__builtins.list.__rmul__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz38z39z310z311z312z313*Ω
__imul__builtins.list.__imul__"ò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*õò
builtins.list.Selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndexz38z39z310z311z312z313*Å
__contains__builtins.list.__contains__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*$"
builtins.object"builtins.objectz38z39z310z311z312z313*≤
__reversed__builtins.list.__reversed__"u
typing.Iterator[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterator*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*ƒ
__gt__builtins.list.__gt__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*ƒ
__ge__builtins.list.__ge__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*ƒ
__lt__builtins.list.__lt__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*ƒ
__le__builtins.list.__le__"
builtins.bool"builtins.bool*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.listz38z39z310z311z312z313*≠
__class_getitem__builtins.list.__class_getitem__"(
types.GenericAlias"types.GenericAlias*ß
clsù
 Type[builtins.list[builtins._T]]q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list"type*	
Anypz39z310z311z312z3132π
__init__builtins.list.__init__æ
__init__builtins.list.__init__"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list0:typing.overloadX∑
__init__builtins.list.__init__"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterable0:typing.overloadX"38"39"310"311"312"3132»
sortbuiltins.list.sort—
sortbuiltins.list.sort"
None*—
self∆
0builtins.list[_typeshed.SupportsRichComparisonT]Ç
!_typeshed.SupportsRichComparisonT⁄
FUnion[_typeshed.SupportsDunderLT[Any],_typeshed.SupportsDunderGT[Any]]F
_typeshed.SupportsDunderLT[Any]
Any"_typeshed.SupportsDunderLTF
_typeshed.SupportsDunderGT[Any]
Any"_typeshed.SupportsDunderGT"builtins.list*
key
None *-
reverse
builtins.bool"builtins.bool 0:typing.overloadXª
sortbuiltins.list.sort"
None*{
selfq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*T
keyK
CallableType[builtins.function]&
builtins.function"builtins.function*-
reverse
builtins.bool"builtins.bool 0:typing.overloadX"38"39"310"311"312"3132—
__getitem__builtins.list.__getitem__æ
__getitem__builtins.list.__getitem__"D
builtins._T"
builtins.object"builtins.object"builtins.object*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex0:typing.overloadX…
__getitem__builtins.list.__getitem__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*" 
builtins.slice"builtins.slice0:typing.overloadX"38"39"310"311"312"3132Ì
__setitem__builtins.list.__setitem__ 
__setitem__builtins.list.__setitem__"
None*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*DB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex*FD
builtins._T"
builtins.object"builtins.object"builtins.object0:typing.overloadXŸ
__setitem__builtins.list.__setitem__"
None*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*" 
builtins.slice"builtins.slice*wu
typing.Iterable[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"typing.Iterable0:typing.overloadX"38"39"310"311"312"3132Â
__add__builtins.list.__add__í
__add__builtins.list.__add__"q
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list0:typing.overloadXë
__add__builtins.list.__add__"Ô
-builtins.list[Union[builtins._S,builtins._T]]Æ
Union[builtins._S,builtins._T]D
builtins._S"
builtins.object"builtins.object"builtins.objectD
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._T]D
builtins._T"
builtins.object"builtins.object"builtins.object"builtins.list*sq
builtins.list[builtins._S]D
builtins._S"
builtins.object"builtins.object"builtins.object"builtins.list0:typing.overloadX"38"39"310"311"312"313Pj38j39j310j311j312j313rH
__hash__builtins.list.__hash__
None*38*39*310*311*312*313˛
ErrorDuringImportpydoc.ErrorDuringImport"builtins.Exception*†
__init__ pydoc.ErrorDuringImport.__init__"
None*<
self2
pydoc.ErrorDuringImport"pydoc.ErrorDuringImport**
filename
builtins.str"builtins.str*·
exc_info“
ÅTypeAlias[Union[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]]≥
vUnion[TypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]],Tuple[None,None,None]]˝
YTypeAlias[Tuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]]ä
NTuple[Type[builtins.BaseException],builtins.BaseException,types.TracebackType]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type0
builtins.BaseException"builtins.BaseException*
types.TracebackType"types.TracebackType"_typeshed.ExcInfo7
Tuple[None,None,None]
None
None
None"_typeshed.OptExcInfoz38z39z310z311z312z313j38j39j310j311j312j313rf
filename pydoc.ErrorDuringImport.filename
builtins.str"builtins.str*38*39*310*311*312*313r—
excpydoc.ErrorDuringImport.excê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*38*39*310*311*312*313r¶
valuepydoc.ErrorDuringImport.valueb
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*38*39*310*311*312*313ró
tbpydoc.ErrorDuringImport.tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*38*39*310*311*312*313±
Doc	pydoc.Doc"builtins.object*è
documentpydoc.Doc.document"
builtins.str"builtins.str* 
self
	pydoc.Doc"	pydoc.Doc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *
args
Anyz38z39z310z311z312z313*˜
failpydoc.Doc.fail"
NoReturn
* 
self
	pydoc.Doc"	pydoc.Doc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *
args
Anyz38z39z310z311z312z313*©
	docmodulepydoc.Doc.docmodule"
builtins.str"builtins.str* 
self
	pydoc.Doc"	pydoc.Doc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *
args
Any0:abc.abstractmethod@z38z39z310z311z312z313*ß
docclasspydoc.Doc.docclass"
builtins.str"builtins.str* 
self
	pydoc.Doc"	pydoc.Doc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *
args
Any0:abc.abstractmethod@z38z39z310z311z312z313*´

docroutinepydoc.Doc.docroutine"
builtins.str"builtins.str* 
self
	pydoc.Doc"	pydoc.Doc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *
args
Any0:abc.abstractmethod@z38z39z310z311z312z313*ß
docotherpydoc.Doc.docother"
builtins.str"builtins.str* 
self
	pydoc.Doc"	pydoc.Doc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *
args
Any0:abc.abstractmethod@z38z39z310z311z312z313*≠
docpropertypydoc.Doc.docproperty"
builtins.str"builtins.str* 
self
	pydoc.Doc"	pydoc.Doc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *
args
Any0:abc.abstractmethod@z38z39z310z311z312z313*•
docdatapydoc.Doc.docdata"
builtins.str"builtins.str* 
self
	pydoc.Doc"	pydoc.Doc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *
args
Any0:abc.abstractmethod@z38z39z310z311z312z313*Å
	getdoclocpydoc.Doc.getdocloc"D
Union[builtins.str,None]
builtins.str"builtins.str
None* 
self
	pydoc.Doc"	pydoc.Doc*.
object"
builtins.object"builtins.object*+
basedir
builtins.str"builtins.str z38z39z310z311z312z313j38j39j310j311j312j313r\

PYTHONDOCSpydoc.Doc.PYTHONDOCS
builtins.str"builtins.str*38*39*310*311*312*313⁄
HTMLReprpydoc.HTMLRepr"reprlib.Repr*≠
escapepydoc.HTMLRepr.escape"
builtins.str"builtins.str**
self 
pydoc.HTMLRepr"pydoc.HTMLRepr*&
text
builtins.str"builtins.strz38z39z310z311z312z313*±
reprpydoc.HTMLRepr.repr"
builtins.str"builtins.str**
self 
pydoc.HTMLRepr"pydoc.HTMLRepr*.
object"
builtins.object"builtins.objectz38z39z310z311z312z313*ﬂ
repr1pydoc.HTMLRepr.repr1"
builtins.str"builtins.str**
self 
pydoc.HTMLRepr"pydoc.HTMLRepr*)
x"
builtins.object"builtins.object*/
level$
builtins.complex"builtins.complexz38z39z310z311z312z313*Â
repr_stringpydoc.HTMLRepr.repr_string"
builtins.str"builtins.str**
self 
pydoc.HTMLRepr"pydoc.HTMLRepr*#
x
builtins.str"builtins.str*/
level$
builtins.complex"builtins.complexz38z39z310z311z312z313*ﬂ
repr_strpydoc.HTMLRepr.repr_str"
builtins.str"builtins.str**
self 
pydoc.HTMLRepr"pydoc.HTMLRepr*#
x
builtins.str"builtins.str*/
level$
builtins.complex"builtins.complexz38z39z310z311z312z313*Ô
repr_instancepydoc.HTMLRepr.repr_instance"
builtins.str"builtins.str**
self 
pydoc.HTMLRepr"pydoc.HTMLRepr*)
x"
builtins.object"builtins.object*/
level$
builtins.complex"builtins.complexz38z39z310z311z312z313*ë
repr_unicodepydoc.HTMLRepr.repr_unicode"
builtins.str"builtins.str**
self 
pydoc.HTMLRepr"pydoc.HTMLRepr*M
xF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*/
level$
builtins.complex"builtins.complexz38z39z310z311z312z313j38j39j310j311j312j313”K
HTMLDocpydoc.HTMLDoc"	pydoc.Doc*”
pagepydoc.HTMLDoc.page"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*'
title
builtins.str"builtins.str**
contents
builtins.str"builtins.strz38z39z310z311z312z313*ú
headingpydoc.HTMLDoc.heading"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*'
title
builtins.str"builtins.str*'
fgcol
builtins.str"builtins.str*'
bgcol
builtins.str"builtins.str**
extras
builtins.str"builtins.str z38z39z310*Ã
headingpydoc.HTMLDoc.heading"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*'
title
builtins.str"builtins.str**
extras
builtins.str"builtins.str z311z312z313*ı
sectionpydoc.HTMLDoc.section"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*'
title
builtins.str"builtins.str*'
fgcol
builtins.str"builtins.str*'
bgcol
builtins.str"builtins.str**
contents
builtins.str"builtins.str*)
width
builtins.int"builtins.int *+
prelude
builtins.str"builtins.str *V

marginaliaD
Union[builtins.str,None]
builtins.str"builtins.str
None *'
gap
builtins.str"builtins.str z38z39z310*Ã
sectionpydoc.HTMLDoc.section"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*'
title
builtins.str"builtins.str*%
cls
builtins.str"builtins.str**
contents
builtins.str"builtins.str*)
width
builtins.int"builtins.int *+
prelude
builtins.str"builtins.str *V

marginaliaD
Union[builtins.str,None]
builtins.str"builtins.str
None *'
gap
builtins.str"builtins.str z311z312z313*˜
multicolumnpydoc.HTMLDoc.multicolumn"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*u
listk
builtins.list[pydoc._T]A
pydoc._T"
builtins.object"builtins.object"builtins.object"builtins.list*W
formatK
CallableType[builtins.function]&
builtins.function"builtins.function*(
cols
builtins.int"builtins.int z38z39z310*œ
multicolumnpydoc.HTMLDoc.multicolumn"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*u
listk
builtins.list[pydoc._T]A
pydoc._T"
builtins.object"builtins.object"builtins.object"builtins.list*W
formatK
CallableType[builtins.function]&
builtins.function"builtins.functionz311z312z313*∆

bigsectionpydoc.HTMLDoc.bigsection"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*'
title
builtins.str"builtins.str*
args
Anyz38z39z310z311z312z313*∞
	preformatpydoc.HTMLDoc.preformat"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*&
text
builtins.str"builtins.strz38z39z310z311z312z313*¶
greypydoc.HTMLDoc.grey"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*&
text
builtins.str"builtins.strz38z39z310z311z312z313*¬
namelinkpydoc.HTMLDoc.namelink"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*&
name
builtins.str"builtins.str*ë
dictsÖ
0typing.MutableMapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.MutableMappingz38z39z310z311z312z313*„
	classlinkpydoc.HTMLDoc.classlink"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*.
object"
builtins.object"builtins.object*)
modname
builtins.str"builtins.strz38z39z310z311z312z313*∫

modulelinkpydoc.HTMLDoc.modulelink"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*.
object"
builtins.object"builtins.objectz38z39z310z311z312z313*⁄

modpkglinkpydoc.HTMLDoc.modpkglink"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*Õ

modpkginfoº
<Tuple[builtins.str,builtins.str,builtins.bool,builtins.bool]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.bool"builtins.bool
builtins.bool"builtins.boolz38z39z310z311z312z313*€
markuppydoc.HTMLDoc.markup"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*&
text
builtins.str"builtins.str*ï
escapeÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *Ñ
funcsw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *Ü
classesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *Ü
methodsw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping z38z39z310z311z312z313*±

formattreepydoc.HTMLDoc.formattree"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*¢
treeó
[builtins.list[Union[Tuple[builtins.type,builtins.tuple[builtins.type]],builtins.list[Any]]]®
LUnion[Tuple[builtins.type,builtins.tuple[builtins.type]],builtins.list[Any]]ß
2Tuple[builtins.type,builtins.tuple[builtins.type]]
builtins.type"builtins.typeO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple,
builtins.list[Any]
Any"builtins.list"builtins.list*)
modname
builtins.str"builtins.str*U
parentG
Union[builtins.type,None]
builtins.type"builtins.type
None z38z39z310z311z312z313*Ò
	docmodulepydoc.HTMLDoc.docmodule"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
modD
Union[builtins.str,None]
builtins.str"builtins.str
None *
ignored
Anyz38z39z310z311z312z313*ˇ
docclasspydoc.HTMLDoc.docclass"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
modD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ñ
funcsw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *Ü
classesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *
ignored
Anyz38z39z310z311z312z313*º
formatvaluepydoc.HTMLDoc.formatvalue"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*.
object"
builtins.object"builtins.objectz38z39z310z311z312z313*…

docroutinepydoc.HTMLDoc.docroutine"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
modD
Union[builtins.str,None]
builtins.str"builtins.str
None *Ñ
funcsw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *Ü
classesw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *Ü
methodsw
)typing.Mapping[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Mapping *Q
clG
Union[builtins.type,None]
builtins.type"builtins.type
None z38z39z310z311z312z313*ë
docpropertypydoc.HTMLDoc.docproperty"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
modD
Union[builtins.str,None]
builtins.str"builtins.str
None *0
cl&
Union[Any,None]
Any
None z38z39z310z311z312z313*—
docotherpydoc.HTMLDoc.docother"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
mod&
Union[Any,None]
Any
None *
ignored
Anyz38z39z310z311z312z313*Î
docdatapydoc.HTMLDoc.docdata"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
mod&
Union[Any,None]
Any
None *0
cl&
Union[Any,None]
Any
None z38z39z310z311z312z313*ë
indexpydoc.HTMLDoc.index"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*%
dir
builtins.str"builtins.str*Á
shadowed÷
=Union[typing.MutableMapping[builtins.str,builtins.bool],None]à
1typing.MutableMapping[builtins.str,builtins.bool]
builtins.str"builtins.str
builtins.bool"builtins.bool"typing.MutableMapping
None z38z39z310z311z312z313*’
filelinkpydoc.HTMLDoc.filelink"
builtins.str"builtins.str*(
self
pydoc.HTMLDoc"pydoc.HTMLDoc*%
url
builtins.str"builtins.str*&
path
builtins.str"builtins.strz38z39z310z311z312z313j38j39j310j311j312j313rl
_repr_instancepydoc.HTMLDoc._repr_instance 
pydoc.HTMLRepr"pydoc.HTMLRepr*38*39*310*311*312*313rÉ
reprpydoc.HTMLDoc.reprK
CallableType[builtins.function]&
builtins.function"builtins.function*38*39*310*311*312*313rá
escapepydoc.HTMLDoc.escapeK
CallableType[builtins.function]&
builtins.function"builtins.function*38*39*310*311*312*313‚
TextReprpydoc.TextRepr"reprlib.Repr*ﬂ
repr1pydoc.TextRepr.repr1"
builtins.str"builtins.str**
self 
pydoc.TextRepr"pydoc.TextRepr*)
x"
builtins.object"builtins.object*/
level$
builtins.complex"builtins.complexz38z39z310z311z312z313*Â
repr_stringpydoc.TextRepr.repr_string"
builtins.str"builtins.str**
self 
pydoc.TextRepr"pydoc.TextRepr*#
x
builtins.str"builtins.str*/
level$
builtins.complex"builtins.complexz38z39z310z311z312z313*ﬂ
repr_strpydoc.TextRepr.repr_str"
builtins.str"builtins.str**
self 
pydoc.TextRepr"pydoc.TextRepr*#
x
builtins.str"builtins.str*/
level$
builtins.complex"builtins.complexz38z39z310z311z312z313*Ô
repr_instancepydoc.TextRepr.repr_instance"
builtins.str"builtins.str**
self 
pydoc.TextRepr"pydoc.TextRepr*)
x"
builtins.object"builtins.object*/
level$
builtins.complex"builtins.complexz38z39z310z311z312z313j38j39j310j311j312j313≠!
TextDocpydoc.TextDoc"	pydoc.Doc*¶
boldpydoc.TextDoc.bold"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*&
text
builtins.str"builtins.strz38z39z310z311z312z313*÷
indentpydoc.TextDoc.indent"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*&
text
builtins.str"builtins.str**
prefix
builtins.str"builtins.str z38z39z310z311z312z313*Ÿ
sectionpydoc.TextDoc.section"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*'
title
builtins.str"builtins.str**
contents
builtins.str"builtins.strz38z39z310z311z312z313*›

formattreepydoc.TextDoc.formattree"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*¢
treeó
[builtins.list[Union[Tuple[builtins.type,builtins.tuple[builtins.type]],builtins.list[Any]]]®
LUnion[Tuple[builtins.type,builtins.tuple[builtins.type]],builtins.list[Any]]ß
2Tuple[builtins.type,builtins.tuple[builtins.type]]
builtins.type"builtins.typeO
builtins.tuple[builtins.type]
builtins.type"builtins.type"builtins.tuple,
builtins.list[Any]
Any"builtins.list"builtins.list*)
modname
builtins.str"builtins.str*U
parentG
Union[builtins.type,None]
builtins.type"builtins.type
None **
prefix
builtins.str"builtins.str z38z39z310z311z312z313*Ω
	docmodulepydoc.TextDoc.docmodule"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
mod&
Union[Any,None]
Any
None z38z39z310z311z312z313*Ô
docclasspydoc.TextDoc.docclass"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
modD
Union[builtins.str,None]
builtins.str"builtins.str
None *
ignored
Anyz38z39z310z311z312z313*º
formatvaluepydoc.TextDoc.formatvalue"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*.
object"
builtins.object"builtins.objectz38z39z310z311z312z313*è

docroutinepydoc.TextDoc.docroutine"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
modD
Union[builtins.str,None]
builtins.str"builtins.str
None *0
cl&
Union[Any,None]
Any
None z38z39z310z311z312z313*Û
docpropertypydoc.TextDoc.docproperty"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *1
mod&
Union[Any,None]
Any
None *0
cl&
Union[Any,None]
Any
None z38z39z310z311z312z313*â
docdatapydoc.TextDoc.docdata"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
modD
Union[builtins.str,None]
builtins.str"builtins.str
None *0
cl&
Union[Any,None]
Any
None z38z39z310z311z312z313*¥
docotherpydoc.TextDoc.docother"
builtins.str"builtins.str*(
self
pydoc.TextDoc"pydoc.TextDoc*.
object"
builtins.object"builtins.object*P
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *O
modD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
parentD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
maxlenD
Union[builtins.int,None]
builtins.int"builtins.int
None *1
doc&
Union[Any,None]
Any
None z38z39z310z311z312z313j38j39j310j311j312j313rl
_repr_instancepydoc.TextDoc._repr_instance 
pydoc.TextRepr"pydoc.TextRepr*38*39*310*311*312*313rÉ
reprpydoc.TextDoc.reprK
CallableType[builtins.function]&
builtins.function"builtins.function*38*39*310*311*312*313˘
Helperpydoc.Helper"builtins.object*˙
__init__pydoc.Helper.__init__"
None*&
self
pydoc.Helper"pydoc.Helper*Ç
inputu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None *É
outputu
#Union[typing.IO[builtins.str],None]B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO
None z38z39z310z311z312z313*∫
inputpydoc.Helper.input"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*&
self
pydoc.Helper"pydoc.Helper0:builtins.property`z38z39z310z311z312z313*º
outputpydoc.Helper.output"B
typing.IO[builtins.str]
builtins.str"builtins.str"	typing.IO*&
self
pydoc.Helper"pydoc.Helper0:builtins.property`z38z39z310z311z312z313*ñ
__call__pydoc.Helper.__call__"
None*&
self
pydoc.Helper"pydoc.Helper*§
requestî
0Union[builtins.str,pydoc.Helper,builtins.object]
builtins.str"builtins.str
pydoc.Helper"pydoc.Helper"
builtins.object"builtins.object z38z39z310z311z312z313*o
interactpydoc.Helper.interact"
None*&
self
pydoc.Helper"pydoc.Helperz38z39z310z311z312z313*´
getlinepydoc.Helper.getline"
builtins.str"builtins.str*&
self
pydoc.Helper"pydoc.Helper*(
prompt
builtins.str"builtins.strz38z39z310z311z312z313*}
helppydoc.Helper.help"
None*&
self
pydoc.Helper"pydoc.Helper*
request
Anyz38z39z310z311z312z313*i
intropydoc.Helper.intro"
None*&
self
pydoc.Helper"pydoc.Helperz38z39z310z311z312z313*ñ
listpydoc.Helper.list"
None*&
self
pydoc.Helper"pydoc.Helper*U
itemsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*+
columns
builtins.int"builtins.int *)
width
builtins.int"builtins.int z38z39z310z311z312z313*w
listkeywordspydoc.Helper.listkeywords"
None*&
self
pydoc.Helper"pydoc.Helperz38z39z310z311z312z313*u
listsymbolspydoc.Helper.listsymbols"
None*&
self
pydoc.Helper"pydoc.Helperz38z39z310z311z312z313*s

listtopicspydoc.Helper.listtopics"
None*&
self
pydoc.Helper"pydoc.Helperz38z39z310z311z312z313* 
	showtopicpydoc.Helper.showtopic"
None*&
self
pydoc.Helper"pydoc.Helper*'
topic
builtins.str"builtins.str*.

more_xrefs
builtins.str"builtins.str z38z39z310z311z312z313*ù

showsymbolpydoc.Helper.showsymbol"
None*&
self
pydoc.Helper"pydoc.Helper*(
symbol
builtins.str"builtins.strz38z39z310z311z312z313*û
listmodulespydoc.Helper.listmodules"
None*&
self
pydoc.Helper"pydoc.Helper*'
key
builtins.str"builtins.str z38z39z310z311z312z313j38j39j310j311j312j313r˙
keywordspydoc.Helper.keywords∫
Pbuiltins.dict[builtins.str,Union[builtins.str,Tuple[builtins.str,builtins.str]]]
builtins.str"builtins.str∏
4Union[builtins.str,Tuple[builtins.str,builtins.str]]
builtins.str"builtins.str`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*38*39*310*311*312*313r≤
symbolspydoc.Helper.symbolsu
(builtins.dict[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.dict*38*39*310*311*312*313r⁄
topicspydoc.Helper.topicsû
Lbuiltins.dict[builtins.str,Union[builtins.str,builtins.tuple[builtins.str]]]
builtins.str"builtins.str†
0Union[builtins.str,builtins.tuple[builtins.str]]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple"builtins.dict*38*39*310*311*312*313å
ModuleScannerpydoc.ModuleScanner"builtins.object*⁄
runpydoc.ModuleScanner.run"
None*4
self*
pydoc.ModuleScanner"pydoc.ModuleScanner*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.function*O
keyD
Union[builtins.str,None]
builtins.str"builtins.str
None *ò
	completerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ñ
onerrorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z38z39z310z311z312z313j38j39j310j311j312j313r\
quitpydoc.ModuleScanner.quit
builtins.bool"builtins.bool*38*39*310*311*312*313Ç
pathdirspydoc.pathdirs"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listz38z39z310z311z312z313Ä
getdocpydoc.getdoc"
builtins.str"builtins.str*.
object"
builtins.object"builtins.objectz38z39z310z311z312z313¿
splitdocpydoc.splitdoc"∂
"Tuple[typing.AnyStr,typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.objectF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*O
docF
typing.AnyStr"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313±
	classnamepydoc.classname"
builtins.str"builtins.str*.
object"
builtins.object"builtins.object*)
modname
builtins.str"builtins.strz38z39z310z311z312z313Ç
isdatapydoc.isdata"
builtins.bool"builtins.bool*.
object"
builtins.object"builtins.objectz38z39z310z311z312z313°
replacepydoc.replace"F
typing.AnyStr"
builtins.object"builtins.object"builtins.object*P
textF
typing.AnyStr"
builtins.object"builtins.object"builtins.object*Q
pairsF
typing.AnyStr"
builtins.object"builtins.object"builtins.objectz38z39z310z311z312z313û
cram
pydoc.cram"
builtins.str"builtins.str*&
text
builtins.str"builtins.str*(
maxlen
builtins.int"builtins.intz38z39z310z311z312z313z
stripidpydoc.stripid"
builtins.str"builtins.str*&
text
builtins.str"builtins.strz38z39z310z311z312z313ˆ

allmethodspydoc.allmethods"ë
4typing.MutableMapping[builtins.str,types.MethodType]
builtins.str"builtins.str$
types.MethodType"types.MethodType"typing.MutableMapping*&
cl
builtins.type"builtins.typez38z39z310z311z312z313Ã
visiblenamepydoc.visiblename"
builtins.bool"builtins.bool*&
name
builtins.str"builtins.str*ñ
allä
*Union[typing.Container[builtins.str],None]P
typing.Container[builtins.str]
builtins.str"builtins.str"typing.Container
None *-
obj"
builtins.object"builtins.object z38z39z310z311z312z313ò
classify_class_attrspydoc.classify_class_attrs"ó
Jbuiltins.list[Tuple[builtins.str,builtins.str,builtins.type,builtins.str]]π
;Tuple[builtins.str,builtins.str,builtins.type,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.type"builtins.type
builtins.str"builtins.str"builtins.list*.
object"
builtins.object"builtins.objectz38z39z310z311z312z313Ä
	ispackagepydoc.ispackage"
builtins.bool"builtins.bool*&
path
builtins.str"builtins.strz38z39z310z311z312z313Æ
source_synopsispydoc.source_synopsis"o
Union[typing.AnyStr,None]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object
None*w
filem
typing.IO[typing.AnyStr]F
typing.AnyStr"
builtins.object"builtins.object"builtins.object"	typing.IOz38z39z310z311z312z313ñ
synopsispydoc.synopsis"D
Union[builtins.str,None]
builtins.str"builtins.str
None**
filename
builtins.str"builtins.str*Î
cache›
Dtyping.MutableMapping[builtins.str,Tuple[builtins.int,builtins.str]]
builtins.str"builtins.str`
 Tuple[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str"typing.MutableMapping z38z39z310z311z312z313à

importfilepydoc.importfile"$
types.ModuleType"types.ModuleType*&
path
builtins.str"builtins.strz38z39z310z311z312z313á

safeimportpydoc.safeimport"P
Union[types.ModuleType,None]$
types.ModuleType"types.ModuleType
None*&
path
builtins.str"builtins.str*/
	forceload
builtins.bool"builtins.bool *ü
cacheë
4typing.MutableMapping[builtins.str,types.ModuleType]
builtins.str"builtins.str$
types.ModuleType"types.ModuleType"typing.MutableMapping z38z39z310z311z312z313b
pagerpydoc.pager"
None*&
text
builtins.str"builtins.strz38z39z310z311z312z313É
getpagerpydoc.getpager"K
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313v
plainpydoc.plain"
builtins.str"builtins.str*&
text
builtins.str"builtins.strz38z39z310z311z312z313ë
	pipepagerpydoc.pipepager"
None*&
text
builtins.str"builtins.str*%
cmd
builtins.str"builtins.strz38z39z310z311z312z313ô
tempfilepagerpydoc.tempfilepager"
None*&
text
builtins.str"builtins.str*%
cmd
builtins.str"builtins.strz38z39z310z311z312z313h
ttypagerpydoc.ttypager"
None*&
text
builtins.str"builtins.strz38z39z310z311z312z313l

plainpagerpydoc.plainpager"
None*&
text
builtins.str"builtins.strz38z39z310z311z312z313h
describepydoc.describe"
builtins.str"builtins.str*
thing
Anyz38z39z310z311z312z313Ø
locatepydoc.locate""
builtins.object"builtins.object*&
path
builtins.str"builtins.str*/
	forceload
builtins.bool"builtins.bool z38z39z310z311z312z313Ü
resolvepydoc.resolve"®
/Union[Tuple[builtins.object,builtins.str],None]i
#Tuple[builtins.object,builtins.str]"
builtins.object"builtins.object
builtins.str"builtins.str
None*t
thingi
#Union[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object*/
	forceload
builtins.bool"builtins.bool z38z39z310z311z312z313˜

render_docpydoc.render_doc"
builtins.str"builtins.str*t
thingi
#Union[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object*)
title
builtins.str"builtins.str */
	forceload
builtins.bool"builtins.bool *K
renderer;
Union[pydoc.Doc,None]
	pydoc.Doc"	pydoc.Doc
None z38z39z310z311z312z313π
doc	pydoc.doc"
None*t
thingi
#Union[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object*)
title
builtins.str"builtins.str */
	forceload
builtins.bool"builtins.bool *Æ
outputü
1Union[_typeshed.SupportsWrite[builtins.str],None]^
%_typeshed.SupportsWrite[builtins.str]
builtins.str"builtins.str"_typeshed.SupportsWrite
None z38z39z310z311z312z313Á
writedocpydoc.writedoc"
None*t
thingi
#Union[builtins.str,builtins.object]
builtins.str"builtins.str"
builtins.object"builtins.object*/
	forceload
builtins.bool"builtins.bool z38z39z310z311z312z313 
	writedocspydoc.writedocs"
None*%
dir
builtins.str"builtins.str*+
pkgpath
builtins.str"builtins.str *2
done&
Union[Any,None]
Any
None z38z39z310z311z312z313e
apropospydoc.apropos"
None*%
key
builtins.str"builtins.strz38z39z310z311z312z313}
ispathpydoc.ispath"
builtins.bool"builtins.bool*)
x"
builtins.object"builtins.objectz38z39z310z311z312z3136
cli	pydoc.cli"
Nonez38z39z310z311z312z313*ù
__annotations__pydoc.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*Ä
__all__pydoc.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*X

__author__pydoc.__author__
builtins.str"builtins.str*38*39*310*311*312*313*T
__date__pydoc.__date__
builtins.str"builtins.str*38*39*310*311*312*313*Z
__version__pydoc.__version__
builtins.str"builtins.str*38*39*310*311*312*313*Z
__credits__pydoc.__credits__
builtins.str"builtins.str*38*39*310*311*312*313*N
text
pydoc.text
pydoc.TextDoc"pydoc.TextDoc*38*39*310*311*312*313*N
html
pydoc.html
pydoc.HTMLDoc"pydoc.HTMLDoc*38*39*310*311*312*313*L
help
pydoc.help
pydoc.Helper"pydoc.Helper*38*39*310*311*312*313