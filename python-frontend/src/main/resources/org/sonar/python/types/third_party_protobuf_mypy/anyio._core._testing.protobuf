
anyio._core._testingè
TaskInfoanyio._core._testing.TaskInfo"builtins.object*ü
__init__&anyio._core._testing.TaskInfo.__init__"
None*H
self>
anyio._core._testing.TaskInfo"anyio._core._testing.TaskInfo*$
id
builtins.int"builtins.int*S
	parent_idD
Union[builtins.int,None]
builtins.int"builtins.int
None*N
nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*À
coro¿
:Union[typing.Generator[Any,Any,Any],typing.Awaitable[Any]]L
typing.Generator[Any,Any,Any]
Any
Any
Any"typing.Generator2
typing.Awaitable[Any]
Any"typing.Awaitable*∂
__eq__$anyio._core._testing.TaskInfo.__eq__"
builtins.bool"builtins.bool*@>
anyio._core._testing.TaskInfo"anyio._core._testing.TaskInfo*$"
builtins.object"builtins.object*ö
__hash__&anyio._core._testing.TaskInfo.__hash__"
builtins.int"builtins.int*H
self>
anyio._core._testing.TaskInfo"anyio._core._testing.TaskInfo*í
__repr__&anyio._core._testing.TaskInfo.__repr__"
builtins.str"builtins.str*@>
anyio._core._testing.TaskInfo"anyio._core._testing.TaskInfo*∫
_unwrap%anyio._core._testing.TaskInfo._unwrap">
anyio._core._testing.TaskInfo"anyio._core._testing.TaskInfo*H
self>
anyio._core._testing.TaskInfo"anyio._core._testing.TaskInforò
	__slots__'anyio._core._testing.TaskInfo.__slots__·
GTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.strrJ
_name#anyio._core._testing.TaskInfo._name
builtins.str"builtins.strrD
id anyio._core._testing.TaskInfo.id
builtins.int"builtins.intrz
	parent_id'anyio._core._testing.TaskInfo.parent_idD
Union[builtins.int,None]
builtins.int"builtins.int
Nonerp
name"anyio._core._testing.TaskInfo.nameD
Union[builtins.str,None]
builtins.str"builtins.str
NonerÌ
coro"anyio._core._testing.TaskInfo.coro¿
:Union[typing.Generator[Any,Any,Any],typing.Awaitable[Any]]L
typing.Generator[Any,Any,Any]
Any
Any
Any"typing.Generator2
typing.Awaitable[Any]
Any"typing.Awaitabley
get_current_task%anyio._core._testing.get_current_task">
anyio._core._testing.TaskInfo"anyio._core._testing.TaskInfo∫
get_running_tasks&anyio._core._testing.get_running_tasks"}
,builtins.list[anyio._core._testing.TaskInfo]>
anyio._core._testing.TaskInfo"anyio._core._testing.TaskInfo"builtins.listó
wait_all_tasks_blocked+anyio._core._testing.wait_all_tasks_blocked"N
typing.Coroutine[Any,Any,None]
Any
Any
None"typing.CoroutineH*ê
__annotations__$anyio._core._testing.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict