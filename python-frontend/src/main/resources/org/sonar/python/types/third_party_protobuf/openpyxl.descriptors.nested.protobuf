
openpyxl.descriptors.nestedù
Nested"openpyxl.descriptors.nested.Nested"$openpyxl.descriptors.base.Descriptor*Õ
__set__*openpyxl.descriptors.nested.Nested.__set__"
None*R
selfH
"openpyxl.descriptors.nested.Nested""openpyxl.descriptors.nested.Nested*Ç
instanceÛ
QUnion[openpyxl.descriptors.serialisable.Serialisable,openpyxl.descriptors.Strict]`
.openpyxl.descriptors.serialisable.Serialisable".openpyxl.descriptors.serialisable.Serialisable:
openpyxl.descriptors.Strict"openpyxl.descriptors.Strict*
value
Anyz38z39z310z311z312z313z314*n
	from_tree,openpyxl.descriptors.nested.Nested.from_tree*
self*
nodez38z39z310z311z312z313z314*˜
to_tree*openpyxl.descriptors.nested.Nested.to_tree"
Any*R
selfH
"openpyxl.descriptors.nested.Nested""openpyxl.descriptors.nested.Nested*j
tagname[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
value[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	namespace[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314rt
nested)openpyxl.descriptors.nested.Nested.nested
builtins.bool"builtins.bool*38*39*310*311*312*313*314rx
	attribute,openpyxl.descriptors.nested.Nested.attribute
builtins.str"builtins.str*38*39*310*311*312*313*314¢
NestedValue'openpyxl.descriptors.nested.NestedValue""openpyxl.descriptors.nested.Nested"%openpyxl.descriptors.base.Convertiblej38j39j310j311j312j313j314¯

NestedText&openpyxl.descriptors.nested.NestedText"'openpyxl.descriptors.nested.NestedValue*r
	from_tree0openpyxl.descriptors.nested.NestedText.from_tree*
self*
nodez38z39z310z311z312z313z314*É
to_tree.openpyxl.descriptors.nested.NestedText.to_tree"
Any*Z
selfP
&openpyxl.descriptors.nested.NestedText"&openpyxl.descriptors.nested.NestedText*j
tagname[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
value[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	namespace[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314°
NestedFloat'openpyxl.descriptors.nested.NestedFloat"'openpyxl.descriptors.nested.NestedValue"openpyxl.descriptors.base.Floatj38j39j310j311j312j313j314ß
NestedInteger)openpyxl.descriptors.nested.NestedInteger"'openpyxl.descriptors.nested.NestedValue"!openpyxl.descriptors.base.Integerj38j39j310j311j312j313j314§
NestedString(openpyxl.descriptors.nested.NestedString"'openpyxl.descriptors.nested.NestedValue" openpyxl.descriptors.base.Stringj38j39j310j311j312j313j314í

NestedBool&openpyxl.descriptors.nested.NestedBool"'openpyxl.descriptors.nested.NestedValue"openpyxl.descriptors.base.Bool*r
	from_tree0openpyxl.descriptors.nested.NestedBool.from_tree*
self*
nodez38z39z310z311z312z313z314j38j39j310j311j312j313j314¢
NestedNoneSet)openpyxl.descriptors.nested.NestedNoneSet""openpyxl.descriptors.nested.Nested"!openpyxl.descriptors.base.NoneSetj38j39j310j311j312j313j314ñ
	NestedSet%openpyxl.descriptors.nested.NestedSet""openpyxl.descriptors.nested.Nested"openpyxl.descriptors.base.Setj38j39j310j311j312j313j314ü
NestedMinMax(openpyxl.descriptors.nested.NestedMinMax""openpyxl.descriptors.nested.Nested" openpyxl.descriptors.base.MinMaxj38j39j310j311j312j313j314á
EmptyTag$openpyxl.descriptors.nested.EmptyTag""openpyxl.descriptors.nested.Nested"openpyxl.descriptors.base.Bool*p
	from_tree.openpyxl.descriptors.nested.EmptyTag.from_tree*
self*
nodez38z39z310z311z312z313z314*˝
to_tree,openpyxl.descriptors.nested.EmptyTag.to_tree"
Any*V
selfL
$openpyxl.descriptors.nested.EmptyTag"$openpyxl.descriptors.nested.EmptyTag*j
tagname[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
value[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	namespace[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314*∏
__annotations__+openpyxl.descriptors.nested.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314