
(sklearn.linear_model._glm._newton_solverç
HalfSquaredError#sklearn._loss.loss.HalfSquaredError"sklearn._loss.loss.BaseLoss*∂
__init__,sklearn._loss.loss.HalfSquaredError.__init__"
None*T
selfJ
#sklearn._loss.loss.HalfSquaredError"#sklearn._loss.loss.HalfSquaredError*
sample_weight
Any Q
ConvergenceWarning%sklearn.exceptions.ConvergenceWarning"builtins.UserWarning±\
NewtonSolver5sklearn.linear_model._glm._newton_solver.NewtonSolver"abc.ABC*¸=
__init__>sklearn.linear_model._glm._newton_solver.NewtonSolver.__init__"
None*x
selfn
5sklearn.linear_model._glm._newton_solver.NewtonSolver"5sklearn.linear_model._glm._newton_solver.NewtonSolver*î
coefâ
ßUnion[TypeAlias[Union[numpy.ndarray[Any,Any],pandas.core.frame.DataFrame,Any]],TypeAlias[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]]¨
HTypeAlias[Union[numpy.ndarray[Any,Any],pandas.core.frame.DataFrame,Any]]¡
=Union[numpy.ndarray[Any,Any],pandas.core.frame.DataFrame,Any]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame
Any"sklearn._typing.MatrixLike´
◊TypeAlias[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike"sklearn._typing.ArrayLike*y
linear_lossf
1sklearn.linear_model._linear_loss.LinearModelLoss"1sklearn.linear_model._linear_loss.LinearModelLoss *¥
l2_reg_strengthú
∞TypeAlias[Union[builtins.float,TypeAlias[numpy.floating[numpy._typing._16Bit]],TypeAlias[numpy.floating[numpy._typing._32Bit]],TypeAlias[numpy.floating[numpy._typing._64Bit]]]]Õ
•Union[builtins.float,TypeAlias[numpy.floating[numpy._typing._16Bit]],TypeAlias[numpy.floating[numpy._typing._32Bit]],TypeAlias[numpy.floating[numpy._typing._64Bit]]] 
builtins.float"builtins.float®
/TypeAlias[numpy.floating[numpy._typing._16Bit]]d
$numpy.floating[numpy._typing._16Bit],
numpy._typing._16Bit"numpy._typing._16Bit"numpy.floating"numpy.float16®
/TypeAlias[numpy.floating[numpy._typing._32Bit]]d
$numpy.floating[numpy._typing._32Bit],
numpy._typing._32Bit"numpy._typing._32Bit"numpy.floating"numpy.float32®
/TypeAlias[numpy.floating[numpy._typing._64Bit]]d
$numpy.floating[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.floating"numpy.float64"sklearn._typing.Float *®
tolú
∞TypeAlias[Union[builtins.float,TypeAlias[numpy.floating[numpy._typing._16Bit]],TypeAlias[numpy.floating[numpy._typing._32Bit]],TypeAlias[numpy.floating[numpy._typing._64Bit]]]]Õ
•Union[builtins.float,TypeAlias[numpy.floating[numpy._typing._16Bit]],TypeAlias[numpy.floating[numpy._typing._32Bit]],TypeAlias[numpy.floating[numpy._typing._64Bit]]] 
builtins.float"builtins.float®
/TypeAlias[numpy.floating[numpy._typing._16Bit]]d
$numpy.floating[numpy._typing._16Bit],
numpy._typing._16Bit"numpy._typing._16Bit"numpy.floating"numpy.float16®
/TypeAlias[numpy.floating[numpy._typing._32Bit]]d
$numpy.floating[numpy._typing._32Bit],
numpy._typing._32Bit"numpy._typing._32Bit"numpy.floating"numpy.float32®
/TypeAlias[numpy.floating[numpy._typing._64Bit]]d
$numpy.floating[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.floating"numpy.float64"sklearn._typing.Float *É

max_iterÚ	
ÒTypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]‰
ÊUnion[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]
builtins.int"builtins.int∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8µ
4TypeAlias[numpy.signedinteger[numpy._typing._16Bit]]n
)numpy.signedinteger[numpy._typing._16Bit],
numpy._typing._16Bit"numpy._typing._16Bit"numpy.signedinteger"numpy.int16µ
4TypeAlias[numpy.signedinteger[numpy._typing._32Bit]]n
)numpy.signedinteger[numpy._typing._32Bit],
numpy._typing._32Bit"numpy._typing._32Bit"numpy.signedinteger"numpy.int32µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64"sklearn._typing.Int *Ñ

	n_threadsÚ	
ÒTypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]‰
ÊUnion[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]
builtins.int"builtins.int∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8µ
4TypeAlias[numpy.signedinteger[numpy._typing._16Bit]]n
)numpy.signedinteger[numpy._typing._16Bit],
numpy._typing._16Bit"numpy._typing._16Bit"numpy.signedinteger"numpy.int16µ
4TypeAlias[numpy.signedinteger[numpy._typing._32Bit]]n
)numpy.signedinteger[numpy._typing._32Bit],
numpy._typing._32Bit"numpy._typing._32Bit"numpy.signedinteger"numpy.int32µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64"sklearn._typing.Int *+
verbose
builtins.int"builtins.int *Ë
setup;sklearn.linear_model._glm._newton_solver.NewtonSolver.setup"
None*x
selfn
5sklearn.linear_model._glm._newton_solver.NewtonSolver"5sklearn.linear_model._glm._newton_solver.NewtonSolver*
X
Any*@
y9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*L
sample_weight9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*´
update_gradient_hessianMsklearn.linear_model._glm._newton_solver.NewtonSolver.update_gradient_hessian*
self*
X*
y*
sample_weight0:abc.abstractmethod@*ì
inner_solveAsklearn.linear_model._glm._newton_solver.NewtonSolver.inner_solve*
self*
X*
y*
sample_weight0:abc.abstractmethod@*ç
fallback_lbfgs_solveJsklearn.linear_model._glm._newton_solver.NewtonSolver.fallback_lbfgs_solve*
self*
X*
y*
sample_weight*Ù
line_searchAsklearn.linear_model._glm._newton_solver.NewtonSolver.line_search"
None*x
selfn
5sklearn.linear_model._glm._newton_solver.NewtonSolver"5sklearn.linear_model._glm._newton_solver.NewtonSolver*
X
Any*@
y9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*L
sample_weight9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*Ä
check_convergenceGsklearn.linear_model._glm._newton_solver.NewtonSolver.check_convergence"
None*x
selfn
5sklearn.linear_model._glm._newton_solver.NewtonSolver"5sklearn.linear_model._glm._newton_solver.NewtonSolver*
X
Any*@
y9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*L
sample_weight9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*Ó
finalize>sklearn.linear_model._glm._newton_solver.NewtonSolver.finalize"
None*x
selfn
5sklearn.linear_model._glm._newton_solver.NewtonSolver"5sklearn.linear_model._glm._newton_solver.NewtonSolver*
X
Any*@
y9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*L
sample_weight9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*ô
solve;sklearn.linear_model._glm._newton_solver.NewtonSolver.solve"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*x
selfn
5sklearn.linear_model._glm._newton_solver.NewtonSolver"5sklearn.linear_model._glm._newton_solver.NewtonSolver*
X
Any*@
y9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*L
sample_weight9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayrÜ
gradient_times_newtonKsklearn.linear_model._glm._newton_solver.NewtonSolver.gradient_times_newton 
builtins.float"builtins.floaträ
use_fallback_lbfgs_solveNsklearn.linear_model._glm._newton_solver.NewtonSolver.use_fallback_lbfgs_solve
builtins.bool"builtins.boolrj
	iteration?sklearn.linear_model._glm._newton_solver.NewtonSolver.iteration
builtins.int"builtins.intrl
	converged?sklearn.linear_model._glm._newton_solver.NewtonSolver.converged
builtins.bool"builtins.boolrë
raw_predictionDsklearn.linear_model._glm._newton_solver.NewtonSolver.raw_prediction9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayrx
loss_value_oldDsklearn.linear_model._glm._newton_solver.NewtonSolver.loss_value_old 
builtins.float"builtins.floatrp

loss_value@sklearn.linear_model._glm._newton_solver.NewtonSolver.loss_value 
builtins.float"builtins.floatrç
gradient_oldBsklearn.linear_model._glm._newton_solver.NewtonSolver.gradient_old9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayrÖ
gradient>sklearn.linear_model._glm._newton_solver.NewtonSolver.gradient9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayrã
coef_newtonAsklearn.linear_model._glm._newton_solver.NewtonSolver.coef_newton9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarrayrÖ
coef_old>sklearn.linear_model._glm._newton_solver.NewtonSolver.coef_old9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray»

NewtonCholeskySolver=sklearn.linear_model._glm._newton_solver.NewtonCholeskySolver"5sklearn.linear_model._glm._newton_solver.NewtonSolver*Å
setupCsklearn.linear_model._glm._newton_solver.NewtonCholeskySolver.setup"
None*à
self~
=sklearn.linear_model._glm._newton_solver.NewtonCholeskySolver"=sklearn.linear_model._glm._newton_solver.NewtonCholeskySolver*
X
Any*@
y9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*L
sample_weight9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*•
update_gradient_hessianUsklearn.linear_model._glm._newton_solver.NewtonCholeskySolver.update_gradient_hessian"
None*à
self~
=sklearn.linear_model._glm._newton_solver.NewtonCholeskySolver"=sklearn.linear_model._glm._newton_solver.NewtonCholeskySolver*
X
Any*@
y9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*L
sample_weight9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*ç
inner_solveIsklearn.linear_model._glm._newton_solver.NewtonCholeskySolver.inner_solve"
None*à
self~
=sklearn.linear_model._glm._newton_solver.NewtonCholeskySolver"=sklearn.linear_model._glm._newton_solver.NewtonCholeskySolver*
X
Any*@
y9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*L
sample_weight9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*§
__annotations__8sklearn.linear_model._glm._newton_solver.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
npnumpy *@
scipy.sklearn.linear_model._glm._newton_solver.scipy
Any*J

csr_matrix3sklearn.linear_model._glm._newton_solver.csr_matrix
Any