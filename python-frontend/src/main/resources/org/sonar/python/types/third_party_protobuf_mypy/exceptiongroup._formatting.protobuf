
exceptiongroup._formattingð
_ExceptionPrintContext1exceptiongroup._formatting._ExceptionPrintContext"builtins.object*P
__init__:exceptiongroup._formatting._ExceptionPrintContext.__init__*
self*L
indent8exceptiongroup._formatting._ExceptionPrintContext.indent*
self*i
emit6exceptiongroup._formatting._ExceptionPrintContext.emit*
self*
text_gen*
margin_char rG
seen6exceptiongroup._formatting._ExceptionPrintContext.seen
Anyri
exception_group_depthGexceptiongroup._formatting._ExceptionPrintContext.exception_group_depth
AnyrS

need_close<exceptiongroup._formatting._ExceptionPrintContext.need_close
Anyè

PatchedTracebackException4exceptiongroup._formatting.PatchedTracebackException"traceback.TracebackException*Ü
__init__=exceptiongroup._formatting.PatchedTracebackException.__init__"
None*v
selfl
4exceptiongroup._formatting.PatchedTracebackException"4exceptiongroup._formatting.PatchedTracebackException*f
exc_typeX
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type*?
	exc_value0
builtins.BaseException"builtins.BaseException*l
exc_tracebackY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *2
lookup_lines
builtins.bool"builtins.bool *4
capture_locals
builtins.bool"builtins.bool *-
compact
builtins.bool"builtins.bool *‹
_seen~
&Union[builtins.set[builtins.int],None]H
builtins.set[builtins.int]
builtins.int"builtins.int"builtins.set
None *h
format;exceptiongroup._formatting.PatchedTracebackException.format*
self*
chain *

_ctx *m
format_exception_onlyJexceptiongroup._formatting.PatchedTracebackException.format_exception_only*
selfrJ
_str9exceptiongroup._formatting.PatchedTracebackException._str
Anyrs
	__notes__>exceptiongroup._formatting.PatchedTracebackException.__notes__&
Union[Any,None]
Any
Nonea
_format_final_exc_line1exceptiongroup._formatting._format_final_exc_line*	
etype*	
valueX
_safe_string'exceptiongroup._formatting._safe_string*	
value*
what*

func à
exceptiongroup_excepthook4exceptiongroup._formatting.exceptiongroup_excepthook"
None*c
etypeX
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type*;
value0
builtins.BaseException"builtins.BaseException*a
tbY
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Noneå
format_exception_only0exceptiongroup._formatting.format_exception_only"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*20
builtins.BaseException"builtins.BaseException0:functools.singledispatch‰
_exceptiongroup._formatting._"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list* 
builtins.type"builtins.type*;
value0
builtins.BaseException"builtins.BaseException0:9exceptiongroup._formatting.format_exception_only.registerÛ
format_exception+exceptiongroup._formatting.format_exception"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*20
builtins.BaseException"builtins.BaseException*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *+
chain
builtins.bool"builtins.bool 0:functools.singledispatch¸
_exceptiongroup._formatting._"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list* 
builtins.type"builtins.type*;
value0
builtins.BaseException"builtins.BaseException*2
tb*
types.TracebackType"types.TracebackType*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *+
chain
builtins.bool"builtins.bool 0:4exceptiongroup._formatting.format_exception.register¬
print_exception*exceptiongroup._formatting.print_exception"
None*20
builtins.BaseException"builtins.BaseException*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
file
Any *+
chain
builtins.bool"builtins.bool 0:functools.singledispatchŠ
_exceptiongroup._formatting._"
None* 
builtins.type"builtins.type*;
value0
builtins.BaseException"builtins.BaseException*2
tb*
types.TracebackType"types.TracebackType*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *
file
Any *+
chain
builtins.bool"builtins.bool 0:3exceptiongroup._formatting.print_exception.registerï
	print_exc$exceptiongroup._formatting.print_exc"
None*Q
limitD
Union[builtins.int,None]
builtins.int"builtins.int
None *2
file&
Union[Any,None]
Any
None *+
chain
builtins.bool"builtins.bool W
_substitution_cost-exceptiongroup._formatting._substitution_cost*
ch_a*
ch_bh
_compute_suggestion_error4exceptiongroup._formatting._compute_suggestion_error*
	exc_value*
tbe
_levenshtein_distance0exceptiongroup._formatting._levenshtein_distance*
a*
b*
max_cost*–
__annotations__*exceptiongroup._formatting.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
collectionscollections *[
max_group_width*exceptiongroup._formatting.max_group_width
builtins.int"builtins.int*[
max_group_depth*exceptiongroup._formatting.max_group_depth
builtins.int"builtins.int*Y
_cause_message)exceptiongroup._formatting._cause_message
builtins.str"builtins.str*]
_context_message+exceptiongroup._formatting._context_message
builtins.str"builtins.str*²
#traceback_exception_original_format>exceptiongroup._formatting.traceback_exception_original_formatK
CallableType[builtins.function]&
builtins.function"builtins.function*Ð
2traceback_exception_original_format_exception_onlyMexceptiongroup._formatting.traceback_exception_original_format_exception_onlyK
CallableType[builtins.function]&
builtins.function"builtins.function*•
'traceback_exception_format_syntax_errorBexceptiongroup._formatting.traceback_exception_format_syntax_error&
Union[Any,None]
Any
None*L
apport_python_hook-exceptiongroup._formatting.apport_python_hook
Any*U
fake_sys#exceptiongroup._formatting.fake_sys$
types.ModuleType"types.ModuleType*e
_MAX_CANDIDATE_ITEMS/exceptiongroup._formatting._MAX_CANDIDATE_ITEMS
builtins.int"builtins.int*]
_MAX_STRING_SIZE+exceptiongroup._formatting._MAX_STRING_SIZE
builtins.int"builtins.int*Q

_MOVE_COST%exceptiongroup._formatting._MOVE_COST
builtins.int"builtins.int*Q

_CASE_COST%exceptiongroup._formatting._CASE_COST
builtins.int"builtins.int*U
	_SENTINEL$exceptiongroup._formatting._SENTINEL"
builtins.object"builtins.object