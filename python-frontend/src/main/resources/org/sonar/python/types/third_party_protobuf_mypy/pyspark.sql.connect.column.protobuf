
pyspark.sql.connect.column™r
PySparkColumnpyspark.sql.column.Column"builtins.object*ã
__init__"pyspark.sql.column.Column.__init__"
None*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*
jc
Any*∏
__eq__ pyspark.sql.column.Column.__eq__"6
pyspark.sql.column.Column"pyspark.sql.column.Column*86
pyspark.sql.column.Column"pyspark.sql.column.Column*ôñ
∑Union[pyspark.sql.column.Column,TypeAlias[TypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]],_decimal.Decimal,TypeAlias[Union[datetime.datetime,datetime.date]]]6
pyspark.sql.column.Column"pyspark.sql.column.Column®
STypeAlias[TypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]]≠
HTypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]ø
=Union[builtins.bool,builtins.float,builtins.int,builtins.str]
builtins.bool"builtins.bool 
builtins.float"builtins.float
builtins.int"builtins.int
builtins.str"builtins.str"pyspark._typing.PrimitiveType"pyspark.sql._typing.LiteralType$
_decimal.Decimal"_decimal.DecimalŒ
1TypeAlias[Union[datetime.datetime,datetime.date]]r
&Union[datetime.datetime,datetime.date]&
datetime.datetime"datetime.datetime
datetime.date"datetime.date"#pyspark.sql._typing.DateTimeLiteral*ß
__ne__ pyspark.sql.column.Column.__ne__"6
pyspark.sql.column.Column"pyspark.sql.column.Column*86
pyspark.sql.column.Column"pyspark.sql.column.Column*	
Any*Ö
__contains__&pyspark.sql.column.Column.__contains__"
None*86
pyspark.sql.column.Column"pyspark.sql.column.Column*	
Any*∏
getItem!pyspark.sql.column.Column.getItem"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*
key
Any*ª
getField"pyspark.sql.column.Column.getField"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*
name
Any*ò
	withField#pyspark.sql.column.Column.withField"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*+
	fieldName
builtins.str"builtins.str*?
col6
pyspark.sql.column.Column"pyspark.sql.column.Column*⁄

dropFields$pyspark.sql.column.Column.dropFields"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*,

fieldNames
builtins.str"builtins.str*±
__getattr__%pyspark.sql.column.Column.__getattr__"6
pyspark.sql.column.Column"pyspark.sql.column.Column*86
pyspark.sql.column.Column"pyspark.sql.column.Column*	
Any*±
__getitem__%pyspark.sql.column.Column.__getitem__"6
pyspark.sql.column.Column"pyspark.sql.column.Column*86
pyspark.sql.column.Column"pyspark.sql.column.Column*	
Any*r
__iter__"pyspark.sql.column.Column.__iter__"
None*86
pyspark.sql.column.Column"pyspark.sql.column.Column*…
likepyspark.sql.column.Column.like"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*'
other
builtins.str"builtins.str*À
rlikepyspark.sql.column.Column.rlike"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*'
other
builtins.str"builtins.str*À
ilikepyspark.sql.column.Column.ilike"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*'
other
builtins.str"builtins.str*≥
isinpyspark.sql.column.Column.isin"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*
cols
Any*‡
aliaspyspark.sql.column.Column.alias"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*'
alias
builtins.str"builtins.str*
kwargs
Any*º
castpyspark.sql.column.Column.cast"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*ô
dataTypeä
.Union[pyspark.sql.types.DataType,builtins.str]8
pyspark.sql.types.DataType"pyspark.sql.types.DataType
builtins.str"builtins.str*˙
between!pyspark.sql.column.Column.between"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*ß

lowerBoundñ
∑Union[pyspark.sql.column.Column,TypeAlias[TypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]],TypeAlias[Union[datetime.datetime,datetime.date]],_decimal.Decimal]6
pyspark.sql.column.Column"pyspark.sql.column.Column®
STypeAlias[TypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]]≠
HTypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]ø
=Union[builtins.bool,builtins.float,builtins.int,builtins.str]
builtins.bool"builtins.bool 
builtins.float"builtins.float
builtins.int"builtins.int
builtins.str"builtins.str"pyspark._typing.PrimitiveType"pyspark.sql._typing.LiteralTypeŒ
1TypeAlias[Union[datetime.datetime,datetime.date]]r
&Union[datetime.datetime,datetime.date]&
datetime.datetime"datetime.datetime
datetime.date"datetime.date"#pyspark.sql._typing.DateTimeLiteral$
_decimal.Decimal"_decimal.Decimal*ß

upperBoundñ
∑Union[pyspark.sql.column.Column,TypeAlias[TypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]],TypeAlias[Union[datetime.datetime,datetime.date]],_decimal.Decimal]6
pyspark.sql.column.Column"pyspark.sql.column.Column®
STypeAlias[TypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]]≠
HTypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]ø
=Union[builtins.bool,builtins.float,builtins.int,builtins.str]
builtins.bool"builtins.bool 
builtins.float"builtins.float
builtins.int"builtins.int
builtins.str"builtins.str"pyspark._typing.PrimitiveType"pyspark.sql._typing.LiteralTypeŒ
1TypeAlias[Union[datetime.datetime,datetime.date]]r
&Union[datetime.datetime,datetime.date]&
datetime.datetime"datetime.datetime
datetime.date"datetime.date"#pyspark.sql._typing.DateTimeLiteral$
_decimal.Decimal"_decimal.Decimal*˚
whenpyspark.sql.column.Column.when"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*E
	condition6
pyspark.sql.column.Column"pyspark.sql.column.Column*
value
Any*æ
	otherwise#pyspark.sql.column.Column.otherwise"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*
value
Any*Ï
overpyspark.sql.column.Column.over"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*J
window>
pyspark.sql.window.WindowSpec"pyspark.sql.window.WindowSpec*Ä
__nonzero__%pyspark.sql.column.Column.__nonzero__"
None*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*Ü
__repr__"pyspark.sql.column.Column.__repr__"
builtins.str"builtins.str*86
pyspark.sql.column.Column"pyspark.sql.column.Column2Ç
substr pyspark.sql.column.Column.substrè
substr pyspark.sql.column.Column.substr"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column**
startPos
builtins.int"builtins.int*(
length
builtins.int"builtins.int0:typing.overloadX√
substr pyspark.sql.column.Column.substr"6
pyspark.sql.column.Column"pyspark.sql.column.Column*@
self6
pyspark.sql.column.Column"pyspark.sql.column.Column*D
startPos6
pyspark.sql.column.Column"pyspark.sql.column.Column*B
length6
pyspark.sql.column.Column"pyspark.sql.column.Column0:typing.overloadXry
__neg__!pyspark.sql.column.Column.__neg__K
CallableType[builtins.function]&
builtins.function"builtins.functionry
__add__!pyspark.sql.column.Column.__add__K
CallableType[builtins.function]&
builtins.function"builtins.functionry
__sub__!pyspark.sql.column.Column.__sub__K
CallableType[builtins.function]&
builtins.function"builtins.functionry
__mul__!pyspark.sql.column.Column.__mul__K
CallableType[builtins.function]&
builtins.function"builtins.functionry
__div__!pyspark.sql.column.Column.__div__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÅ
__truediv__%pyspark.sql.column.Column.__truediv__K
CallableType[builtins.function]&
builtins.function"builtins.functionry
__mod__!pyspark.sql.column.Column.__mod__K
CallableType[builtins.function]&
builtins.function"builtins.functionr{
__radd__"pyspark.sql.column.Column.__radd__K
CallableType[builtins.function]&
builtins.function"builtins.functionr{
__rsub__"pyspark.sql.column.Column.__rsub__K
CallableType[builtins.function]&
builtins.function"builtins.functionr{
__rmul__"pyspark.sql.column.Column.__rmul__K
CallableType[builtins.function]&
builtins.function"builtins.functionr{
__rdiv__"pyspark.sql.column.Column.__rdiv__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
__rtruediv__&pyspark.sql.column.Column.__rtruediv__K
CallableType[builtins.function]&
builtins.function"builtins.functionr{
__rmod__"pyspark.sql.column.Column.__rmod__K
CallableType[builtins.function]&
builtins.function"builtins.functionry
__pow__!pyspark.sql.column.Column.__pow__K
CallableType[builtins.function]&
builtins.function"builtins.functionr{
__rpow__"pyspark.sql.column.Column.__rpow__K
CallableType[builtins.function]&
builtins.function"builtins.functionrw
__lt__ pyspark.sql.column.Column.__lt__K
CallableType[builtins.function]&
builtins.function"builtins.functionrw
__le__ pyspark.sql.column.Column.__le__K
CallableType[builtins.function]&
builtins.function"builtins.functionrw
__ge__ pyspark.sql.column.Column.__ge__K
CallableType[builtins.function]&
builtins.function"builtins.functionrw
__gt__ pyspark.sql.column.Column.__gt__K
CallableType[builtins.function]&
builtins.function"builtins.functionrZ
_eqNullSafe_doc)pyspark.sql.column.Column._eqNullSafe_doc
builtins.str"builtins.strr

eqNullSafe$pyspark.sql.column.Column.eqNullSafeK
CallableType[builtins.function]&
builtins.function"builtins.functionry
__and__!pyspark.sql.column.Column.__and__K
CallableType[builtins.function]&
builtins.function"builtins.functionrw
__or__ pyspark.sql.column.Column.__or__K
CallableType[builtins.function]&
builtins.function"builtins.functionr

__invert__$pyspark.sql.column.Column.__invert__K
CallableType[builtins.function]&
builtins.function"builtins.functionr{
__rand__"pyspark.sql.column.Column.__rand__K
CallableType[builtins.function]&
builtins.function"builtins.functionry
__ror__!pyspark.sql.column.Column.__ror__K
CallableType[builtins.function]&
builtins.function"builtins.functionrX
_bitwiseOR_doc(pyspark.sql.column.Column._bitwiseOR_doc
builtins.str"builtins.strrZ
_bitwiseAND_doc)pyspark.sql.column.Column._bitwiseAND_doc
builtins.str"builtins.strrZ
_bitwiseXOR_doc)pyspark.sql.column.Column._bitwiseXOR_doc
builtins.str"builtins.strr}
	bitwiseOR#pyspark.sql.column.Column.bitwiseORK
CallableType[builtins.function]&
builtins.function"builtins.functionr

bitwiseAND$pyspark.sql.column.Column.bitwiseANDK
CallableType[builtins.function]&
builtins.function"builtins.functionr

bitwiseXOR$pyspark.sql.column.Column.bitwiseXORK
CallableType[builtins.function]&
builtins.function"builtins.functionrV
_contains_doc'pyspark.sql.column.Column._contains_doc
builtins.str"builtins.strrZ
_startswith_doc)pyspark.sql.column.Column._startswith_doc
builtins.str"builtins.strrV
_endswith_doc'pyspark.sql.column.Column._endswith_doc
builtins.str"builtins.strr{
contains"pyspark.sql.column.Column.containsK
CallableType[builtins.function]&
builtins.function"builtins.functionr

startswith$pyspark.sql.column.Column.startswithK
CallableType[builtins.function]&
builtins.function"builtins.functionr{
endswith"pyspark.sql.column.Column.endswithK
CallableType[builtins.function]&
builtins.function"builtins.functionrL
_asc_doc"pyspark.sql.column.Column._asc_doc
builtins.str"builtins.strrd
_asc_nulls_first_doc.pyspark.sql.column.Column._asc_nulls_first_doc
builtins.str"builtins.strrb
_asc_nulls_last_doc-pyspark.sql.column.Column._asc_nulls_last_doc
builtins.str"builtins.strrN
	_desc_doc#pyspark.sql.column.Column._desc_doc
builtins.str"builtins.strrf
_desc_nulls_first_doc/pyspark.sql.column.Column._desc_nulls_first_doc
builtins.str"builtins.strrd
_desc_nulls_last_doc.pyspark.sql.column.Column._desc_nulls_last_doc
builtins.str"builtins.strrq
ascpyspark.sql.column.Column.ascK
CallableType[builtins.function]&
builtins.function"builtins.functionrâ
asc_nulls_first)pyspark.sql.column.Column.asc_nulls_firstK
CallableType[builtins.function]&
builtins.function"builtins.functionrá
asc_nulls_last(pyspark.sql.column.Column.asc_nulls_lastK
CallableType[builtins.function]&
builtins.function"builtins.functionrs
descpyspark.sql.column.Column.descK
CallableType[builtins.function]&
builtins.function"builtins.functionrã
desc_nulls_first*pyspark.sql.column.Column.desc_nulls_firstK
CallableType[builtins.function]&
builtins.function"builtins.functionrâ
desc_nulls_last)pyspark.sql.column.Column.desc_nulls_lastK
CallableType[builtins.function]&
builtins.function"builtins.functionrR
_isNull_doc%pyspark.sql.column.Column._isNull_doc
builtins.str"builtins.strrX
_isNotNull_doc(pyspark.sql.column.Column._isNotNull_doc
builtins.str"builtins.strrw
isNull pyspark.sql.column.Column.isNullK
CallableType[builtins.function]&
builtins.function"builtins.functionr}
	isNotNull#pyspark.sql.column.Column.isNotNullK
CallableType[builtins.function]&
builtins.function"builtins.functionrs
namepyspark.sql.column.Column.nameK
CallableType[builtins.function]&
builtins.function"builtins.functionrw
astype pyspark.sql.column.Column.astypeK
CallableType[builtins.function]&
builtins.function"builtins.functionr{
__bool__"pyspark.sql.column.Column.__bool__K
CallableType[builtins.function]&
builtins.function"builtins.functionr-
_jcpyspark.sql.column.Column._jc
Anyâq
Column!pyspark.sql.connect.column.Column"builtins.object*ˆ
__init__*pyspark.sql.connect.column.Column.__init__"
None*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*b
exprX
*pyspark.sql.connect.expressions.Expression"*pyspark.sql.connect.expressions.Expression*ù
__contains__.pyspark.sql.connect.column.Column.__contains__"
None*HF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*	
Any*œ
__ne__(pyspark.sql.connect.column.Column.__ne__"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*HF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*	
Any*≥
when&pyspark.sql.connect.column.Column.when"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*U
	conditionF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*
value
Any*Ê
	otherwise+pyspark.sql.connect.column.Column.otherwise"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*
value
Any*œ
__eq__(pyspark.sql.connect.column.Column.__eq__"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*HF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*	
Any*Î
to_plan)pyspark.sql.connect.column.Column.to_plan"l
4pyspark.sql.connect.proto.expressions_pb2.Expression"4pyspark.sql.connect.proto.expressions_pb2.Expression*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*u
sessionh
2pyspark.sql.connect.client.core.SparkConnectClient"2pyspark.sql.connect.client.core.SparkConnectClient*à
alias'pyspark.sql.connect.column.Column.alias"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*'
alias
builtins.str"builtins.str*
kwargs
Any*∆
asc%pyspark.sql.connect.column.Column.asc"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*ﬁ
asc_nulls_first1pyspark.sql.connect.column.Column.asc_nulls_first"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*‹
asc_nulls_last0pyspark.sql.connect.column.Column.asc_nulls_last"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*»
desc&pyspark.sql.connect.column.Column.desc"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*‡
desc_nulls_first2pyspark.sql.connect.column.Column.desc_nulls_first"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*ﬁ
desc_nulls_last1pyspark.sql.connect.column.Column.desc_nulls_last"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*‰
cast&pyspark.sql.connect.column.Column.cast"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*ô
dataTypeä
.Union[pyspark.sql.types.DataType,builtins.str]8
pyspark.sql.types.DataType"pyspark.sql.types.DataType
builtins.str"builtins.str*û
__repr__*pyspark.sql.connect.column.Column.__repr__"
builtins.str"builtins.str*HF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*§
over&pyspark.sql.connect.column.Column.over"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*Z
windowN
%pyspark.sql.connect.window.WindowSpec"%pyspark.sql.connect.window.WindowSpec*€
isin&pyspark.sql.connect.column.Column.isin"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*
cols
Any*ä
between)pyspark.sql.connect.column.Column.between"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*€

lowerBound 
øUnion[pyspark.sql.connect.column.Column,TypeAlias[TypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]],TypeAlias[Union[datetime.datetime,datetime.date]],_decimal.Decimal]F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Columnº
STypeAlias[TypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]]π
HTypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]ø
=Union[builtins.bool,builtins.float,builtins.int,builtins.str]
builtins.bool"builtins.bool 
builtins.float"builtins.float
builtins.int"builtins.int
builtins.str"builtins.str")pyspark.sql.connect._typing.PrimitiveType"'pyspark.sql.connect._typing.LiteralType÷
1TypeAlias[Union[datetime.datetime,datetime.date]]r
&Union[datetime.datetime,datetime.date]&
datetime.datetime"datetime.datetime
datetime.date"datetime.date"+pyspark.sql.connect._typing.DateTimeLiteral$
_decimal.Decimal"_decimal.Decimal*€

upperBound 
øUnion[pyspark.sql.connect.column.Column,TypeAlias[TypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]],TypeAlias[Union[datetime.datetime,datetime.date]],_decimal.Decimal]F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Columnº
STypeAlias[TypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]]π
HTypeAlias[Union[builtins.bool,builtins.float,builtins.int,builtins.str]]ø
=Union[builtins.bool,builtins.float,builtins.int,builtins.str]
builtins.bool"builtins.bool 
builtins.float"builtins.float
builtins.int"builtins.int
builtins.str"builtins.str")pyspark.sql.connect._typing.PrimitiveType"'pyspark.sql.connect._typing.LiteralType÷
1TypeAlias[Union[datetime.datetime,datetime.date]]r
&Union[datetime.datetime,datetime.date]&
datetime.datetime"datetime.datetime
datetime.date"datetime.date"+pyspark.sql.connect._typing.DateTimeLiteral$
_decimal.Decimal"_decimal.Decimal*‡
getItem)pyspark.sql.connect.column.Column.getItem"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*
key
Any*„
getField*pyspark.sql.connect.column.Column.getField"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*
name
Any*–
	withField+pyspark.sql.connect.column.Column.withField"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*+
	fieldName
builtins.str"builtins.str*O
colF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*Ç

dropFields,pyspark.sql.connect.column.Column.dropFields"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*,

fieldNames
builtins.str"builtins.str*Ÿ
__getattr__-pyspark.sql.connect.column.Column.__getattr__"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*HF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*	
Any*Ÿ
__getitem__-pyspark.sql.connect.column.Column.__getitem__"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*HF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*	
Any*ä
__iter__*pyspark.sql.connect.column.Column.__iter__"
None*HF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*ò
__nonzero__-pyspark.sql.connect.column.Column.__nonzero__"
None*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column2˙
substr(pyspark.sql.connect.column.Column.substr∑
substr(pyspark.sql.connect.column.Column.substr"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column**
startPos
builtins.int"builtins.int*(
length
builtins.int"builtins.int0:typing.overloadXã
substr(pyspark.sql.connect.column.Column.substr"F
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*P
selfF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*T
startPosF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column*R
lengthF
!pyspark.sql.connect.column.Column"!pyspark.sql.connect.column.Column0:typing.overloadXr
__gt__(pyspark.sql.connect.column.Column.__gt__K
CallableType[builtins.function]&
builtins.function"builtins.functionr
__lt__(pyspark.sql.connect.column.Column.__lt__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÅ
__add__)pyspark.sql.connect.column.Column.__add__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÅ
__sub__)pyspark.sql.connect.column.Column.__sub__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÅ
__mul__)pyspark.sql.connect.column.Column.__mul__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÅ
__div__)pyspark.sql.connect.column.Column.__div__K
CallableType[builtins.function]&
builtins.function"builtins.functionrâ
__truediv__-pyspark.sql.connect.column.Column.__truediv__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÅ
__mod__)pyspark.sql.connect.column.Column.__mod__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
__radd__*pyspark.sql.connect.column.Column.__radd__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
__rsub__*pyspark.sql.connect.column.Column.__rsub__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
__rmul__*pyspark.sql.connect.column.Column.__rmul__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
__rdiv__*pyspark.sql.connect.column.Column.__rdiv__K
CallableType[builtins.function]&
builtins.function"builtins.functionrã
__rtruediv__.pyspark.sql.connect.column.Column.__rtruediv__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
__rmod__*pyspark.sql.connect.column.Column.__rmod__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÅ
__pow__)pyspark.sql.connect.column.Column.__pow__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
__rpow__*pyspark.sql.connect.column.Column.__rpow__K
CallableType[builtins.function]&
builtins.function"builtins.functionr
__ge__(pyspark.sql.connect.column.Column.__ge__K
CallableType[builtins.function]&
builtins.function"builtins.functionr
__le__(pyspark.sql.connect.column.Column.__le__K
CallableType[builtins.function]&
builtins.function"builtins.functionrá

eqNullSafe,pyspark.sql.connect.column.Column.eqNullSafeK
CallableType[builtins.function]&
builtins.function"builtins.functionrÅ
__neg__)pyspark.sql.connect.column.Column.__neg__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÅ
__and__)pyspark.sql.connect.column.Column.__and__K
CallableType[builtins.function]&
builtins.function"builtins.functionr
__or__(pyspark.sql.connect.column.Column.__or__K
CallableType[builtins.function]&
builtins.function"builtins.functionrá

__invert__,pyspark.sql.connect.column.Column.__invert__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
__rand__*pyspark.sql.connect.column.Column.__rand__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÅ
__ror__)pyspark.sql.connect.column.Column.__ror__K
CallableType[builtins.function]&
builtins.function"builtins.functionrÖ
	bitwiseOR+pyspark.sql.connect.column.Column.bitwiseORK
CallableType[builtins.function]&
builtins.function"builtins.functionrá

bitwiseAND,pyspark.sql.connect.column.Column.bitwiseANDK
CallableType[builtins.function]&
builtins.function"builtins.functionrá

bitwiseXOR,pyspark.sql.connect.column.Column.bitwiseXORK
CallableType[builtins.function]&
builtins.function"builtins.functionr
isNull(pyspark.sql.connect.column.Column.isNullK
CallableType[builtins.function]&
builtins.function"builtins.functionrÖ
	isNotNull+pyspark.sql.connect.column.Column.isNotNullK
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
contains*pyspark.sql.connect.column.Column.containsK
CallableType[builtins.function]&
builtins.function"builtins.functionrá

startswith,pyspark.sql.connect.column.Column.startswithK
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
endswith*pyspark.sql.connect.column.Column.endswithK
CallableType[builtins.function]&
builtins.function"builtins.functionr{
like&pyspark.sql.connect.column.Column.likeK
CallableType[builtins.function]&
builtins.function"builtins.functionr}
rlike'pyspark.sql.connect.column.Column.rlikeK
CallableType[builtins.function]&
builtins.function"builtins.functionr}
ilike'pyspark.sql.connect.column.Column.ilikeK
CallableType[builtins.function]&
builtins.function"builtins.functionr{
name&pyspark.sql.connect.column.Column.nameK
CallableType[builtins.function]&
builtins.function"builtins.functionr
astype(pyspark.sql.connect.column.Column.astypeK
CallableType[builtins.function]&
builtins.function"builtins.functionrÉ
__bool__*pyspark.sql.connect.column.Column.__bool__K
CallableType[builtins.function]&
builtins.function"builtins.functionrä
_expr'pyspark.sql.connect.column.Column._exprX
*pyspark.sql.connect.expressions.Expression"*pyspark.sql.connect.expressions.Expressionı
_func_op#pyspark.sql.connect.column._func_op"K
CallableType[builtins.function]&
builtins.function"builtins.function*&
name
builtins.str"builtins.str*O
docD
Union[builtins.str,None]
builtins.str"builtins.str
None ¢
_bin_op"pyspark.sql.connect.column._bin_op"K
CallableType[builtins.function]&
builtins.function"builtins.function*&
name
builtins.str"builtins.str*O
docD
Union[builtins.str,None]
builtins.str"builtins.str
None *-
reverse
builtins.bool"builtins.bool ˜
	_unary_op$pyspark.sql.connect.column._unary_op"K
CallableType[builtins.function]&
builtins.function"builtins.function*&
name
builtins.str"builtins.str*O
docD
Union[builtins.str,None]
builtins.str"builtins.str
None 3
_test pyspark.sql.connect.column._test"
None*ñ
__annotations__*pyspark.sql.connect.column.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*$
protopyspark.sql.connect.proto 