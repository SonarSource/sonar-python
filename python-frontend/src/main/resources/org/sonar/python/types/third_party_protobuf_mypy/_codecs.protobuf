
_codecsÆ
_EncodingMap_codecs._EncodingMap"builtins.object*w
size_codecs._EncodingMap.size"
builtins.int"builtins.int*6
self,
_codecs._EncodingMap"_codecs._EncodingMap¿
register_codecs.register"
None*óî
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"_codecs._SearchFunctionÂ
register_error_codecs.register_error"
None*
builtins.str"builtins.str*êç
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"_codecs._Handler‘
lookup_error_codecs.lookup_error"ç
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"_codecs._Handler*
builtins.str"builtins.strß
lookup_codecs.lookup"Ï
[TypeAlias[Tuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]]¯
PTuple[codecs._Encoder,codecs._Decoder,codecs._StreamReader,codecs._StreamWriter]"
codecs._Encoder"codecs._Encoder"
codecs._Decoder"codecs._Decoder,
codecs._StreamReader"codecs._StreamReader,
codecs._StreamWriter"codecs._StreamWriter"codecs.CodecInfo*
builtins.str"builtins.strû
charmap_build_codecs.charmap_build"’
OTypeAlias[Union[builtins.dict[builtins.int,builtins.int],_codecs._EncodingMap]]Ì
DUnion[builtins.dict[builtins.int,builtins.int],_codecs._EncodingMap]u
(builtins.dict[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.dict,
_codecs._EncodingMap"_codecs._EncodingMap"_codecs._CharMap*
builtins.str"builtins.str¨
ascii_decode_codecs.ascii_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None ˆ
ascii_encode_codecs.ascii_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None ˘
charmap_decode_codecs.charmap_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None *∆¡
[Union[TypeAlias[Union[builtins.dict[builtins.int,builtins.int],_codecs._EncodingMap]],None]’
OTypeAlias[Union[builtins.dict[builtins.int,builtins.int],_codecs._EncodingMap]]Ì
DUnion[builtins.dict[builtins.int,builtins.int],_codecs._EncodingMap]u
(builtins.dict[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.dict,
_codecs._EncodingMap"_codecs._EncodingMap"_codecs._CharMap
None √
charmap_encode_codecs.charmap_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None *∆¡
[Union[TypeAlias[Union[builtins.dict[builtins.int,builtins.int],_codecs._EncodingMap]],None]’
OTypeAlias[Union[builtins.dict[builtins.int,builtins.int],_codecs._EncodingMap]]Ì
DUnion[builtins.dict[builtins.int,builtins.int],_codecs._EncodingMap]u
(builtins.dict[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int"builtins.dict,
_codecs._EncodingMap"_codecs._EncodingMap"_codecs._CharMap
None ˛	
escape_decode_codecs.escape_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*©¶
™Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None ¸
escape_encode_codecs.escape_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*" 
builtins.bytes"builtins.bytes*HD
Union[builtins.str,None]
builtins.str"builtins.str
None ∞
latin_1_decode_codecs.latin_1_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None ˙
latin_1_encode_codecs.latin_1_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None ñ

raw_unicode_escape_decode!_codecs.raw_unicode_escape_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*©¶
™Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None ê
raw_unicode_escape_encode!_codecs.raw_unicode_escape_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None å

readbuffer_encode_codecs.readbuffer_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*©¶
™Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None é

unicode_escape_decode_codecs.unicode_escape_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*©¶
™Union[builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None à
unicode_escape_encode_codecs.unicode_escape_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None ÿ
utf_16_be_decode_codecs.utf_16_be_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None *"
builtins.bool"builtins.bool ˛
utf_16_be_encode_codecs.utf_16_be_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None “
utf_16_decode_codecs.utf_16_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None *"
builtins.bool"builtins.bool ö
utf_16_encode_codecs.utf_16_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None * 
builtins.int"builtins.int ¶	
utf_16_ex_decode_codecs.utf_16_ex_decode"ã
-Tuple[builtins.str,builtins.int,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None * 
builtins.int"builtins.int *"
builtins.bool"builtins.bool ÿ
utf_16_le_decode_codecs.utf_16_le_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None *"
builtins.bool"builtins.bool ˛
utf_16_le_encode_codecs.utf_16_le_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None ÿ
utf_32_be_decode_codecs.utf_32_be_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None *"
builtins.bool"builtins.bool ˛
utf_32_be_encode_codecs.utf_32_be_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None “
utf_32_decode_codecs.utf_32_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None *"
builtins.bool"builtins.bool ö
utf_32_encode_codecs.utf_32_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None * 
builtins.int"builtins.int ¶	
utf_32_ex_decode_codecs.utf_32_ex_decode"ã
-Tuple[builtins.str,builtins.int,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None * 
builtins.int"builtins.int *"
builtins.bool"builtins.bool ÿ
utf_32_le_decode_codecs.utf_32_le_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None *"
builtins.bool"builtins.bool ˛
utf_32_le_encode_codecs.utf_32_le_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None –
utf_7_decode_codecs.utf_7_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None *"
builtins.bool"builtins.bool ˆ
utf_7_encode_codecs.utf_7_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None –
utf_8_decode_codecs.utf_8_decode"`
 Tuple[builtins.str,builtins.int]
builtins.str"builtins.str
builtins.int"builtins.int*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*HD
Union[builtins.str,None]
builtins.str"builtins.str
None *"
builtins.bool"builtins.bool ˆ
utf_8_encode_codecs.utf_8_encode"f
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.int*
builtins.str"builtins.str*HD
Union[builtins.str,None]
builtins.str"builtins.str
None "´
encode_codecs.encodeÉ
encode_codecs.encode" 
builtins.bytes"builtins.bytes*‡
obj÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*¢
encodingì
ÒTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_codecs._BytesToBytesEncoding**
errors
builtins.str"builtins.str 0:typing.overloadX∑
encode_codecs.encode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*ñ
encodingá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_codecs._StrToStrEncoding**
errors
builtins.str"builtins.str 0:typing.overloadX–
encode_codecs.encode" 
builtins.bytes"builtins.bytes*%
obj
builtins.str"builtins.str*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:typing.overloadX"ª'
decode_codecs.decodeÉ
decode_codecs.decode" 
builtins.bytes"builtins.bytes*‡
obj÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*¢
encodingì
ÒTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˚	
ÊUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_codecs._BytesToBytesEncoding**
errors
builtins.str"builtins.str 0:typing.overloadX∑
decode_codecs.decode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*ñ
encodingá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_codecs._StrToStrEncoding**
errors
builtins.str"builtins.str 0:typing.overloadXˆ
decode_codecs.decode"
builtins.str"builtins.str*%
obj
builtins.str"builtins.str*’
encoding∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str**
errors
builtins.str"builtins.str 0:typing.overloadX‹
decode_codecs.decode" 
builtins.bytes"builtins.bytes*%
obj
builtins.str"builtins.str*∑
encoding®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str**
errors
builtins.str"builtins.str 0:typing.overloadXà
decode_codecs.decode"
builtins.str"builtins.str*‡
obj÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*,
encoding
builtins.str"builtins.str **
errors
builtins.str"builtins.str 0:typing.overloadX*É
__annotations___codecs.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict