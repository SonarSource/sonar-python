
#pyspark.sql.connect.client.reattachÎ>
'ExecutePlanResponseReattachableIteratorKpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"typing.Generator*â
shutdownTpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator.shutdown"
None*Ç
cls¯
QType[pyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator]ö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"type0:builtins.classmethodp*≥
_initialize_pool_if_necessaryipyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._initialize_pool_if_necessary"
None*Ç
cls¯
QType[pyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator]ö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"type0:builtins.classmethodp*¬
__init__Tpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator.__init__"
None*•
selfö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator*{
requestn
5pyspark.sql.connect.proto.base_pb2.ExecutePlanRequest"5pyspark.sql.connect.proto.base_pb2.ExecutePlanRequest*ç
stubÇ
?pyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub"?pyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub*i
retry_policyW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*µ
metadata¶
1typing.Iterable[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Iterable*Ü
sendPpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator.send"p
6pyspark.sql.connect.proto.base_pb2.ExecutePlanResponse"6pyspark.sql.connect.proto.base_pb2.ExecutePlanResponse*•
selfö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator*
value
Any*™
	_has_nextUpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._has_next"
builtins.bool"builtins.bool*•
selfö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator*”
_release_untilZpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._release_until"
None*•
selfö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator*3
until_response_id
builtins.str"builtins.str*ö
_release_allXpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._release_all"
None*•
selfö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator*

_call_iterVpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._call_iter"
Any*•
selfö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator*Y
iter_funK
CallableType[builtins.function]&
builtins.function"builtins.function*∞
 _create_reattach_execute_requestlpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._create_reattach_execute_request"v
9pyspark.sql.connect.proto.base_pb2.ReattachExecuteRequest"9pyspark.sql.connect.proto.base_pb2.ReattachExecuteRequest*•
selfö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator*â
_create_release_execute_requestkpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._create_release_execute_request"t
8pyspark.sql.connect.proto.base_pb2.ReleaseExecuteRequest"8pyspark.sql.connect.proto.base_pb2.ReleaseExecuteRequest*•
selfö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator*[
until_response_idD
Union[builtins.str,None]
builtins.str"builtins.str
None*–
throwQpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator.throw"
Any*•
selfö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator*
type
Any *
value
Any *
	traceback
Any *å
closeQpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator.close"
None*•
selfö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator*à
__del__Spyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator.__del__"
None*ùö
Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator"Kpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIteratorrÄ
_lockQpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._lock$
threading._RLock"threading._RLockr˜
_release_thread_pool`pyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._release_thread_pool}
+Union[multiprocessing.pool.ThreadPool,None]B
multiprocessing.pool.ThreadPool"multiprocessing.pool.ThreadPool
Noner–
_requestTpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._requestn
5pyspark.sql.connect.proto.base_pb2.ExecutePlanRequest"5pyspark.sql.connect.proto.base_pb2.ExecutePlanRequestr√
_retry_policyYpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._retry_policyW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dictrà
_operation_idYpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._operation_id
builtins.str"builtins.strrﬂ
_stubQpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._stubÇ
?pyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub"?pyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStubr‡
_initial_request\pyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._initial_requestn
5pyspark.sql.connect.proto.base_pb2.ExecutePlanRequest"5pyspark.sql.connect.proto.base_pb2.ExecutePlanRequestr 
_last_returned_response_idfpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._last_returned_response_idD
Union[builtins.str,None]
builtins.str"builtins.str
Nonerê
_result_complete\pyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._result_complete
builtins.bool"builtins.boolrã
	_metadataUpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._metadata¶
1typing.Iterable[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"typing.Iterablerï
	_iteratorUpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._iterator∞
SUnion[typing.Iterator[pyspark.sql.connect.proto.base_pb2.ExecutePlanResponse],None]Ã
Gtyping.Iterator[pyspark.sql.connect.proto.base_pb2.ExecutePlanResponse]p
6pyspark.sql.connect.proto.base_pb2.ExecutePlanResponse"6pyspark.sql.connect.proto.base_pb2.ExecutePlanResponse"typing.Iterator
Noner•
_currentTpyspark.sql.connect.client.reattach.ExecutePlanResponseReattachableIterator._current¬
BUnion[pyspark.sql.connect.proto.base_pb2.ExecutePlanResponse,None]p
6pyspark.sql.connect.proto.base_pb2.ExecutePlanResponse"6pyspark.sql.connect.proto.base_pb2.ExecutePlanResponse
NoneX
RetryException2pyspark.sql.connect.client.reattach.RetryException"builtins.Exception*ü
__annotations__3pyspark.sql.connect.client.reattach.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*9
grpc(pyspark.sql.connect.client.reattach.grpc
Any*E

rpc_status.pyspark.sql.connect.client.reattach.rpc_status
Any*"
pb2pyspark.sql.connect.proto *5
grpc_lib'pyspark.sql.connect.proto.base_pb2_grpc 