
importlib.utilÂ

LazyLoaderimportlib.util.LazyLoader"importlib.abc.Loader*¥
__init__"importlib.util.LazyLoader.__init__"
None*@
self6
importlib.util.LazyLoader"importlib.util.LazyLoader*8
loader,
importlib.abc.Loader"importlib.abc.Loader*π
factory!importlib.util.LazyLoader.factory"K
CallableType[builtins.function]&
builtins.function"builtins.function*j
clsa
Type[importlib.util.LazyLoader]6
importlib.util.LazyLoader"importlib.util.LazyLoader"type*8
loader,
importlib.abc.Loader"importlib.abc.Loader0:builtins.classmethodp*≤
exec_module%importlib.util.LazyLoader.exec_module"
None*@
self6
importlib.util.LazyLoader"importlib.util.LazyLoader*0
module$
types.ModuleType"types.ModuleTypeÿ
module_for_loader importlib.util.module_for_loader"K
CallableType[builtins.function]&
builtins.function"builtins.function*T
fxnK
CallableType[builtins.function]&
builtins.function"builtins.function 

set_loaderimportlib.util.set_loader"K
CallableType[builtins.function]&
builtins.function"builtins.function*T
fxnK
CallableType[builtins.function]&
builtins.function"builtins.functionÃ
set_packageimportlib.util.set_package"K
CallableType[builtins.function]&
builtins.function"builtins.function*T
fxnK
CallableType[builtins.function]&
builtins.function"builtins.functionƒ
resolve_nameimportlib.util.resolve_name"
builtins.str"builtins.str*&
name
builtins.str"builtins.str*Q
packageD
Union[builtins.str,None]
builtins.str"builtins.str
Noneñ
cache_from_source importlib.util.cache_from_source"
builtins.str"builtins.str*&
path
builtins.str"builtins.str*]
debug_overrideG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *:
optimization&
Union[Any,None]
Any
None {
source_from_cache importlib.util.source_from_cache"
builtins.str"builtins.str*&
path
builtins.str"builtins.str∑
decode_sourceimportlib.util.decode_source"
builtins.str"builtins.str*È
source_bytes÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferû
	find_specimportlib.util.find_spec"z
*Union[importlib.machinery.ModuleSpec,None]@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec
None*&
name
builtins.str"builtins.str*S
packageD
Union[builtins.str,None]
builtins.str"builtins.str
None 
spec_from_loaderimportlib.util.spec_from_loader"z
*Union[importlib.machinery.ModuleSpec,None]@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec
None*&
name
builtins.str"builtins.str*h
loader\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None*R
originD
Union[builtins.str,None]
builtins.str"builtins.str
None *Y

is_packageG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None ¬
spec_from_file_location&importlib.util.spec_from_file_location"z
*Union[importlib.machinery.ModuleSpec,None]@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec
None*&
name
builtins.str"builtins.str*«
location∂
oUnion[TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]],None]∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath
None *j
loader\
 Union[importlib.abc.Loader,None],
importlib.abc.Loader"importlib.abc.Loader
None *§
submodule_search_locationsÅ
'Union[builtins.list[builtins.str],None]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list
None •
module_from_specimportlib.util.module_from_spec"$
types.ModuleType"types.ModuleType*J
spec@
importlib.machinery.ModuleSpec"importlib.machinery.ModuleSpec≥
source_hashimportlib.util.source_hash"
builtins.int"builtins.int*È
source_bytes÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*ä
__annotations__importlib.util.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
	importlib	importlib *M
MAGIC_NUMBERimportlib.util.MAGIC_NUMBER 
builtins.bytes"builtins.bytes