
ioV
UnsupportedOperationio.UnsupportedOperation"builtins.OSError"builtins.ValueErrorﬂ
IOBase	io.IOBase"builtins.object*é
__iter__io.IOBase.__iter__"T
typing.Iterator[builtins.bytes] 
builtins.bytes"builtins.bytes"typing.Iterator*
	io.IOBase"	io.IOBase*b
__next__io.IOBase.__next__" 
builtins.bytes"builtins.bytes* 
self
	io.IOBase"	io.IOBase*ê
	__enter__io.IOBase.__enter__"5
io.IOBase.Self
	io.IOBase"	io.IOBase"	io.IOBase*75
io.IOBase.Self
	io.IOBase"	io.IOBase"	io.IOBase*õ
__exit__io.IOBase.__exit__"
None*
	io.IOBase"	io.IOBase*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
None*D
closeio.IOBase.close"
None* 
self
	io.IOBase"	io.IOBase*Z
filenoio.IOBase.fileno"
builtins.int"builtins.int* 
self
	io.IOBase"	io.IOBase*D
flushio.IOBase.flush"
None* 
self
	io.IOBase"	io.IOBase*\
isattyio.IOBase.isatty"
builtins.bool"builtins.bool* 
self
	io.IOBase"	io.IOBase*`
readableio.IOBase.readable"
builtins.bool"builtins.bool* 
self
	io.IOBase"	io.IOBase*∂
	readlinesio.IOBase.readlines"P
builtins.list[builtins.bytes] 
builtins.bytes"builtins.bytes"builtins.list* 
self
	io.IOBase"	io.IOBase* 
builtins.int"builtins.int *ò
seekio.IOBase.seek"
builtins.int"builtins.int* 
self
	io.IOBase"	io.IOBase*
builtins.int"builtins.int* 
builtins.int"builtins.int *`
seekableio.IOBase.seekable"
builtins.bool"builtins.bool* 
self
	io.IOBase"	io.IOBase*V
tellio.IOBase.tell"
builtins.int"builtins.int* 
self
	io.IOBase"	io.IOBase*®
truncateio.IOBase.truncate"
builtins.int"builtins.int* 
self
	io.IOBase"	io.IOBase*HD
Union[builtins.int,None]
builtins.int"builtins.int
None *`
writableio.IOBase.writable"
builtins.bool"builtins.bool* 
self
	io.IOBase"	io.IOBase*Ë

writelinesio.IOBase.writelines"
None* 
self
	io.IOBase"	io.IOBase*óî
ßtyping.Iterable[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"typing.Iterable*¨
readlineio.IOBase.readline" 
builtins.bytes"builtins.bytes* 
self
	io.IOBase"	io.IOBase*HD
Union[builtins.int,None]
builtins.int"builtins.int
None *@
__del__io.IOBase.__del__"
None*
	io.IOBase"	io.IOBase*s
closedio.IOBase.closed"
builtins.bool"builtins.bool* 
self
	io.IOBase"	io.IOBase0:builtins.property`*£
_checkClosedio.IOBase._checkClosed"
None* 
self
	io.IOBase"	io.IOBase*O
msgD
Union[builtins.str,None]
builtins.str"builtins.str
None @babc.ABCMetarc
readio.IOBase.readK
CallableType[builtins.function]&
builtins.function"builtins.functionre
writeio.IOBase.writeK
CallableType[builtins.function]&
builtins.function"builtins.function™
	RawIOBaseio.RawIOBase"	io.IOBase*i
readallio.RawIOBase.readall" 
builtins.bytes"builtins.bytes*&
self
io.RawIOBase"io.RawIOBase*˛
readintoio.RawIOBase.readinto"D
Union[builtins.int,None]
builtins.int"builtins.int
None*&
self
io.RawIOBase"io.RawIOBase*ÏÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer*Â
writeio.RawIOBase.write"D
Union[builtins.int,None]
builtins.int"builtins.int
None*&
self
io.RawIOBase"io.RawIOBase*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Ø
readio.RawIOBase.read"J
Union[builtins.bytes,None] 
builtins.bytes"builtins.bytes
None*&
self
io.RawIOBase"io.RawIOBase* 
builtins.int"builtins.int ◊
BufferedIOBaseio.BufferedIOBase"	io.IOBase*r
detachio.BufferedIOBase.detach"
io.RawIOBase"io.RawIOBase*0
self&
io.BufferedIOBase"io.BufferedIOBase*Â
readintoio.BufferedIOBase.readinto"
builtins.int"builtins.int*0
self&
io.BufferedIOBase"io.BufferedIOBase*ÏÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer*Ã
writeio.BufferedIOBase.write"
builtins.int"builtins.int*0
self&
io.BufferedIOBase"io.BufferedIOBase*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*Á
	readinto1io.BufferedIOBase.readinto1"
builtins.int"builtins.int*0
self&
io.BufferedIOBase"io.BufferedIOBase*ÏÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer*º
readio.BufferedIOBase.read" 
builtins.bytes"builtins.bytes*0
self&
io.BufferedIOBase"io.BufferedIOBase*HD
Union[builtins.int,None]
builtins.int"builtins.int
None *ñ
read1io.BufferedIOBase.read1" 
builtins.bytes"builtins.bytes*0
self&
io.BufferedIOBase"io.BufferedIOBase* 
builtins.int"builtins.int r:
rawio.BufferedIOBase.raw
io.RawIOBase"io.RawIOBaseœ
FileIO	io.FileIO"io.RawIOBase"typing.BinaryIO*ç	
__init__io.FileIO.__init__"
None* 
self
	io.FileIO"	io.FileIO*á
file¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPath*(
mode
builtins.str"builtins.str *-
closefd
builtins.bool"builtins.bool *›
openerŒ
6Union[TypeAlias[CallableType[builtins.function]],None]á
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"
os._Opener
None *u
closefdio.FileIO.closefd"
builtins.bool"builtins.bool* 
self
	io.FileIO"	io.FileIO0:builtins.property`*¥
writeio.FileIO.write"
builtins.int"builtins.int* 
self
	io.FileIO"	io.FileIO*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer*|
readio.FileIO.read" 
builtins.bytes"builtins.bytes* 
self
	io.FileIO"	io.FileIO* 
builtins.int"builtins.int *ê
	__enter__io.FileIO.__enter__"5
io.FileIO.Self
	io.FileIO"	io.FileIO"	io.FileIO*75
io.FileIO.Self
	io.FileIO"	io.FileIO"	io.FileIOr4
modeio.FileIO.mode
builtins.str"builtins.strrï
nameio.FileIO.name¸
ÇTypeAlias[Union[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]]“
wUnion[builtins.int,TypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]]
builtins.int"builtins.int∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath"_typeshed.FileDescriptorOrPathº
BytesIO
io.BytesIO"io.BufferedIOBase"typing.BinaryIO*º
__init__io.BytesIO.__init__"
None*"
self

io.BytesIO"
io.BytesIO*Ï
initial_bytes÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer *ô
	__enter__io.BytesIO.__enter__"9
io.BytesIO.Self

io.BytesIO"
io.BytesIO"
io.BytesIO*;9
io.BytesIO.Self

io.BytesIO"
io.BytesIO"
io.BytesIO*e
getvalueio.BytesIO.getvalue" 
builtins.bytes"builtins.bytes*"
self

io.BytesIO"
io.BytesIO*q
	getbufferio.BytesIO.getbuffer"*
builtins.memoryview"builtins.memoryview*"
self

io.BytesIO"
io.BytesIO*©
read1io.BytesIO.read1" 
builtins.bytes"builtins.bytes*"
self

io.BytesIO"
io.BytesIO*HD
Union[builtins.int,None]
builtins.int"builtins.int
None r 
nameio.BytesIO.name
Anyˆ
BufferedReaderio.BufferedReader"io.BufferedIOBase"typing.BinaryIO*ÿ
	__enter__io.BufferedReader.__enter__"U
io.BufferedReader.Self&
io.BufferedReader"io.BufferedReader"io.BufferedReader*WU
io.BufferedReader.Self&
io.BufferedReader"io.BufferedReader"io.BufferedReader*∫
__init__io.BufferedReader.__init__"
None*0
self&
io.BufferedReader"io.BufferedReader*%
raw
io.RawIOBase"io.RawIOBase*/
buffer_size
builtins.int"builtins.int *î
peekio.BufferedReader.peek" 
builtins.bytes"builtins.bytes*0
self&
io.BufferedReader"io.BufferedReader* 
builtins.int"builtins.int Æ
BufferedWriterio.BufferedWriter"io.BufferedIOBase"typing.BinaryIO*ÿ
	__enter__io.BufferedWriter.__enter__"U
io.BufferedWriter.Self&
io.BufferedWriter"io.BufferedWriter"io.BufferedWriter*WU
io.BufferedWriter.Self&
io.BufferedWriter"io.BufferedWriter"io.BufferedWriter*∫
__init__io.BufferedWriter.__init__"
None*0
self&
io.BufferedWriter"io.BufferedWriter*%
raw
io.RawIOBase"io.RawIOBase*/
buffer_size
builtins.int"builtins.int *Ã
writeio.BufferedWriter.write"
builtins.int"builtins.int*0
self&
io.BufferedWriter"io.BufferedWriter*Ÿ÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer◊
BufferedRandomio.BufferedRandom"io.BufferedReader"io.BufferedWriter*ÿ
	__enter__io.BufferedRandom.__enter__"U
io.BufferedRandom.Self&
io.BufferedRandom"io.BufferedRandom"io.BufferedRandom*WU
io.BufferedRandom.Self&
io.BufferedRandom"io.BufferedRandom"io.BufferedRandom*∞
seekio.BufferedRandom.seek"
builtins.int"builtins.int*0
self&
io.BufferedRandom"io.BufferedRandom*
builtins.int"builtins.int* 
builtins.int"builtins.int ∑
BufferedRWPairio.BufferedRWPair"io.BufferedIOBase*Á
__init__io.BufferedRWPair.__init__"
None*0
self&
io.BufferedRWPair"io.BufferedRWPair*(
reader
io.RawIOBase"io.RawIOBase*(
writer
io.RawIOBase"io.RawIOBase*/
buffer_size
builtins.int"builtins.int *î
peekio.BufferedRWPair.peek" 
builtins.bytes"builtins.bytes*0
self&
io.BufferedRWPair"io.BufferedRWPair* 
builtins.int"builtins.int …

TextIOBaseio.TextIOBase"	io.IOBase*î
__iter__io.TextIOBase.__iter__"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator* 
io.TextIOBase"io.TextIOBase*j
__next__io.TextIOBase.__next__"
builtins.str"builtins.str*(
self
io.TextIOBase"io.TextIOBase*l
detachio.TextIOBase.detach""
typing.BinaryIO"typing.BinaryIO*(
self
io.TextIOBase"io.TextIOBase*Ñ
writeio.TextIOBase.write"
builtins.int"builtins.int*(
self
io.TextIOBase"io.TextIOBase*
builtins.str"builtins.str*¨

writelinesio.TextIOBase.writelines"
None*(
self
io.TextIOBase"io.TextIOBase*PN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*å
readlineio.TextIOBase.readline"
builtins.str"builtins.str*(
self
io.TextIOBase"io.TextIOBase* 
builtins.int"builtins.int *º
	readlinesio.TextIOBase.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*(
self
io.TextIOBase"io.TextIOBase* 
builtins.int"builtins.int *¨
readio.TextIOBase.read"
builtins.str"builtins.str*(
self
io.TextIOBase"io.TextIOBase*HD
Union[builtins.int,None]
builtins.int"builtins.int
None r@
encodingio.TextIOBase.encoding
builtins.str"builtins.strrd
errorsio.TextIOBase.errorsD
Union[builtins.str,None]
builtins.str"builtins.str
Noner‘
newlinesio.TextIOBase.newlinesØ
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
NoneÇ
TextIOWrapperio.TextIOWrapper"io.TextIOBase"typing.TextIO*ü
__init__io.TextIOWrapper.__init__"
None*.
self$
io.TextIOWrapper"io.TextIOWrapper*T
bufferH
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *4
line_buffering
builtins.bool"builtins.bool *3
write_through
builtins.bool"builtins.bool *å
bufferio.TextIOWrapper.buffer""
typing.BinaryIO"typing.BinaryIO*.
self$
io.TextIOWrapper"io.TextIOWrapper0:builtins.property`*à
closedio.TextIOWrapper.closed"
builtins.bool"builtins.bool*.
self$
io.TextIOWrapper"io.TextIOWrapper0:builtins.property`*ò
line_bufferingio.TextIOWrapper.line_buffering"
builtins.bool"builtins.bool*.
self$
io.TextIOWrapper"io.TextIOWrapper0:builtins.property`*ñ
write_throughio.TextIOWrapper.write_through"
builtins.bool"builtins.bool*.
self$
io.TextIOWrapper"io.TextIOWrapper0:builtins.property`*°
reconfigureio.TextIOWrapper.reconfigure"
None*.
self$
io.TextIOWrapper"io.TextIOWrapper*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *]
line_bufferingG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *\
write_throughG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *œ
	__enter__io.TextIOWrapper.__enter__"Q
io.TextIOWrapper.Self$
io.TextIOWrapper"io.TextIOWrapper"io.TextIOWrapper*SQ
io.TextIOWrapper.Self$
io.TextIOWrapper"io.TextIOWrapper"io.TextIOWrapper*ù
__iter__io.TextIOWrapper.__iter__"N
typing.Iterator[builtins.str]
builtins.str"builtins.str"typing.Iterator*&$
io.TextIOWrapper"io.TextIOWrapper*s
__next__io.TextIOWrapper.__next__"
builtins.str"builtins.str*.
self$
io.TextIOWrapper"io.TextIOWrapper*µ

writelinesio.TextIOWrapper.writelines"
None*.
self$
io.TextIOWrapper"io.TextIOWrapper*PN
typing.Iterable[builtins.str]
builtins.str"builtins.str"typing.Iterable*ï
readlineio.TextIOWrapper.readline"
builtins.str"builtins.str*.
self$
io.TextIOWrapper"io.TextIOWrapper* 
builtins.int"builtins.int *≈
	readlinesio.TextIOWrapper.readlines"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*.
self$
io.TextIOWrapper"io.TextIOWrapper* 
builtins.int"builtins.int *≠
seekio.TextIOWrapper.seek"
builtins.int"builtins.int*.
self$
io.TextIOWrapper"io.TextIOWrapper*
builtins.int"builtins.int* 
builtins.int"builtins.int µ
StringIOio.StringIO"io.TextIOWrapper*Ä
__init__io.StringIO.__init__"
None*$
self
io.StringIO"io.StringIO*Y
initial_valueD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None *d
getvalueio.StringIO.getvalue"
builtins.str"builtins.str*$
self
io.StringIO"io.StringIOr!
nameio.StringIO.name
Any‹
IncrementalNewlineDecoderio.IncrementalNewlineDecoder"codecs.IncrementalDecoder*ÿ
__init__%io.IncrementalNewlineDecoder.__init__"
None*F
self<
io.IncrementalNewlineDecoder"io.IncrementalNewlineDecoder*x
decoderk
%Union[codecs.IncrementalDecoder,None]6
codecs.IncrementalDecoder"codecs.IncrementalDecoder
None*-
	translate
builtins.bool"builtins.bool**
errors
builtins.str"builtins.str *ı	
decode#io.IncrementalNewlineDecoder.decode"
builtins.str"builtins.str*F
self<
io.IncrementalNewlineDecoder"io.IncrementalNewlineDecoder*≤
input¶
™Union[TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],builtins.str]÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer
builtins.str"builtins.str*+
final
builtins.bool"builtins.bool *¬
newlines%io.IncrementalNewlineDecoder.newlines"Ø
5Union[builtins.str,builtins.tuple[builtins.str],None]
builtins.str"builtins.strL
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple
None*F
self<
io.IncrementalNewlineDecoder"io.IncrementalNewlineDecoder0:builtins.property`*Ì
setstate%io.IncrementalNewlineDecoder.setstate"
None*F
self<
io.IncrementalNewlineDecoder"io.IncrementalNewlineDecoder*hf
"Tuple[builtins.bytes,builtins.int] 
builtins.bytes"builtins.bytes
builtins.int"builtins.intã
	open_codeio.open_code"H
typing.IO[builtins.bytes] 
builtins.bytes"builtins.bytes"	typing.IO*&
path
builtins.str"builtins.str*~
__annotations__io.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*a
__all__
io.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*f
DEFAULT_BUFFER_SIZEio.DEFAULT_BUFFER_SIZE7
Literal[builtins.int]	
builtins.int"builtins.int*P
SEEK_SETio.SEEK_SET7
Literal[builtins.int]	
builtins.int"builtins.int*P
SEEK_CURio.SEEK_CUR7
Literal[builtins.int]	
builtins.int"builtins.int*P
SEEK_ENDio.SEEK_END7
Literal[builtins.int]	
builtins.int"builtins.int*o
openio.open^
CallableType[builtins.function]&
builtins.function"builtins.function"builtins.function