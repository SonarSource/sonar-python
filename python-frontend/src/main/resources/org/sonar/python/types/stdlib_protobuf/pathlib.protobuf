
pathlibŒ?
PurePathpathlib.PurePath"os.PathLike*’
partspathlib.PurePath.parts"L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`z38z39z310z311z312z313z314*•
drivepathlib.PurePath.drive"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`z38z39z310z311z312z313z314*£
rootpathlib.PurePath.root"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`z38z39z310z311z312z313z314*ß
anchorpathlib.PurePath.anchor"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`z38z39z310z311z312z313z314*£
namepathlib.PurePath.name"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`z38z39z310z311z312z313z314*ß
suffixpathlib.PurePath.suffix"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`z38z39z310z311z312z313z314*Ÿ
suffixespathlib.PurePath.suffixes"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`z38z39z310z311z312z313z314*£
stempathlib.PurePath.stem"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePath0:builtins.property`z38z39z310z311z312z313z314*í
__new__pathlib.PurePath.__new__"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*Å
clsx
Type[pathlib.PurePath.Self]Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath"type*Ù
argsÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz38z39z310z311z312z313z314*∞
__eq__pathlib.PurePath.__eq__"
builtins.bool"builtins.bool*&$
pathlib.PurePath"pathlib.PurePath*$"
builtins.object"builtins.objectz38z39z310z311z312z313z314*ò

__fspath__pathlib.PurePath.__fspath__"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*≤
__lt__pathlib.PurePath.__lt__"
builtins.bool"builtins.bool*&$
pathlib.PurePath"pathlib.PurePath*&$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*≤
__le__pathlib.PurePath.__le__"
builtins.bool"builtins.bool*&$
pathlib.PurePath"pathlib.PurePath*&$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*≤
__gt__pathlib.PurePath.__gt__"
builtins.bool"builtins.bool*&$
pathlib.PurePath"pathlib.PurePath*&$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*≤
__ge__pathlib.PurePath.__ge__"
builtins.bool"builtins.bool*&$
pathlib.PurePath"pathlib.PurePath*&$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*„
__truediv__pathlib.PurePath.__truediv__"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*SQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*ÏÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz38z39z310z311z312z313z314*Â
__rtruediv__pathlib.PurePath.__rtruediv__"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*SQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*ÏÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz38z39z310z311z312z313z314*ö
	__bytes__pathlib.PurePath.__bytes__" 
builtins.bytes"builtins.bytes*.
self$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*î
as_posixpathlib.PurePath.as_posix"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*ê
as_uripathlib.PurePath.as_uri"
builtins.str"builtins.str*.
self$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*ú
is_absolutepathlib.PurePath.is_absolute"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*ú
is_reservedpathlib.PurePath.is_reserved"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*¿
matchpathlib.PurePath.match"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePath*.
path_pattern
builtins.str"builtins.strz38z39z310z311z312z313z314*Ù
relative_topathlib.PurePath.relative_to"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*ı
otherÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz38z39z310z311z312z313z314*†
	with_namepathlib.PurePath.with_name"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*&
name
builtins.str"builtins.strz38z39z310z311z312z313z314*¶
with_suffixpathlib.PurePath.with_suffix"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*(
suffix
builtins.str"builtins.strz38z39z310z311z312z313z314*Ó
joinpathpathlib.PurePath.joinpath"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*ı
otherÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz38z39z310z311z312z313z314*«
parentspathlib.PurePath.parents"å
&typing.Sequence[pathlib.PurePath.Self]Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath"typing.Sequence*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath0:builtins.property`z38z39z310z311z312z313z314*â
parentpathlib.PurePath.parent"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath0:builtins.property`z38z39z310z311z312z313z314*ñ
is_relative_topathlib.PurePath.is_relative_to"
builtins.bool"builtins.bool*.
self$
pathlib.PurePath"pathlib.PurePath*ı
otherÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz39z310z311z312z313z314*ú
	with_stempathlib.PurePath.with_stem"Q
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*[
selfQ
pathlib.PurePath.Self$
pathlib.PurePath"pathlib.PurePath"pathlib.PurePath*&
stem
builtins.str"builtins.strz39z310z311z312z313z314*–
__class_getitem__"pathlib.PurePath.__class_getitem__"(
types.GenericAlias"types.GenericAlias*O
clsF
Type[pathlib.PurePath]$
pathlib.PurePath"pathlib.PurePath"type*
type
Anypz39z310j38j39j310j311j312j313j314Y
PurePosixPathpathlib.PurePosixPath"pathlib.PurePathj38j39j310j311j312j313j314]
PureWindowsPathpathlib.PureWindowsPath"pathlib.PurePathj38j39j310j311j312j313j314Ω¡
Pathpathlib.Path"pathlib.PurePath*˛
__new__pathlib.Path.__new__"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*m
clsd
Type[pathlib.Path.Self]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path"type*Ù
argsÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPath*
kwargs
Anyz38z39z310z311z312z313z314*Ã
	__enter__pathlib.Path.__enter__"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*CA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*≈
__exit__pathlib.Path.__exit__"
None*
pathlib.Path"pathlib.Path*ìê
(Union[Type[builtins.BaseException],None]X
Type[builtins.BaseException]0
builtins.BaseException"builtins.BaseException"type
None*db
"Union[builtins.BaseException,None]0
builtins.BaseException"builtins.BaseException
None*[Y
Union[types.TracebackType,None]*
types.TracebackType"types.TracebackType
Nonez38z39z310z311z312z313z314*Ñ
cwdpathlib.Path.cwd"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*m
clsd
Type[pathlib.Path.Self]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path"type0:builtins.classmethodpz38z39z310z311z312z313z314*»
statpathlib.Path.stat"¸
ôTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]À
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result*&
self
pathlib.Path"pathlib.Pathz38z39*ê
statpathlib.Path.stat"¸
ôTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]À
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result*&
self
pathlib.Path"pathlib.Path*5
follow_symlinks
builtins.bool"builtins.bool z310z311z312z313z314*}
chmodpathlib.Path.chmod"
None*&
self
pathlib.Path"pathlib.Path*&
mode
builtins.int"builtins.intz38z39*≈
chmodpathlib.Path.chmod"
None*&
self
pathlib.Path"pathlib.Path*&
mode
builtins.int"builtins.int*5
follow_symlinks
builtins.bool"builtins.bool z310z311z312z313z314*Ü
existspathlib.Path.exists"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*Õ
globpathlib.Path.glob"ò
-typing.Generator[pathlib.Path.Self,None,None]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path
None
None"typing.Generator*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*)
pattern
builtins.str"builtins.strz38z39z310z311z312z313z314*Ü
is_dirpathlib.Path.is_dir"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*à
is_filepathlib.Path.is_file"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*é

is_symlinkpathlib.Path.is_symlink"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*å
	is_socketpathlib.Path.is_socket"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*à
is_fifopathlib.Path.is_fifo"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*ò
is_block_devicepathlib.Path.is_block_device"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*ñ
is_char_devicepathlib.Path.is_char_device"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*®
iterdirpathlib.Path.iterdir"ò
-typing.Generator[pathlib.Path.Self,None,None]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path
None
None"typing.Generator*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*ò
lchmodpathlib.Path.lchmod"
None*&
self
pathlib.Path"pathlib.Path*&
mode
builtins.int"builtins.intz38z39z310z311z312z313z314*„
lstatpathlib.Path.lstat"¸
ôTypeAlias[Tuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]]À
éTuple[builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.int,builtins.float,builtins.float,builtins.float]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int 
builtins.float"builtins.float 
builtins.float"builtins.float 
builtins.float"builtins.float"os.stat_result*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*˜
mkdirpathlib.Path.mkdir"
None*&
self
pathlib.Path"pathlib.Path*(
mode
builtins.int"builtins.int *-
parents
builtins.bool"builtins.bool *.
exist_ok
builtins.bool"builtins.bool z38z39z310z311z312z313z314*Ç
ownerpathlib.Path.owner"
builtins.str"builtins.str*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*Ç
grouppathlib.Path.group"
builtins.str"builtins.str*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*ä
is_mountpathlib.Path.is_mount"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*»
renamepathlib.Path.rename"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*x
targetl
$Union[builtins.str,pathlib.PurePath]
builtins.str"builtins.str$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314* 
replacepathlib.Path.replace"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*x
targetl
$Union[builtins.str,pathlib.PurePath]
builtins.str"builtins.str$
pathlib.PurePath"pathlib.PurePathz38z39z310z311z312z313z314*˛
resolvepathlib.Path.resolve"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*,
strict
builtins.bool"builtins.bool z38z39z310z311z312z313z314*œ
rglobpathlib.Path.rglob"ò
-typing.Generator[pathlib.Path.Self,None,None]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path
None
None"typing.Generator*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*)
pattern
builtins.str"builtins.strz38z39z310z311z312z313z314*n
rmdirpathlib.Path.rmdir"
None*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*˘

symlink_topathlib.Path.symlink_to"
None*&
self
pathlib.Path"pathlib.Path*√
target∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPath*9
target_is_directory
builtins.bool"builtins.bool z38z39z310z311z312z313z314*»
touchpathlib.Path.touch"
None*&
self
pathlib.Path"pathlib.Path*(
mode
builtins.int"builtins.int *.
exist_ok
builtins.bool"builtins.bool z38z39z310z311z312z313z314*¢
unlinkpathlib.Path.unlink"
None*&
self
pathlib.Path"pathlib.Path*0

missing_ok
builtins.bool"builtins.bool z38z39z310z311z312z313z314*Ü
homepathlib.Path.home"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*m
clsd
Type[pathlib.Path.Self]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path"type0:builtins.classmethodpz38z39z310z311z312z313z314*“
absolutepathlib.Path.absolute"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*÷

expanduserpathlib.Path.expanduser"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*ê

read_bytespathlib.Path.read_bytes" 
builtins.bytes"builtins.bytes*&
self
pathlib.Path"pathlib.Pathz38z39z310z311z312z313z314*¥
	read_textpathlib.Path.read_text"
builtins.str"builtins.str*&
self
pathlib.Path"pathlib.Path*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z38z39z310z311z312z313z314*á
samefilepathlib.Path.samefile"
builtins.bool"builtins.bool*&
self
pathlib.Path"pathlib.Path*˙

other_pathÈ
8TypeAlias[Union[builtins.str,os.PathLike[builtins.str]]]ó
-Union[builtins.str,os.PathLike[builtins.str]]
builtins.str"builtins.strF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike"_typeshed.StrPathz38z39z310z311z312z313z314*¯
write_bytespathlib.Path.write_bytes"
builtins.int"builtins.int*&
self
pathlib.Path"pathlib.Path*Á
data‹
óTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]]]£
åUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÌ
vTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer]]’
kUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,_ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap 
_ctypes._CData"_ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBufferz38z39z310z311z312z313z314*≈

write_textpathlib.Path.write_text"
builtins.int"builtins.int*&
self
pathlib.Path"pathlib.Path*&
data
builtins.str"builtins.str*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None z38z39*´

write_textpathlib.Path.write_text"
builtins.int"builtins.int*&
self
pathlib.Path"pathlib.Path*&
data
builtins.str"builtins.str*T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None z310z311z312z313z314*©
link_topathlib.Path.link_to"
None*&
self
pathlib.Path"pathlib.Path*√
target∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz38z39z310z311*Œ
readlinkpathlib.Path.readlink"A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Pathz39z310z311z312z313z314*∏
hardlink_topathlib.Path.hardlink_to"
None*&
self
pathlib.Path"pathlib.Path*√
target∂
cTypeAlias[Union[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]]≤
XUnion[builtins.str,builtins.bytes,os.PathLike[builtins.str],os.PathLike[builtins.bytes]]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesF
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLikeL
os.PathLike[builtins.bytes] 
builtins.bytes"builtins.bytes"os.PathLike"_typeshed.StrOrBytesPathz310z311z312z313z314*ü
walkpathlib.Path.walk"¶
atyping.Iterator[Tuple[pathlib.Path.Self,builtins.list[builtins.str],builtins.list[builtins.str]]]Ø
PTuple[pathlib.Path.Self,builtins.list[builtins.str],builtins.list[builtins.str]]A
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.PathJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.listJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list"typing.Iterator*K
selfA
pathlib.Path.Self
pathlib.Path"pathlib.Path"pathlib.Path*.
top_down
builtins.bool"builtins.bool *ó
on_errorÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *5
follow_symlinks
builtins.bool"builtins.bool z312z313z3142à–
openpathlib.Path.open∫B
openpathlib.Path.open"$
io.TextIOWrapper"io.TextIOWrapper*&
self
pathlib.Path"pathlib.Path*ç?
modeÄ?
’	TypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]ã5
 	Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]‰
—TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Î
∆Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeUpdating–
◊TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]“
ÃUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeWritingˇ	
ôTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ø
éUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenTextModeReading"_typeshed.OpenTextMode *-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadXò0
openpathlib.Path.open"
	io.FileIO"	io.FileIO*&
self
pathlib.Path"pathlib.Path*î.
modeâ.
ãTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]‹&
ÄUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]æ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*F
	buffering7
Literal[builtins.int]	
builtins.int"builtins.int*
encoding
None *
errors
None *
newline
None 0:typing.overloadX“
openpathlib.Path.open"&
io.BufferedRandom"io.BufferedRandom*&
self
pathlib.Path"pathlib.Path*…
modeæ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdating*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:typing.overloadX∑
openpathlib.Path.open"&
io.BufferedWriter"io.BufferedWriter*&
self
pathlib.Path"pathlib.Path*Æ
mode£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:typing.overloadXÅ

openpathlib.Path.open"&
io.BufferedReader"io.BufferedReader*&
self
pathlib.Path"pathlib.Path*¯
modeÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading*∫
	buffering®
2Union[Literal[builtins.int],Literal[builtins.int]]7
Literal[builtins.int]	
builtins.int"builtins.int7
Literal[builtins.int]	
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:typing.overloadXã0
openpathlib.Path.open""
typing.BinaryIO"typing.BinaryIO*&
self
pathlib.Path"pathlib.Path*î.
modeâ.
ãTypeAlias[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]]‹&
ÄUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]æ
°TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Û
ñUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" _typeshed.OpenBinaryModeUpdatingÌ
¡TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]É
∂Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeReading£
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"_typeshed.OpenBinaryModeWriting"_typeshed.OpenBinaryMode*-
	buffering
builtins.int"builtins.int *
encoding
None *
errors
None *
newline
None 0:typing.overloadX“
openpathlib.Path.open"$
typing.IO[Any]
Any"	typing.IO*&
self
pathlib.Path"pathlib.Path*&
mode
builtins.str"builtins.str*-
	buffering
builtins.int"builtins.int *T
encodingD
Union[builtins.str,None]
builtins.str"builtins.str
None *R
errorsD
Union[builtins.str,None]
builtins.str"builtins.str
None *S
newlineD
Union[builtins.str,None]
builtins.str"builtins.str
None 0:typing.overloadX"38"39"310"311"312"313"314j38j39j310j311j312j313j314d
	PosixPathpathlib.PosixPath"pathlib.Path"pathlib.PurePosixPathj38j39j310j311j312j313j314j
WindowsPathpathlib.WindowsPath"pathlib.Path"pathlib.PureWindowsPathj38j39j310j311j312j313j314*§
__annotations__pathlib.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*á
__all__pathlib.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*314