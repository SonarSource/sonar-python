
sklearn.conftestô
DoctestItem_pytest.doctest.DoctestItem"_pytest.nodes.Item*œ
__init__$_pytest.doctest.DoctestItem.__init__"
None*D
self:
_pytest.doctest.DoctestItem"_pytest.doctest.DoctestItem*&
name
builtins.str"builtins.str*Ÿ
parentÃ
DUnion[_pytest.doctest.DoctestTextfile,_pytest.doctest.DoctestModule]B
_pytest.doctest.DoctestTextfile"_pytest.doctest.DoctestTextfile>
_pytest.doctest.DoctestModule"_pytest.doctest.DoctestModule*m
runner_
!Union[doctest.DocTestRunner,None].
doctest.DocTestRunner"doctest.DocTestRunner
None *Z
dtestM
Union[doctest.DocTest,None]"
doctest.DocTest"doctest.DocTest
None *∫
from_parent'_pytest.doctest.DoctestItem.from_parent"
Any*p
clsg
!Type[_pytest.doctest.DoctestItem]:
_pytest.doctest.DoctestItem"_pytest.doctest.DoctestItem"type*Ÿ
parentÃ
DUnion[_pytest.doctest.DoctestTextfile,_pytest.doctest.DoctestModule]B
_pytest.doctest.DoctestTextfile"_pytest.doctest.DoctestTextfile>
_pytest.doctest.DoctestModule"_pytest.doctest.DoctestModule*&
name
builtins.str"builtins.str*:
runner.
doctest.DocTestRunner"doctest.DocTestRunner*-
dtest"
doctest.DocTest"doctest.DocTest0:builtins.classmethodp*z
setup!_pytest.doctest.DoctestItem.setup"
None*D
self:
_pytest.doctest.DoctestItem"_pytest.doctest.DoctestItem*~
runtest#_pytest.doctest.DoctestItem.runtest"
None*D
self:
_pytest.doctest.DoctestItem"_pytest.doctest.DoctestItem*∏
$_disable_output_capturing_for_darwin@_pytest.doctest.DoctestItem._disable_output_capturing_for_darwin"
None*D
self:
_pytest.doctest.DoctestItem"_pytest.doctest.DoctestItem*π
repr_failure(_pytest.doctest.DoctestItem.repr_failure"ô
3Union[builtins.str,_pytest._code.code.TerminalRepr]
builtins.str"builtins.strB
_pytest._code.code.TerminalRepr"_pytest._code.code.TerminalRepr*D
self:
_pytest.doctest.DoctestItem"_pytest.doctest.DoctestItem*ú
excinfoé
8_pytest._code.code.ExceptionInfo[builtins.BaseException]0
builtins.BaseException"builtins.BaseException" _pytest._code.code.ExceptionInfo*Ÿ

reportinfo&_pytest.doctest.DoctestItem.reportinfo"‹
ZTuple[Union[os.PathLike[builtins.str],builtins.str],Union[builtins.int,None],builtins.str]ó
-Union[os.PathLike[builtins.str],builtins.str]F
os.PathLike[builtins.str]
builtins.str"builtins.str"os.PathLike
builtins.str"builtins.strD
Union[builtins.int,None]
builtins.int"builtins.int
None
builtins.str"builtins.str*D
self:
_pytest.doctest.DoctestItem"_pytest.doctest.DoctestItemrç
runner"_pytest.doctest.DoctestItem.runner_
!Union[doctest.DocTestRunner,None].
doctest.DocTestRunner"doctest.DocTestRunner
Nonery
dtest!_pytest.doctest.DoctestItem.dtestM
Union[doctest.DocTest,None]"
doctest.DocTest"doctest.DocTest
Noner0
obj_pytest.doctest.DoctestItem.obj
NonerΩ
fixture_request+_pytest.doctest.DoctestItem.fixture_request}
+Union[_pytest.fixtures.FixtureRequest,None]B
_pytest.fixtures.FixtureRequest"_pytest.fixtures.FixtureRequest
Noneµ
wrapsfunctools.wraps"8
_typeshed.IdentityFunction"_typeshed.IdentityFunction*°
wrappedì
*TypeAlias[CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.function"functools._AnyCallable*^
assignedN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence *]
updatedN
typing.Sequence[builtins.str]
builtins.str"builtins.str"typing.Sequence »,
fetch_20newsgroups6sklearn.datasets._twenty_newsgroups.fetch_20newsgroups"Ω
ëUnion[sklearn.utils._bunch.Bunch,Tuple[builtins.list[builtins.str],numpy.ndarray[Any,Any]],Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunchƒ
9Tuple[builtins.list[builtins.str],numpy.ndarray[Any,Any]]J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray£
5Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch.
builtins.tuple[Any]
Any"builtins.tuple*U
	data_homeD
Union[None,builtins.str]
None
builtins.str"builtins.str *’
subset∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *≥

categories†
„Union[None,TypeAlias[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]]
None´
◊TypeAlias[TypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]]±
ÃTypeAlias[TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]]∏
¡TypeAlias[Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]]≈	
∂Union[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType],numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]],numpy._typing._array_like._T,numpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArrayÇ
znumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType]]”
Jnumpy._typing._array_like._SupportsArray[numpy._typing._array_like._DType][
 numpy._typing._array_like._DType(
numpy.dtype[Any]
Any"numpy.dtype"numpy.dtype"(numpy._typing._array_like._SupportsArray".numpy._typing._nested_sequence._NestedSequenceU
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object’
Lnumpy._typing._nested_sequence._NestedSequence[numpy._typing._array_like._T]U
numpy._typing._array_like._T"
builtins.object"builtins.object"builtins.object".numpy._typing._nested_sequence._NestedSequence"(numpy._typing._array_like._DualArrayLike"#numpy._typing._array_like.ArrayLike"sklearn._typing.ArrayLike *-
shuffle
builtins.bool"builtins.bool *˙
random_stateÂ
ùUnion[numpy.random.mtrand.RandomState,None,TypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]]B
numpy.random.mtrand.RandomState"numpy.random.mtrand.RandomState
NoneÚ	
ÒTypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]‰
ÊUnion[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]
builtins.int"builtins.int∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8µ
4TypeAlias[numpy.signedinteger[numpy._typing._16Bit]]n
)numpy.signedinteger[numpy._typing._16Bit],
numpy._typing._16Bit"numpy._typing._16Bit"numpy.signedinteger"numpy.int16µ
4TypeAlias[numpy.signedinteger[numpy._typing._32Bit]]n
)numpy.signedinteger[numpy._typing._32Bit],
numpy._typing._32Bit"numpy._typing._32Bit"numpy.signedinteger"numpy.int32µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64"sklearn._typing.Int *<
remove.
builtins.tuple[Any]
Any"builtins.tuple *9
download_if_missing
builtins.bool"builtins.bool *0

return_X_y
builtins.bool"builtins.bool √
fetch_20newsgroups_vectorizedAsklearn.datasets._twenty_newsgroups.fetch_20newsgroups_vectorized"£
5Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch.
builtins.tuple[Any]
Any"builtins.tuple*’
subset∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *<
remove.
builtins.tuple[Any]
Any"builtins.tuple *U
	data_homeD
Union[None,builtins.str]
None
builtins.str"builtins.str *9
download_if_missing
builtins.bool"builtins.bool *0

return_X_y
builtins.bool"builtins.bool */
	normalize
builtins.bool"builtins.bool *.
as_frame
builtins.bool"builtins.bool Û
fetch_california_housing=sklearn.datasets._california_housing.fetch_california_housing"£
5Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch.
builtins.tuple[Any]
Any"builtins.tuple*U
	data_homeD
Union[None,builtins.str]
None
builtins.str"builtins.str *9
download_if_missing
builtins.bool"builtins.bool *0

return_X_y
builtins.bool"builtins.bool *.
as_frame
builtins.bool"builtins.bool ˝
fetch_covtype'sklearn.datasets._covtype.fetch_covtype"¢
åUnion[sklearn.utils._bunch.Bunch,Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]],Tuple[numpy.ndarray[Any,Any],numpy.ndarray[Any,Any]]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch£
5Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch.
builtins.tuple[Any]
Any"builtins.tupleÆ
4Tuple[numpy.ndarray[Any,Any],numpy.ndarray[Any,Any]]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*U
	data_homeD
Union[None,builtins.str]
None
builtins.str"builtins.str *9
download_if_missing
builtins.bool"builtins.bool *˙
random_stateÂ
ùUnion[numpy.random.mtrand.RandomState,None,TypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]]B
numpy.random.mtrand.RandomState"numpy.random.mtrand.RandomState
NoneÚ	
ÒTypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]‰
ÊUnion[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]
builtins.int"builtins.int∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8µ
4TypeAlias[numpy.signedinteger[numpy._typing._16Bit]]n
)numpy.signedinteger[numpy._typing._16Bit],
numpy._typing._16Bit"numpy._typing._16Bit"numpy.signedinteger"numpy.int16µ
4TypeAlias[numpy.signedinteger[numpy._typing._32Bit]]n
)numpy.signedinteger[numpy._typing._32Bit],
numpy._typing._32Bit"numpy._typing._32Bit"numpy.signedinteger"numpy.int32µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64"sklearn._typing.Int *-
shuffle
builtins.bool"builtins.bool *0

return_X_y
builtins.bool"builtins.bool *.
as_frame
builtins.bool"builtins.bool ±
fetch_kddcup99)sklearn.datasets._kddcup99.fetch_kddcup99"ª
WUnion[sklearn.utils._bunch.Bunch,Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch£
5Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch.
builtins.tuple[Any]
Any"builtins.tuple*‰
subset’
cUnion[None,Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]
None7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *U
	data_homeD
Union[None,builtins.str]
None
builtins.str"builtins.str *-
shuffle
builtins.bool"builtins.bool *˙
random_stateÂ
ùUnion[numpy.random.mtrand.RandomState,None,TypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]]B
numpy.random.mtrand.RandomState"numpy.random.mtrand.RandomState
NoneÚ	
ÒTypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]‰
ÊUnion[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]
builtins.int"builtins.int∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8µ
4TypeAlias[numpy.signedinteger[numpy._typing._16Bit]]n
)numpy.signedinteger[numpy._typing._16Bit],
numpy._typing._16Bit"numpy._typing._16Bit"numpy.signedinteger"numpy.int16µ
4TypeAlias[numpy.signedinteger[numpy._typing._32Bit]]n
)numpy.signedinteger[numpy._typing._32Bit],
numpy._typing._32Bit"numpy._typing._32Bit"numpy.signedinteger"numpy.int32µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64"sklearn._typing.Int */
	percent10
builtins.bool"builtins.bool *9
download_if_missing
builtins.bool"builtins.bool *0

return_X_y
builtins.bool"builtins.bool *.
as_frame
builtins.bool"builtins.bool ‚
fetch_olivetti_faces5sklearn.datasets._olivetti_faces.fetch_olivetti_faces"¢
åUnion[sklearn.utils._bunch.Bunch,Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]],Tuple[numpy.ndarray[Any,Any],numpy.ndarray[Any,Any]]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch£
5Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch.
builtins.tuple[Any]
Any"builtins.tupleÆ
4Tuple[numpy.ndarray[Any,Any],numpy.ndarray[Any,Any]]9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*U
	data_homeD
Union[None,builtins.str]
None
builtins.str"builtins.str *-
shuffle
builtins.bool"builtins.bool *˙
random_stateÂ
ùUnion[numpy.random.mtrand.RandomState,None,TypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]]B
numpy.random.mtrand.RandomState"numpy.random.mtrand.RandomState
NoneÚ	
ÒTypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]‰
ÊUnion[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]
builtins.int"builtins.int∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8µ
4TypeAlias[numpy.signedinteger[numpy._typing._16Bit]]n
)numpy.signedinteger[numpy._typing._16Bit],
numpy._typing._16Bit"numpy._typing._16Bit"numpy.signedinteger"numpy.int16µ
4TypeAlias[numpy.signedinteger[numpy._typing._32Bit]]n
)numpy.signedinteger[numpy._typing._32Bit],
numpy._typing._32Bit"numpy._typing._32Bit"numpy.signedinteger"numpy.int32µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64"sklearn._typing.Int *9
download_if_missing
builtins.bool"builtins.bool *0

return_X_y
builtins.bool"builtins.bool ù

fetch_rcv1!sklearn.datasets._rcv1.fetch_rcv1"£
5Tuple[sklearn.utils._bunch.Bunch,builtins.tuple[Any]]8
sklearn.utils._bunch.Bunch"sklearn.utils._bunch.Bunch.
builtins.tuple[Any]
Any"builtins.tuple*U
	data_homeD
Union[None,builtins.str]
None
builtins.str"builtins.str *’
subset∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *9
download_if_missing
builtins.bool"builtins.bool *˙
random_stateÂ
ùUnion[numpy.random.mtrand.RandomState,None,TypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]]B
numpy.random.mtrand.RandomState"numpy.random.mtrand.RandomState
NoneÚ	
ÒTypeAlias[Union[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]]‰
ÊUnion[builtins.int,TypeAlias[numpy.signedinteger[numpy._typing._8Bit]],TypeAlias[numpy.signedinteger[numpy._typing._16Bit]],TypeAlias[numpy.signedinteger[numpy._typing._32Bit]],TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]]
builtins.int"builtins.int∞
3TypeAlias[numpy.signedinteger[numpy._typing._8Bit]]k
(numpy.signedinteger[numpy._typing._8Bit]*
numpy._typing._8Bit"numpy._typing._8Bit"numpy.signedinteger"
numpy.int8µ
4TypeAlias[numpy.signedinteger[numpy._typing._16Bit]]n
)numpy.signedinteger[numpy._typing._16Bit],
numpy._typing._16Bit"numpy._typing._16Bit"numpy.signedinteger"numpy.int16µ
4TypeAlias[numpy.signedinteger[numpy._typing._32Bit]]n
)numpy.signedinteger[numpy._typing._32Bit],
numpy._typing._32Bit"numpy._typing._32Bit"numpy.signedinteger"numpy.int32µ
4TypeAlias[numpy.signedinteger[numpy._typing._64Bit]]n
)numpy.signedinteger[numpy._typing._64Bit],
numpy._typing._64Bit"numpy._typing._64Bit"numpy.signedinteger"numpy.int64"sklearn._typing.Int *-
shuffle
builtins.bool"builtins.bool *0

return_X_y
builtins.bool"builtins.bool õ
parse_version*sklearn.externals._packaging.version.parse"≤
fUnion[sklearn.externals._packaging.version.LegacyVersion,sklearn.externals._packaging.version.Version]h
2sklearn.externals._packaging.version.LegacyVersion"2sklearn.externals._packaging.version.LegacyVersion\
,sklearn.externals._packaging.version.Version",sklearn.externals._packaging.version.Version*)
version
builtins.str"builtins.str:
global_dtypesklearn.conftest.global_dtype*
request™
pytest_collection_modifyitems.sklearn.conftest.pytest_collection_modifyitems"
Any*
config
Any*;
items0
typing.Sequence[Any]
Any"typing.Sequence!
pyplotsklearn.conftest.pyplotG
pytest_runtest_setup%sklearn.conftest.pytest_runtest_setup*
itemA
pytest_configure!sklearn.conftest.pytest_configure*

config*å
__annotations__ sklearn.conftest.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*]
environ
os.environF
os._Environ[builtins.str]
builtins.str"builtins.str"os._Environ*
npnumpy *@
threadpool_limits"sklearn.conftest.threadpool_limits
Any*`
PYTEST_MIN_VERSION,sklearn._min_dependencies.PYTEST_MIN_VERSION
builtins.str"builtins.str**
random_seedsklearn.tests.random_seed *p
dataset_fetchers!sklearn.conftest.dataset_fetchers9
builtins.dict[Any,Any]
Any
Any"builtins.dict*U
_SKIP32_MARKsklearn.conftest._SKIP32_MARK&
builtins.ellipsis"builtins.ellipsis*i
fetch_20newsgroups_fxt'sklearn.conftest.fetch_20newsgroups_fxt&
builtins.ellipsis"builtins.ellipsis*
!fetch_20newsgroups_vectorized_fxt2sklearn.conftest.fetch_20newsgroups_vectorized_fxt&
builtins.ellipsis"builtins.ellipsis*u
fetch_california_housing_fxt-sklearn.conftest.fetch_california_housing_fxt&
builtins.ellipsis"builtins.ellipsis*_
fetch_covtype_fxt"sklearn.conftest.fetch_covtype_fxt&
builtins.ellipsis"builtins.ellipsis*a
fetch_kddcup99_fxt#sklearn.conftest.fetch_kddcup99_fxt&
builtins.ellipsis"builtins.ellipsis*m
fetch_olivetti_faces_fxt)sklearn.conftest.fetch_olivetti_faces_fxt&
builtins.ellipsis"builtins.ellipsis*Y
fetch_rcv1_fxtsklearn.conftest.fetch_rcv1_fxt&
builtins.ellipsis"builtins.ellipsis