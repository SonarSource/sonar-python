
torch.nn.modulesá
	Threshold%torch.nn.modules.activation.Threshold"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.activation.Threshold.__init__"
None*X
selfN
%torch.nn.modules.activation.Threshold"%torch.nn.modules.activation.Threshold*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.activation.Threshold.forward"
Any*X
selfN
%torch.nn.modules.activation.Threshold"%torch.nn.modules.activation.Threshold*
args
Any*
kwargs
Any¹
ReLU torch.nn.modules.activation.ReLU"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.activation.ReLU.__init__"
None*N
selfD
 torch.nn.modules.activation.ReLU" torch.nn.modules.activation.ReLU*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.activation.ReLU.forward"
Any*N
selfD
 torch.nn.modules.activation.ReLU" torch.nn.modules.activation.ReLU*
args
Any*
kwargs
AnyÁ
RReLU!torch.nn.modules.activation.RReLU"torch.nn.modules.module.Module*º
__init__*torch.nn.modules.activation.RReLU.__init__"
None*P
selfF
!torch.nn.modules.activation.RReLU"!torch.nn.modules.activation.RReLU*
args
Any*
kwargs
Any*·
forward)torch.nn.modules.activation.RReLU.forward"
Any*P
selfF
!torch.nn.modules.activation.RReLU"!torch.nn.modules.activation.RReLU*
args
Any*
kwargs
AnyÙ
Hardtanh$torch.nn.modules.activation.Hardtanh"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.activation.Hardtanh.__init__"
None*V
selfL
$torch.nn.modules.activation.Hardtanh"$torch.nn.modules.activation.Hardtanh*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.activation.Hardtanh.forward"
Any*V
selfL
$torch.nn.modules.activation.Hardtanh"$torch.nn.modules.activation.Hardtanh*
args
Any*
kwargs
AnyÁ
ReLU6!torch.nn.modules.activation.ReLU6"torch.nn.modules.module.Module*º
__init__*torch.nn.modules.activation.ReLU6.__init__"
None*P
selfF
!torch.nn.modules.activation.ReLU6"!torch.nn.modules.activation.ReLU6*
args
Any*
kwargs
Any*·
forward)torch.nn.modules.activation.ReLU6.forward"
Any*P
selfF
!torch.nn.modules.activation.ReLU6"!torch.nn.modules.activation.ReLU6*
args
Any*
kwargs
AnyÑ
Sigmoid#torch.nn.modules.activation.Sigmoid"torch.nn.modules.module.Module*À
__init__,torch.nn.modules.activation.Sigmoid.__init__"
None*T
selfJ
#torch.nn.modules.activation.Sigmoid"#torch.nn.modules.activation.Sigmoid*
args
Any*
kwargs
Any*½
forward+torch.nn.modules.activation.Sigmoid.forward"
Any*T
selfJ
#torch.nn.modules.activation.Sigmoid"#torch.nn.modules.activation.Sigmoid*
args
Any*
kwargs
Anyñ
Hardsigmoid'torch.nn.modules.activation.Hardsigmoid"torch.nn.modules.module.Module*Ì
__init__0torch.nn.modules.activation.Hardsigmoid.__init__"
None*\
selfR
'torch.nn.modules.activation.Hardsigmoid"'torch.nn.modules.activation.Hardsigmoid*
args
Any*
kwargs
Any*É
forward/torch.nn.modules.activation.Hardsigmoid.forward"
Any*\
selfR
'torch.nn.modules.activation.Hardsigmoid"'torch.nn.modules.activation.Hardsigmoid*
args
Any*
kwargs
Any¹
Tanh torch.nn.modules.activation.Tanh"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.activation.Tanh.__init__"
None*N
selfD
 torch.nn.modules.activation.Tanh" torch.nn.modules.activation.Tanh*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.activation.Tanh.forward"
Any*N
selfD
 torch.nn.modules.activation.Tanh" torch.nn.modules.activation.Tanh*
args
Any*
kwargs
Any¹
SiLU torch.nn.modules.activation.SiLU"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.activation.SiLU.__init__"
None*N
selfD
 torch.nn.modules.activation.SiLU" torch.nn.modules.activation.SiLU*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.activation.SiLU.forward"
Any*N
selfD
 torch.nn.modules.activation.SiLU" torch.nn.modules.activation.SiLU*
args
Any*
kwargs
Any¹
Mish torch.nn.modules.activation.Mish"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.activation.Mish.__init__"
None*N
selfD
 torch.nn.modules.activation.Mish" torch.nn.modules.activation.Mish*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.activation.Mish.forward"
Any*N
selfD
 torch.nn.modules.activation.Mish" torch.nn.modules.activation.Mish*
args
Any*
kwargs
Anyá
	Hardswish%torch.nn.modules.activation.Hardswish"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.activation.Hardswish.__init__"
None*X
selfN
%torch.nn.modules.activation.Hardswish"%torch.nn.modules.activation.Hardswish*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.activation.Hardswish.forward"
Any*X
selfN
%torch.nn.modules.activation.Hardswish"%torch.nn.modules.activation.Hardswish*
args
Any*
kwargs
Any±
ELUtorch.nn.modules.activation.ELU"torch.nn.modules.module.Module*´
__init__(torch.nn.modules.activation.ELU.__init__"
None*L
selfB
torch.nn.modules.activation.ELU"torch.nn.modules.activation.ELU*
args
Any*
kwargs
Any*±
forward'torch.nn.modules.activation.ELU.forward"
Any*L
selfB
torch.nn.modules.activation.ELU"torch.nn.modules.activation.ELU*
args
Any*
kwargs
Any¹
CELU torch.nn.modules.activation.CELU"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.activation.CELU.__init__"
None*N
selfD
 torch.nn.modules.activation.CELU" torch.nn.modules.activation.CELU*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.activation.CELU.forward"
Any*N
selfD
 torch.nn.modules.activation.CELU" torch.nn.modules.activation.CELU*
args
Any*
kwargs
Any¹
SELU torch.nn.modules.activation.SELU"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.activation.SELU.__init__"
None*N
selfD
 torch.nn.modules.activation.SELU" torch.nn.modules.activation.SELU*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.activation.SELU.forward"
Any*N
selfD
 torch.nn.modules.activation.SELU" torch.nn.modules.activation.SELU*
args
Any*
kwargs
Any±
GLUtorch.nn.modules.activation.GLU"torch.nn.modules.module.Module*´
__init__(torch.nn.modules.activation.GLU.__init__"
None*L
selfB
torch.nn.modules.activation.GLU"torch.nn.modules.activation.GLU*
args
Any*
kwargs
Any*±
forward'torch.nn.modules.activation.GLU.forward"
Any*L
selfB
torch.nn.modules.activation.GLU"torch.nn.modules.activation.GLU*
args
Any*
kwargs
Any¹
GELU torch.nn.modules.activation.GELU"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.activation.GELU.__init__"
None*N
selfD
 torch.nn.modules.activation.GELU" torch.nn.modules.activation.GELU*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.activation.GELU.forward"
Any*N
selfD
 torch.nn.modules.activation.GELU" torch.nn.modules.activation.GELU*
args
Any*
kwargs
Anyé

Hardshrink&torch.nn.modules.activation.Hardshrink"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.activation.Hardshrink.__init__"
None*Z
selfP
&torch.nn.modules.activation.Hardshrink"&torch.nn.modules.activation.Hardshrink*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.activation.Hardshrink.forward"
Any*Z
selfP
&torch.nn.modules.activation.Hardshrink"&torch.nn.modules.activation.Hardshrink*
args
Any*
kwargs
Anyá
	LeakyReLU%torch.nn.modules.activation.LeakyReLU"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.activation.LeakyReLU.__init__"
None*X
selfN
%torch.nn.modules.activation.LeakyReLU"%torch.nn.modules.activation.LeakyReLU*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.activation.LeakyReLU.forward"
Any*X
selfN
%torch.nn.modules.activation.LeakyReLU"%torch.nn.modules.activation.LeakyReLU*
args
Any*
kwargs
Anyé

LogSigmoid&torch.nn.modules.activation.LogSigmoid"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.activation.LogSigmoid.__init__"
None*Z
selfP
&torch.nn.modules.activation.LogSigmoid"&torch.nn.modules.activation.LogSigmoid*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.activation.LogSigmoid.forward"
Any*Z
selfP
&torch.nn.modules.activation.LogSigmoid"&torch.nn.modules.activation.LogSigmoid*
args
Any*
kwargs
AnyÙ
Softplus$torch.nn.modules.activation.Softplus"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.activation.Softplus.__init__"
None*V
selfL
$torch.nn.modules.activation.Softplus"$torch.nn.modules.activation.Softplus*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.activation.Softplus.forward"
Any*V
selfL
$torch.nn.modules.activation.Softplus"$torch.nn.modules.activation.Softplus*
args
Any*
kwargs
Anyé

Softshrink&torch.nn.modules.activation.Softshrink"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.activation.Softshrink.__init__"
None*Z
selfP
&torch.nn.modules.activation.Softshrink"&torch.nn.modules.activation.Softshrink*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.activation.Softshrink.forward"
Any*Z
selfP
&torch.nn.modules.activation.Softshrink"&torch.nn.modules.activation.Softshrink*
args
Any*
kwargs
Any©
MultiheadAttention.torch.nn.modules.activation.MultiheadAttention"torch.nn.modules.module.Module*á
__init__7torch.nn.modules.activation.MultiheadAttention.__init__"
None*j
self`
.torch.nn.modules.activation.MultiheadAttention".torch.nn.modules.activation.MultiheadAttention*
args
Any*
kwargs
Any*Þ
forward6torch.nn.modules.activation.MultiheadAttention.forward"
Any*j
self`
.torch.nn.modules.activation.MultiheadAttention".torch.nn.modules.activation.MultiheadAttention*
args
Any*
kwargs
AnyÁ
PReLU!torch.nn.modules.activation.PReLU"torch.nn.modules.module.Module*º
__init__*torch.nn.modules.activation.PReLU.__init__"
None*P
selfF
!torch.nn.modules.activation.PReLU"!torch.nn.modules.activation.PReLU*
args
Any*
kwargs
Any*·
forward)torch.nn.modules.activation.PReLU.forward"
Any*P
selfF
!torch.nn.modules.activation.PReLU"!torch.nn.modules.activation.PReLU*
args
Any*
kwargs
AnyÙ
Softsign$torch.nn.modules.activation.Softsign"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.activation.Softsign.__init__"
None*V
selfL
$torch.nn.modules.activation.Softsign"$torch.nn.modules.activation.Softsign*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.activation.Softsign.forward"
Any*V
selfL
$torch.nn.modules.activation.Softsign"$torch.nn.modules.activation.Softsign*
args
Any*
kwargs
Anyé

Tanhshrink&torch.nn.modules.activation.Tanhshrink"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.activation.Tanhshrink.__init__"
None*Z
selfP
&torch.nn.modules.activation.Tanhshrink"&torch.nn.modules.activation.Tanhshrink*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.activation.Tanhshrink.forward"
Any*Z
selfP
&torch.nn.modules.activation.Tanhshrink"&torch.nn.modules.activation.Tanhshrink*
args
Any*
kwargs
AnyÑ
Softmin#torch.nn.modules.activation.Softmin"torch.nn.modules.module.Module*À
__init__,torch.nn.modules.activation.Softmin.__init__"
None*T
selfJ
#torch.nn.modules.activation.Softmin"#torch.nn.modules.activation.Softmin*
args
Any*
kwargs
Any*½
forward+torch.nn.modules.activation.Softmin.forward"
Any*T
selfJ
#torch.nn.modules.activation.Softmin"#torch.nn.modules.activation.Softmin*
args
Any*
kwargs
AnyÑ
Softmax#torch.nn.modules.activation.Softmax"torch.nn.modules.module.Module*À
__init__,torch.nn.modules.activation.Softmax.__init__"
None*T
selfJ
#torch.nn.modules.activation.Softmax"#torch.nn.modules.activation.Softmax*
args
Any*
kwargs
Any*½
forward+torch.nn.modules.activation.Softmax.forward"
Any*T
selfJ
#torch.nn.modules.activation.Softmax"#torch.nn.modules.activation.Softmax*
args
Any*
kwargs
Anyá
	Softmax2d%torch.nn.modules.activation.Softmax2d"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.activation.Softmax2d.__init__"
None*X
selfN
%torch.nn.modules.activation.Softmax2d"%torch.nn.modules.activation.Softmax2d*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.activation.Softmax2d.forward"
Any*X
selfN
%torch.nn.modules.activation.Softmax2d"%torch.nn.modules.activation.Softmax2d*
args
Any*
kwargs
Anyé

LogSoftmax&torch.nn.modules.activation.LogSoftmax"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.activation.LogSoftmax.__init__"
None*Z
selfP
&torch.nn.modules.activation.LogSoftmax"&torch.nn.modules.activation.LogSoftmax*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.activation.LogSoftmax.forward"
Any*Z
selfP
&torch.nn.modules.activation.LogSoftmax"&torch.nn.modules.activation.LogSoftmax*
args
Any*
kwargs
AnyÛ
AdaptiveLogSoftmaxWithLoss4torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss"torch.nn.modules.module.Module*ó
__init__=torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.__init__"
None*v
selfl
4torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss"4torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss*
args
Any*
kwargs
Any*ð
forward<torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.forward"
Any*v
selfl
4torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss"4torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss*
args
Any*
kwargs
Anyê
BatchNorm1d&torch.nn.modules.batchnorm.BatchNorm1d"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.batchnorm.BatchNorm1d.__init__"
None*Z
selfP
&torch.nn.modules.batchnorm.BatchNorm1d"&torch.nn.modules.batchnorm.BatchNorm1d*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.batchnorm.BatchNorm1d.forward"
Any*Z
selfP
&torch.nn.modules.batchnorm.BatchNorm1d"&torch.nn.modules.batchnorm.BatchNorm1d*
args
Any*
kwargs
Any
LazyBatchNorm1d*torch.nn.modules.batchnorm.LazyBatchNorm1d"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.batchnorm.LazyBatchNorm1d.__init__"
None*b
selfX
*torch.nn.modules.batchnorm.LazyBatchNorm1d"*torch.nn.modules.batchnorm.LazyBatchNorm1d*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.batchnorm.LazyBatchNorm1d.forward"
Any*b
selfX
*torch.nn.modules.batchnorm.LazyBatchNorm1d"*torch.nn.modules.batchnorm.LazyBatchNorm1d*
args
Any*
kwargs
Anyê
BatchNorm2d&torch.nn.modules.batchnorm.BatchNorm2d"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.batchnorm.BatchNorm2d.__init__"
None*Z
selfP
&torch.nn.modules.batchnorm.BatchNorm2d"&torch.nn.modules.batchnorm.BatchNorm2d*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.batchnorm.BatchNorm2d.forward"
Any*Z
selfP
&torch.nn.modules.batchnorm.BatchNorm2d"&torch.nn.modules.batchnorm.BatchNorm2d*
args
Any*
kwargs
Any
LazyBatchNorm2d*torch.nn.modules.batchnorm.LazyBatchNorm2d"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.batchnorm.LazyBatchNorm2d.__init__"
None*b
selfX
*torch.nn.modules.batchnorm.LazyBatchNorm2d"*torch.nn.modules.batchnorm.LazyBatchNorm2d*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.batchnorm.LazyBatchNorm2d.forward"
Any*b
selfX
*torch.nn.modules.batchnorm.LazyBatchNorm2d"*torch.nn.modules.batchnorm.LazyBatchNorm2d*
args
Any*
kwargs
Anyê
BatchNorm3d&torch.nn.modules.batchnorm.BatchNorm3d"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.batchnorm.BatchNorm3d.__init__"
None*Z
selfP
&torch.nn.modules.batchnorm.BatchNorm3d"&torch.nn.modules.batchnorm.BatchNorm3d*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.batchnorm.BatchNorm3d.forward"
Any*Z
selfP
&torch.nn.modules.batchnorm.BatchNorm3d"&torch.nn.modules.batchnorm.BatchNorm3d*
args
Any*
kwargs
Any
LazyBatchNorm3d*torch.nn.modules.batchnorm.LazyBatchNorm3d"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.batchnorm.LazyBatchNorm3d.__init__"
None*b
selfX
*torch.nn.modules.batchnorm.LazyBatchNorm3d"*torch.nn.modules.batchnorm.LazyBatchNorm3d*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.batchnorm.LazyBatchNorm3d.forward"
Any*b
selfX
*torch.nn.modules.batchnorm.LazyBatchNorm3d"*torch.nn.modules.batchnorm.LazyBatchNorm3d*
args
Any*
kwargs
Anyú
SyncBatchNorm(torch.nn.modules.batchnorm.SyncBatchNorm"torch.nn.modules.module.Module*Ï
__init__1torch.nn.modules.batchnorm.SyncBatchNorm.__init__"
None*^
selfT
(torch.nn.modules.batchnorm.SyncBatchNorm"(torch.nn.modules.batchnorm.SyncBatchNorm*
args
Any*
kwargs
Any*Ì
forward0torch.nn.modules.batchnorm.SyncBatchNorm.forward"
Any*^
selfT
(torch.nn.modules.batchnorm.SyncBatchNorm"(torch.nn.modules.batchnorm.SyncBatchNorm*
args
Any*
kwargs
Any¥
ChannelShuffle.torch.nn.modules.channelshuffle.ChannelShuffle"torch.nn.modules.module.Module*á
__init__7torch.nn.modules.channelshuffle.ChannelShuffle.__init__"
None*j
self`
.torch.nn.modules.channelshuffle.ChannelShuffle".torch.nn.modules.channelshuffle.ChannelShuffle*
args
Any*
kwargs
Any*Þ
forward6torch.nn.modules.channelshuffle.ChannelShuffle.forward"
Any*j
self`
.torch.nn.modules.channelshuffle.ChannelShuffle".torch.nn.modules.channelshuffle.ChannelShuffle*
args
Any*
kwargs
AnyÚ
	Container$torch.nn.modules.container.Container"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.container.Container.__init__"
None*V
selfL
$torch.nn.modules.container.Container"$torch.nn.modules.container.Container*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.container.Container.forward"
Any*V
selfL
$torch.nn.modules.container.Container"$torch.nn.modules.container.Container*
args
Any*
kwargs
Anyâ

Sequential%torch.nn.modules.container.Sequential"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.container.Sequential.__init__"
None*X
selfN
%torch.nn.modules.container.Sequential"%torch.nn.modules.container.Sequential*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.container.Sequential.forward"
Any*X
selfN
%torch.nn.modules.container.Sequential"%torch.nn.modules.container.Sequential*
args
Any*
kwargs
Anyâ

ModuleList%torch.nn.modules.container.ModuleList"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.container.ModuleList.__init__"
None*X
selfN
%torch.nn.modules.container.ModuleList"%torch.nn.modules.container.ModuleList*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.container.ModuleList.forward"
Any*X
selfN
%torch.nn.modules.container.ModuleList"%torch.nn.modules.container.ModuleList*
args
Any*
kwargs
Anyâ

ModuleDict%torch.nn.modules.container.ModuleDict"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.container.ModuleDict.__init__"
None*X
selfN
%torch.nn.modules.container.ModuleDict"%torch.nn.modules.container.ModuleDict*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.container.ModuleDict.forward"
Any*X
selfN
%torch.nn.modules.container.ModuleDict"%torch.nn.modules.container.ModuleDict*
args
Any*
kwargs
Anyú
ParameterList(torch.nn.modules.container.ParameterList"torch.nn.modules.module.Module*Ï
__init__1torch.nn.modules.container.ParameterList.__init__"
None*^
selfT
(torch.nn.modules.container.ParameterList"(torch.nn.modules.container.ParameterList*
args
Any*
kwargs
Any*Ì
forward0torch.nn.modules.container.ParameterList.forward"
Any*^
selfT
(torch.nn.modules.container.ParameterList"(torch.nn.modules.container.ParameterList*
args
Any*
kwargs
Anyú
ParameterDict(torch.nn.modules.container.ParameterDict"torch.nn.modules.module.Module*Ï
__init__1torch.nn.modules.container.ParameterDict.__init__"
None*^
selfT
(torch.nn.modules.container.ParameterDict"(torch.nn.modules.container.ParameterDict*
args
Any*
kwargs
Any*Ì
forward0torch.nn.modules.container.ParameterDict.forward"
Any*^
selfT
(torch.nn.modules.container.ParameterDict"(torch.nn.modules.container.ParameterDict*
args
Any*
kwargs
Any
Conv1dtorch.nn.modules.conv.Conv1d"torch.nn.modules.module.Module*«
__init__%torch.nn.modules.conv.Conv1d.__init__"
None*F
self<
torch.nn.modules.conv.Conv1d"torch.nn.modules.conv.Conv1d*
args
Any*
kwargs
Any*¨
forward$torch.nn.modules.conv.Conv1d.forward"
Any*F
self<
torch.nn.modules.conv.Conv1d"torch.nn.modules.conv.Conv1d*
args
Any*
kwargs
Any
Conv2dtorch.nn.modules.conv.Conv2d"torch.nn.modules.module.Module*«
__init__%torch.nn.modules.conv.Conv2d.__init__"
None*F
self<
torch.nn.modules.conv.Conv2d"torch.nn.modules.conv.Conv2d*
args
Any*
kwargs
Any*¨
forward$torch.nn.modules.conv.Conv2d.forward"
Any*F
self<
torch.nn.modules.conv.Conv2d"torch.nn.modules.conv.Conv2d*
args
Any*
kwargs
Any
Conv3dtorch.nn.modules.conv.Conv3d"torch.nn.modules.module.Module*«
__init__%torch.nn.modules.conv.Conv3d.__init__"
None*F
self<
torch.nn.modules.conv.Conv3d"torch.nn.modules.conv.Conv3d*
args
Any*
kwargs
Any*¨
forward$torch.nn.modules.conv.Conv3d.forward"
Any*F
self<
torch.nn.modules.conv.Conv3d"torch.nn.modules.conv.Conv3d*
args
Any*
kwargs
Anyç
ConvTranspose1d%torch.nn.modules.conv.ConvTranspose1d"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.conv.ConvTranspose1d.__init__"
None*X
selfN
%torch.nn.modules.conv.ConvTranspose1d"%torch.nn.modules.conv.ConvTranspose1d*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.conv.ConvTranspose1d.forward"
Any*X
selfN
%torch.nn.modules.conv.ConvTranspose1d"%torch.nn.modules.conv.ConvTranspose1d*
args
Any*
kwargs
Anyç
ConvTranspose2d%torch.nn.modules.conv.ConvTranspose2d"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.conv.ConvTranspose2d.__init__"
None*X
selfN
%torch.nn.modules.conv.ConvTranspose2d"%torch.nn.modules.conv.ConvTranspose2d*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.conv.ConvTranspose2d.forward"
Any*X
selfN
%torch.nn.modules.conv.ConvTranspose2d"%torch.nn.modules.conv.ConvTranspose2d*
args
Any*
kwargs
Anyç
ConvTranspose3d%torch.nn.modules.conv.ConvTranspose3d"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.conv.ConvTranspose3d.__init__"
None*X
selfN
%torch.nn.modules.conv.ConvTranspose3d"%torch.nn.modules.conv.ConvTranspose3d*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.conv.ConvTranspose3d.forward"
Any*X
selfN
%torch.nn.modules.conv.ConvTranspose3d"%torch.nn.modules.conv.ConvTranspose3d*
args
Any*
kwargs
Any¿

LazyConv1d torch.nn.modules.conv.LazyConv1d"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.conv.LazyConv1d.__init__"
None*N
selfD
 torch.nn.modules.conv.LazyConv1d" torch.nn.modules.conv.LazyConv1d*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.conv.LazyConv1d.forward"
Any*N
selfD
 torch.nn.modules.conv.LazyConv1d" torch.nn.modules.conv.LazyConv1d*
args
Any*
kwargs
Any¿

LazyConv2d torch.nn.modules.conv.LazyConv2d"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.conv.LazyConv2d.__init__"
None*N
selfD
 torch.nn.modules.conv.LazyConv2d" torch.nn.modules.conv.LazyConv2d*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.conv.LazyConv2d.forward"
Any*N
selfD
 torch.nn.modules.conv.LazyConv2d" torch.nn.modules.conv.LazyConv2d*
args
Any*
kwargs
Any¿

LazyConv3d torch.nn.modules.conv.LazyConv3d"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.conv.LazyConv3d.__init__"
None*N
selfD
 torch.nn.modules.conv.LazyConv3d" torch.nn.modules.conv.LazyConv3d*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.conv.LazyConv3d.forward"
Any*N
selfD
 torch.nn.modules.conv.LazyConv3d" torch.nn.modules.conv.LazyConv3d*
args
Any*
kwargs
Any
LazyConvTranspose1d)torch.nn.modules.conv.LazyConvTranspose1d"torch.nn.modules.module.Module*Ò
__init__2torch.nn.modules.conv.LazyConvTranspose1d.__init__"
None*`
selfV
)torch.nn.modules.conv.LazyConvTranspose1d")torch.nn.modules.conv.LazyConvTranspose1d*
args
Any*
kwargs
Any*Ï
forward1torch.nn.modules.conv.LazyConvTranspose1d.forward"
Any*`
selfV
)torch.nn.modules.conv.LazyConvTranspose1d")torch.nn.modules.conv.LazyConvTranspose1d*
args
Any*
kwargs
Any
LazyConvTranspose2d)torch.nn.modules.conv.LazyConvTranspose2d"torch.nn.modules.module.Module*Ò
__init__2torch.nn.modules.conv.LazyConvTranspose2d.__init__"
None*`
selfV
)torch.nn.modules.conv.LazyConvTranspose2d")torch.nn.modules.conv.LazyConvTranspose2d*
args
Any*
kwargs
Any*Ï
forward1torch.nn.modules.conv.LazyConvTranspose2d.forward"
Any*`
selfV
)torch.nn.modules.conv.LazyConvTranspose2d")torch.nn.modules.conv.LazyConvTranspose2d*
args
Any*
kwargs
Any
LazyConvTranspose3d)torch.nn.modules.conv.LazyConvTranspose3d"torch.nn.modules.module.Module*Ò
__init__2torch.nn.modules.conv.LazyConvTranspose3d.__init__"
None*`
selfV
)torch.nn.modules.conv.LazyConvTranspose3d")torch.nn.modules.conv.LazyConvTranspose3d*
args
Any*
kwargs
Any*Ï
forward1torch.nn.modules.conv.LazyConvTranspose3d.forward"
Any*`
selfV
)torch.nn.modules.conv.LazyConvTranspose3d")torch.nn.modules.conv.LazyConvTranspose3d*
args
Any*
kwargs
Any
PairwiseDistance*torch.nn.modules.distance.PairwiseDistance"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.distance.PairwiseDistance.__init__"
None*b
selfX
*torch.nn.modules.distance.PairwiseDistance"*torch.nn.modules.distance.PairwiseDistance*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.distance.PairwiseDistance.forward"
Any*b
selfX
*torch.nn.modules.distance.PairwiseDistance"*torch.nn.modules.distance.PairwiseDistance*
args
Any*
kwargs
Any
CosineSimilarity*torch.nn.modules.distance.CosineSimilarity"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.distance.CosineSimilarity.__init__"
None*b
selfX
*torch.nn.modules.distance.CosineSimilarity"*torch.nn.modules.distance.CosineSimilarity*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.distance.CosineSimilarity.forward"
Any*b
selfX
*torch.nn.modules.distance.CosineSimilarity"*torch.nn.modules.distance.CosineSimilarity*
args
Any*
kwargs
Any¼
Dropout torch.nn.modules.dropout.Dropout"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.dropout.Dropout.__init__"
None*N
selfD
 torch.nn.modules.dropout.Dropout" torch.nn.modules.dropout.Dropout*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.dropout.Dropout.forward"
Any*N
selfD
 torch.nn.modules.dropout.Dropout" torch.nn.modules.dropout.Dropout*
args
Any*
kwargs
AnyÌ
	Dropout1d"torch.nn.modules.dropout.Dropout1d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.dropout.Dropout1d.__init__"
None*R
selfH
"torch.nn.modules.dropout.Dropout1d""torch.nn.modules.dropout.Dropout1d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.dropout.Dropout1d.forward"
Any*R
selfH
"torch.nn.modules.dropout.Dropout1d""torch.nn.modules.dropout.Dropout1d*
args
Any*
kwargs
AnyÌ
	Dropout2d"torch.nn.modules.dropout.Dropout2d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.dropout.Dropout2d.__init__"
None*R
selfH
"torch.nn.modules.dropout.Dropout2d""torch.nn.modules.dropout.Dropout2d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.dropout.Dropout2d.forward"
Any*R
selfH
"torch.nn.modules.dropout.Dropout2d""torch.nn.modules.dropout.Dropout2d*
args
Any*
kwargs
AnyÌ
	Dropout3d"torch.nn.modules.dropout.Dropout3d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.dropout.Dropout3d.__init__"
None*R
selfH
"torch.nn.modules.dropout.Dropout3d""torch.nn.modules.dropout.Dropout3d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.dropout.Dropout3d.forward"
Any*R
selfH
"torch.nn.modules.dropout.Dropout3d""torch.nn.modules.dropout.Dropout3d*
args
Any*
kwargs
Anyä
AlphaDropout%torch.nn.modules.dropout.AlphaDropout"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.dropout.AlphaDropout.__init__"
None*X
selfN
%torch.nn.modules.dropout.AlphaDropout"%torch.nn.modules.dropout.AlphaDropout*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.dropout.AlphaDropout.forward"
Any*X
selfN
%torch.nn.modules.dropout.AlphaDropout"%torch.nn.modules.dropout.AlphaDropout*
args
Any*
kwargs
Any
FeatureAlphaDropout,torch.nn.modules.dropout.FeatureAlphaDropout"torch.nn.modules.module.Module*Û
__init__5torch.nn.modules.dropout.FeatureAlphaDropout.__init__"
None*f
self\
,torch.nn.modules.dropout.FeatureAlphaDropout",torch.nn.modules.dropout.FeatureAlphaDropout*
args
Any*
kwargs
Any*Ø
forward4torch.nn.modules.dropout.FeatureAlphaDropout.forward"
Any*f
self\
,torch.nn.modules.dropout.FeatureAlphaDropout",torch.nn.modules.dropout.FeatureAlphaDropout*
args
Any*
kwargs
Any¼
Flatten torch.nn.modules.flatten.Flatten"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.flatten.Flatten.__init__"
None*N
selfD
 torch.nn.modules.flatten.Flatten" torch.nn.modules.flatten.Flatten*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.flatten.Flatten.forward"
Any*N
selfD
 torch.nn.modules.flatten.Flatten" torch.nn.modules.flatten.Flatten*
args
Any*
kwargs
AnyÌ
	Unflatten"torch.nn.modules.flatten.Unflatten"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.flatten.Unflatten.__init__"
None*R
selfH
"torch.nn.modules.flatten.Unflatten""torch.nn.modules.flatten.Unflatten*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.flatten.Unflatten.forward"
Any*R
selfH
"torch.nn.modules.flatten.Unflatten""torch.nn.modules.flatten.Unflatten*
args
Any*
kwargs
Any
Foldtorch.nn.modules.fold.Fold"torch.nn.modules.module.Module*¥
__init__#torch.nn.modules.fold.Fold.__init__"
None*B
self8
torch.nn.modules.fold.Fold"torch.nn.modules.fold.Fold*
args
Any*
kwargs
Any*¢
forward"torch.nn.modules.fold.Fold.forward"
Any*B
self8
torch.nn.modules.fold.Fold"torch.nn.modules.fold.Fold*
args
Any*
kwargs
Any
Unfoldtorch.nn.modules.fold.Unfold"torch.nn.modules.module.Module*«
__init__%torch.nn.modules.fold.Unfold.__init__"
None*F
self<
torch.nn.modules.fold.Unfold"torch.nn.modules.fold.Unfold*
args
Any*
kwargs
Any*¨
forward$torch.nn.modules.fold.Unfold.forward"
Any*F
self<
torch.nn.modules.fold.Unfold"torch.nn.modules.fold.Unfold*
args
Any*
kwargs
Any
InstanceNorm1d,torch.nn.modules.instancenorm.InstanceNorm1d"torch.nn.modules.module.Module*Û
__init__5torch.nn.modules.instancenorm.InstanceNorm1d.__init__"
None*f
self\
,torch.nn.modules.instancenorm.InstanceNorm1d",torch.nn.modules.instancenorm.InstanceNorm1d*
args
Any*
kwargs
Any*Ø
forward4torch.nn.modules.instancenorm.InstanceNorm1d.forward"
Any*f
self\
,torch.nn.modules.instancenorm.InstanceNorm1d",torch.nn.modules.instancenorm.InstanceNorm1d*
args
Any*
kwargs
Any·
LazyInstanceNorm1d0torch.nn.modules.instancenorm.LazyInstanceNorm1d"torch.nn.modules.module.Module*ç
__init__9torch.nn.modules.instancenorm.LazyInstanceNorm1d.__init__"
None*n
selfd
0torch.nn.modules.instancenorm.LazyInstanceNorm1d"0torch.nn.modules.instancenorm.LazyInstanceNorm1d*
args
Any*
kwargs
Any*ä
forward8torch.nn.modules.instancenorm.LazyInstanceNorm1d.forward"
Any*n
selfd
0torch.nn.modules.instancenorm.LazyInstanceNorm1d"0torch.nn.modules.instancenorm.LazyInstanceNorm1d*
args
Any*
kwargs
Any
InstanceNorm2d,torch.nn.modules.instancenorm.InstanceNorm2d"torch.nn.modules.module.Module*Û
__init__5torch.nn.modules.instancenorm.InstanceNorm2d.__init__"
None*f
self\
,torch.nn.modules.instancenorm.InstanceNorm2d",torch.nn.modules.instancenorm.InstanceNorm2d*
args
Any*
kwargs
Any*Ø
forward4torch.nn.modules.instancenorm.InstanceNorm2d.forward"
Any*f
self\
,torch.nn.modules.instancenorm.InstanceNorm2d",torch.nn.modules.instancenorm.InstanceNorm2d*
args
Any*
kwargs
Any·
LazyInstanceNorm2d0torch.nn.modules.instancenorm.LazyInstanceNorm2d"torch.nn.modules.module.Module*ç
__init__9torch.nn.modules.instancenorm.LazyInstanceNorm2d.__init__"
None*n
selfd
0torch.nn.modules.instancenorm.LazyInstanceNorm2d"0torch.nn.modules.instancenorm.LazyInstanceNorm2d*
args
Any*
kwargs
Any*ä
forward8torch.nn.modules.instancenorm.LazyInstanceNorm2d.forward"
Any*n
selfd
0torch.nn.modules.instancenorm.LazyInstanceNorm2d"0torch.nn.modules.instancenorm.LazyInstanceNorm2d*
args
Any*
kwargs
Any
InstanceNorm3d,torch.nn.modules.instancenorm.InstanceNorm3d"torch.nn.modules.module.Module*Û
__init__5torch.nn.modules.instancenorm.InstanceNorm3d.__init__"
None*f
self\
,torch.nn.modules.instancenorm.InstanceNorm3d",torch.nn.modules.instancenorm.InstanceNorm3d*
args
Any*
kwargs
Any*Ø
forward4torch.nn.modules.instancenorm.InstanceNorm3d.forward"
Any*f
self\
,torch.nn.modules.instancenorm.InstanceNorm3d",torch.nn.modules.instancenorm.InstanceNorm3d*
args
Any*
kwargs
Any·
LazyInstanceNorm3d0torch.nn.modules.instancenorm.LazyInstanceNorm3d"torch.nn.modules.module.Module*ç
__init__9torch.nn.modules.instancenorm.LazyInstanceNorm3d.__init__"
None*n
selfd
0torch.nn.modules.instancenorm.LazyInstanceNorm3d"0torch.nn.modules.instancenorm.LazyInstanceNorm3d*
args
Any*
kwargs
Any*ä
forward8torch.nn.modules.instancenorm.LazyInstanceNorm3d.forward"
Any*n
selfd
0torch.nn.modules.instancenorm.LazyInstanceNorm3d"0torch.nn.modules.instancenorm.LazyInstanceNorm3d*
args
Any*
kwargs
Anyç
LazyModuleMixin%torch.nn.modules.lazy.LazyModuleMixin"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.lazy.LazyModuleMixin.__init__"
None*X
selfN
%torch.nn.modules.lazy.LazyModuleMixin"%torch.nn.modules.lazy.LazyModuleMixin*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.lazy.LazyModuleMixin.forward"
Any*X
selfN
%torch.nn.modules.lazy.LazyModuleMixin"%torch.nn.modules.lazy.LazyModuleMixin*
args
Any*
kwargs
Any½
Identity torch.nn.modules.linear.Identity"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.linear.Identity.__init__"
None*N
selfD
 torch.nn.modules.linear.Identity" torch.nn.modules.linear.Identity*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.linear.Identity.forward"
Any*N
selfD
 torch.nn.modules.linear.Identity" torch.nn.modules.linear.Identity*
args
Any*
kwargs
Any­
Lineartorch.nn.modules.linear.Linear"torch.nn.modules.module.Module*±
__init__'torch.nn.modules.linear.Linear.__init__"
None*J
self@
torch.nn.modules.linear.Linear"torch.nn.modules.linear.Linear*
args
Any*
kwargs
Any*®
forward&torch.nn.modules.linear.Linear.forward"
Any*J
self@
torch.nn.modules.linear.Linear"torch.nn.modules.linear.Linear*
args
Any*
kwargs
Anyõ
NonDynamicallyQuantizableLinear7torch.nn.modules.linear.NonDynamicallyQuantizableLinear"torch.nn.modules.module.Module*ü
__init__@torch.nn.modules.linear.NonDynamicallyQuantizableLinear.__init__"
None*|
selfr
7torch.nn.modules.linear.NonDynamicallyQuantizableLinear"7torch.nn.modules.linear.NonDynamicallyQuantizableLinear*
args
Any*
kwargs
Any*ù
forward?torch.nn.modules.linear.NonDynamicallyQuantizableLinear.forward"
Any*|
selfr
7torch.nn.modules.linear.NonDynamicallyQuantizableLinear"7torch.nn.modules.linear.NonDynamicallyQuantizableLinear*
args
Any*
kwargs
Any½
Bilinear torch.nn.modules.linear.Bilinear"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.linear.Bilinear.__init__"
None*N
selfD
 torch.nn.modules.linear.Bilinear" torch.nn.modules.linear.Bilinear*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.linear.Bilinear.forward"
Any*N
selfD
 torch.nn.modules.linear.Bilinear" torch.nn.modules.linear.Bilinear*
args
Any*
kwargs
AnyÍ

LazyLinear"torch.nn.modules.linear.LazyLinear"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.linear.LazyLinear.__init__"
None*R
selfH
"torch.nn.modules.linear.LazyLinear""torch.nn.modules.linear.LazyLinear*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.linear.LazyLinear.forward"
Any*R
selfH
"torch.nn.modules.linear.LazyLinear""torch.nn.modules.linear.LazyLinear*
args
Any*
kwargs
Any
L1Losstorch.nn.modules.loss.L1Loss"torch.nn.modules.module.Module*«
__init__%torch.nn.modules.loss.L1Loss.__init__"
None*F
self<
torch.nn.modules.loss.L1Loss"torch.nn.modules.loss.L1Loss*
args
Any*
kwargs
Any*¨
forward$torch.nn.modules.loss.L1Loss.forward"
Any*F
self<
torch.nn.modules.loss.L1Loss"torch.nn.modules.loss.L1Loss*
args
Any*
kwargs
Any§
NLLLosstorch.nn.modules.loss.NLLLoss"torch.nn.modules.module.Module*®
__init__&torch.nn.modules.loss.NLLLoss.__init__"
None*H
self>
torch.nn.modules.loss.NLLLoss"torch.nn.modules.loss.NLLLoss*
args
Any*
kwargs
Any*«
forward%torch.nn.modules.loss.NLLLoss.forward"
Any*H
self>
torch.nn.modules.loss.NLLLoss"torch.nn.modules.loss.NLLLoss*
args
Any*
kwargs
Any·
	NLLLoss2dtorch.nn.modules.loss.NLLLoss2d"torch.nn.modules.module.Module*´
__init__(torch.nn.modules.loss.NLLLoss2d.__init__"
None*L
selfB
torch.nn.modules.loss.NLLLoss2d"torch.nn.modules.loss.NLLLoss2d*
args
Any*
kwargs
Any*±
forward'torch.nn.modules.loss.NLLLoss2d.forward"
Any*L
selfB
torch.nn.modules.loss.NLLLoss2d"torch.nn.modules.loss.NLLLoss2d*
args
Any*
kwargs
Anyß
PoissonNLLLoss$torch.nn.modules.loss.PoissonNLLLoss"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.loss.PoissonNLLLoss.__init__"
None*V
selfL
$torch.nn.modules.loss.PoissonNLLLoss"$torch.nn.modules.loss.PoissonNLLLoss*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.loss.PoissonNLLLoss.forward"
Any*V
selfL
$torch.nn.modules.loss.PoissonNLLLoss"$torch.nn.modules.loss.PoissonNLLLoss*
args
Any*
kwargs
Anyç
GaussianNLLLoss%torch.nn.modules.loss.GaussianNLLLoss"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.loss.GaussianNLLLoss.__init__"
None*X
selfN
%torch.nn.modules.loss.GaussianNLLLoss"%torch.nn.modules.loss.GaussianNLLLoss*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.loss.GaussianNLLLoss.forward"
Any*X
selfN
%torch.nn.modules.loss.GaussianNLLLoss"%torch.nn.modules.loss.GaussianNLLLoss*
args
Any*
kwargs
Any·
	KLDivLosstorch.nn.modules.loss.KLDivLoss"torch.nn.modules.module.Module*´
__init__(torch.nn.modules.loss.KLDivLoss.__init__"
None*L
selfB
torch.nn.modules.loss.KLDivLoss"torch.nn.modules.loss.KLDivLoss*
args
Any*
kwargs
Any*±
forward'torch.nn.modules.loss.KLDivLoss.forward"
Any*L
selfB
torch.nn.modules.loss.KLDivLoss"torch.nn.modules.loss.KLDivLoss*
args
Any*
kwargs
Any§
MSELosstorch.nn.modules.loss.MSELoss"torch.nn.modules.module.Module*®
__init__&torch.nn.modules.loss.MSELoss.__init__"
None*H
self>
torch.nn.modules.loss.MSELoss"torch.nn.modules.loss.MSELoss*
args
Any*
kwargs
Any*«
forward%torch.nn.modules.loss.MSELoss.forward"
Any*H
self>
torch.nn.modules.loss.MSELoss"torch.nn.modules.loss.MSELoss*
args
Any*
kwargs
Any§
BCELosstorch.nn.modules.loss.BCELoss"torch.nn.modules.module.Module*®
__init__&torch.nn.modules.loss.BCELoss.__init__"
None*H
self>
torch.nn.modules.loss.BCELoss"torch.nn.modules.loss.BCELoss*
args
Any*
kwargs
Any*«
forward%torch.nn.modules.loss.BCELoss.forward"
Any*H
self>
torch.nn.modules.loss.BCELoss"torch.nn.modules.loss.BCELoss*
args
Any*
kwargs
Any÷
BCEWithLogitsLoss'torch.nn.modules.loss.BCEWithLogitsLoss"torch.nn.modules.module.Module*Ì
__init__0torch.nn.modules.loss.BCEWithLogitsLoss.__init__"
None*\
selfR
'torch.nn.modules.loss.BCEWithLogitsLoss"'torch.nn.modules.loss.BCEWithLogitsLoss*
args
Any*
kwargs
Any*É
forward/torch.nn.modules.loss.BCEWithLogitsLoss.forward"
Any*\
selfR
'torch.nn.modules.loss.BCEWithLogitsLoss"'torch.nn.modules.loss.BCEWithLogitsLoss*
args
Any*
kwargs
Anyÿ
HingeEmbeddingLoss(torch.nn.modules.loss.HingeEmbeddingLoss"torch.nn.modules.module.Module*Ï
__init__1torch.nn.modules.loss.HingeEmbeddingLoss.__init__"
None*^
selfT
(torch.nn.modules.loss.HingeEmbeddingLoss"(torch.nn.modules.loss.HingeEmbeddingLoss*
args
Any*
kwargs
Any*Ì
forward0torch.nn.modules.loss.HingeEmbeddingLoss.forward"
Any*^
selfT
(torch.nn.modules.loss.HingeEmbeddingLoss"(torch.nn.modules.loss.HingeEmbeddingLoss*
args
Any*
kwargs
Any
MultiLabelMarginLoss*torch.nn.modules.loss.MultiLabelMarginLoss"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.loss.MultiLabelMarginLoss.__init__"
None*b
selfX
*torch.nn.modules.loss.MultiLabelMarginLoss"*torch.nn.modules.loss.MultiLabelMarginLoss*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.loss.MultiLabelMarginLoss.forward"
Any*b
selfX
*torch.nn.modules.loss.MultiLabelMarginLoss"*torch.nn.modules.loss.MultiLabelMarginLoss*
args
Any*
kwargs
AnyÏ
SmoothL1Loss"torch.nn.modules.loss.SmoothL1Loss"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.loss.SmoothL1Loss.__init__"
None*R
selfH
"torch.nn.modules.loss.SmoothL1Loss""torch.nn.modules.loss.SmoothL1Loss*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.loss.SmoothL1Loss.forward"
Any*R
selfH
"torch.nn.modules.loss.SmoothL1Loss""torch.nn.modules.loss.SmoothL1Loss*
args
Any*
kwargs
Any·
	HuberLosstorch.nn.modules.loss.HuberLoss"torch.nn.modules.module.Module*´
__init__(torch.nn.modules.loss.HuberLoss.__init__"
None*L
selfB
torch.nn.modules.loss.HuberLoss"torch.nn.modules.loss.HuberLoss*
args
Any*
kwargs
Any*±
forward'torch.nn.modules.loss.HuberLoss.forward"
Any*L
selfB
torch.nn.modules.loss.HuberLoss"torch.nn.modules.loss.HuberLoss*
args
Any*
kwargs
Anyß
SoftMarginLoss$torch.nn.modules.loss.SoftMarginLoss"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.loss.SoftMarginLoss.__init__"
None*V
selfL
$torch.nn.modules.loss.SoftMarginLoss"$torch.nn.modules.loss.SoftMarginLoss*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.loss.SoftMarginLoss.forward"
Any*V
selfL
$torch.nn.modules.loss.SoftMarginLoss"$torch.nn.modules.loss.SoftMarginLoss*
args
Any*
kwargs
Anyï
CrossEntropyLoss&torch.nn.modules.loss.CrossEntropyLoss"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.loss.CrossEntropyLoss.__init__"
None*Z
selfP
&torch.nn.modules.loss.CrossEntropyLoss"&torch.nn.modules.loss.CrossEntropyLoss*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.loss.CrossEntropyLoss.forward"
Any*Z
selfP
&torch.nn.modules.loss.CrossEntropyLoss"&torch.nn.modules.loss.CrossEntropyLoss*
args
Any*
kwargs
Any¯
MultiLabelSoftMarginLoss.torch.nn.modules.loss.MultiLabelSoftMarginLoss"torch.nn.modules.module.Module*á
__init__7torch.nn.modules.loss.MultiLabelSoftMarginLoss.__init__"
None*j
self`
.torch.nn.modules.loss.MultiLabelSoftMarginLoss".torch.nn.modules.loss.MultiLabelSoftMarginLoss*
args
Any*
kwargs
Any*Þ
forward6torch.nn.modules.loss.MultiLabelSoftMarginLoss.forward"
Any*j
self`
.torch.nn.modules.loss.MultiLabelSoftMarginLoss".torch.nn.modules.loss.MultiLabelSoftMarginLoss*
args
Any*
kwargs
Any
CosineEmbeddingLoss)torch.nn.modules.loss.CosineEmbeddingLoss"torch.nn.modules.module.Module*Ò
__init__2torch.nn.modules.loss.CosineEmbeddingLoss.__init__"
None*`
selfV
)torch.nn.modules.loss.CosineEmbeddingLoss")torch.nn.modules.loss.CosineEmbeddingLoss*
args
Any*
kwargs
Any*Ï
forward1torch.nn.modules.loss.CosineEmbeddingLoss.forward"
Any*`
selfV
)torch.nn.modules.loss.CosineEmbeddingLoss")torch.nn.modules.loss.CosineEmbeddingLoss*
args
Any*
kwargs
Any÷
MarginRankingLoss'torch.nn.modules.loss.MarginRankingLoss"torch.nn.modules.module.Module*Ì
__init__0torch.nn.modules.loss.MarginRankingLoss.__init__"
None*\
selfR
'torch.nn.modules.loss.MarginRankingLoss"'torch.nn.modules.loss.MarginRankingLoss*
args
Any*
kwargs
Any*É
forward/torch.nn.modules.loss.MarginRankingLoss.forward"
Any*\
selfR
'torch.nn.modules.loss.MarginRankingLoss"'torch.nn.modules.loss.MarginRankingLoss*
args
Any*
kwargs
Anyç
MultiMarginLoss%torch.nn.modules.loss.MultiMarginLoss"torch.nn.modules.module.Module*Æ
__init__.torch.nn.modules.loss.MultiMarginLoss.__init__"
None*X
selfN
%torch.nn.modules.loss.MultiMarginLoss"%torch.nn.modules.loss.MultiMarginLoss*
args
Any*
kwargs
Any*Ã
forward-torch.nn.modules.loss.MultiMarginLoss.forward"
Any*X
selfN
%torch.nn.modules.loss.MultiMarginLoss"%torch.nn.modules.loss.MultiMarginLoss*
args
Any*
kwargs
Any÷
TripletMarginLoss'torch.nn.modules.loss.TripletMarginLoss"torch.nn.modules.module.Module*Ì
__init__0torch.nn.modules.loss.TripletMarginLoss.__init__"
None*\
selfR
'torch.nn.modules.loss.TripletMarginLoss"'torch.nn.modules.loss.TripletMarginLoss*
args
Any*
kwargs
Any*É
forward/torch.nn.modules.loss.TripletMarginLoss.forward"
Any*\
selfR
'torch.nn.modules.loss.TripletMarginLoss"'torch.nn.modules.loss.TripletMarginLoss*
args
Any*
kwargs
Any×
TripletMarginWithDistanceLoss3torch.nn.modules.loss.TripletMarginWithDistanceLoss"torch.nn.modules.module.Module*ð
__init__<torch.nn.modules.loss.TripletMarginWithDistanceLoss.__init__"
None*t
selfj
3torch.nn.modules.loss.TripletMarginWithDistanceLoss"3torch.nn.modules.loss.TripletMarginWithDistanceLoss*
args
Any*
kwargs
Any*í
forward;torch.nn.modules.loss.TripletMarginWithDistanceLoss.forward"
Any*t
selfj
3torch.nn.modules.loss.TripletMarginWithDistanceLoss"3torch.nn.modules.loss.TripletMarginWithDistanceLoss*
args
Any*
kwargs
Any§
CTCLosstorch.nn.modules.loss.CTCLoss"torch.nn.modules.module.Module*®
__init__&torch.nn.modules.loss.CTCLoss.__init__"
None*H
self>
torch.nn.modules.loss.CTCLoss"torch.nn.modules.loss.CTCLoss*
args
Any*
kwargs
Any*«
forward%torch.nn.modules.loss.CTCLoss.forward"
Any*H
self>
torch.nn.modules.loss.CTCLoss"torch.nn.modules.loss.CTCLoss*
args
Any*
kwargs
Anyã
Moduletorch.nn.modules.module.Module"*SonarPythonAnalyzerFakeStub.CustomStubBase*±
__init__'torch.nn.modules.module.Module.__init__"
None*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*
args
Any*
kwargs
Any*Ã
register_buffer.torch.nn.modules.module.Module.register_buffer"
None*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*&
name
builtins.str"builtins.str*P
tensorD
Union[torch.Tensor,None]
torch.Tensor"torch.Tensor
None*0

persistent
builtins.bool"builtins.bool *ø
register_parameter1torch.nn.modules.module.Module.register_parameter"
None*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*&
name
builtins.str"builtins.str*1
param&
Union[Any,None]
Any
None*¾

add_module)torch.nn.modules.module.Module.add_module"
None*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*&
name
builtins.str"builtins.str*
modulez
*Union[torch.nn.modules.module.Module,None]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module
None*È
register_module.torch.nn.modules.module.Module.register_module"
None*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*&
name
builtins.str"builtins.str*
modulez
*Union[torch.nn.modules.module.Module,None]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module
None*õ
get_submodule,torch.nn.modules.module.Module.get_submodule"@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*(
target
builtins.str"builtins.str*
set_submodule,torch.nn.modules.module.Module.set_submodule"
None*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*(
target
builtins.str"builtins.str*L
module@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*¼
get_parameter,torch.nn.modules.module.Module.get_parameter"
Any*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*(
target
builtins.str"builtins.str*Ë

get_buffer)torch.nn.modules.module.Module.get_buffer"
torch.Tensor"torch.Tensor*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*(
target
builtins.str"builtins.str*
get_extra_state.torch.nn.modules.module.Module.get_extra_state"
Any*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*«
set_extra_state.torch.nn.modules.module.Module.set_extra_state"
None*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*
state
Any*Ï
apply$torch.nn.modules.module.Module.apply"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*S
fnK
CallableType[builtins.function]&
builtins.function"builtins.function*÷
cuda#torch.nn.modules.module.Module.cuda"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*}
deviceo
%Union[builtins.int,torch.device,None]
builtins.int"builtins.int
torch.device"torch.device
None *õ
ipu"torch.nn.modules.module.Module.ipu"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*}
deviceo
%Union[builtins.int,torch.device,None]
builtins.int"builtins.int
torch.device"torch.device
None *õ
xpu"torch.nn.modules.module.Module.xpu"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*}
deviceo
%Union[builtins.int,torch.device,None]
builtins.int"builtins.int
torch.device"torch.device
None *÷
mtia#torch.nn.modules.module.Module.mtia"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*}
deviceo
%Union[builtins.int,torch.device,None]
builtins.int"builtins.int
torch.device"torch.device
None *ö
cpu"torch.nn.modules.module.Module.cpu"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*å
type#torch.nn.modules.module.Module.type"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*k
dst_type]
Union[torch.dtype,builtins.str]
torch.dtype"torch.dtype
builtins.str"builtins.str*ú
float$torch.nn.modules.module.Module.float"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*ü
double%torch.nn.modules.module.Module.double"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*ø
half#torch.nn.modules.module.Module.half"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*
bfloat16'torch.nn.modules.module.Module.bfloat16"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*ã
to_empty'torch.nn.modules.module.Module.to_empty"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*2
device&
Union[Any,None]
Any
None*-
recurse
builtins.bool"builtins.bool *¼
register_full_backward_pre_hook>torch.nn.modules.module.Module.register_full_backward_pre_hook"
Any*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*U
hookK
CallableType[builtins.function]&
builtins.function"builtins.function*-
prepend
builtins.bool"builtins.bool *û
register_backward_hook5torch.nn.modules.module.Module.register_backward_hook"
Any*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*U
hookK
CallableType[builtins.function]&
builtins.function"builtins.function*´
register_full_backward_hook:torch.nn.modules.module.Module.register_full_backward_hook"
Any*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*U
hookK
CallableType[builtins.function]&
builtins.function"builtins.function*-
prepend
builtins.bool"builtins.bool *þ
register_forward_pre_hook8torch.nn.modules.module.Module.register_forward_pre_hook"
Any*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*ï
hookä
FUnion[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function*-
prepend
builtins.bool"builtins.bool *1
with_kwargs
builtins.bool"builtins.bool *©
register_forward_hook4torch.nn.modules.module.Module.register_forward_hook"
Any*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*ï
hookä
FUnion[CallableType[builtins.function],CallableType[builtins.function]]K
CallableType[builtins.function]&
builtins.function"builtins.functionK
CallableType[builtins.function]&
builtins.function"builtins.function*-
prepend
builtins.bool"builtins.bool *1
with_kwargs
builtins.bool"builtins.bool *1
always_call
builtins.bool"builtins.bool *¦
__getattr__*torch.nn.modules.module.Module.__getattr__"
Any*B@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*
builtins.str"builtins.str*Ü
__setattr__*torch.nn.modules.module.Module.__setattr__"
None*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*&
name
builtins.str"builtins.str*¢
value
2Union[torch.Tensor,torch.nn.modules.module.Module]
torch.Tensor"torch.Tensor@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*
__delattr__*torch.nn.modules.module.Module.__delattr__"
None*B@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*	
Any*q
register_state_dict_post_hook<torch.nn.modules.module.Module.register_state_dict_post_hook*
self*
hook*o
register_state_dict_pre_hook;torch.nn.modules.module.Module.register_state_dict_pre_hook*
self*
hook*y
!register_load_state_dict_pre_hook@torch.nn.modules.module.Module.register_load_state_dict_pre_hook*
self*
hook*{
"register_load_state_dict_post_hookAtorch.nn.modules.module.Module.register_load_state_dict_post_hook*
self*
hook*Ý
load_state_dict.torch.nn.modules.module.Module.load_state_dict"
Any*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*i

state_dictY
 typing.Mapping[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Mapping*,
strict
builtins.bool"builtins.bool *,
assign
builtins.bool"builtins.bool *ä

parameters)torch.nn.modules.module.Module.parameters"0
typing.Iterator[Any]
Any"typing.Iterator*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*-
recurse
builtins.bool"builtins.bool *£
named_parameters/torch.nn.modules.module.Module.named_parameters"
(typing.Iterator[Tuple[builtins.str,Any]]B
Tuple[builtins.str,Any]
builtins.str"builtins.str
Any"typing.Iterator*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module**
prefix
builtins.str"builtins.str *-
recurse
builtins.bool"builtins.bool *6
remove_duplicate
builtins.bool"builtins.bool *ü
buffers&torch.nn.modules.module.Module.buffers"N
typing.Iterator[torch.Tensor]
torch.Tensor"torch.Tensor"typing.Iterator*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*-
recurse
builtins.bool"builtins.bool *Å
named_buffers,torch.nn.modules.module.Module.named_buffers"¦
1typing.Iterator[Tuple[builtins.str,torch.Tensor]]`
 Tuple[builtins.str,torch.Tensor]
builtins.str"builtins.str
torch.Tensor"torch.Tensor"typing.Iterator*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module**
prefix
builtins.str"builtins.str *-
recurse
builtins.bool"builtins.bool *6
remove_duplicate
builtins.bool"builtins.bool *
children'torch.nn.modules.module.Module.children"
/typing.Iterator[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"typing.Iterator*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*ý
named_children-torch.nn.modules.module.Module.named_children"ï
Ctyping.Iterator[Tuple[builtins.str,torch.nn.modules.module.Module]]
2Tuple[builtins.str,torch.nn.modules.module.Module]
builtins.str"builtins.str@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"typing.Iterator*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*
modules&torch.nn.modules.module.Module.modules"
/typing.Iterator[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"typing.Iterator*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Ì
named_modules,torch.nn.modules.module.Module.named_modules"
Any*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Ó
memoÆ
8Union[builtins.set[torch.nn.modules.module.Module],None]~
,builtins.set[torch.nn.modules.module.Module]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"builtins.set
None **
prefix
builtins.str"builtins.str *6
remove_duplicate
builtins.bool"builtins.bool *¦
train$torch.nn.modules.module.Module.train"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module**
mode
builtins.bool"builtins.bool *ø
eval#torch.nn.modules.module.Module.eval"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Á
requires_grad_-torch.nn.modules.module.Module.requires_grad_"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*3
requires_grad
builtins.bool"builtins.bool *¾
	zero_grad(torch.nn.modules.module.Module.zero_grad"
None*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*1
set_to_none
builtins.bool"builtins.bool *
share_memory+torch.nn.modules.module.Module.share_memory"
torch.nn.modules.module.T@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*¡

extra_repr)torch.nn.modules.module.Module.extra_repr"
builtins.str"builtins.str*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*;
__dir__&torch.nn.modules.module.Module.__dir__*
self*¯
compile&torch.nn.modules.module.Module.compile"
None*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*
args
Any*
kwargs
Any2À
to!torch.nn.modules.module.Module.to
to!torch.nn.modules.module.Module.to"
#torch.nn.modules.module.Module.Self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*
self
#torch.nn.modules.module.Module.Self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*4
device&
Union[Any,None]
Any
None *N
dtypeA
Union[torch.dtype,None]
torch.dtype"torch.dtype
None *2
non_blocking
builtins.bool"builtins.bool 0:typing.overloadXº
to!torch.nn.modules.module.Module.to"
#torch.nn.modules.module.Module.Self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*
self
#torch.nn.modules.module.Module.Self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*%
dtype
torch.dtype"torch.dtype*2
non_blocking
builtins.bool"builtins.bool 0:typing.overloadX½
to!torch.nn.modules.module.Module.to"
#torch.nn.modules.module.Module.Self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*
self
#torch.nn.modules.module.Module.Self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module"torch.nn.modules.module.Module*(
tensor
torch.Tensor"torch.Tensor*2
non_blocking
builtins.bool"builtins.bool 0:typing.overloadX2£

state_dict)torch.nn.modules.module.Module.state_dict

state_dict)torch.nn.modules.module.Module.state_dict"
Any*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*
destination
Any**
prefix
builtins.str"builtins.str */
	keep_vars
builtins.bool"builtins.bool 0:typing.overloadXÎ

state_dict)torch.nn.modules.module.Module.state_dict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*J
self@
torch.nn.modules.module.Module"torch.nn.modules.module.Module**
prefix
builtins.str"builtins.str */
	keep_vars
builtins.bool"builtins.bool 0:typing.overloadXr[
dump_patches+torch.nn.modules.module.Module.dump_patches
builtins.bool"builtins.boolrS
training'torch.nn.modules.module.Module.training
builtins.bool"builtins.boolra
call_super_init.torch.nn.modules.module.Module.call_super_init
builtins.bool"builtins.boolr~
forward&torch.nn.modules.module.Module.forwardK
CallableType[builtins.function]&
builtins.function"builtins.functionr
__call__'torch.nn.modules.module.Module.__call__K
CallableType[builtins.function]&
builtins.function"builtins.functionrF
T_destination,torch.nn.modules.module.Module.T_destination
Any¶
LocalResponseNorm0torch.nn.modules.normalization.LocalResponseNorm"torch.nn.modules.module.Module*ç
__init__9torch.nn.modules.normalization.LocalResponseNorm.__init__"
None*n
selfd
0torch.nn.modules.normalization.LocalResponseNorm"0torch.nn.modules.normalization.LocalResponseNorm*
args
Any*
kwargs
Any*ä
forward8torch.nn.modules.normalization.LocalResponseNorm.forward"
Any*n
selfd
0torch.nn.modules.normalization.LocalResponseNorm"0torch.nn.modules.normalization.LocalResponseNorm*
args
Any*
kwargs
Any
CrossMapLRN2d,torch.nn.modules.normalization.CrossMapLRN2d"torch.nn.modules.module.Module*Û
__init__5torch.nn.modules.normalization.CrossMapLRN2d.__init__"
None*f
self\
,torch.nn.modules.normalization.CrossMapLRN2d",torch.nn.modules.normalization.CrossMapLRN2d*
args
Any*
kwargs
Any*Ø
forward4torch.nn.modules.normalization.CrossMapLRN2d.forward"
Any*f
self\
,torch.nn.modules.normalization.CrossMapLRN2d",torch.nn.modules.normalization.CrossMapLRN2d*
args
Any*
kwargs
Anyö
	LayerNorm(torch.nn.modules.normalization.LayerNorm"torch.nn.modules.module.Module*Ï
__init__1torch.nn.modules.normalization.LayerNorm.__init__"
None*^
selfT
(torch.nn.modules.normalization.LayerNorm"(torch.nn.modules.normalization.LayerNorm*
args
Any*
kwargs
Any*Ì
forward0torch.nn.modules.normalization.LayerNorm.forward"
Any*^
selfT
(torch.nn.modules.normalization.LayerNorm"(torch.nn.modules.normalization.LayerNorm*
args
Any*
kwargs
Anyö
	GroupNorm(torch.nn.modules.normalization.GroupNorm"torch.nn.modules.module.Module*Ï
__init__1torch.nn.modules.normalization.GroupNorm.__init__"
None*^
selfT
(torch.nn.modules.normalization.GroupNorm"(torch.nn.modules.normalization.GroupNorm*
args
Any*
kwargs
Any*Ì
forward0torch.nn.modules.normalization.GroupNorm.forward"
Any*^
selfT
(torch.nn.modules.normalization.GroupNorm"(torch.nn.modules.normalization.GroupNorm*
args
Any*
kwargs
Anyæ
RMSNorm&torch.nn.modules.normalization.RMSNorm"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.normalization.RMSNorm.__init__"
None*Z
selfP
&torch.nn.modules.normalization.RMSNorm"&torch.nn.modules.normalization.RMSNorm*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.normalization.RMSNorm.forward"
Any*Z
selfP
&torch.nn.modules.normalization.RMSNorm"&torch.nn.modules.normalization.RMSNorm*
args
Any*
kwargs
Anyì
CircularPad1d&torch.nn.modules.padding.CircularPad1d"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.padding.CircularPad1d.__init__"
None*Z
selfP
&torch.nn.modules.padding.CircularPad1d"&torch.nn.modules.padding.CircularPad1d*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.padding.CircularPad1d.forward"
Any*Z
selfP
&torch.nn.modules.padding.CircularPad1d"&torch.nn.modules.padding.CircularPad1d*
args
Any*
kwargs
Anyì
CircularPad2d&torch.nn.modules.padding.CircularPad2d"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.padding.CircularPad2d.__init__"
None*Z
selfP
&torch.nn.modules.padding.CircularPad2d"&torch.nn.modules.padding.CircularPad2d*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.padding.CircularPad2d.forward"
Any*Z
selfP
&torch.nn.modules.padding.CircularPad2d"&torch.nn.modules.padding.CircularPad2d*
args
Any*
kwargs
Anyì
CircularPad3d&torch.nn.modules.padding.CircularPad3d"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.padding.CircularPad3d.__init__"
None*Z
selfP
&torch.nn.modules.padding.CircularPad3d"&torch.nn.modules.padding.CircularPad3d*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.padding.CircularPad3d.forward"
Any*Z
selfP
&torch.nn.modules.padding.CircularPad3d"&torch.nn.modules.padding.CircularPad3d*
args
Any*
kwargs
Anyì
ConstantPad1d&torch.nn.modules.padding.ConstantPad1d"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.padding.ConstantPad1d.__init__"
None*Z
selfP
&torch.nn.modules.padding.ConstantPad1d"&torch.nn.modules.padding.ConstantPad1d*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.padding.ConstantPad1d.forward"
Any*Z
selfP
&torch.nn.modules.padding.ConstantPad1d"&torch.nn.modules.padding.ConstantPad1d*
args
Any*
kwargs
Anyì
ConstantPad2d&torch.nn.modules.padding.ConstantPad2d"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.padding.ConstantPad2d.__init__"
None*Z
selfP
&torch.nn.modules.padding.ConstantPad2d"&torch.nn.modules.padding.ConstantPad2d*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.padding.ConstantPad2d.forward"
Any*Z
selfP
&torch.nn.modules.padding.ConstantPad2d"&torch.nn.modules.padding.ConstantPad2d*
args
Any*
kwargs
Anyì
ConstantPad3d&torch.nn.modules.padding.ConstantPad3d"torch.nn.modules.module.Module*É
__init__/torch.nn.modules.padding.ConstantPad3d.__init__"
None*Z
selfP
&torch.nn.modules.padding.ConstantPad3d"&torch.nn.modules.padding.ConstantPad3d*
args
Any*
kwargs
Any*Æ
forward.torch.nn.modules.padding.ConstantPad3d.forward"
Any*Z
selfP
&torch.nn.modules.padding.ConstantPad3d"&torch.nn.modules.padding.ConstantPad3d*
args
Any*
kwargs
Anyü
ReflectionPad1d(torch.nn.modules.padding.ReflectionPad1d"torch.nn.modules.module.Module*Ï
__init__1torch.nn.modules.padding.ReflectionPad1d.__init__"
None*^
selfT
(torch.nn.modules.padding.ReflectionPad1d"(torch.nn.modules.padding.ReflectionPad1d*
args
Any*
kwargs
Any*Ì
forward0torch.nn.modules.padding.ReflectionPad1d.forward"
Any*^
selfT
(torch.nn.modules.padding.ReflectionPad1d"(torch.nn.modules.padding.ReflectionPad1d*
args
Any*
kwargs
Anyü
ReflectionPad2d(torch.nn.modules.padding.ReflectionPad2d"torch.nn.modules.module.Module*Ï
__init__1torch.nn.modules.padding.ReflectionPad2d.__init__"
None*^
selfT
(torch.nn.modules.padding.ReflectionPad2d"(torch.nn.modules.padding.ReflectionPad2d*
args
Any*
kwargs
Any*Ì
forward0torch.nn.modules.padding.ReflectionPad2d.forward"
Any*^
selfT
(torch.nn.modules.padding.ReflectionPad2d"(torch.nn.modules.padding.ReflectionPad2d*
args
Any*
kwargs
Anyü
ReflectionPad3d(torch.nn.modules.padding.ReflectionPad3d"torch.nn.modules.module.Module*Ï
__init__1torch.nn.modules.padding.ReflectionPad3d.__init__"
None*^
selfT
(torch.nn.modules.padding.ReflectionPad3d"(torch.nn.modules.padding.ReflectionPad3d*
args
Any*
kwargs
Any*Ì
forward0torch.nn.modules.padding.ReflectionPad3d.forward"
Any*^
selfT
(torch.nn.modules.padding.ReflectionPad3d"(torch.nn.modules.padding.ReflectionPad3d*
args
Any*
kwargs
Any
ReplicationPad1d)torch.nn.modules.padding.ReplicationPad1d"torch.nn.modules.module.Module*Ò
__init__2torch.nn.modules.padding.ReplicationPad1d.__init__"
None*`
selfV
)torch.nn.modules.padding.ReplicationPad1d")torch.nn.modules.padding.ReplicationPad1d*
args
Any*
kwargs
Any*Ï
forward1torch.nn.modules.padding.ReplicationPad1d.forward"
Any*`
selfV
)torch.nn.modules.padding.ReplicationPad1d")torch.nn.modules.padding.ReplicationPad1d*
args
Any*
kwargs
Any
ReplicationPad2d)torch.nn.modules.padding.ReplicationPad2d"torch.nn.modules.module.Module*Ò
__init__2torch.nn.modules.padding.ReplicationPad2d.__init__"
None*`
selfV
)torch.nn.modules.padding.ReplicationPad2d")torch.nn.modules.padding.ReplicationPad2d*
args
Any*
kwargs
Any*Ï
forward1torch.nn.modules.padding.ReplicationPad2d.forward"
Any*`
selfV
)torch.nn.modules.padding.ReplicationPad2d")torch.nn.modules.padding.ReplicationPad2d*
args
Any*
kwargs
Any
ReplicationPad3d)torch.nn.modules.padding.ReplicationPad3d"torch.nn.modules.module.Module*Ò
__init__2torch.nn.modules.padding.ReplicationPad3d.__init__"
None*`
selfV
)torch.nn.modules.padding.ReplicationPad3d")torch.nn.modules.padding.ReplicationPad3d*
args
Any*
kwargs
Any*Ï
forward1torch.nn.modules.padding.ReplicationPad3d.forward"
Any*`
selfV
)torch.nn.modules.padding.ReplicationPad3d")torch.nn.modules.padding.ReplicationPad3d*
args
Any*
kwargs
AnyÌ
	ZeroPad1d"torch.nn.modules.padding.ZeroPad1d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.padding.ZeroPad1d.__init__"
None*R
selfH
"torch.nn.modules.padding.ZeroPad1d""torch.nn.modules.padding.ZeroPad1d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.padding.ZeroPad1d.forward"
Any*R
selfH
"torch.nn.modules.padding.ZeroPad1d""torch.nn.modules.padding.ZeroPad1d*
args
Any*
kwargs
AnyÌ
	ZeroPad2d"torch.nn.modules.padding.ZeroPad2d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.padding.ZeroPad2d.__init__"
None*R
selfH
"torch.nn.modules.padding.ZeroPad2d""torch.nn.modules.padding.ZeroPad2d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.padding.ZeroPad2d.forward"
Any*R
selfH
"torch.nn.modules.padding.ZeroPad2d""torch.nn.modules.padding.ZeroPad2d*
args
Any*
kwargs
AnyÌ
	ZeroPad3d"torch.nn.modules.padding.ZeroPad3d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.padding.ZeroPad3d.__init__"
None*R
selfH
"torch.nn.modules.padding.ZeroPad3d""torch.nn.modules.padding.ZeroPad3d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.padding.ZeroPad3d.forward"
Any*R
selfH
"torch.nn.modules.padding.ZeroPad3d""torch.nn.modules.padding.ZeroPad3d*
args
Any*
kwargs
Any
PixelShuffle*torch.nn.modules.pixelshuffle.PixelShuffle"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.pixelshuffle.PixelShuffle.__init__"
None*b
selfX
*torch.nn.modules.pixelshuffle.PixelShuffle"*torch.nn.modules.pixelshuffle.PixelShuffle*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.pixelshuffle.PixelShuffle.forward"
Any*b
selfX
*torch.nn.modules.pixelshuffle.PixelShuffle"*torch.nn.modules.pixelshuffle.PixelShuffle*
args
Any*
kwargs
Any
PixelUnshuffle,torch.nn.modules.pixelshuffle.PixelUnshuffle"torch.nn.modules.module.Module*Û
__init__5torch.nn.modules.pixelshuffle.PixelUnshuffle.__init__"
None*f
self\
,torch.nn.modules.pixelshuffle.PixelUnshuffle",torch.nn.modules.pixelshuffle.PixelUnshuffle*
args
Any*
kwargs
Any*Ø
forward4torch.nn.modules.pixelshuffle.PixelUnshuffle.forward"
Any*f
self\
,torch.nn.modules.pixelshuffle.PixelUnshuffle",torch.nn.modules.pixelshuffle.PixelUnshuffle*
args
Any*
kwargs
AnyÌ
	MaxPool1d"torch.nn.modules.pooling.MaxPool1d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.pooling.MaxPool1d.__init__"
None*R
selfH
"torch.nn.modules.pooling.MaxPool1d""torch.nn.modules.pooling.MaxPool1d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.pooling.MaxPool1d.forward"
Any*R
selfH
"torch.nn.modules.pooling.MaxPool1d""torch.nn.modules.pooling.MaxPool1d*
args
Any*
kwargs
AnyÌ
	MaxPool2d"torch.nn.modules.pooling.MaxPool2d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.pooling.MaxPool2d.__init__"
None*R
selfH
"torch.nn.modules.pooling.MaxPool2d""torch.nn.modules.pooling.MaxPool2d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.pooling.MaxPool2d.forward"
Any*R
selfH
"torch.nn.modules.pooling.MaxPool2d""torch.nn.modules.pooling.MaxPool2d*
args
Any*
kwargs
AnyÌ
	MaxPool3d"torch.nn.modules.pooling.MaxPool3d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.pooling.MaxPool3d.__init__"
None*R
selfH
"torch.nn.modules.pooling.MaxPool3d""torch.nn.modules.pooling.MaxPool3d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.pooling.MaxPool3d.forward"
Any*R
selfH
"torch.nn.modules.pooling.MaxPool3d""torch.nn.modules.pooling.MaxPool3d*
args
Any*
kwargs
AnyÜ
MaxUnpool1d$torch.nn.modules.pooling.MaxUnpool1d"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.pooling.MaxUnpool1d.__init__"
None*V
selfL
$torch.nn.modules.pooling.MaxUnpool1d"$torch.nn.modules.pooling.MaxUnpool1d*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.pooling.MaxUnpool1d.forward"
Any*V
selfL
$torch.nn.modules.pooling.MaxUnpool1d"$torch.nn.modules.pooling.MaxUnpool1d*
args
Any*
kwargs
AnyÜ
MaxUnpool2d$torch.nn.modules.pooling.MaxUnpool2d"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.pooling.MaxUnpool2d.__init__"
None*V
selfL
$torch.nn.modules.pooling.MaxUnpool2d"$torch.nn.modules.pooling.MaxUnpool2d*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.pooling.MaxUnpool2d.forward"
Any*V
selfL
$torch.nn.modules.pooling.MaxUnpool2d"$torch.nn.modules.pooling.MaxUnpool2d*
args
Any*
kwargs
AnyÜ
MaxUnpool3d$torch.nn.modules.pooling.MaxUnpool3d"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.pooling.MaxUnpool3d.__init__"
None*V
selfL
$torch.nn.modules.pooling.MaxUnpool3d"$torch.nn.modules.pooling.MaxUnpool3d*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.pooling.MaxUnpool3d.forward"
Any*V
selfL
$torch.nn.modules.pooling.MaxUnpool3d"$torch.nn.modules.pooling.MaxUnpool3d*
args
Any*
kwargs
AnyÌ
	AvgPool1d"torch.nn.modules.pooling.AvgPool1d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.pooling.AvgPool1d.__init__"
None*R
selfH
"torch.nn.modules.pooling.AvgPool1d""torch.nn.modules.pooling.AvgPool1d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.pooling.AvgPool1d.forward"
Any*R
selfH
"torch.nn.modules.pooling.AvgPool1d""torch.nn.modules.pooling.AvgPool1d*
args
Any*
kwargs
AnyÌ
	AvgPool2d"torch.nn.modules.pooling.AvgPool2d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.pooling.AvgPool2d.__init__"
None*R
selfH
"torch.nn.modules.pooling.AvgPool2d""torch.nn.modules.pooling.AvgPool2d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.pooling.AvgPool2d.forward"
Any*R
selfH
"torch.nn.modules.pooling.AvgPool2d""torch.nn.modules.pooling.AvgPool2d*
args
Any*
kwargs
AnyÌ
	AvgPool3d"torch.nn.modules.pooling.AvgPool3d"torch.nn.modules.module.Module*½
__init__+torch.nn.modules.pooling.AvgPool3d.__init__"
None*R
selfH
"torch.nn.modules.pooling.AvgPool3d""torch.nn.modules.pooling.AvgPool3d*
args
Any*
kwargs
Any*º
forward*torch.nn.modules.pooling.AvgPool3d.forward"
Any*R
selfH
"torch.nn.modules.pooling.AvgPool3d""torch.nn.modules.pooling.AvgPool3d*
args
Any*
kwargs
Any
FractionalMaxPool2d,torch.nn.modules.pooling.FractionalMaxPool2d"torch.nn.modules.module.Module*Û
__init__5torch.nn.modules.pooling.FractionalMaxPool2d.__init__"
None*f
self\
,torch.nn.modules.pooling.FractionalMaxPool2d",torch.nn.modules.pooling.FractionalMaxPool2d*
args
Any*
kwargs
Any*Ø
forward4torch.nn.modules.pooling.FractionalMaxPool2d.forward"
Any*f
self\
,torch.nn.modules.pooling.FractionalMaxPool2d",torch.nn.modules.pooling.FractionalMaxPool2d*
args
Any*
kwargs
Any
FractionalMaxPool3d,torch.nn.modules.pooling.FractionalMaxPool3d"torch.nn.modules.module.Module*Û
__init__5torch.nn.modules.pooling.FractionalMaxPool3d.__init__"
None*f
self\
,torch.nn.modules.pooling.FractionalMaxPool3d",torch.nn.modules.pooling.FractionalMaxPool3d*
args
Any*
kwargs
Any*Ø
forward4torch.nn.modules.pooling.FractionalMaxPool3d.forward"
Any*f
self\
,torch.nn.modules.pooling.FractionalMaxPool3d",torch.nn.modules.pooling.FractionalMaxPool3d*
args
Any*
kwargs
AnyÄ
LPPool1d!torch.nn.modules.pooling.LPPool1d"torch.nn.modules.module.Module*º
__init__*torch.nn.modules.pooling.LPPool1d.__init__"
None*P
selfF
!torch.nn.modules.pooling.LPPool1d"!torch.nn.modules.pooling.LPPool1d*
args
Any*
kwargs
Any*·
forward)torch.nn.modules.pooling.LPPool1d.forward"
Any*P
selfF
!torch.nn.modules.pooling.LPPool1d"!torch.nn.modules.pooling.LPPool1d*
args
Any*
kwargs
AnyÄ
LPPool2d!torch.nn.modules.pooling.LPPool2d"torch.nn.modules.module.Module*º
__init__*torch.nn.modules.pooling.LPPool2d.__init__"
None*P
selfF
!torch.nn.modules.pooling.LPPool2d"!torch.nn.modules.pooling.LPPool2d*
args
Any*
kwargs
Any*·
forward)torch.nn.modules.pooling.LPPool2d.forward"
Any*P
selfF
!torch.nn.modules.pooling.LPPool2d"!torch.nn.modules.pooling.LPPool2d*
args
Any*
kwargs
AnyÄ
LPPool3d!torch.nn.modules.pooling.LPPool3d"torch.nn.modules.module.Module*º
__init__*torch.nn.modules.pooling.LPPool3d.__init__"
None*P
selfF
!torch.nn.modules.pooling.LPPool3d"!torch.nn.modules.pooling.LPPool3d*
args
Any*
kwargs
Any*·
forward)torch.nn.modules.pooling.LPPool3d.forward"
Any*P
selfF
!torch.nn.modules.pooling.LPPool3d"!torch.nn.modules.pooling.LPPool3d*
args
Any*
kwargs
Any
AdaptiveMaxPool1d*torch.nn.modules.pooling.AdaptiveMaxPool1d"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.pooling.AdaptiveMaxPool1d.__init__"
None*b
selfX
*torch.nn.modules.pooling.AdaptiveMaxPool1d"*torch.nn.modules.pooling.AdaptiveMaxPool1d*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.pooling.AdaptiveMaxPool1d.forward"
Any*b
selfX
*torch.nn.modules.pooling.AdaptiveMaxPool1d"*torch.nn.modules.pooling.AdaptiveMaxPool1d*
args
Any*
kwargs
Any
AdaptiveMaxPool2d*torch.nn.modules.pooling.AdaptiveMaxPool2d"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.pooling.AdaptiveMaxPool2d.__init__"
None*b
selfX
*torch.nn.modules.pooling.AdaptiveMaxPool2d"*torch.nn.modules.pooling.AdaptiveMaxPool2d*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.pooling.AdaptiveMaxPool2d.forward"
Any*b
selfX
*torch.nn.modules.pooling.AdaptiveMaxPool2d"*torch.nn.modules.pooling.AdaptiveMaxPool2d*
args
Any*
kwargs
Any
AdaptiveMaxPool3d*torch.nn.modules.pooling.AdaptiveMaxPool3d"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.pooling.AdaptiveMaxPool3d.__init__"
None*b
selfX
*torch.nn.modules.pooling.AdaptiveMaxPool3d"*torch.nn.modules.pooling.AdaptiveMaxPool3d*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.pooling.AdaptiveMaxPool3d.forward"
Any*b
selfX
*torch.nn.modules.pooling.AdaptiveMaxPool3d"*torch.nn.modules.pooling.AdaptiveMaxPool3d*
args
Any*
kwargs
Any
AdaptiveAvgPool1d*torch.nn.modules.pooling.AdaptiveAvgPool1d"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.pooling.AdaptiveAvgPool1d.__init__"
None*b
selfX
*torch.nn.modules.pooling.AdaptiveAvgPool1d"*torch.nn.modules.pooling.AdaptiveAvgPool1d*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.pooling.AdaptiveAvgPool1d.forward"
Any*b
selfX
*torch.nn.modules.pooling.AdaptiveAvgPool1d"*torch.nn.modules.pooling.AdaptiveAvgPool1d*
args
Any*
kwargs
Any
AdaptiveAvgPool2d*torch.nn.modules.pooling.AdaptiveAvgPool2d"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.pooling.AdaptiveAvgPool2d.__init__"
None*b
selfX
*torch.nn.modules.pooling.AdaptiveAvgPool2d"*torch.nn.modules.pooling.AdaptiveAvgPool2d*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.pooling.AdaptiveAvgPool2d.forward"
Any*b
selfX
*torch.nn.modules.pooling.AdaptiveAvgPool2d"*torch.nn.modules.pooling.AdaptiveAvgPool2d*
args
Any*
kwargs
Any
AdaptiveAvgPool3d*torch.nn.modules.pooling.AdaptiveAvgPool3d"torch.nn.modules.module.Module*Õ
__init__3torch.nn.modules.pooling.AdaptiveAvgPool3d.__init__"
None*b
selfX
*torch.nn.modules.pooling.AdaptiveAvgPool3d"*torch.nn.modules.pooling.AdaptiveAvgPool3d*
args
Any*
kwargs
Any*Ò
forward2torch.nn.modules.pooling.AdaptiveAvgPool3d.forward"
Any*b
selfX
*torch.nn.modules.pooling.AdaptiveAvgPool3d"*torch.nn.modules.pooling.AdaptiveAvgPool3d*
args
Any*
kwargs
Any 
RNNBasetorch.nn.modules.rnn.RNNBase"torch.nn.modules.module.Module*«
__init__%torch.nn.modules.rnn.RNNBase.__init__"
None*F
self<
torch.nn.modules.rnn.RNNBase"torch.nn.modules.rnn.RNNBase*
args
Any*
kwargs
Any*¨
forward$torch.nn.modules.rnn.RNNBase.forward"
Any*F
self<
torch.nn.modules.rnn.RNNBase"torch.nn.modules.rnn.RNNBase*
args
Any*
kwargs
Any
RNNtorch.nn.modules.rnn.RNN"torch.nn.modules.module.Module*
__init__!torch.nn.modules.rnn.RNN.__init__"
None*>
self4
torch.nn.modules.rnn.RNN"torch.nn.modules.rnn.RNN*
args
Any*
kwargs
Any*
forward torch.nn.modules.rnn.RNN.forward"
Any*>
self4
torch.nn.modules.rnn.RNN"torch.nn.modules.rnn.RNN*
args
Any*
kwargs
Any
LSTMtorch.nn.modules.rnn.LSTM"torch.nn.modules.module.Module*¢
__init__"torch.nn.modules.rnn.LSTM.__init__"
None*@
self6
torch.nn.modules.rnn.LSTM"torch.nn.modules.rnn.LSTM*
args
Any*
kwargs
Any*
forward!torch.nn.modules.rnn.LSTM.forward"
Any*@
self6
torch.nn.modules.rnn.LSTM"torch.nn.modules.rnn.LSTM*
args
Any*
kwargs
Any
GRUtorch.nn.modules.rnn.GRU"torch.nn.modules.module.Module*
__init__!torch.nn.modules.rnn.GRU.__init__"
None*>
self4
torch.nn.modules.rnn.GRU"torch.nn.modules.rnn.GRU*
args
Any*
kwargs
Any*
forward torch.nn.modules.rnn.GRU.forward"
Any*>
self4
torch.nn.modules.rnn.GRU"torch.nn.modules.rnn.GRU*
args
Any*
kwargs
AnyÀ
RNNCellBase torch.nn.modules.rnn.RNNCellBase"torch.nn.modules.module.Module*·
__init__)torch.nn.modules.rnn.RNNCellBase.__init__"
None*N
selfD
 torch.nn.modules.rnn.RNNCellBase" torch.nn.modules.rnn.RNNCellBase*
args
Any*
kwargs
Any*´
forward(torch.nn.modules.rnn.RNNCellBase.forward"
Any*N
selfD
 torch.nn.modules.rnn.RNNCellBase" torch.nn.modules.rnn.RNNCellBase*
args
Any*
kwargs
Any 
RNNCelltorch.nn.modules.rnn.RNNCell"torch.nn.modules.module.Module*«
__init__%torch.nn.modules.rnn.RNNCell.__init__"
None*F
self<
torch.nn.modules.rnn.RNNCell"torch.nn.modules.rnn.RNNCell*
args
Any*
kwargs
Any*¨
forward$torch.nn.modules.rnn.RNNCell.forward"
Any*F
self<
torch.nn.modules.rnn.RNNCell"torch.nn.modules.rnn.RNNCell*
args
Any*
kwargs
Any¨
LSTMCelltorch.nn.modules.rnn.LSTMCell"torch.nn.modules.module.Module*®
__init__&torch.nn.modules.rnn.LSTMCell.__init__"
None*H
self>
torch.nn.modules.rnn.LSTMCell"torch.nn.modules.rnn.LSTMCell*
args
Any*
kwargs
Any*«
forward%torch.nn.modules.rnn.LSTMCell.forward"
Any*H
self>
torch.nn.modules.rnn.LSTMCell"torch.nn.modules.rnn.LSTMCell*
args
Any*
kwargs
Any 
GRUCelltorch.nn.modules.rnn.GRUCell"torch.nn.modules.module.Module*«
__init__%torch.nn.modules.rnn.GRUCell.__init__"
None*F
self<
torch.nn.modules.rnn.GRUCell"torch.nn.modules.rnn.GRUCell*
args
Any*
kwargs
Any*¨
forward$torch.nn.modules.rnn.GRUCell.forward"
Any*F
self<
torch.nn.modules.rnn.GRUCell"torch.nn.modules.rnn.GRUCell*
args
Any*
kwargs
AnyÅ
	Embedding!torch.nn.modules.sparse.Embedding"torch.nn.modules.module.Module*º
__init__*torch.nn.modules.sparse.Embedding.__init__"
None*P
selfF
!torch.nn.modules.sparse.Embedding"!torch.nn.modules.sparse.Embedding*
args
Any*
kwargs
Any*·
forward)torch.nn.modules.sparse.Embedding.forward"
Any*P
selfF
!torch.nn.modules.sparse.Embedding"!torch.nn.modules.sparse.Embedding*
args
Any*
kwargs
AnyÝ
EmbeddingBag$torch.nn.modules.sparse.EmbeddingBag"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.sparse.EmbeddingBag.__init__"
None*V
selfL
$torch.nn.modules.sparse.EmbeddingBag"$torch.nn.modules.sparse.EmbeddingBag*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.sparse.EmbeddingBag.forward"
Any*V
selfL
$torch.nn.modules.sparse.EmbeddingBag"$torch.nn.modules.sparse.EmbeddingBag*
args
Any*
kwargs
Anyø
Transformer(torch.nn.modules.transformer.Transformer"torch.nn.modules.module.Module*Ï
__init__1torch.nn.modules.transformer.Transformer.__init__"
None*^
selfT
(torch.nn.modules.transformer.Transformer"(torch.nn.modules.transformer.Transformer*
args
Any*
kwargs
Any*Ì
forward0torch.nn.modules.transformer.Transformer.forward"
Any*^
selfT
(torch.nn.modules.transformer.Transformer"(torch.nn.modules.transformer.Transformer*
args
Any*
kwargs
Any°
TransformerEncoder/torch.nn.modules.transformer.TransformerEncoder"torch.nn.modules.module.Module*ä
__init__8torch.nn.modules.transformer.TransformerEncoder.__init__"
None*l
selfb
/torch.nn.modules.transformer.TransformerEncoder"/torch.nn.modules.transformer.TransformerEncoder*
args
Any*
kwargs
Any*á
forward7torch.nn.modules.transformer.TransformerEncoder.forward"
Any*l
selfb
/torch.nn.modules.transformer.TransformerEncoder"/torch.nn.modules.transformer.TransformerEncoder*
args
Any*
kwargs
Any°
TransformerDecoder/torch.nn.modules.transformer.TransformerDecoder"torch.nn.modules.module.Module*ä
__init__8torch.nn.modules.transformer.TransformerDecoder.__init__"
None*l
selfb
/torch.nn.modules.transformer.TransformerDecoder"/torch.nn.modules.transformer.TransformerDecoder*
args
Any*
kwargs
Any*á
forward7torch.nn.modules.transformer.TransformerDecoder.forward"
Any*l
selfb
/torch.nn.modules.transformer.TransformerDecoder"/torch.nn.modules.transformer.TransformerDecoder*
args
Any*
kwargs
AnyØ
TransformerEncoderLayer4torch.nn.modules.transformer.TransformerEncoderLayer"torch.nn.modules.module.Module*ó
__init__=torch.nn.modules.transformer.TransformerEncoderLayer.__init__"
None*v
selfl
4torch.nn.modules.transformer.TransformerEncoderLayer"4torch.nn.modules.transformer.TransformerEncoderLayer*
args
Any*
kwargs
Any*ð
forward<torch.nn.modules.transformer.TransformerEncoderLayer.forward"
Any*v
selfl
4torch.nn.modules.transformer.TransformerEncoderLayer"4torch.nn.modules.transformer.TransformerEncoderLayer*
args
Any*
kwargs
AnyØ
TransformerDecoderLayer4torch.nn.modules.transformer.TransformerDecoderLayer"torch.nn.modules.module.Module*ó
__init__=torch.nn.modules.transformer.TransformerDecoderLayer.__init__"
None*v
selfl
4torch.nn.modules.transformer.TransformerDecoderLayer"4torch.nn.modules.transformer.TransformerDecoderLayer*
args
Any*
kwargs
Any*ð
forward<torch.nn.modules.transformer.TransformerDecoderLayer.forward"
Any*v
selfl
4torch.nn.modules.transformer.TransformerDecoderLayer"4torch.nn.modules.transformer.TransformerDecoderLayer*
args
Any*
kwargs
AnyÙ
Upsample$torch.nn.modules.upsampling.Upsample"torch.nn.modules.module.Module*Ã
__init__-torch.nn.modules.upsampling.Upsample.__init__"
None*V
selfL
$torch.nn.modules.upsampling.Upsample"$torch.nn.modules.upsampling.Upsample*
args
Any*
kwargs
Any*À
forward,torch.nn.modules.upsampling.Upsample.forward"
Any*V
selfL
$torch.nn.modules.upsampling.Upsample"$torch.nn.modules.upsampling.Upsample*
args
Any*
kwargs
Any±
UpsamplingNearest2d/torch.nn.modules.upsampling.UpsamplingNearest2d"torch.nn.modules.module.Module*ä
__init__8torch.nn.modules.upsampling.UpsamplingNearest2d.__init__"
None*l
selfb
/torch.nn.modules.upsampling.UpsamplingNearest2d"/torch.nn.modules.upsampling.UpsamplingNearest2d*
args
Any*
kwargs
Any*á
forward7torch.nn.modules.upsampling.UpsamplingNearest2d.forward"
Any*l
selfb
/torch.nn.modules.upsampling.UpsamplingNearest2d"/torch.nn.modules.upsampling.UpsamplingNearest2d*
args
Any*
kwargs
Any¹
UpsamplingBilinear2d0torch.nn.modules.upsampling.UpsamplingBilinear2d"torch.nn.modules.module.Module*ç
__init__9torch.nn.modules.upsampling.UpsamplingBilinear2d.__init__"
None*n
selfd
0torch.nn.modules.upsampling.UpsamplingBilinear2d"0torch.nn.modules.upsampling.UpsamplingBilinear2d*
args
Any*
kwargs
Any*ä
forward8torch.nn.modules.upsampling.UpsamplingBilinear2d.forward"
Any*n
selfd
0torch.nn.modules.upsampling.UpsamplingBilinear2d"0torch.nn.modules.upsampling.UpsamplingBilinear2d*
args
Any*
kwargs
Any*q
__path__torch.nn.modules.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*
__annotations__ torch.nn.modules.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict