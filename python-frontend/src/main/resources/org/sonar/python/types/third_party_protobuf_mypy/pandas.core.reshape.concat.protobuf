
pandas.core.reshape.concat"Ñ6
concat!pandas.core.reshape.concat.concat–
concat!pandas.core.reshape.concat.concat":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ô
objs‰
yUnion[typing.Iterable[pandas.core.frame.DataFrame],typing.Mapping[pandas._typing.HashableT1,pandas.core.frame.DataFrame]]{
,typing.Iterable[pandas.core.frame.DataFrame]:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"typing.IterableÁ
Etyping.Mapping[pandas._typing.HashableT1,pandas.core.frame.DataFrame]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"typing.Mapping*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *µ
join®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *2
ignore_index
builtins.bool"builtins.bool *û
keysë
*typing.Iterable[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterable *é
levelsˇ
jtyping.Sequence[Union[builtins.list[pandas._typing.HashableT3],builtins.tuple[pandas._typing.HashableT3]]]ˇ
YUnion[builtins.list[pandas._typing.HashableT3],builtins.tuple[pandas._typing.HashableT3]]ç
(builtins.list[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listè
)builtins.tuple[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.tuple"typing.Sequence *õ
namesç
(builtins.list[pandas._typing.HashableT4]R
pandas._typing.HashableT4"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list *6
verify_integrity
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool **
copy
builtins.bool"builtins.bool 0:typing.overloadX˚
concat!pandas.core.reshape.concat.concat"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*ê
objsÖ
Union[typing.Iterable[pandas.core.series.Series[Any]],typing.Mapping[pandas._typing.HashableT1,pandas.core.series.Series[Any]]]à
/typing.Iterable[pandas.core.series.Series[Any]]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"typing.IterableÙ
Htyping.Mapping[pandas._typing.HashableT1,pandas.core.series.Series[Any]]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.HashableD
pandas.core.series.Series[Any]
Any"pandas.core.series.Series"typing.Mapping*ì
axisÜ
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisIndex *µ
join®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *2
ignore_index
builtins.bool"builtins.bool *û
keysë
*typing.Iterable[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterable *é
levelsˇ
jtyping.Sequence[Union[builtins.list[pandas._typing.HashableT3],builtins.tuple[pandas._typing.HashableT3]]]ˇ
YUnion[builtins.list[pandas._typing.HashableT3],builtins.tuple[pandas._typing.HashableT3]]ç
(builtins.list[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listè
)builtins.tuple[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.tuple"typing.Sequence *õ
namesç
(builtins.list[pandas._typing.HashableT4]R
pandas._typing.HashableT4"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list *6
verify_integrity
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool **
copy
builtins.bool"builtins.bool 0:typing.overloadXÖ
concat!pandas.core.reshape.concat.concat":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*•
objsö
≈Union[typing.Iterable[Union[pandas.core.series.Series[Any],pandas.core.frame.DataFrame]],typing.Mapping[pandas._typing.HashableT1,Union[pandas.core.series.Series[Any],pandas.core.frame.DataFrame]]]Ø
Rtyping.Iterable[Union[pandas.core.series.Series[Any],pandas.core.frame.DataFrame]]«
AUnion[pandas.core.series.Series[Any],pandas.core.frame.DataFrame]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"typing.Iterableõ
ktyping.Mapping[pandas._typing.HashableT1,Union[pandas.core.series.Series[Any],pandas.core.frame.DataFrame]]R
pandas._typing.HashableT1"
typing.Hashable"typing.Hashable"typing.Hashable«
AUnion[pandas.core.series.Series[Any],pandas.core.frame.DataFrame]D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame"typing.Mapping*í
axisá
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.int]]]®
2Union[Literal[builtins.str],Literal[builtins.int]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.int]	
builtins.int"builtins.int"pandas._typing.AxisColumn*µ
join®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *2
ignore_index
builtins.bool"builtins.bool *û
keysë
*typing.Iterable[pandas._typing.HashableT2]R
pandas._typing.HashableT2"
typing.Hashable"typing.Hashable"typing.Hashable"typing.Iterable *é
levelsˇ
jtyping.Sequence[Union[builtins.list[pandas._typing.HashableT3],builtins.tuple[pandas._typing.HashableT3]]]ˇ
YUnion[builtins.list[pandas._typing.HashableT3],builtins.tuple[pandas._typing.HashableT3]]ç
(builtins.list[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listè
)builtins.tuple[pandas._typing.HashableT3]R
pandas._typing.HashableT3"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.tuple"typing.Sequence *õ
namesç
(builtins.list[pandas._typing.HashableT4]R
pandas._typing.HashableT4"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.list *6
verify_integrity
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool **
copy
builtins.bool"builtins.bool 0:typing.overloadX*ñ
__annotations__*pandas.core.reshape.concat.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict