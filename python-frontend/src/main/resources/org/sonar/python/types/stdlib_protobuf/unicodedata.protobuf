
unicodedata¨&
UCDunicodedata.UCD"builtins.object*∂
bidirectionalunicodedata.UCD.bidirectional"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.strz38z39z310z311z312z313*¨
categoryunicodedata.UCD.category"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.strz38z39z310z311z312z313*Æ
	combiningunicodedata.UCD.combining"
builtins.int"builtins.int*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.strz38z39z310z311z312z313*∂
decompositionunicodedata.UCD.decomposition"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.strz38z39z310z311z312z313*¿
east_asian_width unicodedata.UCD.east_asian_width"ü
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"unicodedata._EastAsianWidth*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.strz38z39z310z311z312z313*ÿ
is_normalizedunicodedata.UCD.is_normalized"
builtins.bool"builtins.bool*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.str*
builtins.str"builtins.strz38z39z310z311z312z313*Ú
lookupunicodedata.UCD.lookup"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*hf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz38z39z310z311z312z313*¨
mirroredunicodedata.UCD.mirrored"
builtins.int"builtins.int*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.strz38z39z310z311z312z313*Œ
	normalizeunicodedata.UCD.normalize"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.str*
builtins.str"builtins.strz38z39z310z311z312z3132«
decimalunicodedata.UCD.decimal£
decimalunicodedata.UCD.decimal"
builtins.int"builtins.int*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.str0:typing.overloadX‡
decimalunicodedata.UCD.decimal"ç
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.intG
unicodedata._T"
builtins.object"builtins.object"builtins.object*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.str*IG
unicodedata._T"
builtins.object"builtins.object"builtins.object0:typing.overloadX"38"39"310"311"312"3132ª
digitunicodedata.UCD.digitü
digitunicodedata.UCD.digit"
builtins.int"builtins.int*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.str0:typing.overloadX‹
digitunicodedata.UCD.digit"ç
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.intG
unicodedata._T"
builtins.object"builtins.object"builtins.object*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.str*IG
unicodedata._T"
builtins.object"builtins.object"builtins.object0:typing.overloadX"38"39"310"311"312"3132µ
nameunicodedata.UCD.nameù
nameunicodedata.UCD.name"
builtins.str"builtins.str*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.str0:typing.overloadX⁄
nameunicodedata.UCD.name"ç
"Union[builtins.str,unicodedata._T]
builtins.str"builtins.strG
unicodedata._T"
builtins.object"builtins.object"builtins.object*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.str*IG
unicodedata._T"
builtins.object"builtins.object"builtins.object0:typing.overloadX"38"39"310"311"312"3132—
numericunicodedata.UCD.numericß
numericunicodedata.UCD.numeric" 
builtins.float"builtins.float*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.str0:typing.overloadXÊ
numericunicodedata.UCD.numeric"ì
$Union[builtins.float,unicodedata._T] 
builtins.float"builtins.floatG
unicodedata._T"
builtins.object"builtins.object"builtins.object*,
self"
unicodedata.UCD"unicodedata.UCD*
builtins.str"builtins.str*IG
unicodedata._T"
builtins.object"builtins.object"builtins.object0:typing.overloadX"38"39"310"311"312"3138j38j39j310j311j312j313rl
unidata_versionunicodedata.UCD.unidata_version
builtins.str"builtins.str*38*39*310*311*312*313Ñ
bidirectionalunicodedata.bidirectional"
builtins.str"builtins.str*
builtins.str"builtins.strz38z39z310z311z312z313z
categoryunicodedata.category"
builtins.str"builtins.str*
builtins.str"builtins.strz38z39z310z311z312z313|
	combiningunicodedata.combining"
builtins.int"builtins.int*
builtins.str"builtins.strz38z39z310z311z312z313Ñ
decompositionunicodedata.decomposition"
builtins.str"builtins.str*
builtins.str"builtins.strz38z39z310z311z312z313é
east_asian_widthunicodedata.east_asian_width"ü
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"unicodedata._EastAsianWidth*
builtins.str"builtins.strz38z39z310z311z312z313¶
is_normalizedunicodedata.is_normalized"
builtins.bool"builtins.bool*
builtins.str"builtins.str*
builtins.str"builtins.strz38z39z310z311z312z313¿
lookupunicodedata.lookup"
builtins.str"builtins.str*hf
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytesz38z39z310z311z312z313z
mirroredunicodedata.mirrored"
builtins.int"builtins.int*
builtins.str"builtins.strz38z39z310z311z312z313ú
	normalizeunicodedata.normalize"
builtins.str"builtins.str*
builtins.str"builtins.str*
builtins.str"builtins.strz38z39z310z311z312z313"ﬁ
decimalunicodedata.decimalq
decimalunicodedata.decimal"
builtins.int"builtins.int*
builtins.str"builtins.str0:typing.overloadXÆ
decimalunicodedata.decimal"ç
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.intG
unicodedata._T"
builtins.object"builtins.object"builtins.object*
builtins.str"builtins.str*IG
unicodedata._T"
builtins.object"builtins.object"builtins.object0:typing.overloadX"38"39"310"311"312"313"“
digitunicodedata.digitm
digitunicodedata.digit"
builtins.int"builtins.int*
builtins.str"builtins.str0:typing.overloadX™
digitunicodedata.digit"ç
"Union[builtins.int,unicodedata._T]
builtins.int"builtins.intG
unicodedata._T"
builtins.object"builtins.object"builtins.object*
builtins.str"builtins.str*IG
unicodedata._T"
builtins.object"builtins.object"builtins.object0:typing.overloadX"38"39"310"311"312"313"Ã
nameunicodedata.namek
nameunicodedata.name"
builtins.str"builtins.str*
builtins.str"builtins.str0:typing.overloadX®
nameunicodedata.name"ç
"Union[builtins.str,unicodedata._T]
builtins.str"builtins.strG
unicodedata._T"
builtins.object"builtins.object"builtins.object*
builtins.str"builtins.str*IG
unicodedata._T"
builtins.object"builtins.object"builtins.object0:typing.overloadX"38"39"310"311"312"313"Ë
numericunicodedata.numericu
numericunicodedata.numeric" 
builtins.float"builtins.float*
builtins.str"builtins.str0:typing.overloadX¥
numericunicodedata.numeric"ì
$Union[builtins.float,unicodedata._T] 
builtins.float"builtins.floatG
unicodedata._T"
builtins.object"builtins.object"builtins.object*
builtins.str"builtins.str*IG
unicodedata._T"
builtins.object"builtins.object"builtins.object0:typing.overloadX"38"39"310"311"312"313*£
__annotations__unicodedata.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*b
	ucd_3_2_0unicodedata.ucd_3_2_0"
unicodedata.UCD"unicodedata.UCD*38*39*310*311*312*313*h
unidata_versionunicodedata.unidata_version
builtins.str"builtins.str*38*39*310*311*312*313*9
ucnhash_CAPIunicodedata.ucnhash_CAPI
Any*38*39