
+sqlalchemy.dialects.postgresql.pypostgresql®
	PGNumeric5sqlalchemy.dialects.postgresql.pypostgresql.PGNumeric"sqlalchemy.sql.sqltypes.Numeric*â
bind_processorDsqlalchemy.dialects.postgresql.pypostgresql.PGNumeric.bind_processor*
self*
dialectz38z39z310z311z312z313*ö
result_processorFsqlalchemy.dialects.postgresql.pypostgresql.PGNumeric.result_processor*
self*
dialect*
coltypez38z39z310z311z312z313j38j39j310j311j312j313¬
PGExecutionContext_pypostgresqlKsqlalchemy.dialects.postgresql.pypostgresql.PGExecutionContext_pypostgresql"6sqlalchemy.dialects.postgresql.base.PGExecutionContextj38j39j310j311j312j313∆
PGDialect_pypostgresqlBsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql"-sqlalchemy.dialects.postgresql.base.PGDialect*ê
dbapiHsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.dbapi*
cls0:builtins.classmethodpz38z39z310z311z312z313*‹
dbapi_exception_translation_mapbsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.dbapi_exception_translation_map*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*ú
create_connect_argsVsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.create_connect_args*
self*
urlz38z39z310z311z312z313*™
is_disconnectPsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.is_disconnect*
self*
e*

connection*

cursorz38z39z310z311z312z313j38j39j310j311j312j313rç
driverIsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.driver
builtins.str"builtins.str*38*39*310*311*312*313r≥
supports_statement_cache[sqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.supports_statement_cache
builtins.bool"builtins.bool*38*39*310*311*312*313rπ
supports_unicode_statements^sqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.supports_unicode_statements
builtins.bool"builtins.bool*38*39*310*311*312*313rØ
supports_unicode_bindsYsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.supports_unicode_binds
builtins.bool"builtins.bool*38*39*310*311*312*313rî
description_encodingWsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.description_encoding
Any*38*39*310*311*312*313r•
default_paramstyleUsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.default_paramstyle
builtins.str"builtins.str*38*39*310*311*312*313rØ
supports_sane_rowcountYsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.supports_sane_rowcount
builtins.bool"builtins.bool*38*39*310*311*312*313rª
supports_sane_multi_rowcount_sqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.supports_sane_multi_rowcount
builtins.bool"builtins.bool*38*39*310*311*312*313r|
colspecsKsqlalchemy.dialects.postgresql.pypostgresql.PGDialect_pypostgresql.colspecs
Any*38*39*310*311*312*313*√
__annotations__;sqlalchemy.dialects.postgresql.pypostgresql.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313