
pygments.filters§
CodeTagFilterpygments.filters.CodeTagFilter"pygments.filter.Filter*À
__init__'pygments.filters.CodeTagFilter.__init__"
None*J
self@
pygments.filters.CodeTagFilter"pygments.filters.CodeTagFilter*
options
Anyz38z39z310z311z312z313z314*ž
filter%pygments.filters.CodeTagFilter.filter"Û
>typing.Iterator[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterator*J
self@
pygments.filters.CodeTagFilter"pygments.filters.CodeTagFilter*7
lexer,
pygments.lexer.Lexer"pygments.lexer.Lexer*è
streamÛ
>typing.Iterable[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterablez38z39z310z311z312z313z314j38j39j310j311j312j313j314rY
tag_re%pygments.filters.CodeTagFilter.tag_re
Any*38*39*310*311*312*313*314Ô

SymbolFilterpygments.filters.SymbolFilter"pygments.filter.Filter*½
__init__&pygments.filters.SymbolFilter.__init__"
None*H
self>
pygments.filters.SymbolFilter"pygments.filters.SymbolFilter*
options
Anyz38z39z310z311z312z313z314*›
filter$pygments.filters.SymbolFilter.filter"Û
>typing.Iterator[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterator*H
self>
pygments.filters.SymbolFilter"pygments.filters.SymbolFilter*7
lexer,
pygments.lexer.Lexer"pygments.lexer.Lexer*è
streamÛ
>typing.Iterable[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterablez38z39z310z311z312z313z314j38j39j310j311j312j313j314rf
latex_symbols+pygments.filters.SymbolFilter.latex_symbols
Any*38*39*310*311*312*313*314rl
isabelle_symbols.pygments.filters.SymbolFilter.isabelle_symbols
Any*38*39*310*311*312*313*314r\
lang_map&pygments.filters.SymbolFilter.lang_map
Any*38*39*310*311*312*313*314rZ
symbols%pygments.filters.SymbolFilter.symbols
Any*38*39*310*311*312*313*314Í
KeywordCaseFilter"pygments.filters.KeywordCaseFilter"pygments.filter.Filter*Ì
__init__+pygments.filters.KeywordCaseFilter.__init__"
None*R
selfH
"pygments.filters.KeywordCaseFilter""pygments.filters.KeywordCaseFilter*
options
Anyz38z39z310z311z312z313z314*ª
filter)pygments.filters.KeywordCaseFilter.filter"Û
>typing.Iterator[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterator*R
selfH
"pygments.filters.KeywordCaseFilter""pygments.filters.KeywordCaseFilter*7
lexer,
pygments.lexer.Lexer"pygments.lexer.Lexer*è
streamÛ
>typing.Iterable[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterablez38z39z310z311z312z313z314j38j39j310j311j312j313j314r_
convert*pygments.filters.KeywordCaseFilter.convert
Any*38*39*310*311*312*313*314Â	
NameHighlightFilter$pygments.filters.NameHighlightFilter"pygments.filter.Filter*Ò
__init__-pygments.filters.NameHighlightFilter.__init__"
None*V
selfL
$pygments.filters.NameHighlightFilter"$pygments.filters.NameHighlightFilter*
options
Anyz38z39z310z311z312z313z314*°
filter+pygments.filters.NameHighlightFilter.filter"Û
>typing.Iterator[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterator*V
selfL
$pygments.filters.NameHighlightFilter"$pygments.filters.NameHighlightFilter*7
lexer,
pygments.lexer.Lexer"pygments.lexer.Lexer*è
streamÛ
>typing.Iterable[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterablez38z39z310z311z312z313z314j38j39j310j311j312j313j314r]
names*pygments.filters.NameHighlightFilter.names
Any*38*39*310*311*312*313*314re
	tokentype.pygments.filters.NameHighlightFilter.tokentype
Any*38*39*310*311*312*313*314^

ErrorTokenpygments.filters.ErrorToken"builtins.Exceptionj38j39j310j311j312j313j314‡	
RaiseOnErrorTokenFilter(pygments.filters.RaiseOnErrorTokenFilter"pygments.filter.Filter*Þ
__init__1pygments.filters.RaiseOnErrorTokenFilter.__init__"
None*^
selfT
(pygments.filters.RaiseOnErrorTokenFilter"(pygments.filters.RaiseOnErrorTokenFilter*
options
Anyz38z39z310z311z312z313z314*¼
filter/pygments.filters.RaiseOnErrorTokenFilter.filter"Û
>typing.Iterator[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterator*^
selfT
(pygments.filters.RaiseOnErrorTokenFilter"(pygments.filters.RaiseOnErrorTokenFilter*7
lexer,
pygments.lexer.Lexer"pygments.lexer.Lexer*è
streamÛ
>typing.Iterable[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterablez38z39z310z311z312z313z314j38j39j310j311j312j313j314ri
	exception2pygments.filters.RaiseOnErrorTokenFilter.exception
Any*38*39*310*311*312*313*314ý
VisibleWhitespaceFilter(pygments.filters.VisibleWhitespaceFilter"pygments.filter.Filter*Þ
__init__1pygments.filters.VisibleWhitespaceFilter.__init__"
None*^
selfT
(pygments.filters.VisibleWhitespaceFilter"(pygments.filters.VisibleWhitespaceFilter*
options
Anyz38z39z310z311z312z313z314*¼
filter/pygments.filters.VisibleWhitespaceFilter.filter"Û
>typing.Iterator[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterator*^
selfT
(pygments.filters.VisibleWhitespaceFilter"(pygments.filters.VisibleWhitespaceFilter*7
lexer,
pygments.lexer.Lexer"pygments.lexer.Lexer*è
streamÛ
>typing.Iterable[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterablez38z39z310z311z312z313z314j38j39j310j311j312j313j314r_
wstt-pygments.filters.VisibleWhitespaceFilter.wstt
Any*38*39*310*311*312*313*314„	
GobbleFilterpygments.filters.GobbleFilter"pygments.filter.Filter*½
__init__&pygments.filters.GobbleFilter.__init__"
None*H
self>
pygments.filters.GobbleFilter"pygments.filters.GobbleFilter*
options
Anyz38z39z310z311z312z313z314*n
gobble$pygments.filters.GobbleFilter.gobble*
self*	
value*
leftz38z39z310z311z312z313z314*›
filter$pygments.filters.GobbleFilter.filter"Û
>typing.Iterator[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterator*H
self>
pygments.filters.GobbleFilter"pygments.filters.GobbleFilter*7
lexer,
pygments.lexer.Lexer"pygments.lexer.Lexer*è
streamÛ
>typing.Iterable[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterablez38z39z310z311z312z313z314j38j39j310j311j312j313j314rN
npygments.filters.GobbleFilter.n
Any*38*39*310*311*312*313*314ä
TokenMergeFilter!pygments.filters.TokenMergeFilter"pygments.filter.Filter*É
__init__*pygments.filters.TokenMergeFilter.__init__"
None*P
selfF
!pygments.filters.TokenMergeFilter"!pygments.filters.TokenMergeFilter*
options
Anyz38z39z310z311z312z313z314*§
filter(pygments.filters.TokenMergeFilter.filter"Û
>typing.Iterator[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterator*P
selfF
!pygments.filters.TokenMergeFilter"!pygments.filters.TokenMergeFilter*7
lexer,
pygments.lexer.Lexer"pygments.lexer.Lexer*è
streamÛ
>typing.Iterable[Tuple[pygments.token._TokenType,builtins.str]]‡
-Tuple[pygments.token._TokenType,builtins.str]6
pygments.token._TokenType"pygments.token._TokenType
builtins.str"builtins.str"typing.Iterablez38z39z310z311z312z313z314j38j39j310j311j312j313j314h
find_filter_class"pygments.filters.find_filter_class*

filternamez38z39z310z311z312z313z314w
get_filter_by_name#pygments.filters.get_filter_by_name*

filtername*
optionsz38z39z310z311z312z313z314Ä
get_all_filters pygments.filters.get_all_filters"n
(typing.Generator[builtins.str,None,None]
builtins.str"builtins.str
None
None"typing.Generatorz38z39z310z311z312z313z314*’
__path__pygments.filters.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*314*­
__annotations__ pygments.filters.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*M
FILTERSpygments.filters.FILTERS
Any*38*39*310*311*312*313*314