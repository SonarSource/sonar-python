
sqlalchemy.pool¿
Poolsqlalchemy.pool.base.Pool"sqlalchemy.log.Identified*£
__init__"sqlalchemy.pool.base.Pool.__init__"
None*@
self6
sqlalchemy.pool.base.Pool"sqlalchemy.pool.base.Pool*X
creatorK
CallableType[builtins.function]&
builtins.function"builtins.function*+
recycle
builtins.int"builtins.int *g
echo[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *o
logging_name[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *5
reset_on_return
builtins.bool"builtins.bool *i
events[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *j
dialect[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *.
pre_ping
builtins.bool"builtins.bool *l
	_dispatch[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313*ñ
recreate"sqlalchemy.pool.base.Pool.recreate"
None*@
self6
sqlalchemy.pool.base.Pool"sqlalchemy.pool.base.Poolz38z39z310z311z312z313*î
dispose!sqlalchemy.pool.base.Pool.dispose"
None*@
self6
sqlalchemy.pool.base.Pool"sqlalchemy.pool.base.Poolz38z39z310z311z312z313*R
connect!sqlalchemy.pool.base.Pool.connect*
selfz38z39z310z311z312z313*í
status sqlalchemy.pool.base.Pool.status"
None*@
self6
sqlalchemy.pool.base.Pool"sqlalchemy.pool.base.Poolz38z39z310z311z312z313j38j39j310j311j312j313r[
logging_name&sqlalchemy.pool.base.Pool.logging_name
Any*38*39*310*311*312*313rK
echosqlalchemy.pool.base.Pool.echo
Any*38*39*310*311*312*313r}
dispatch"sqlalchemy.pool.base.Pool.dispatch1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313Æ
AssertionPool"sqlalchemy.pool.impl.AssertionPool"sqlalchemy.pool.base.Pool*’
__init__+sqlalchemy.pool.impl.AssertionPool.__init__"
None*R
selfH
"sqlalchemy.pool.impl.AssertionPool""sqlalchemy.pool.impl.AssertionPool*
args
Any*
kw
Anyz38z39z310z311z312z313*Y
status)sqlalchemy.pool.impl.AssertionPool.status*
selfz38z39z310z311z312z313*Ø
dispose*sqlalchemy.pool.impl.AssertionPool.dispose"
None*R
selfH
"sqlalchemy.pool.impl.AssertionPool""sqlalchemy.pool.impl.AssertionPoolz38z39z310z311z312z313*]
recreate+sqlalchemy.pool.impl.AssertionPool.recreate*
selfz38z39z310z311z312z313j38j39j310j311j312j313
AsyncAdaptedQueuePool*sqlalchemy.pool.impl.AsyncAdaptedQueuePool"sqlalchemy.pool.impl.QueuePoolj38j39j310j311j312j313õ
FallbackAsyncAdaptedQueuePool2sqlalchemy.pool.impl.FallbackAsyncAdaptedQueuePool"*sqlalchemy.pool.impl.AsyncAdaptedQueuePoolj38j39j310j311j312j313≥
NullPoolsqlalchemy.pool.impl.NullPool"sqlalchemy.pool.base.Pool*T
status$sqlalchemy.pool.impl.NullPool.status*
selfz38z39z310z311z312z313*X
recreate&sqlalchemy.pool.impl.NullPool.recreate*
selfz38z39z310z311z312z313*†
dispose%sqlalchemy.pool.impl.NullPool.dispose"
None*H
self>
sqlalchemy.pool.impl.NullPool"sqlalchemy.pool.impl.NullPoolz38z39z310z311z312z313j38j39j310j311j312j313é

	QueuePoolsqlalchemy.pool.impl.QueuePool"sqlalchemy.pool.base.Pool*é
__init__'sqlalchemy.pool.impl.QueuePool.__init__"
None*J
self@
sqlalchemy.pool.impl.QueuePool"sqlalchemy.pool.impl.QueuePool*
creator
Any*-
	pool_size
builtins.int"builtins.int *0
max_overflow
builtins.int"builtins.int */
timeout 
builtins.float"builtins.float *.
use_lifo
builtins.bool"builtins.bool *
kw
Anyz38z39z310z311z312z313*Y
recreate'sqlalchemy.pool.impl.QueuePool.recreate*
selfz38z39z310z311z312z313*£
dispose&sqlalchemy.pool.impl.QueuePool.dispose"
None*J
self@
sqlalchemy.pool.impl.QueuePool"sqlalchemy.pool.impl.QueuePoolz38z39z310z311z312z313*U
status%sqlalchemy.pool.impl.QueuePool.status*
selfz38z39z310z311z312z313*Q
size#sqlalchemy.pool.impl.QueuePool.size*
selfz38z39z310z311z312z313*W
timeout&sqlalchemy.pool.impl.QueuePool.timeout*
selfz38z39z310z311z312z313*[
	checkedin(sqlalchemy.pool.impl.QueuePool.checkedin*
selfz38z39z310z311z312z313*Y
overflow'sqlalchemy.pool.impl.QueuePool.overflow*
selfz38z39z310z311z312z313*]

checkedout)sqlalchemy.pool.impl.QueuePool.checkedout*
selfz38z39z310z311z312z313j38j39j310j311j312j313€
SingletonThreadPool(sqlalchemy.pool.impl.SingletonThreadPool"sqlalchemy.pool.base.Pool*ô
__init__1sqlalchemy.pool.impl.SingletonThreadPool.__init__"
None*^
selfT
(sqlalchemy.pool.impl.SingletonThreadPool"(sqlalchemy.pool.impl.SingletonThreadPool*
creator
Any*-
	pool_size
builtins.int"builtins.int *
kw
Anyz38z39z310z311z312z313*c
recreate1sqlalchemy.pool.impl.SingletonThreadPool.recreate*
selfz38z39z310z311z312z313*¡
dispose0sqlalchemy.pool.impl.SingletonThreadPool.dispose"
None*^
selfT
(sqlalchemy.pool.impl.SingletonThreadPool"(sqlalchemy.pool.impl.SingletonThreadPoolz38z39z310z311z312z313*_
status/sqlalchemy.pool.impl.SingletonThreadPool.status*
selfz38z39z310z311z312z313*a
connect0sqlalchemy.pool.impl.SingletonThreadPool.connect*
selfz38z39z310z311z312z313j38j39j310j311j312j313rZ
size-sqlalchemy.pool.impl.SingletonThreadPool.size
Any*38*39*310*311*312*313”

StaticPoolsqlalchemy.pool.impl.StaticPool"sqlalchemy.pool.base.Pool*è

connection*sqlalchemy.pool.impl.StaticPool.connection*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313*V
status&sqlalchemy.pool.impl.StaticPool.status*
selfz38z39z310z311z312z313*¶
dispose'sqlalchemy.pool.impl.StaticPool.dispose"
None*L
selfB
sqlalchemy.pool.impl.StaticPool"sqlalchemy.pool.impl.StaticPoolz38z39z310z311z312z313*Z
recreate(sqlalchemy.pool.impl.StaticPool.recreate*
selfz38z39z310z311z312z313j38j39j310j311j312j313b
clear_managers*sqlalchemy.pool.dbapi_proxy.clear_managers"
Nonez38z39z310z311z312z313`
manage"sqlalchemy.pool.dbapi_proxy.manage*

module*

paramsz38z39z310z311z312z313*å
__path__sqlalchemy.pool.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*ß
__annotations__sqlalchemy.pool.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*V
reset_commit!sqlalchemy.pool.base.reset_commit
Any*38*39*310*311*312*313*R

reset_nonesqlalchemy.pool.base.reset_none
Any*38*39*310*311*312*313*Z
reset_rollback#sqlalchemy.pool.base.reset_rollback
Any*38*39*310*311*312*313*ä
__all__sqlalchemy.pool.__all__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313