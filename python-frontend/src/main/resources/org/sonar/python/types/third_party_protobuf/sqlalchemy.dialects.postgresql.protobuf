
sqlalchemy.dialects.postgresql§
ARRAY*sqlalchemy.dialects.postgresql.array.ARRAY"sqlalchemy.sql.sqltypes.ARRAY*π
__init__3sqlalchemy.dialects.postgresql.array.ARRAY.__init__"
None*b
selfX
*sqlalchemy.dialects.postgresql.array.ARRAY"*sqlalchemy.dialects.postgresql.array.ARRAY*
	item_type
Any*.
as_tuple
builtins.bool"builtins.bool *m

dimensions[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *2
zero_indexes
builtins.bool"builtins.bool z38z39z310z311z312z313z314*Å
hashable3sqlalchemy.dialects.postgresql.array.ARRAY.hashable*
self0:builtins.property`z38z39z310z311z312z313z314*á
python_type6sqlalchemy.dialects.postgresql.array.ARRAY.python_type*
self0:builtins.property`z38z39z310z311z312z313z314*Ñ
compare_values9sqlalchemy.dialects.postgresql.array.ARRAY.compare_values*
self*
x*
yz38z39z310z311z312z313z314*á
bind_expression:sqlalchemy.dialects.postgresql.array.ARRAY.bind_expression*
self*
	bindvaluez38z39z310z311z312z313z314*É
bind_processor9sqlalchemy.dialects.postgresql.array.ARRAY.bind_processor*
self*
dialectz38z39z310z311z312z313z314*î
result_processor;sqlalchemy.dialects.postgresql.array.ARRAY.result_processor*
self*
dialect*
coltypez38z39z310z311z312z313z314j38j39j310j311j312j313j314r}
comparator_factory=sqlalchemy.dialects.postgresql.array.ARRAY.comparator_factory
Any*38*39*310*311*312*313*314rk
	item_type4sqlalchemy.dialects.postgresql.array.ARRAY.item_type
Any*38*39*310*311*312*313*314ri
as_tuple3sqlalchemy.dialects.postgresql.array.ARRAY.as_tuple
Any*38*39*310*311*312*313*314rm

dimensions5sqlalchemy.dialects.postgresql.array.ARRAY.dimensions
Any*38*39*310*311*312*313*314rq
zero_indexes7sqlalchemy.dialects.postgresql.array.ARRAY.zero_indexes
Any*38*39*310*311*312*313*314Á	
array*sqlalchemy.dialects.postgresql.array.array""sqlalchemy.sql.elements.ClauseList"%sqlalchemy.sql.elements.ColumnElement*ı
__init__3sqlalchemy.dialects.postgresql.array.array.__init__"
None*b
selfX
*sqlalchemy.dialects.postgresql.array.array"*sqlalchemy.dialects.postgresql.array.array*
clauses
Any*
kw
Anyz38z39z310z311z312z313z314*Ω

self_group5sqlalchemy.dialects.postgresql.array.array.self_group"
Any*b
selfX
*sqlalchemy.dialects.postgresql.array.array"*sqlalchemy.dialects.postgresql.array.array*j
against[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314rä
__visit_name__9sqlalchemy.dialects.postgresql.array.array.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314rê
stringify_dialect<sqlalchemy.dialects.postgresql.array.array.stringify_dialect
builtins.str"builtins.str*38*39*310*311*312*313*314rä
inherit_cache8sqlalchemy.dialects.postgresql.array.array.inherit_cache
builtins.bool"builtins.bool*38*39*310*311*312*313*314ra
type/sqlalchemy.dialects.postgresql.array.array.type
Any*38*39*310*311*312*313*314Ì
BIGINTsqlalchemy.sql.sqltypes.BIGINT""sqlalchemy.sql.sqltypes.BigIntegerj38j39j310j311j312j313j314r~
__visit_name__-sqlalchemy.sql.sqltypes.BIGINT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314©
BIT'sqlalchemy.dialects.postgresql.base.BIT""sqlalchemy.sql.type_api.TypeEngine*ﬂ
__init__0sqlalchemy.dialects.postgresql.base.BIT.__init__"
None*\
selfR
'sqlalchemy.dialects.postgresql.base.BIT"'sqlalchemy.dialects.postgresql.base.BIT*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *-
varying
builtins.bool"builtins.bool z38z39z310z311z312z313z314j38j39j310j311j312j313j314rá
__visit_name__6sqlalchemy.dialects.postgresql.base.BIT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314rb
length.sqlalchemy.dialects.postgresql.base.BIT.length
Any*38*39*310*311*312*313*314rd
varying/sqlalchemy.dialects.postgresql.base.BIT.varying
Any*38*39*310*311*312*313*314Ì
BOOLEANsqlalchemy.sql.sqltypes.BOOLEAN"sqlalchemy.sql.sqltypes.Booleanj38j39j310j311j312j313j314r
__visit_name__.sqlalchemy.sql.sqltypes.BOOLEAN.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ñ
BYTEA)sqlalchemy.dialects.postgresql.base.BYTEA"#sqlalchemy.sql.sqltypes.LargeBinaryj38j39j310j311j312j313j314râ
__visit_name__8sqlalchemy.dialects.postgresql.base.BYTEA.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314„
CHARsqlalchemy.sql.sqltypes.CHAR"sqlalchemy.sql.sqltypes.Stringj38j39j310j311j312j313j314r|
__visit_name__+sqlalchemy.sql.sqltypes.CHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ä
CIDR(sqlalchemy.dialects.postgresql.base.CIDR""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.postgresql.base.CIDR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314·
DATEsqlalchemy.sql.sqltypes.DATE"sqlalchemy.sql.sqltypes.Datej38j39j310j311j312j313j314r|
__visit_name__+sqlalchemy.sql.sqltypes.DATE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314ü
DOUBLE_PRECISION4sqlalchemy.dialects.postgresql.base.DOUBLE_PRECISION"sqlalchemy.sql.sqltypes.Floatj38j39j310j311j312j313j314rî
__visit_name__Csqlalchemy.dialects.postgresql.base.DOUBLE_PRECISION.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314ˆ
ENUM(sqlalchemy.dialects.postgresql.base.ENUM")sqlalchemy.sql.type_api.NativeForEmulated"sqlalchemy.sql.sqltypes.Enum*Ì
__init__1sqlalchemy.dialects.postgresql.base.ENUM.__init__"
None*^
selfT
(sqlalchemy.dialects.postgresql.base.ENUM"(sqlalchemy.dialects.postgresql.base.ENUM*
enums
Any*
kw
Anyz38z39z310z311z312z313z314*≥
adapt_emulated_to_nativeAsqlalchemy.dialects.postgresql.base.ENUM.adapt_emulated_to_native*
cls*
impl*
kw0:builtins.classmethodpz38z39z310z311z312z313z314*ﬂ
create/sqlalchemy.dialects.postgresql.base.ENUM.create"
None*^
selfT
(sqlalchemy.dialects.postgresql.base.ENUM"(sqlalchemy.dialects.postgresql.base.ENUM*g
bind[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *0

checkfirst
builtins.bool"builtins.bool z38z39z310z311z312z313z314*€
drop-sqlalchemy.dialects.postgresql.base.ENUM.drop"
None*^
selfT
(sqlalchemy.dialects.postgresql.base.ENUM"(sqlalchemy.dialects.postgresql.base.ENUM*g
bind[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *0

checkfirst
builtins.bool"builtins.bool z38z39z310z311z312z313z314j38j39j310j311j312j313j314rÑ
native_enum4sqlalchemy.dialects.postgresql.base.ENUM.native_enum
builtins.bool"builtins.bool*38*39*310*311*312*313*314rm
create_type4sqlalchemy.dialects.postgresql.base.ENUM.create_type
Any*38*39*310*311*312*313*314Â
FLOATsqlalchemy.sql.sqltypes.FLOAT"sqlalchemy.sql.sqltypes.Floatj38j39j310j311j312j313j314r}
__visit_name__,sqlalchemy.sql.sqltypes.FLOAT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ä
INET(sqlalchemy.dialects.postgresql.base.INET""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.postgresql.base.INET.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ì
INTEGERsqlalchemy.sql.sqltypes.INTEGER"sqlalchemy.sql.sqltypes.Integerj38j39j310j311j312j313j314r
__visit_name__.sqlalchemy.sql.sqltypes.INTEGER.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314º
INTERVAL,sqlalchemy.dialects.postgresql.base.INTERVAL")sqlalchemy.sql.type_api.NativeForEmulated")sqlalchemy.sql.sqltypes._AbstractInterval*≠
__init__5sqlalchemy.dialects.postgresql.base.INTERVAL.__init__"
None*f
self\
,sqlalchemy.dialects.postgresql.base.INTERVAL",sqlalchemy.dialects.postgresql.base.INTERVAL*l
	precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *i
fields[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314*ª
adapt_emulated_to_nativeEsqlalchemy.dialects.postgresql.base.INTERVAL.adapt_emulated_to_native*
cls*
interval*
kw0:builtins.classmethodpz38z39z310z311z312z313z314*ç

as_generic7sqlalchemy.dialects.postgresql.base.INTERVAL.as_generic"
Any*f
self\
,sqlalchemy.dialects.postgresql.base.INTERVAL",sqlalchemy.dialects.postgresql.base.INTERVAL*4
allow_nulltype
builtins.bool"builtins.bool z38z39z310z311z312z313z314*â
python_type8sqlalchemy.dialects.postgresql.base.INTERVAL.python_type*
self0:builtins.property`z38z39z310z311z312z313z314*ô
coerce_compared_valueBsqlalchemy.dialects.postgresql.base.INTERVAL.coerce_compared_value*
self*
op*	
valuez38z39z310z311z312z313z314j38j39j310j311j312j313j314rå
__visit_name__;sqlalchemy.dialects.postgresql.base.INTERVAL.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314r~
native3sqlalchemy.dialects.postgresql.base.INTERVAL.native
builtins.bool"builtins.bool*38*39*310*311*312*313*314rm
	precision6sqlalchemy.dialects.postgresql.base.INTERVAL.precision
Any*38*39*310*311*312*313*314rg
fields3sqlalchemy.dialects.postgresql.base.INTERVAL.fields
Any*38*39*310*311*312*313*314â
MACADDR+sqlalchemy.dialects.postgresql.base.MACADDR""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rã
__visit_name__:sqlalchemy.dialects.postgresql.base.MACADDR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314å
MACADDR8,sqlalchemy.dialects.postgresql.base.MACADDR8""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rå
__visit_name__;sqlalchemy.dialects.postgresql.base.MACADDR8.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314É
MONEY)sqlalchemy.dialects.postgresql.base.MONEY""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314râ
__visit_name__8sqlalchemy.dialects.postgresql.base.MONEY.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ì
NUMERICsqlalchemy.sql.sqltypes.NUMERIC"sqlalchemy.sql.sqltypes.Numericj38j39j310j311j312j313j314r
__visit_name__.sqlalchemy.sql.sqltypes.NUMERIC.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314˝
OID'sqlalchemy.dialects.postgresql.base.OID""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rá
__visit_name__6sqlalchemy.dialects.postgresql.base.OID.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314‚
REALsqlalchemy.sql.sqltypes.REAL"sqlalchemy.sql.sqltypes.Floatj38j39j310j311j312j313j314r|
__visit_name__+sqlalchemy.sql.sqltypes.REAL.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314å
REGCLASS,sqlalchemy.dialects.postgresql.base.REGCLASS""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rå
__visit_name__;sqlalchemy.dialects.postgresql.base.REGCLASS.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314ˆ
SMALLINT sqlalchemy.sql.sqltypes.SMALLINT"$sqlalchemy.sql.sqltypes.SmallIntegerj38j39j310j311j312j313j314rÄ
__visit_name__/sqlalchemy.sql.sqltypes.SMALLINT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314·
TEXTsqlalchemy.sql.sqltypes.TEXT"sqlalchemy.sql.sqltypes.Textj38j39j310j311j312j313j314r|
__visit_name__+sqlalchemy.sql.sqltypes.TEXT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314√
TIME(sqlalchemy.dialects.postgresql.base.TIME"sqlalchemy.sql.sqltypes.TIME*Ê
__init__1sqlalchemy.dialects.postgresql.base.TIME.__init__"
None*^
selfT
(sqlalchemy.dialects.postgresql.base.TIME"(sqlalchemy.dialects.postgresql.base.TIME*.
timezone
builtins.bool"builtins.bool *l
	precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314ri
	precision2sqlalchemy.dialects.postgresql.base.TIME.precision
Any*38*39*310*311*312*313*314Ê
	TIMESTAMP-sqlalchemy.dialects.postgresql.base.TIMESTAMP"!sqlalchemy.sql.sqltypes.TIMESTAMP*ı
__init__6sqlalchemy.dialects.postgresql.base.TIMESTAMP.__init__"
None*h
self^
-sqlalchemy.dialects.postgresql.base.TIMESTAMP"-sqlalchemy.dialects.postgresql.base.TIMESTAMP*.
timezone
builtins.bool"builtins.bool *l
	precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314rn
	precision7sqlalchemy.dialects.postgresql.base.TIMESTAMP.precision
Any*38*39*310*311*312*313*314å
TSVECTOR,sqlalchemy.dialects.postgresql.base.TSVECTOR""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rå
__visit_name__;sqlalchemy.dialects.postgresql.base.TSVECTOR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314í
UUID(sqlalchemy.dialects.postgresql.base.UUID""sqlalchemy.sql.type_api.TypeEngine*˜
__init__1sqlalchemy.dialects.postgresql.base.UUID.__init__"
None*^
selfT
(sqlalchemy.dialects.postgresql.base.UUID"(sqlalchemy.dialects.postgresql.base.UUID*-
as_uuid
builtins.bool"builtins.bool z38z39z310z311z312z313z314*ï
coerce_compared_value>sqlalchemy.dialects.postgresql.base.UUID.coerce_compared_value*
self*
op*	
valuez38z39z310z311z312z313z314*Å
bind_processor7sqlalchemy.dialects.postgresql.base.UUID.bind_processor*
self*
dialectz38z39z310z311z312z313z314*í
result_processor9sqlalchemy.dialects.postgresql.base.UUID.result_processor*
self*
dialect*
coltypez38z39z310z311z312z313z314j38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.postgresql.base.UUID.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314re
as_uuid0sqlalchemy.dialects.postgresql.base.UUID.as_uuid
Any*38*39*310*311*312*313*314Ï
VARCHARsqlalchemy.sql.sqltypes.VARCHAR"sqlalchemy.sql.sqltypes.Stringj38j39j310j311j312j313j314r
__visit_name__.sqlalchemy.sql.sqltypes.VARCHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314û
CreateEnumType2sqlalchemy.dialects.postgresql.base.CreateEnumType""sqlalchemy.sql.ddl._CreateDropBasej38j39j310j311j312j313j314rí
__visit_name__Asqlalchemy.dialects.postgresql.base.CreateEnumType.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314ò
DropEnumType0sqlalchemy.dialects.postgresql.base.DropEnumType""sqlalchemy.sql.ddl._CreateDropBasej38j39j310j311j312j313j314rê
__visit_name__?sqlalchemy.dialects.postgresql.base.DropEnumType.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Û
Insert)sqlalchemy.dialects.postgresql.dml.Insert"sqlalchemy.sql.dml.Insert*ö
excluded2sqlalchemy.dialects.postgresql.dml.Insert.excluded*
self0:-sqlalchemy.util.langhelpers.memoized_propertyz38z39z310z311z312z313z314*ä
on_conflict_do_update?sqlalchemy.dialects.postgresql.dml.Insert.on_conflict_do_update"
None*`
selfV
)sqlalchemy.dialects.postgresql.dml.Insert")sqlalchemy.dialects.postgresql.dml.Insert*m

constraint[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *q
index_elements[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *n
index_where[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *g
set_[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
where[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314*π
on_conflict_do_nothing@sqlalchemy.dialects.postgresql.dml.Insert.on_conflict_do_nothing"
None*`
selfV
)sqlalchemy.dialects.postgresql.dml.Insert")sqlalchemy.dialects.postgresql.dml.Insert*m

constraint[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *q
index_elements[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *n
index_where[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314rè
stringify_dialect;sqlalchemy.dialects.postgresql.dml.Insert.stringify_dialect
builtins.str"builtins.str*38*39*310*311*312*313*314râ
inherit_cache7sqlalchemy.dialects.postgresql.dml.Insert.inherit_cache
builtins.bool"builtins.bool*38*39*310*311*312*313*314÷

ExcludeConstraint4sqlalchemy.dialects.postgresql.ext.ExcludeConstraint"0sqlalchemy.sql.schema.ColumnCollectionConstraint*î
__init__=sqlalchemy.dialects.postgresql.ext.ExcludeConstraint.__init__"
None*v
selfl
4sqlalchemy.dialects.postgresql.ext.ExcludeConstraint"4sqlalchemy.dialects.postgresql.ext.ExcludeConstraint*
elements
Any*
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rî
__visit_name__Csqlalchemy.dialects.postgresql.ext.ExcludeConstraint.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314rm
where:sqlalchemy.dialects.postgresql.ext.ExcludeConstraint.where
Any*38*39*310*311*312*313*314rî
inherit_cacheBsqlalchemy.dialects.postgresql.ext.ExcludeConstraint.inherit_cache
builtins.bool"builtins.bool*38*39*310*311*312*313*314r≤
create_drop_stringify_dialectRsqlalchemy.dialects.postgresql.ext.ExcludeConstraint.create_drop_stringify_dialect
builtins.str"builtins.str*38*39*310*311*312*313*314ru
	operators>sqlalchemy.dialects.postgresql.ext.ExcludeConstraint.operators
Any*38*39*310*311*312*313*314rm
using:sqlalchemy.dialects.postgresql.ext.ExcludeConstraint.using
Any*38*39*310*311*312*313*314ri
ops8sqlalchemy.dialects.postgresql.ext.ExcludeConstraint.ops
Any*38*39*310*311*312*313*314™
aggregate_order_by5sqlalchemy.dialects.postgresql.ext.aggregate_order_by"%sqlalchemy.sql.elements.ColumnElement*õ
__init__>sqlalchemy.dialects.postgresql.ext.aggregate_order_by.__init__"
None*x
selfn
5sqlalchemy.dialects.postgresql.ext.aggregate_order_by"5sqlalchemy.dialects.postgresql.ext.aggregate_order_by*
target
Any*
order_by
Anyz38z39z310z311z312z313z314*ﬁ

self_group@sqlalchemy.dialects.postgresql.ext.aggregate_order_by.self_group"
Any*x
selfn
5sqlalchemy.dialects.postgresql.ext.aggregate_order_by"5sqlalchemy.dialects.postgresql.ext.aggregate_order_by*j
against[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314*â
get_childrenBsqlalchemy.dialects.postgresql.ext.aggregate_order_by.get_children*
self*

kwargsz38z39z310z311z312z313z314j38j39j310j311j312j313j314rï
__visit_name__Dsqlalchemy.dialects.postgresql.ext.aggregate_order_by.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314rõ
stringify_dialectGsqlalchemy.dialects.postgresql.ext.aggregate_order_by.stringify_dialect
builtins.str"builtins.str*38*39*310*311*312*313*314rp
target<sqlalchemy.dialects.postgresql.ext.aggregate_order_by.target
Any*38*39*310*311*312*313*314rl
type:sqlalchemy.dialects.postgresql.ext.aggregate_order_by.type
Any*38*39*310*311*312*313*314rt
order_by>sqlalchemy.dialects.postgresql.ext.aggregate_order_by.order_by
Any*38*39*310*311*312*313*314Æ

HSTORE,sqlalchemy.dialects.postgresql.hstore.HSTORE"!sqlalchemy.sql.sqltypes.Indexable"$sqlalchemy.sql.sqltypes.Concatenable""sqlalchemy.sql.type_api.TypeEngine*¬
__init__5sqlalchemy.dialects.postgresql.hstore.HSTORE.__init__"
None*f
self\
,sqlalchemy.dialects.postgresql.hstore.HSTORE",sqlalchemy.dialects.postgresql.hstore.HSTORE*l
	text_type[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314*Ö
bind_processor;sqlalchemy.dialects.postgresql.hstore.HSTORE.bind_processor*
self*
dialectz38z39z310z311z312z313z314*ñ
result_processor=sqlalchemy.dialects.postgresql.hstore.HSTORE.result_processor*
self*
dialect*
coltypez38z39z310z311z312z313z314j38j39j310j311j312j313j314rå
__visit_name__;sqlalchemy.dialects.postgresql.hstore.HSTORE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314rÇ
hashable5sqlalchemy.dialects.postgresql.hstore.HSTORE.hashable
builtins.bool"builtins.bool*38*39*310*311*312*313*314rm
	text_type6sqlalchemy.dialects.postgresql.hstore.HSTORE.text_type
Any*38*39*310*311*312*313*314r
comparator_factory?sqlalchemy.dialects.postgresql.hstore.HSTORE.comparator_factory
Any*38*39*310*311*312*313*314Ô
hstore,sqlalchemy.dialects.postgresql.hstore.hstore"(sqlalchemy.sql.functions.GenericFunctionj38j39j310j311j312j313j314rc
type1sqlalchemy.dialects.postgresql.hstore.hstore.type
Any*38*39*310*311*312*313*314rx
name1sqlalchemy.dialects.postgresql.hstore.hstore.name
builtins.str"builtins.str*38*39*310*311*312*313*314rå
inherit_cache:sqlalchemy.dialects.postgresql.hstore.hstore.inherit_cache
builtins.bool"builtins.bool*38*39*310*311*312*313*314 
JSON(sqlalchemy.dialects.postgresql.json.JSON"sqlalchemy.sql.sqltypes.JSON*Ï
__init__1sqlalchemy.dialects.postgresql.json.JSON.__init__"
None*^
selfT
(sqlalchemy.dialects.postgresql.json.JSON"(sqlalchemy.dialects.postgresql.json.JSON*2
none_as_null
builtins.bool"builtins.bool *n
astext_type[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314rm
astext_type4sqlalchemy.dialects.postgresql.json.JSON.astext_type
Any*38*39*310*311*312*313*314r{
comparator_factory;sqlalchemy.dialects.postgresql.json.JSON.comparator_factory
Any*38*39*310*311*312*313*314á
JSONB)sqlalchemy.dialects.postgresql.json.JSONB"(sqlalchemy.dialects.postgresql.json.JSONj38j39j310j311j312j313j314râ
__visit_name__8sqlalchemy.dialects.postgresql.json.JSONB.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314r|
comparator_factory<sqlalchemy.dialects.postgresql.json.JSONB.comparator_factory
Any*38*39*310*311*312*313*314…
	DATERANGE/sqlalchemy.dialects.postgresql.ranges.DATERANGE"4sqlalchemy.dialects.postgresql.ranges.RangeOperators""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rè
__visit_name__>sqlalchemy.dialects.postgresql.ranges.DATERANGE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314…
	INT4RANGE/sqlalchemy.dialects.postgresql.ranges.INT4RANGE"4sqlalchemy.dialects.postgresql.ranges.RangeOperators""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rè
__visit_name__>sqlalchemy.dialects.postgresql.ranges.INT4RANGE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314…
	INT8RANGE/sqlalchemy.dialects.postgresql.ranges.INT8RANGE"4sqlalchemy.dialects.postgresql.ranges.RangeOperators""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rè
__visit_name__>sqlalchemy.dialects.postgresql.ranges.INT8RANGE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314∆
NUMRANGE.sqlalchemy.dialects.postgresql.ranges.NUMRANGE"4sqlalchemy.dialects.postgresql.ranges.RangeOperators""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314ré
__visit_name__=sqlalchemy.dialects.postgresql.ranges.NUMRANGE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314√
TSRANGE-sqlalchemy.dialects.postgresql.ranges.TSRANGE"4sqlalchemy.dialects.postgresql.ranges.RangeOperators""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rç
__visit_name__<sqlalchemy.dialects.postgresql.ranges.TSRANGE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314…
	TSTZRANGE/sqlalchemy.dialects.postgresql.ranges.TSTZRANGE"4sqlalchemy.dialects.postgresql.ranges.RangeOperators""sqlalchemy.sql.type_api.TypeEnginej38j39j310j311j312j313j314rè
__visit_name__>sqlalchemy.dialects.postgresql.ranges.TSTZRANGE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314x
All(sqlalchemy.dialects.postgresql.array.All*	
other*
arrexpr*
operator z38z39z310z311z312z313z314x
Any(sqlalchemy.dialects.postgresql.array.Any*	
other*
arrexpr*
operator z38z39z310z311z312z313z314k
	array_agg,sqlalchemy.dialects.postgresql.ext.array_agg*
arg*
kwz38z39z310z311z312z313z314*†
__path__'sqlalchemy.dialects.postgresql.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*314*ª
__annotations__.sqlalchemy.dialects.postgresql.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*]
insert)sqlalchemy.dialects.postgresql.dml.insert
Any*38*39*310*311*312*313*314*õ
__all__&sqlalchemy.dialects.postgresql.__all__∆
ÉTuple[builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str
builtins.str"builtins.str*38*39*310*311*312*313*314*[
dialect&sqlalchemy.dialects.postgresql.dialect
Any*38*39*310*311*312*313*314