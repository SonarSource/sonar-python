
pandas.core.indexes.baseS
InvalidIndexError*pandas.core.indexes.base.InvalidIndexError"builtins.ExceptionÅÅ
Indexpandas.core.indexes.base.Index"pandas.core.base.IndexOpsMixin*≤1
str"pandas.core.indexes.base.Index.str"°
kpandas.core.strings.StringMethods[pandas.core.indexes.base.Index.Self,pandas.core.indexes.multi.MultiIndex]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.IndexL
$pandas.core.indexes.multi.MultiIndex"$pandas.core.indexes.multi.MultiIndex"!pandas.core.strings.StringMethods*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index0:builtins.property`*“
asi8#pandas.core.indexes.base.Index.asi8"â
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_int64*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*·
is_"pandas.core.indexes.base.Index.is_"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
other
Any*À
__len__&pandas.core.indexes.base.Index.__len__"
builtins.int"builtins.int*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*ä
	__array__(pandas.core.indexes.base.Index.__array__"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
dtype
Any *d
__array_wrap__-pandas.core.indexes.base.Index.__array_wrap__*
self*

result*
context *ß
dtype$pandas.core.indexes.base.Index.dtype"‹
STypeAlias[Union[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]]È
HUnion[numpy.dtype[numpy.generic],pandas.core.dtypes.base.ExtensionDtype]I
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtypeP
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype"pandas._typing.DtypeObj*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*Â
ravel$pandas.core.indexes.base.Index.ravel"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*)
order
builtins.str"builtins.str *@
view#pandas.core.indexes.base.Index.view*
self*	
cls *ú&
astype%pandas.core.indexes.base.Index.astype"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*Í
dtypeﬁ
ÙTypeAlias[Union[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],typing.Mapping[Any,Unknown]]]…
ÈUnion[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],typing.Mapping[Any,Unknown]]û	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype8
typing.Mapping[Any,Unknown]
Any "typing.Mapping"pandas._typing.DtypeArg**
copy
builtins.bool"builtins.bool *⁄
take#pandas.core.indexes.base.Index.take"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
indices
Any*(
axis
builtins.int"builtins.int *0

allow_fill
builtins.bool"builtins.bool *

fill_value
Any *
kwargs
Any*R
repeat%pandas.core.indexes.base.Index.repeat*
self*
repeats*

axis *˝/
copy#pandas.core.indexes.base.Index.copy"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*
name
Any **
deep
builtins.bool"builtins.bool *I
__copy__'pandas.core.indexes.base.Index.__copy__*
self*

kwargs*Q
__deepcopy__+pandas.core.indexes.base.Index.__deepcopy__*
self*

memo *Ú
format%pandas.core.indexes.base.Index.format"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index**
name
builtins.bool"builtins.bool *ò
	formatterÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None **
na_rep
builtins.str"builtins.str *e
to_native_types.pandas.core.indexes.base.Index.to_native_types*
self*
slicer *

kwargs*G
to_flat_index,pandas.core.indexes.base.Index.to_flat_index*
self*™
	to_series(pandas.core.indexes.base.Index.to_series"D
pandas.core.series.Series[Any]
Any"pandas.core.series.Series*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
index
Any *
name
Any *µ
to_frame'pandas.core.indexes.base.Index.to_frame":
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*+
index
builtins.bool"builtins.bool *
name
Any *õ
	set_names(pandas.core.indexes.base.Index.set_names"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
names
Any*
level
Any *-
inplace
builtins.bool"builtins.bool *˛
rename%pandas.core.indexes.base.Index.rename"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
name
Any*-
inplace
builtins.bool"builtins.bool *Í
nlevels&pandas.core.indexes.base.Index.nlevels"
builtins.int"builtins.int*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*®
	sortlevel(pandas.core.indexes.base.Index.sortlevel"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
level
Any */
	ascending
builtins.bool"builtins.bool *
sort_remaining
Any *Ñ
get_level_values/pandas.core.indexes.base.Index.get_level_values"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*k
level`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*Ñ
	droplevel(pandas.core.indexes.base.Index.droplevel"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*ø
level±
LUnion[TypeAlias[Union[typing.Hashable,builtins.int]],builtins.list[Unknown]]≥
.TypeAlias[Union[typing.Hashable,builtins.int]]i
#Union[typing.Hashable,builtins.int]"
typing.Hashable"typing.Hashable
builtins.int"builtins.int"pandas._typing.Level)
builtins.list[Unknown] "builtins.list *å
is_monotonic_increasing6pandas.core.indexes.base.Index.is_monotonic_increasing"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*å
is_monotonic_decreasing6pandas.core.indexes.base.Index.is_monotonic_decreasing"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*
	is_unique(pandas.core.indexes.base.Index.is_unique"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*˙
has_duplicates-pandas.core.indexes.base.Index.has_duplicates"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*€

is_boolean)pandas.core.indexes.base.Index.is_boolean"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*€

is_integer)pandas.core.indexes.base.Index.is_integer"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*›
is_floating*pandas.core.indexes.base.Index.is_floating"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*€

is_numeric)pandas.core.indexes.base.Index.is_numeric"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*Ÿ
	is_object(pandas.core.indexes.base.Index.is_object"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*„
is_categorical-pandas.core.indexes.base.Index.is_categorical"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*›
is_interval*pandas.core.indexes.base.Index.is_interval"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*◊
is_mixed'pandas.core.indexes.base.Index.is_mixed"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*G
holds_integer,pandas.core.indexes.base.Index.holds_integer*
self*^
inferred_type,pandas.core.indexes.base.Index.inferred_type*
self0:builtins.property`*A

__reduce__)pandas.core.indexes.base.Index.__reduce__*
self*Ï
hasnans&pandas.core.indexes.base.Index.hasnans"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*5
isna#pandas.core.indexes.base.Index.isna*
self*7
notna$pandas.core.indexes.base.Index.notna*
self*V
fillna%pandas.core.indexes.base.Index.fillna*
self*
value *
downcast *˜0
dropna%pandas.core.indexes.base.Index.dropna"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*¥
how®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str *÷/
unique%pandas.core.indexes.base.Index.unique"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*
level
Any *á3
drop_duplicates.pandas.core.indexes.base.Index.drop_duplicates"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*≤
keep•
[Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.bool]]á
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.NaPosition:
Literal[builtins.bool]	
builtins.bool"builtins.bool *—

duplicated)pandas.core.indexes.base.Index.duplicated"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*à
keep˚
IUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.bool]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str:
Literal[builtins.bool]	
builtins.bool"builtins.bool *À
__and__&pandas.core.indexes.base.Index.__and__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*Õ
__rand__'pandas.core.indexes.base.Index.__rand__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*…
__or__%pandas.core.indexes.base.Index.__or__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*À
__ror__&pandas.core.indexes.base.Index.__ror__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*À
__xor__&pandas.core.indexes.base.Index.__xor__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*Õ
__rxor__'pandas.core.indexes.base.Index.__rxor__"
NoReturn
*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
NoReturn
*∫/
__neg__&pandas.core.indexes.base.Index.__neg__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*«
__nonzero__*pandas.core.indexes.base.Index.__nonzero__"
None*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*Ÿ
union$pandas.core.indexes.base.Index.union"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*¿
other¥
RUnion[builtins.list[pandas._typing.HashableT],pandas.core.indexes.base.Index[Any]]ã
'builtins.list[pandas._typing.HashableT]Q
pandas._typing.HashableT"
typing.Hashable"typing.Hashable"typing.Hashable"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*
sort
Any *^
intersection+pandas.core.indexes.base.Index.intersection"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*ı.
otherÈ.
KUnion[builtins.list[pandas._typing.S1],pandas.core.indexes.base.Index.Self]‘
 builtins.list[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.list¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index**
sort
builtins.bool"builtins.bool *Î1

difference)pandas.core.indexes.base.Index.difference"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
otherø
=Union[builtins.list[Any],pandas.core.indexes.base.Index[Any]],
builtins.list[Any]
Any"builtins.listN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*S
sortG
Union[builtins.bool,None]
builtins.bool"builtins.bool
None *Ö_
symmetric_difference3pandas.core.indexes.base.Index.symmetric_difference"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*ı.
otherÈ.
KUnion[builtins.list[pandas._typing.S1],pandas.core.indexes.base.Index.Self]‘
 builtins.list[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"builtins.list¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*
result_name
Any *
sort
Any *∞
get_loc&pandas.core.indexes.base.Index.get_loc"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*ô
keyè
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label*π
method™
ãUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]‘
iTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]∆
^Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"pandas._typing.FillnaOptions7
Literal[builtins.str]	
builtins.str"builtins.str
None *
	tolerance
Any *{
get_indexer*pandas.core.indexes.base.Index.get_indexer*
self*

target*
method *
limit *
	tolerance *Ä
reindex&pandas.core.indexes.base.Index.reindex*
self*

target*
method *
level *
limit *
	tolerance *Ó
join#pandas.core.indexes.base.Index.join"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
other
Any*'
how
builtins.str"builtins.str *
level
Any *5
return_indexers
builtins.bool"builtins.bool **
sort
builtins.bool"builtins.bool *Ö
values%pandas.core.indexes.base.Index.values"9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*ö
array$pandas.core.indexes.base.Index.array"P
&pandas.core.arrays.base.ExtensionArray"&pandas.core.arrays.base.ExtensionArray*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*Ù
memory_usage+pandas.core.indexes.base.Index.memory_usage"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index**
deep
builtins.bool"builtins.bool *N
where$pandas.core.indexes.base.Index.where*
self*
cond*
other *˛
is_type_compatible1pandas.core.indexes.base.Index.is_type_compatible"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
kind
Any*‚
__contains__+pandas.core.indexes.base.Index.__contains__"
builtins.bool"builtins.bool*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*	
Any*’
__setitem__*pandas.core.indexes.base.Index.__setitem__"
None*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*	
Any*	
Any*D
append%pandas.core.indexes.base.Index.append*
self*	
other*P
putmask&pandas.core.indexes.base.Index.putmask*
self*
mask*	
value*Á
equals%pandas.core.indexes.base.Index.equals"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
other
Any*Ì
	identical(pandas.core.indexes.base.Index.identical"
builtins.bool"builtins.bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
other
Any*@
asof#pandas.core.indexes.base.Index.asof*
self*	
label*T
	asof_locs(pandas.core.indexes.base.Index.asof_locs*
self*	
where*
mask*≠
sort_values*pandas.core.indexes.base.Index.sort_values"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*4
return_indexer
builtins.bool"builtins.bool */
	ascending
builtins.bool"builtins.bool *·
sort#pandas.core.indexes.base.Index.sort"
None*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
args
Any*
kwargs
Any*˝
shift$pandas.core.indexes.base.Index.shift"
None*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*+
periods
builtins.int"builtins.int *
freq
Any *Q
argsort&pandas.core.indexes.base.Index.argsort*
self*
args*

kwargs*T
	get_value(pandas.core.indexes.base.Index.get_value*
self*

series*
key*˚
	set_value(pandas.core.indexes.base.Index.set_value"
None*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
arr
Any*
key
Any*
value
Any*e
get_indexer_non_unique5pandas.core.indexes.base.Index.get_indexer_non_unique*
self*

target*c
get_indexer_for.pandas.core.indexes.base.Index.get_indexer_for*
self*

target*

kwargs*Ú
groupby&pandas.core.indexes.base.Index.groupby"•
5builtins.dict[typing.Hashable,numpy.ndarray[Any,Any]]"
typing.Hashable"typing.Hashable9
numpy.ndarray[Any,Any]
Any
Any"numpy.ndarray"builtins.dict*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
values
Any*¨
map"pandas.core.indexes.base.Index.map"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
mapper
Any*
	na_action
Any *Â
isin#pandas.core.indexes.base.Index.isin"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
values
Any*
level
Any *k
slice_indexer,pandas.core.indexes.base.Index.slice_indexer*
self*
start *	
end *

step *`
get_slice_bound.pandas.core.indexes.base.Index.get_slice_bound*
self*	
label*
side*e

slice_locs)pandas.core.indexes.base.Index.slice_locs*
self*
start *	
end *

step *B
delete%pandas.core.indexes.base.Index.delete*
self*
loc*L
insert%pandas.core.indexes.base.Index.insert*
self*
loc*
item*˝/
drop#pandas.core.indexes.base.Index.drop"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*À
self¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*
labels
Any**
errors
builtins.str"builtins.str *ñ
shape$pandas.core.indexes.base.Index.shape"L
builtins.tuple[builtins.int]
builtins.int"builtins.int"builtins.tuple*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.property`*‹
__eq__%pandas.core.indexes.base.Index.__eq__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*$"
builtins.object"builtins.object*ä.
__iter__'pandas.core.indexes.base.Index.__iter__"ÿ
"typing.Iterator[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"typing.Iterator*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*‹
__ne__%pandas.core.indexes.base.Index.__ne__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*$"
builtins.object"builtins.object*¨J
__le__%pandas.core.indexes.base.Index.__le__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*©.¶.
<Union[pandas.core.indexes.base.Index.Self,pandas._typing.S1]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*¨J
__ge__%pandas.core.indexes.base.Index.__ge__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*©.¶.
<Union[pandas.core.indexes.base.Index.Self,pandas._typing.S1]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*¨J
__lt__%pandas.core.indexes.base.Index.__lt__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*©.¶.
<Union[pandas.core.indexes.base.Index.Self,pandas._typing.S1]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*¨J
__gt__%pandas.core.indexes.base.Index.__gt__"à
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_bool*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*©.¶.
<Union[pandas.core.indexes.base.Index.Self,pandas._typing.S1]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*»6
__floordiv__+pandas.core.indexes.base.Index.__floordiv__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*Å˛
ÅUnion[builtins.float,pandas.core.series.Series[builtins.int],pandas.core.series.Series[builtins.float],typing.Sequence[builtins.int],typing.Sequence[builtins.float],pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]] 
builtins.float"builtins.floatb
'pandas.core.series.Series[builtins.int]
builtins.int"builtins.int"pandas.core.series.Seriesh
)pandas.core.series.Series[builtins.float] 
builtins.float"builtins.float"pandas.core.series.SeriesN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.SequenceT
typing.Sequence[builtins.float] 
builtins.float"builtins.float"typing.Sequencel
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index2˝Ω
__new__&pandas.core.indexes.base.Index.__new__«$
__new__&pandas.core.indexes.base.Index.__new__"l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*ö
dataè
 Union[typing.Sequence[Union[builtins.int,numpy.integer[Any]]],pandas.core.base.IndexOpsMixin[builtins.int],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]¬
7typing.Sequence[Union[builtins.int,numpy.integer[Any]]]v
&Union[builtins.int,numpy.integer[Any]]
builtins.int"builtins.int,
numpy.integer[Any]
Any"numpy.integer"typing.Sequencel
,pandas.core.base.IndexOpsMixin[builtins.int]
builtins.int"builtins.int"pandas.core.base.IndexOpsMixinä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyint*°
dtypeì
HUnion[Literal[builtins.str],Type[builtins.int],Type[numpy.integer[Any]]]7
Literal[builtins.str]	
builtins.str"builtins.str:
Type[builtins.int]
builtins.int"builtins.int"typeP
Type[numpy.integer[Any]],
numpy.integer[Any]
Any"numpy.integer"type **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX‰
__new__&pandas.core.indexes.base.Index.__new__"l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*ü
dtypeì
HUnion[Literal[builtins.str],Type[builtins.int],Type[numpy.integer[Any]]]7
Literal[builtins.str]	
builtins.str"builtins.str:
Type[builtins.int]
builtins.int"builtins.int"typeP
Type[numpy.integer[Any]],
numpy.integer[Any]
Any"numpy.integer"type**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXÔ$
__new__&pandas.core.indexes.base.Index.__new__"r
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*∞
data•
œUnion[typing.Sequence[Union[builtins.float,numpy.floating[Any]]],pandas.core.base.IndexOpsMixin[builtins.float],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]Œ
:typing.Sequence[Union[builtins.float,numpy.floating[Any]]]
)Union[builtins.float,numpy.floating[Any]] 
builtins.float"builtins.float.
numpy.floating[Any]
Any"numpy.floating"typing.Sequencer
.pandas.core.base.IndexOpsMixin[builtins.float] 
builtins.float"builtins.float"pandas.core.base.IndexOpsMixinâ
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"pandas._typing.np_ndarray_float*≠
dtypeü
KUnion[Literal[builtins.str],Type[builtins.float],Type[numpy.floating[Any]]]7
Literal[builtins.str]	
builtins.str"builtins.str@
Type[builtins.float] 
builtins.float"builtins.float"typeS
Type[numpy.floating[Any]].
numpy.floating[Any]
Any"numpy.floating"type **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXˆ
__new__&pandas.core.indexes.base.Index.__new__"r
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*´
dtypeü
KUnion[Literal[builtins.str],Type[builtins.float],Type[numpy.floating[Any]]]7
Literal[builtins.str]	
builtins.str"builtins.str@
Type[builtins.float] 
builtins.float"builtins.float"typeS
Type[numpy.floating[Any]].
numpy.floating[Any]
Any"numpy.floating"type**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXˇ%
__new__&pandas.core.indexes.base.Index.__new__"x
0pandas.core.indexes.base.Index[builtins.complex]$
builtins.complex"builtins.complex"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*Å	
dataˆ
ﬁUnion[typing.Sequence[Union[builtins.complex,numpy.complexfloating[Any,Any]]],pandas.core.base.IndexOpsMixin[builtins.complex],TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]à
Gtyping.Sequence[Union[builtins.complex,numpy.complexfloating[Any,Any]]]´
6Union[builtins.complex,numpy.complexfloating[Any,Any]]$
builtins.complex"builtins.complexI
numpy.complexfloating[Any,Any]
Any
Any"numpy.complexfloating"typing.Sequencex
0pandas.core.base.IndexOpsMixin[builtins.complex]$
builtins.complex"builtins.complex"pandas.core.base.IndexOpsMixinã
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray"!pandas._typing.np_ndarray_complex*Ê
dtypeÿ
XUnion[Literal[builtins.str],Type[builtins.complex],Type[numpy.complexfloating[Any,Any]]]7
Literal[builtins.str]	
builtins.str"builtins.strF
Type[builtins.complex]$
builtins.complex"builtins.complex"typey
$Type[numpy.complexfloating[Any,Any]]I
numpy.complexfloating[Any,Any]
Any
Any"numpy.complexfloating"type **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXµ
__new__&pandas.core.indexes.base.Index.__new__"x
0pandas.core.indexes.base.Index[builtins.complex]$
builtins.complex"builtins.complex"pandas.core.indexes.base.Index*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*‰
dtypeÿ
XUnion[Literal[builtins.str],Type[builtins.complex],Type[numpy.complexfloating[Any,Any]]]7
Literal[builtins.str]	
builtins.str"builtins.strF
Type[builtins.complex]$
builtins.complex"builtins.complex"typey
$Type[numpy.complexfloating[Any,Any]]I
numpy.complexfloating[Any,Any]
Any
Any"numpy.complexfloating"type**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXäD
__new__&pandas.core.indexes.base.Index.__new__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*Ã
data¡
sUnion[typing.Sequence[Union[numpy.datetime64,datetime.datetime]],pandas.core.base.IndexOpsMixin[datetime.datetime]] 
:typing.Sequence[Union[numpy.datetime64,datetime.datetime]]{
)Union[numpy.datetime64,datetime.datetime]$
numpy.datetime64"numpy.datetime64&
datetime.datetime"datetime.datetime"typing.Sequence{
1pandas.core.base.IndexOpsMixin[datetime.datetime]&
datetime.datetime"datetime.datetime"pandas.core.base.IndexOpsMixin*ƒ&
dtype∂&
±TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]€
¶Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimestampDtypeArg **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXı@
__new__&pandas.core.indexes.base.Index.__new__"Z
+pandas.core.indexes.datetimes.DatetimeIndex"+pandas.core.indexes.datetimes.DatetimeIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*¬&
dtype∂&
±TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]€
¶Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimestampDtypeArg**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXí
__new__&pandas.core.indexes.base.Index.__new__"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*»
dataΩ
{Union[typing.Sequence[pandas._libs.tslibs.period.Period],pandas.core.base.IndexOpsMixin[pandas._libs.tslibs.period.Period]]ç
2typing.Sequence[pandas._libs.tslibs.period.Period]F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period"typing.Sequence´
Apandas.core.base.IndexOpsMixin[pandas._libs.tslibs.period.Period]F
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Period"pandas.core.base.IndexOpsMixin*[
dtypeN
%pandas.core.dtypes.dtypes.PeriodDtype"%pandas.core.dtypes.dtypes.PeriodDtype **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXÅ
__new__&pandas.core.indexes.base.Index.__new__"P
&pandas.core.indexes.period.PeriodIndex"&pandas.core.indexes.period.PeriodIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*Y
dtypeN
%pandas.core.dtypes.dtypes.PeriodDtype"%pandas.core.dtypes.dtypes.PeriodDtype**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX”B
__new__&pandas.core.indexes.base.Index.__new__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*€
data–
vUnion[typing.Sequence[Union[numpy.timedelta64,datetime.timedelta]],pandas.core.base.IndexOpsMixin[datetime.timedelta]]”
<typing.Sequence[Union[numpy.timedelta64,datetime.timedelta]]Å
+Union[numpy.timedelta64,datetime.timedelta]&
numpy.timedelta64"numpy.timedelta64(
datetime.timedelta"datetime.timedelta"typing.Sequence~
2pandas.core.base.IndexOpsMixin[datetime.timedelta](
datetime.timedelta"datetime.timedelta"pandas.core.base.IndexOpsMixin*˙$
dtypeÏ$
ÖTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Ω
˙Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimedeltaDtypeArg **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXØ?
__new__&pandas.core.indexes.base.Index.__new__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*¯$
dtypeÏ$
ÖTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Ω
˙Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str" pandas._typing.TimedeltaDtypeArg**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXó*
__new__&pandas.core.indexes.base.Index.__new__"ê
mpandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]Ú
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*£
dataò
ªUnion[typing.Sequence[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]],pandas.core.base.IndexOpsMixin[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]]⁄
Rtyping.Sequence[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]Ú
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"typing.Sequence¯
apandas.core.base.IndexOpsMixin[pandas._libs.interval.Interval[pandas._libs.interval._OrderableT]]Ú
Apandas._libs.interval.Interval[pandas._libs.interval._OrderableT]å
!pandas._libs.interval._OrderableT‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.Interval"pandas.core.base.IndexOpsMixin*D
dtype7
Literal[builtins.str]	
builtins.str"builtins.str **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXË
__new__&pandas.core.indexes.base.Index.__new__"Õ
Opandas.core.indexes.interval.IntervalIndex[pandas._libs.interval.Interval[Any]]N
#pandas._libs.interval.Interval[Any]
Any"pandas._libs.interval.Interval"*pandas.core.indexes.interval.IntervalIndex*ƒ
cls∫
7Type[pandas.core.indexes.base.Index[pandas._typing.S1]]ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"type*:
data0
typing.Iterable[Any]
Any"typing.Iterable*B
dtype7
Literal[builtins.str]	
builtins.str"builtins.str**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXØv
__new__&pandas.core.indexes.base.Index.__new__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*Ä
clsˆ
)Type[pandas.core.indexes.base.Index.Self]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index"type*¿.
data≥.
[Union[typing.Iterable[pandas._typing.S1],pandas.core.base.IndexOpsMixin[pandas._typing.S1]]ÿ
"typing.Iterable[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"typing.Iterableˆ
1pandas.core.base.IndexOpsMixin[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.base.IndexOpsMixin *“
dtypeƒ
Type[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"type **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX®H
__new__&pandas.core.indexes.base.Index.__new__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*Ä
clsˆ
)Type[pandas.core.indexes.base.Index.Self]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index"type*<
data0
typing.Iterable[Any]
Any"typing.Iterable *–
dtypeƒ
Type[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"type**
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadXÎ1
__new__&pandas.core.indexes.base.Index.__new__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*Ä
clsˆ
)Type[pandas.core.indexes.base.Index.Self]¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index"type*<
data0
typing.Iterable[Any]
Any"typing.Iterable *
dtype
Any **
copy
builtins.bool"builtins.bool *
name
Any *3
tupleize_cols
builtins.bool"builtins.bool *
kwargs
Any0:typing.overloadX2÷
name#pandas.core.indexes.base.Index.nameN
name#pandas.core.indexes.base.Index.name*
self0:builtins.propertyX`ÿ
name#pandas.core.indexes.base.Index.name"
None*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*
value
Any0:.setter2Â0
names$pandas.core.indexes.base.Index.namesñ
names$pandas.core.indexes.base.Index.names"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index0:builtins.propertyX`ú
names$pandas.core.indexes.base.Index.names"
Any*Å
selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*U
namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list0:.setter2ùn
__getitem__*pandas.core.indexes.base.Index.__getitem__∂9
__getitem__*pandas.core.indexes.base.Index.__getitem__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*‹	Ÿ	
ëUnion[builtins.slice,TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]],typing.Sequence[builtins.int],pandas.core.indexes.base.Index[Any],pandas.core.series.Series[builtins.bool],typing.Sequence[builtins.bool],TypeAlias[Unknown]] 
builtins.slice"builtins.sliceä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyintN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Indexe
(pandas.core.series.Series[builtins.bool]
builtins.bool"builtins.bool"pandas.core.series.SeriesQ
typing.Sequence[builtins.bool]
builtins.bool"builtins.bool"typing.Sequence8
TypeAlias[Unknown] "pandas._typing.np_ndarray_bool0:typing.overloadX®4
__getitem__*pandas.core.indexes.base.Index.__getitem__"†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype*˘ˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index*∏µ
ÇUnion[builtins.int,builtins.tuple[TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]]
builtins.int"builtins.intç
nbuiltins.tuple[TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]]ä
^TypeAlias[TypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]]É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray" pandas._typing.np_ndarray_anyint"builtins.tuple0:typing.overloadX2±4
__mul__&pandas.core.indexes.base.Index.__mul__†
__mul__&pandas.core.indexes.base.Index.__mul__"^
-pandas.core.indexes.timedeltas.TimedeltaIndex"-pandas.core.indexes.timedeltas.TimedeltaIndex*À»
bUnion[pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]]l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index**(
datetime.timedelta"datetime.timedelta0:typing.overloadX⁄/
__mul__&pandas.core.indexes.base.Index.__mul__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*	
Any0:typing.overloadX2˜3
__truediv__*pandas.core.indexes.base.Index.__truediv__÷
__truediv__*pandas.core.indexes.base.Index.__truediv__"
NoReturn
*À»
bUnion[pandas.core.indexes.base.Index[builtins.int],pandas.core.indexes.base.Index[builtins.float]]l
,pandas.core.indexes.base.Index[builtins.int]
builtins.int"builtins.int"pandas.core.indexes.base.Indexr
.pandas.core.indexes.base.Index[builtins.float] 
builtins.float"builtins.float"pandas.core.indexes.base.Index**(
datetime.timedelta"datetime.timedelta0:typing.overloadX‚/
__truediv__*pandas.core.indexes.base.Index.__truediv__"¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*√¿
#pandas.core.indexes.base.Index.Selfˆ
1pandas.core.indexes.base.Index[pandas._typing.S1]†
pandas._typing.S1à
«Union[builtins.str,builtins.bytes,datetime.date,datetime.time,builtins.bool,builtins.int,builtins.float,builtins.complex,TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]],datetime.datetime,datetime.timedelta,pandas._libs.tslibs.period.Period,pandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]],pandas.core.dtypes.dtypes.CategoricalDtype]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes
datetime.date"datetime.date
datetime.time"datetime.time
builtins.bool"builtins.bool
builtins.int"builtins.int 
builtins.float"builtins.float$
builtins.complex"builtins.complexû	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype&
datetime.datetime"datetime.datetime(
datetime.timedelta"datetime.timedeltaF
!pandas._libs.tslibs.period.Period"!pandas._libs.tslibs.period.Periodû
îpandas._libs.interval.Interval[Union[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]]‰
tUnion[builtins.int,builtins.float,pandas._libs.tslibs.timestamps.Timestamp,pandas._libs.tslibs.timedeltas.Timedelta]
builtins.int"builtins.int 
builtins.float"builtins.floatT
(pandas._libs.tslibs.timestamps.Timestamp"(pandas._libs.tslibs.timestamps.TimestampT
(pandas._libs.tslibs.timedeltas.Timedelta"(pandas._libs.tslibs.timedeltas.Timedelta"pandas._libs.interval.IntervalX
*pandas.core.dtypes.dtypes.CategoricalDtype"*pandas.core.dtypes.dtypes.CategoricalDtype"pandas.core.indexes.base.Index"pandas.core.indexes.base.Index*	
Any0:typing.overloadXPr=
__hash__'pandas.core.indexes.base.Index.__hash__
NonerW
isnull%pandas.core.indexes.base.Index.isnull&
builtins.ellipsis"builtins.ellipsisrY
notnull&pandas.core.indexes.base.Index.notnull&
builtins.ellipsis"builtins.ellipsisr[
__bool__'pandas.core.indexes.base.Index.__bool__&
builtins.ellipsis"builtins.ellipsisö
ensure_index_from_sequences4pandas.core.indexes.base.ensure_index_from_sequences"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*õ
	sequencesã
Ëtyping.Sequence[typing.Sequence[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]]]å
◊typing.Sequence[TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]]û	
∆TypeAlias[Union[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]]∫
ªUnion[pandas.core.dtypes.base.ExtensionDtype,TypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]]P
&pandas.core.dtypes.base.ExtensionDtype"&pandas.core.dtypes.base.ExtensionDtype•
çTypeAlias[Union[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]]¯
ÇUnion[builtins.str,numpy.dtype[numpy.generic],Type[builtins.str],Type[builtins.complex],Type[builtins.bool],Type[builtins.object]]
builtins.str"builtins.strI
numpy.dtype[numpy.generic]
numpy.generic"numpy.generic"numpy.dtype:
Type[builtins.str]
builtins.str"builtins.str"typeF
Type[builtins.complex]$
builtins.complex"builtins.complex"type=
Type[builtins.bool]
builtins.bool"builtins.bool"typeC
Type[builtins.object]"
builtins.object"builtins.object"type"pandas._typing.NpDtype"pandas._typing.Dtype"typing.Sequence"typing.Sequence*W
namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list ä
ensure_index%pandas.core.indexes.base.ensure_index"N
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index*÷

index_like≈
?Union[typing.Sequence[Any],pandas.core.indexes.base.Index[Any]]0
typing.Sequence[Any]
Any"typing.SequenceN
#pandas.core.indexes.base.Index[Any]
Any"pandas.core.indexes.base.Index**
copy
builtins.bool"builtins.bool ä
maybe_extract_name+pandas.core.indexes.base.maybe_extract_name"è
&TypeAlias[Union[typing.Hashable,None]]M
Union[typing.Hashable,None]"
typing.Hashable"typing.Hashable
None"pandas._typing.Label*
name
Any*
obj
Any*
cls
Any*î
__annotations__(pandas.core.indexes.base.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
npnumpy 