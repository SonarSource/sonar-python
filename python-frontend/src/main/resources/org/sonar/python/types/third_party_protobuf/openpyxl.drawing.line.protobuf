
openpyxl.drawing.lineì'
LineEndProperties'openpyxl.drawing.line.LineEndProperties".openpyxl.descriptors.serialisable.Serialisable*ü
__init__0openpyxl.drawing.line.LineEndProperties.__init__"
None*\
selfR
'openpyxl.drawing.line.LineEndProperties"'openpyxl.drawing.line.LineEndProperties*ø
type≤
∑Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]∞
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str",openpyxl.drawing.line._LineEndPropertiesType7
Literal[builtins.str]	
builtins.str"builtins.str
None *»
wæ
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]ˇ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str",openpyxl.drawing.line._LineEndPropertiesWLen7
Literal[builtins.str]	
builtins.str"builtins.str
None * 
lenæ
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]ˇ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str",openpyxl.drawing.line._LineEndPropertiesWLen7
Literal[builtins.str]	
builtins.str"builtins.str
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314ry
tagname/openpyxl.drawing.line.LineEndProperties.tagname
builtins.str"builtins.str*38*39*310*311*312*313*314rí
	namespace1openpyxl.drawing.line.LineEndProperties.namespace1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314rÈ
type,openpyxl.drawing.line.LineEndProperties.typeë
∏openpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]∞
ïTypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]Â
äUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str",openpyxl.drawing.line._LineEndPropertiesType"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313*314rÔ
w)openpyxl.drawing.line.LineEndProperties.wù
vopenpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]ˇ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str",openpyxl.drawing.line._LineEndPropertiesWLen"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313*314rÛ
len+openpyxl.drawing.line.LineEndProperties.lenù
vopenpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]ˇ
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str",openpyxl.drawing.line._LineEndPropertiesWLen"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313*314ª$
DashStopopenpyxl.drawing.line.DashStop".openpyxl.descriptors.serialisable.Serialisable*≈
__init__'openpyxl.drawing.line.DashStop.__init__"
None*J
self@
openpyxl.drawing.line.DashStop"openpyxl.drawing.line.DashStop*ä
dÄ
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt *ã
spÄ
çTypeAlias[Union[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]]æ

ÇUnion[builtins.int,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]],typing.SupportsInt,typing_extensions.SupportsIndex,_typeshed.SupportsTrunc]
builtins.int"builtins.int
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer(
typing.SupportsInt"typing.SupportsIntB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex2
_typeshed.SupportsTrunc"_typeshed.SupportsTrunc"+openpyxl.descriptors.base._ConvertibleToInt z38z39z310z311z312z313z314j38j39j310j311j312j313j314rp
tagname&openpyxl.drawing.line.DashStop.tagname
builtins.str"builtins.str*38*39*310*311*312*313*314râ
	namespace(openpyxl.drawing.line.DashStop.namespace1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314r„
d openpyxl.drawing.line.DashStop.dö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*38*39*310*311*312*313*314rî
length%openpyxl.drawing.line.DashStop.lengthB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*38*39*310*311*312*313*314rÂ
sp!openpyxl.drawing.line.DashStop.spö
9openpyxl.descriptors.base.Integer[Literal[builtins.bool]]:
Literal[builtins.bool]	
builtins.bool"builtins.bool"!openpyxl.descriptors.base.Integer*38*39*310*311*312*313*314rí
space$openpyxl.drawing.line.DashStop.spaceB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*38*39*310*311*312*313*314§
DashStopList"openpyxl.drawing.line.DashStopList".openpyxl.descriptors.serialisable.Serialisable*ù
__init__+openpyxl.drawing.line.DashStopList.__init__"
None*R
selfH
"openpyxl.drawing.line.DashStopList""openpyxl.drawing.line.DashStopList*e
ds[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314r
ds%openpyxl.drawing.line.DashStopList.ds1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314À[
LineProperties$openpyxl.drawing.line.LineProperties".openpyxl.descriptors.serialisable.Serialisable*È*
__init__-openpyxl.drawing.line.LineProperties.__init__"
None*V
selfL
$openpyxl.drawing.line.LineProperties"$openpyxl.drawing.line.LineProperties*œ
w≈
ÖUnion[TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]],None]Æ
˘TypeAlias[Union[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]]]˛	
ÓUnion[builtins.float,typing.SupportsFloat,typing_extensions.SupportsIndex,builtins.str,TypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]] 
builtins.float"builtins.float,
typing.SupportsFloat"typing.SupportsFloatB
typing_extensions.SupportsIndex"typing_extensions.SupportsIndex
builtins.str"builtins.str÷
ñTypeAlias[Union[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]]]û
ãUnion[builtins.bytes,TypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]] 
builtins.bytes"builtins.bytesÈ
uTypeAlias[Union[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer]]“
jUnion[builtins.bytearray,builtins.memoryview,array.array[Any],mmap.mmap,ctypes._CData,pickle.PickleBuffer](
builtins.bytearray"builtins.bytearray*
builtins.memoryview"builtins.memoryview(
array.array[Any]
Any"array.array
	mmap.mmap"	mmap.mmap
ctypes._CData"ctypes._CData*
pickle.PickleBuffer"pickle.PickleBuffer"_typeshed.WriteableBuffer"_typeshed.ReadableBuffer"-openpyxl.descriptors.base._ConvertibleToFloat
None *∆
cap∫
uUnion[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]˚
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"(openpyxl.drawing.line._LinePropertiesCap7
Literal[builtins.str]	
builtins.str"builtins.str
None *ø
cmpd≤
°Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]∆
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")openpyxl.drawing.line._LinePropertiesCmpd7
Literal[builtins.str]	
builtins.str"builtins.str
None *Õ
algn¿
_Union[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]],Literal[builtins.str],None]ó
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")openpyxl.drawing.line._LinePropertiesAlgn7
Literal[builtins.str]	
builtins.str"builtins.str
None *i
noFill[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *l
	solidFill[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *µ
gradFill§
8Union[openpyxl.drawing.fill.GradientFillProperties,None]\
,openpyxl.drawing.fill.GradientFillProperties",openpyxl.drawing.fill.GradientFillProperties
None *≤
pattFill°
7Union[openpyxl.drawing.fill.PatternFillProperties,None]Z
+openpyxl.drawing.fill.PatternFillProperties"+openpyxl.drawing.fill.PatternFillProperties
None *k
prstDash[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *ä
custDashz
*Union[openpyxl.drawing.line.DashStop,None]@
openpyxl.drawing.line.DashStop"openpyxl.drawing.line.DashStop
None *h
round[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
bevel[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
miter[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *•
headEndï
3Union[openpyxl.drawing.line.LineEndProperties,None]R
'openpyxl.drawing.line.LineEndProperties"'openpyxl.drawing.line.LineEndProperties
None *•
tailEndï
3Union[openpyxl.drawing.line.LineEndProperties,None]R
'openpyxl.drawing.line.LineEndProperties"'openpyxl.drawing.line.LineEndProperties
None *0
extLst"
builtins.object"builtins.object z38z39z310z311z312z313z314j38j39j310j311j312j313j314rv
tagname,openpyxl.drawing.line.LineProperties.tagname
builtins.str"builtins.str*38*39*310*311*312*313*314rè
	namespace.openpyxl.drawing.line.LineProperties.namespace1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314rò
w&openpyxl.drawing.line.LineProperties.w…
Gopenpyxl.descriptors.base.MinMax[builtins.float,Literal[builtins.bool]] 
builtins.float"builtins.float:
Literal[builtins.bool]	
builtins.bool"builtins.bool" openpyxl.descriptors.base.MinMax*38*39*310*311*312*313*314rò
width*openpyxl.drawing.line.LineProperties.widthB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*38*39*310*311*312*313*314rÏ
cap(openpyxl.drawing.line.LineProperties.capô
vopenpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]˚
STypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]˜
HUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str"(openpyxl.drawing.line._LinePropertiesCap"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313*314rÊ
cmpd)openpyxl.drawing.line.LineProperties.cmpdë
¢openpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]]∆
TypeAlias[Union[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]]ï
tUnion[Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")openpyxl.drawing.line._LinePropertiesCmpd"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313*314rÙ
algn)openpyxl.drawing.line.LineProperties.algnü
`openpyxl.descriptors.base.NoneSet[TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]]ó
=TypeAlias[Union[Literal[builtins.str],Literal[builtins.str]]]®
2Union[Literal[builtins.str],Literal[builtins.str]]7
Literal[builtins.str]	
builtins.str"builtins.str7
Literal[builtins.str]	
builtins.str"builtins.str")openpyxl.drawing.line._LinePropertiesAlgn"!openpyxl.descriptors.base.NoneSet*38*39*310*311*312*313*314râ
noFill+openpyxl.drawing.line.LineProperties.noFill1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314rè
	solidFill.openpyxl.drawing.line.LineProperties.solidFill1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314r˛
gradFill-openpyxl.drawing.line.LineProperties.gradFill°
dopenpyxl.descriptors.base.Typed[openpyxl.drawing.fill.GradientFillProperties,Literal[builtins.bool]]\
,openpyxl.drawing.fill.GradientFillProperties",openpyxl.drawing.fill.GradientFillProperties:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314r˚
pattFill-openpyxl.drawing.line.LineProperties.pattFillû
copenpyxl.descriptors.base.Typed[openpyxl.drawing.fill.PatternFillProperties,Literal[builtins.bool]]Z
+openpyxl.drawing.fill.PatternFillProperties"+openpyxl.drawing.fill.PatternFillProperties:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314rç
prstDash-openpyxl.drawing.line.LineProperties.prstDash1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314r†
	dashStyle.openpyxl.drawing.line.LineProperties.dashStyleB
openpyxl.descriptors.base.Alias"openpyxl.descriptors.base.Alias*38*39*310*311*312*313*314r‘
custDash-openpyxl.drawing.line.LineProperties.custDash˜
Vopenpyxl.descriptors.base.Typed[openpyxl.drawing.line.DashStop,Literal[builtins.bool]]@
openpyxl.drawing.line.DashStop"openpyxl.drawing.line.DashStop:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314rá
round*openpyxl.drawing.line.LineProperties.round1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314rá
bevel*openpyxl.drawing.line.LineProperties.bevel1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314rá
miter*openpyxl.drawing.line.LineProperties.miter1
TypeAlias[Any]
Any"_typeshed.Incomplete*38*39*310*311*312*313*314rÌ
headEnd,openpyxl.drawing.line.LineProperties.headEndí
_openpyxl.descriptors.base.Typed[openpyxl.drawing.line.LineEndProperties,Literal[builtins.bool]]R
'openpyxl.drawing.line.LineEndProperties"'openpyxl.drawing.line.LineEndProperties:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314rÌ
tailEnd,openpyxl.drawing.line.LineProperties.tailEndí
_openpyxl.descriptors.base.Typed[openpyxl.drawing.line.LineEndProperties,Literal[builtins.bool]]R
'openpyxl.drawing.line.LineEndProperties"'openpyxl.drawing.line.LineEndProperties:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314rÓ
extLst+openpyxl.drawing.line.LineProperties.extLstï
`openpyxl.descriptors.base.Typed[openpyxl.descriptors.excel.ExtensionList,Literal[builtins.bool]]T
(openpyxl.descriptors.excel.ExtensionList"(openpyxl.descriptors.excel.ExtensionList:
Literal[builtins.bool]	
builtins.bool"builtins.bool"openpyxl.descriptors.base.Typed*38*39*310*311*312*313*314r∞
__elements__1openpyxl.drawing.line.LineProperties.__elements__L
builtins.tuple[builtins.str]
builtins.str"builtins.str"builtins.tuple*38*39*310*311*312*313*314*≤
__annotations__%openpyxl.drawing.line.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314