
torchvision.models.video»

MSBlockConfig+torchvision.models.video.mvit.MSBlockConfig"*SonarPythonAnalyzerFakeStub.CustomStubBase*·
__init__4torchvision.models.video.mvit.MSBlockConfig.__init__"
None*d
selfZ
+torchvision.models.video.mvit.MSBlockConfig"+torchvision.models.video.mvit.MSBlockConfig*
	num_heads
Any*
input_channels
Any*
output_channels
Any*
kernel_q
Any*
	kernel_kv
Any*
stride_q
Any*
	stride_kv
Anyr`
	num_heads5torchvision.models.video.mvit.MSBlockConfig.num_heads
builtins.int"builtins.intrj
input_channels:torchvision.models.video.mvit.MSBlockConfig.input_channels
builtins.int"builtins.intrl
output_channels;torchvision.models.video.mvit.MSBlockConfig.output_channels
builtins.int"builtins.intrå
kernel_q4torchvision.models.video.mvit.MSBlockConfig.kernel_qJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listré
	kernel_kv5torchvision.models.video.mvit.MSBlockConfig.kernel_kvJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listrå
stride_q4torchvision.models.video.mvit.MSBlockConfig.stride_qJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.listré
	stride_kv5torchvision.models.video.mvit.MSBlockConfig.stride_kvJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list‘

Pool"torchvision.models.video.mvit.Pool"torch.nn.modules.module.Module*Ø
__init__+torchvision.models.video.mvit.Pool.__init__"
None*R
selfH
"torchvision.models.video.mvit.Pool""torchvision.models.video.mvit.Pool*J
pool@
torch.nn.modules.module.Module"torch.nn.modules.module.Module*Ñ
normz
*Union[torch.nn.modules.module.Module,None]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module
None*å

activationz
*Union[torch.nn.modules.module.Module,None]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module
None *6
norm_before_pool
builtins.bool"builtins.bool *á
forward*torchvision.models.video.mvit.Pool.forward"”
8Tuple[Any,Tuple[builtins.int,builtins.int,builtins.int]]
Anyã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*R
selfH
"torchvision.models.video.mvit.Pool""torchvision.models.video.mvit.Pool*
x
Any*ï
thwã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.intr8
pool'torchvision.models.video.mvit.Pool.pool
Anyr@
norm_act+torchvision.models.video.mvit.Pool.norm_act
AnyrP
norm_before_pool3torchvision.models.video.mvit.Pool.norm_before_pool
Anyæ
MultiscaleAttention1torchvision.models.video.mvit.MultiscaleAttention"torch.nn.modules.module.Module*√
__init__:torchvision.models.video.mvit.MultiscaleAttention.__init__"
None*p
selff
1torchvision.models.video.mvit.MultiscaleAttention"1torchvision.models.video.mvit.MultiscaleAttention*Z

input_sizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*+
	embed_dim
builtins.int"builtins.int*,

output_dim
builtins.int"builtins.int*+
	num_heads
builtins.int"builtins.int*X
kernel_qJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*Y
	kernel_kvJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*X
stride_qJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*Y
	stride_kvJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*1
residual_pool
builtins.bool"builtins.bool*;
residual_with_cls_embed
builtins.bool"builtins.bool*1
rel_pos_embed
builtins.bool"builtins.bool*/
dropout 
builtins.float"builtins.float *]

norm_layerK
CallableType[builtins.function]&
builtins.function"builtins.function *¥
forward9torchvision.models.video.mvit.MultiscaleAttention.forward"”
8Tuple[Any,Tuple[builtins.int,builtins.int,builtins.int]]
Anyã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*p
selff
1torchvision.models.video.mvit.MultiscaleAttention"1torchvision.models.video.mvit.MultiscaleAttention*
x
Any*ï
thwã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.intrQ
	embed_dim;torchvision.models.video.mvit.MultiscaleAttention.embed_dim
AnyrS

output_dim<torchvision.models.video.mvit.MultiscaleAttention.output_dim
AnyrQ
	num_heads;torchvision.models.video.mvit.MultiscaleAttention.num_heads
AnyrO
head_dim:torchvision.models.video.mvit.MultiscaleAttention.head_dim
AnyrK
scaler8torchvision.models.video.mvit.MultiscaleAttention.scaler
AnyrY
residual_pool?torchvision.models.video.mvit.MultiscaleAttention.residual_pool
Anyrm
residual_with_cls_embedItorchvision.models.video.mvit.MultiscaleAttention.residual_with_cls_embed
AnyrE
qkv5torchvision.models.video.mvit.MultiscaleAttention.qkv
AnyrM
project9torchvision.models.video.mvit.MultiscaleAttention.project
AnyrK
pool_q8torchvision.models.video.mvit.MultiscaleAttention.pool_q
AnyrK
pool_k8torchvision.models.video.mvit.MultiscaleAttention.pool_k
AnyrK
pool_v8torchvision.models.video.mvit.MultiscaleAttention.pool_v
AnyrQ
	rel_pos_h;torchvision.models.video.mvit.MultiscaleAttention.rel_pos_h
AnyrQ
	rel_pos_w;torchvision.models.video.mvit.MultiscaleAttention.rel_pos_w
AnyrQ
	rel_pos_t;torchvision.models.video.mvit.MultiscaleAttention.rel_pos_t
AnyÒ
MultiscaleBlock-torchvision.models.video.mvit.MultiscaleBlock"torch.nn.modules.module.Module*û
__init__6torchvision.models.video.mvit.MultiscaleBlock.__init__"
None*h
self^
-torchvision.models.video.mvit.MultiscaleBlock"-torchvision.models.video.mvit.MultiscaleBlock*Z

input_sizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*c
cnfZ
+torchvision.models.video.mvit.MSBlockConfig"+torchvision.models.video.mvit.MSBlockConfig*1
residual_pool
builtins.bool"builtins.bool*;
residual_with_cls_embed
builtins.bool"builtins.bool*1
rel_pos_embed
builtins.bool"builtins.bool*3
proj_after_attn
builtins.bool"builtins.bool*/
dropout 
builtins.float"builtins.float *=
stochastic_depth_prob 
builtins.float"builtins.float *]

norm_layerK
CallableType[builtins.function]&
builtins.function"builtins.function *®
forward5torchvision.models.video.mvit.MultiscaleBlock.forward"”
8Tuple[Any,Tuple[builtins.int,builtins.int,builtins.int]]
Anyã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*h
self^
-torchvision.models.video.mvit.MultiscaleBlock"-torchvision.models.video.mvit.MultiscaleBlock*
x
Any*ï
thwã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.intrY
proj_after_attn=torchvision.models.video.mvit.MultiscaleBlock.proj_after_attn
AnyrM
	pool_skip7torchvision.models.video.mvit.MultiscaleBlock.pool_skip
AnyrE
norm13torchvision.models.video.mvit.MultiscaleBlock.norm1
AnyrE
norm23torchvision.models.video.mvit.MultiscaleBlock.norm2
Anyr[
needs_transposal>torchvision.models.video.mvit.MultiscaleBlock.needs_transposal
AnyrC
attn2torchvision.models.video.mvit.MultiscaleBlock.attn
AnyrA
mlp1torchvision.models.video.mvit.MultiscaleBlock.mlp
Anyr[
stochastic_depth>torchvision.models.video.mvit.MultiscaleBlock.stochastic_depth
AnyrI
project5torchvision.models.video.mvit.MultiscaleBlock.project
AnyÖ

PositionalEncoding0torchvision.models.video.mvit.PositionalEncoding"torch.nn.modules.module.Module*≈
__init__9torchvision.models.video.mvit.PositionalEncoding.__init__"
None*n
selfd
0torchvision.models.video.mvit.PositionalEncoding"0torchvision.models.video.mvit.PositionalEncoding*,

embed_size
builtins.int"builtins.int*r
spatial_size`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*/
temporal_size
builtins.int"builtins.int*1
rel_pos_embed
builtins.bool"builtins.bool*Ã
forward8torchvision.models.video.mvit.PositionalEncoding.forward"
Any*n
selfd
0torchvision.models.video.mvit.PositionalEncoding"0torchvision.models.video.mvit.PositionalEncoding*
x
AnyrV
spatial_size=torchvision.models.video.mvit.PositionalEncoding.spatial_size
AnyrX
temporal_size>torchvision.models.video.mvit.PositionalEncoding.temporal_size
AnyrT
class_token<torchvision.models.video.mvit.PositionalEncoding.class_token
AnyrT
spatial_pos<torchvision.models.video.mvit.PositionalEncoding.spatial_pos
AnyrV
temporal_pos=torchvision.models.video.mvit.PositionalEncoding.temporal_pos
AnyrP
	class_pos:torchvision.models.video.mvit.PositionalEncoding.class_pos
Anyë
MViT"torchvision.models.video.mvit.MViT"torch.nn.modules.module.Module*ﬂ
__init__+torchvision.models.video.mvit.MViT.__init__"
None*R
selfH
"torchvision.models.video.mvit.MViT""torchvision.models.video.mvit.MViT*r
spatial_size`
 Tuple[builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int*/
temporal_size
builtins.int"builtins.int*ø
block_setting´
<typing.Sequence[torchvision.models.video.mvit.MSBlockConfig]Z
+torchvision.models.video.mvit.MSBlockConfig"+torchvision.models.video.mvit.MSBlockConfig"typing.Sequence*1
residual_pool
builtins.bool"builtins.bool*;
residual_with_cls_embed
builtins.bool"builtins.bool*1
rel_pos_embed
builtins.bool"builtins.bool*3
proj_after_attn
builtins.bool"builtins.bool*/
dropout 
builtins.float"builtins.float *9
attention_dropout 
builtins.float"builtins.float *=
stochastic_depth_prob 
builtins.float"builtins.float */
num_classes
builtins.int"builtins.int *î
blockÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ô

norm_layerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *¶
patch_embed_kernelã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int *¶
patch_embed_strideã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int *ß
patch_embed_paddingã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int *¢
forward*torchvision.models.video.mvit.MViT.forward"
Any*R
selfH
"torchvision.models.video.mvit.MViT""torchvision.models.video.mvit.MViT*
x
AnyrB
	conv_proj,torchvision.models.video.mvit.MViT.conv_proj
AnyrH
pos_encoding/torchvision.models.video.mvit.MViT.pos_encoding
Anyr<
blocks)torchvision.models.video.mvit.MViT.blocks
Anyr8
norm'torchvision.models.video.mvit.MViT.norm
Anyr8
head'torchvision.models.video.mvit.MViT.head
Anyì
MViT_V1_B_Weights/torchvision.models.video.mvit.MViT_V1_B_Weights"#torchvision.models._api.WeightsEnumHrY
KINETICS400_V1>torchvision.models.video.mvit.MViT_V1_B_Weights.KINETICS400_V1
AnyrK
DEFAULT7torchvision.models.video.mvit.MViT_V1_B_Weights.DEFAULT
Anyì
MViT_V2_S_Weights/torchvision.models.video.mvit.MViT_V2_S_Weights"#torchvision.models._api.WeightsEnumHrY
KINETICS400_V1>torchvision.models.video.mvit.MViT_V2_S_Weights.KINETICS400_V1
AnyrK
DEFAULT7torchvision.models.video.mvit.MViT_V2_S_Weights.DEFAULT
Anyø
Conv3DSimple,torchvision.models.video.resnet.Conv3DSimple"builtins.object*æ
__init__5torchvision.models.video.resnet.Conv3DSimple.__init__"
None*f
self\
,torchvision.models.video.resnet.Conv3DSimple",torchvision.models.video.resnet.Conv3DSimple*+
	in_planes
builtins.int"builtins.int*,

out_planes
builtins.int"builtins.int*U
	midplanesD
Union[builtins.int,None]
builtins.int"builtins.int
None **
stride
builtins.int"builtins.int *+
padding
builtins.int"builtins.int *Æ
get_downsample_strideBtorchvision.models.video.resnet.Conv3DSimple.get_downsample_stride"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*(
stride
builtins.int"builtins.int0:builtins.staticmethodhè
Conv2Plus1D+torchvision.models.video.resnet.Conv2Plus1D"builtins.object*ë
__init__4torchvision.models.video.resnet.Conv2Plus1D.__init__"
None*d
selfZ
+torchvision.models.video.resnet.Conv2Plus1D"+torchvision.models.video.resnet.Conv2Plus1D*+
	in_planes
builtins.int"builtins.int*,

out_planes
builtins.int"builtins.int*+
	midplanes
builtins.int"builtins.int**
stride
builtins.int"builtins.int *+
padding
builtins.int"builtins.int *≠
get_downsample_strideAtorchvision.models.video.resnet.Conv2Plus1D.get_downsample_stride"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*(
stride
builtins.int"builtins.int0:builtins.staticmethodh◊
Conv3DNoTemporal0torchvision.models.video.resnet.Conv3DNoTemporal"builtins.object* 
__init__9torchvision.models.video.resnet.Conv3DNoTemporal.__init__"
None*n
selfd
0torchvision.models.video.resnet.Conv3DNoTemporal"0torchvision.models.video.resnet.Conv3DNoTemporal*+
	in_planes
builtins.int"builtins.int*,

out_planes
builtins.int"builtins.int*U
	midplanesD
Union[builtins.int,None]
builtins.int"builtins.int
None **
stride
builtins.int"builtins.int *+
padding
builtins.int"builtins.int *≤
get_downsample_strideFtorchvision.models.video.resnet.Conv3DNoTemporal.get_downsample_stride"ã
-Tuple[builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int*(
stride
builtins.int"builtins.int0:builtins.staticmethodhÙ	

BasicBlock*torchvision.models.video.resnet.BasicBlock"torch.nn.modules.module.Module*ù
__init__3torchvision.models.video.resnet.BasicBlock.__init__"
None*b
selfX
*torchvision.models.video.resnet.BasicBlock"*torchvision.models.video.resnet.BasicBlock**
inplanes
builtins.int"builtins.int*(
planes
builtins.int"builtins.int*]
conv_builderK
CallableType[builtins.function]&
builtins.function"builtins.function**
stride
builtins.int"builtins.int *å

downsamplez
*Union[torch.nn.modules.module.Module,None]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module
None *∫
forward2torchvision.models.video.resnet.BasicBlock.forward"
Any*b
selfX
*torchvision.models.video.resnet.BasicBlock"*torchvision.models.video.resnet.BasicBlock*
x
Anyr_
	expansion4torchvision.models.video.resnet.BasicBlock.expansion
builtins.int"builtins.intrB
conv10torchvision.models.video.resnet.BasicBlock.conv1
AnyrB
conv20torchvision.models.video.resnet.BasicBlock.conv2
Anyr@
relu/torchvision.models.video.resnet.BasicBlock.relu
AnyrL

downsample5torchvision.models.video.resnet.BasicBlock.downsample
AnyrD
stride1torchvision.models.video.resnet.BasicBlock.stride
Any∏


Bottleneck*torchvision.models.video.resnet.Bottleneck"torch.nn.modules.module.Module*ù
__init__3torchvision.models.video.resnet.Bottleneck.__init__"
None*b
selfX
*torchvision.models.video.resnet.Bottleneck"*torchvision.models.video.resnet.Bottleneck**
inplanes
builtins.int"builtins.int*(
planes
builtins.int"builtins.int*]
conv_builderK
CallableType[builtins.function]&
builtins.function"builtins.function**
stride
builtins.int"builtins.int *å

downsamplez
*Union[torch.nn.modules.module.Module,None]@
torch.nn.modules.module.Module"torch.nn.modules.module.Module
None *∫
forward2torchvision.models.video.resnet.Bottleneck.forward"
Any*b
selfX
*torchvision.models.video.resnet.Bottleneck"*torchvision.models.video.resnet.Bottleneck*
x
Anyr_
	expansion4torchvision.models.video.resnet.Bottleneck.expansion
builtins.int"builtins.intrB
conv10torchvision.models.video.resnet.Bottleneck.conv1
AnyrB
conv20torchvision.models.video.resnet.Bottleneck.conv2
AnyrB
conv30torchvision.models.video.resnet.Bottleneck.conv3
Anyr@
relu/torchvision.models.video.resnet.Bottleneck.relu
AnyrL

downsample5torchvision.models.video.resnet.Bottleneck.downsample
AnyrD
stride1torchvision.models.video.resnet.Bottleneck.stride
AnyÙ
	BasicStem)torchvision.models.video.resnet.BasicStem"builtins.object*™
__init__2torchvision.models.video.resnet.BasicStem.__init__"
None*`
selfV
)torchvision.models.video.resnet.BasicStem")torchvision.models.video.resnet.BasicStemÉ
R2Plus1dStem,torchvision.models.video.resnet.R2Plus1dStem"builtins.object*≥
__init__5torchvision.models.video.resnet.R2Plus1dStem.__init__"
None*f
self\
,torchvision.models.video.resnet.R2Plus1dStem",torchvision.models.video.resnet.R2Plus1dStemΩ
VideoResNet+torchvision.models.video.resnet.VideoResNet"torch.nn.modules.module.Module*Ÿ
__init__4torchvision.models.video.resnet.VideoResNet.__init__"
None*d
selfZ
+torchvision.models.video.resnet.VideoResNet"+torchvision.models.video.resnet.VideoResNet*¶
blockö
hUnion[Type[torchvision.models.video.resnet.BasicBlock],Type[torchvision.models.video.resnet.Bottleneck]]î
0Type[torchvision.models.video.resnet.BasicBlock]X
*torchvision.models.video.resnet.BasicBlock"*torchvision.models.video.resnet.BasicBlock"typeî
0Type[torchvision.models.video.resnet.Bottleneck]X
*torchvision.models.video.resnet.Bottleneck"*torchvision.models.video.resnet.Bottleneck"type*„
conv_makers—
≥typing.Sequence[Union[Type[torchvision.models.video.resnet.Conv3DSimple],Type[torchvision.models.video.resnet.Conv3DNoTemporal],Type[torchvision.models.video.resnet.Conv2Plus1D]]]á
¢Union[Type[torchvision.models.video.resnet.Conv3DSimple],Type[torchvision.models.video.resnet.Conv3DNoTemporal],Type[torchvision.models.video.resnet.Conv2Plus1D]]ö
2Type[torchvision.models.video.resnet.Conv3DSimple]\
,torchvision.models.video.resnet.Conv3DSimple",torchvision.models.video.resnet.Conv3DSimple"type¶
6Type[torchvision.models.video.resnet.Conv3DNoTemporal]d
0torchvision.models.video.resnet.Conv3DNoTemporal"0torchvision.models.video.resnet.Conv3DNoTemporal"typeó
1Type[torchvision.models.video.resnet.Conv2Plus1D]Z
+torchvision.models.video.resnet.Conv2Plus1D"+torchvision.models.video.resnet.Conv2Plus1D"type"typing.Sequence*V
layersJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*U
stemK
CallableType[builtins.function]&
builtins.function"builtins.function*/
num_classes
builtins.int"builtins.int *8
zero_init_residual
builtins.bool"builtins.bool *Ω
forward3torchvision.models.video.resnet.VideoResNet.forward"
Any*d
selfZ
+torchvision.models.video.resnet.VideoResNet"+torchvision.models.video.resnet.VideoResNet*
x
Anyr^
inplanes4torchvision.models.video.resnet.VideoResNet.inplanes
builtins.int"builtins.intrA
stem0torchvision.models.video.resnet.VideoResNet.stem
AnyrE
layer12torchvision.models.video.resnet.VideoResNet.layer1
AnyrE
layer22torchvision.models.video.resnet.VideoResNet.layer2
AnyrE
layer32torchvision.models.video.resnet.VideoResNet.layer3
AnyrE
layer42torchvision.models.video.resnet.VideoResNet.layer4
AnyrG
avgpool3torchvision.models.video.resnet.VideoResNet.avgpool
Anyr=
fc.torchvision.models.video.resnet.VideoResNet.fc
Anyç
R3D_18_Weights.torchvision.models.video.resnet.R3D_18_Weights"#torchvision.models._api.WeightsEnumHrX
KINETICS400_V1=torchvision.models.video.resnet.R3D_18_Weights.KINETICS400_V1
AnyrJ
DEFAULT6torchvision.models.video.resnet.R3D_18_Weights.DEFAULT
Anyç
MC3_18_Weights.torchvision.models.video.resnet.MC3_18_Weights"#torchvision.models._api.WeightsEnumHrX
KINETICS400_V1=torchvision.models.video.resnet.MC3_18_Weights.KINETICS400_V1
AnyrJ
DEFAULT6torchvision.models.video.resnet.MC3_18_Weights.DEFAULT
Any°
R2Plus1D_18_Weights3torchvision.models.video.resnet.R2Plus1D_18_Weights"#torchvision.models._api.WeightsEnumHr]
KINETICS400_V1Btorchvision.models.video.resnet.R2Plus1D_18_Weights.KINETICS400_V1
AnyrO
DEFAULT;torchvision.models.video.resnet.R2Plus1D_18_Weights.DEFAULT
Any‡
TemporalSeparableConv2torchvision.models.video.s3d.TemporalSeparableConv"builtins.object*Å
__init__;torchvision.models.video.s3d.TemporalSeparableConv.__init__"
None*r
selfh
2torchvision.models.video.s3d.TemporalSeparableConv"2torchvision.models.video.s3d.TemporalSeparableConv*+
	in_planes
builtins.int"builtins.int*,

out_planes
builtins.int"builtins.int*-
kernel_size
builtins.int"builtins.int*(
stride
builtins.int"builtins.int*)
padding
builtins.int"builtins.int*[

norm_layerK
CallableType[builtins.function]&
builtins.function"builtins.functionΩ
SepInceptionBlock3D0torchvision.models.video.s3d.SepInceptionBlock3D"torch.nn.modules.module.Module*≈
__init__9torchvision.models.video.s3d.SepInceptionBlock3D.__init__"
None*n
selfd
0torchvision.models.video.s3d.SepInceptionBlock3D"0torchvision.models.video.s3d.SepInceptionBlock3D*+
	in_planes
builtins.int"builtins.int*(
b0_out
builtins.int"builtins.int*(
b1_mid
builtins.int"builtins.int*(
b1_out
builtins.int"builtins.int*(
b2_mid
builtins.int"builtins.int*(
b2_out
builtins.int"builtins.int*(
b3_out
builtins.int"builtins.int*[

norm_layerK
CallableType[builtins.function]&
builtins.function"builtins.function*T
forward8torchvision.models.video.s3d.SepInceptionBlock3D.forward*
self*
xrL
branch08torchvision.models.video.s3d.SepInceptionBlock3D.branch0
AnyrL
branch18torchvision.models.video.s3d.SepInceptionBlock3D.branch1
AnyrL
branch28torchvision.models.video.s3d.SepInceptionBlock3D.branch2
AnyrL
branch38torchvision.models.video.s3d.SepInceptionBlock3D.branch3
Anyﬂ
S3D torchvision.models.video.s3d.S3D"torch.nn.modules.module.Module*ç
__init__)torchvision.models.video.s3d.S3D.__init__"
None*N
selfD
 torchvision.models.video.s3d.S3D" torchvision.models.video.s3d.S3D*/
num_classes
builtins.int"builtins.int */
dropout 
builtins.float"builtins.float *ô

norm_layerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *D
forward(torchvision.models.video.s3d.S3D.forward*
self*
xr>
features)torchvision.models.video.s3d.S3D.features
Anyr<
avgpool(torchvision.models.video.s3d.S3D.avgpool
AnyrB

classifier+torchvision.models.video.s3d.S3D.classifier
Any¯
S3D_Weights(torchvision.models.video.s3d.S3D_Weights"#torchvision.models._api.WeightsEnumHrR
KINETICS400_V17torchvision.models.video.s3d.S3D_Weights.KINETICS400_V1
AnyrD
DEFAULT0torchvision.models.video.s3d.S3D_Weights.DEFAULT
AnyÏ
ShiftedWindowAttention3dBtorchvision.models.video.swin_transformer.ShiftedWindowAttention3d"torch.nn.modules.module.Module*—
__init__Ktorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.__init__"
None*ì
selfà
Btorchvision.models.video.swin_transformer.ShiftedWindowAttention3d"Btorchvision.models.video.swin_transformer.ShiftedWindowAttention3d*%
dim
builtins.int"builtins.int*[
window_sizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*Z

shift_sizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*+
	num_heads
builtins.int"builtins.int*.
qkv_bias
builtins.bool"builtins.bool */
	proj_bias
builtins.bool"builtins.bool *9
attention_dropout 
builtins.float"builtins.float */
dropout 
builtins.float"builtins.float *≠
#define_relative_position_bias_tableftorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.define_relative_position_bias_table"
None*ì
selfà
Btorchvision.models.video.swin_transformer.ShiftedWindowAttention3d"Btorchvision.models.video.swin_transformer.ShiftedWindowAttention3d*£
define_relative_position_indexatorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.define_relative_position_index"
None*ì
selfà
Btorchvision.models.video.swin_transformer.ShiftedWindowAttention3d"Btorchvision.models.video.swin_transformer.ShiftedWindowAttention3d*˜
get_relative_position_bias]torchvision.models.video.swin_transformer.ShiftedWindowAttention3d.get_relative_position_bias"
Any*ì
selfà
Btorchvision.models.video.swin_transformer.ShiftedWindowAttention3d"Btorchvision.models.video.swin_transformer.ShiftedWindowAttention3d*[
window_sizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*Ñ
forwardJtorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.forward"
Any*ì
selfà
Btorchvision.models.video.swin_transformer.ShiftedWindowAttention3d"Btorchvision.models.video.swin_transformer.ShiftedWindowAttention3d*
x
Anyrf
window_sizeNtorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.window_size
Anyrd

shift_sizeMtorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.shift_size
Anyrb
	num_headsLtorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.num_heads
Anyrr
attention_dropoutTtorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.attention_dropout
Anyr^
dropoutJtorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.dropout
AnyrV
qkvFtorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.qkv
AnyrX
projGtorchvision.models.video.swin_transformer.ShiftedWindowAttention3d.proj
Anyrà
relative_position_bias_table_torchvision.models.video.swin_transformer.ShiftedWindowAttention3d.relative_position_bias_table
Anyı
PatchEmbed3d6torchvision.models.video.swin_transformer.PatchEmbed3d"torch.nn.modules.module.Module*©
__init__?torchvision.models.video.swin_transformer.PatchEmbed3d.__init__"
None*z
selfp
6torchvision.models.video.swin_transformer.PatchEmbed3d"6torchvision.models.video.swin_transformer.PatchEmbed3d*Z

patch_sizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*/
in_channels
builtins.int"builtins.int *-
	embed_dim
builtins.int"builtins.int *ô

norm_layerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *ﬁ
forward>torchvision.models.video.swin_transformer.PatchEmbed3d.forward"
Any*z
selfp
6torchvision.models.video.swin_transformer.PatchEmbed3d"6torchvision.models.video.swin_transformer.PatchEmbed3d*
x
Anyrd
tuple_patch_sizeGtorchvision.models.video.swin_transformer.PatchEmbed3d.tuple_patch_size
AnyrL
proj;torchvision.models.video.swin_transformer.PatchEmbed3d.proj
AnyrL
norm;torchvision.models.video.swin_transformer.PatchEmbed3d.norm
Any¸
SwinTransformer3d;torchvision.models.video.swin_transformer.SwinTransformer3d"torch.nn.modules.module.Module*æ
__init__Dtorchvision.models.video.swin_transformer.SwinTransformer3d.__init__"
None*Ñ
selfz
;torchvision.models.video.swin_transformer.SwinTransformer3d";torchvision.models.video.swin_transformer.SwinTransformer3d*Z

patch_sizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*+
	embed_dim
builtins.int"builtins.int*V
depthsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*Y
	num_headsJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*[
window_sizeJ
builtins.list[builtins.int]
builtins.int"builtins.int"builtins.list*1
	mlp_ratio 
builtins.float"builtins.float */
dropout 
builtins.float"builtins.float *9
attention_dropout 
builtins.float"builtins.float *=
stochastic_depth_prob 
builtins.float"builtins.float */
num_classes
builtins.int"builtins.int *ô

norm_layerÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *î
blockÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *c
downsample_layerK
CallableType[builtins.function]&
builtins.function"builtins.function *ö
patch_embedÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *Ó
forwardCtorchvision.models.video.swin_transformer.SwinTransformer3d.forward"
Any*Ñ
selfz
;torchvision.models.video.swin_transformer.SwinTransformer3d";torchvision.models.video.swin_transformer.SwinTransformer3d*
x
Anyr_
num_classesGtorchvision.models.video.swin_transformer.SwinTransformer3d.num_classes
Anyr_
patch_embedGtorchvision.models.video.swin_transformer.SwinTransformer3d.patch_embed
AnyrY
pos_dropDtorchvision.models.video.swin_transformer.SwinTransformer3d.pos_drop
AnyrY
featuresDtorchvision.models.video.swin_transformer.SwinTransformer3d.features
Anyra
num_featuresHtorchvision.models.video.swin_transformer.SwinTransformer3d.num_features
AnyrQ
norm@torchvision.models.video.swin_transformer.SwinTransformer3d.norm
AnyrW
avgpoolCtorchvision.models.video.swin_transformer.SwinTransformer3d.avgpool
AnyrQ
head@torchvision.models.video.swin_transformer.SwinTransformer3d.head
Any≥
Swin3D_T_Weights:torchvision.models.video.swin_transformer.Swin3D_T_Weights"#torchvision.models._api.WeightsEnumHrd
KINETICS400_V1Itorchvision.models.video.swin_transformer.Swin3D_T_Weights.KINETICS400_V1
AnyrV
DEFAULTBtorchvision.models.video.swin_transformer.Swin3D_T_Weights.DEFAULT
Any≥
Swin3D_S_Weights:torchvision.models.video.swin_transformer.Swin3D_S_Weights"#torchvision.models._api.WeightsEnumHrd
KINETICS400_V1Itorchvision.models.video.swin_transformer.Swin3D_S_Weights.KINETICS400_V1
AnyrV
DEFAULTBtorchvision.models.video.swin_transformer.Swin3D_S_Weights.DEFAULT
Any±
Swin3D_B_Weights:torchvision.models.video.swin_transformer.Swin3D_B_Weights"#torchvision.models._api.WeightsEnumHrd
KINETICS400_V1Itorchvision.models.video.swin_transformer.Swin3D_B_Weights.KINETICS400_V1
Anyr|
KINETICS400_IMAGENET22K_V1Utorchvision.models.video.swin_transformer.Swin3D_B_Weights.KINETICS400_IMAGENET22K_V1
AnyrV
DEFAULTBtorchvision.models.video.swin_transformer.Swin3D_B_Weights.DEFAULT
AnyÉ
	mvit_v1_b'torchvision.models.video.mvit.mvit_v1_b"H
"torchvision.models.video.mvit.MViT""torchvision.models.video.mvit.MViT*Ω
weights≠
;Union[torchvision.models.video.mvit.MViT_V1_B_Weights,None]b
/torchvision.models.video.mvit.MViT_V1_B_Weights"/torchvision.models.video.mvit.MViT_V1_B_Weights
None *.
progress
builtins.bool"builtins.bool *
kwargs
AnyÉ
	mvit_v2_s'torchvision.models.video.mvit.mvit_v2_s"H
"torchvision.models.video.mvit.MViT""torchvision.models.video.mvit.MViT*Ω
weights≠
;Union[torchvision.models.video.mvit.MViT_V2_S_Weights,None]b
/torchvision.models.video.mvit.MViT_V2_S_Weights"/torchvision.models.video.mvit.MViT_V2_S_Weights
None *.
progress
builtins.bool"builtins.bool *
kwargs
Anyé
r3d_18&torchvision.models.video.resnet.r3d_18"Z
+torchvision.models.video.resnet.VideoResNet"+torchvision.models.video.resnet.VideoResNet*∫
weights™
:Union[torchvision.models.video.resnet.R3D_18_Weights,None]`
.torchvision.models.video.resnet.R3D_18_Weights".torchvision.models.video.resnet.R3D_18_Weights
None *.
progress
builtins.bool"builtins.bool *
kwargs
Anyé
mc3_18&torchvision.models.video.resnet.mc3_18"Z
+torchvision.models.video.resnet.VideoResNet"+torchvision.models.video.resnet.VideoResNet*∫
weights™
:Union[torchvision.models.video.resnet.MC3_18_Weights,None]`
.torchvision.models.video.resnet.MC3_18_Weights".torchvision.models.video.resnet.MC3_18_Weights
None *.
progress
builtins.bool"builtins.bool *
kwargs
Anyß
r2plus1d_18+torchvision.models.video.resnet.r2plus1d_18"Z
+torchvision.models.video.resnet.VideoResNet"+torchvision.models.video.resnet.VideoResNet*…
weightsπ
?Union[torchvision.models.video.resnet.R2Plus1D_18_Weights,None]j
3torchvision.models.video.resnet.R2Plus1D_18_Weights"3torchvision.models.video.resnet.R2Plus1D_18_Weights
None *.
progress
builtins.bool"builtins.bool *
kwargs
Any›
s3d torchvision.models.video.s3d.s3d"D
 torchvision.models.video.s3d.S3D" torchvision.models.video.s3d.S3D*®
weightsò
4Union[torchvision.models.video.s3d.S3D_Weights,None]T
(torchvision.models.video.s3d.S3D_Weights"(torchvision.models.video.s3d.S3D_Weights
None *.
progress
builtins.bool"builtins.bool *
kwargs
Any‡
swin3d_t2torchvision.models.video.swin_transformer.swin3d_t"z
;torchvision.models.video.swin_transformer.SwinTransformer3d";torchvision.models.video.swin_transformer.SwinTransformer3d*ﬁ
weightsŒ
FUnion[torchvision.models.video.swin_transformer.Swin3D_T_Weights,None]x
:torchvision.models.video.swin_transformer.Swin3D_T_Weights":torchvision.models.video.swin_transformer.Swin3D_T_Weights
None *.
progress
builtins.bool"builtins.bool *
kwargs
Any‡
swin3d_s2torchvision.models.video.swin_transformer.swin3d_s"z
;torchvision.models.video.swin_transformer.SwinTransformer3d";torchvision.models.video.swin_transformer.SwinTransformer3d*ﬁ
weightsŒ
FUnion[torchvision.models.video.swin_transformer.Swin3D_S_Weights,None]x
:torchvision.models.video.swin_transformer.Swin3D_S_Weights":torchvision.models.video.swin_transformer.Swin3D_S_Weights
None *.
progress
builtins.bool"builtins.bool *
kwargs
Any‡
swin3d_b2torchvision.models.video.swin_transformer.swin3d_b"z
;torchvision.models.video.swin_transformer.SwinTransformer3d";torchvision.models.video.swin_transformer.SwinTransformer3d*ﬁ
weightsŒ
FUnion[torchvision.models.video.swin_transformer.Swin3D_B_Weights,None]x
:torchvision.models.video.swin_transformer.Swin3D_B_Weights":torchvision.models.video.swin_transformer.Swin3D_B_Weights
None *.
progress
builtins.bool"builtins.bool *
kwargs
Any*y
__path__!torchvision.models.video.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*î
__annotations__(torchvision.models.video.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
nntorch.nn 