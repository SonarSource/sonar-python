
jack®
_JackPositionTjack._JackPositionT"_cffi_backend._CDataBasej38j39j310j311j312j313ré
audio_frames_per_video_frame0jack._JackPositionT.audio_frames_per_video_frame 
builtins.float"builtins.float*38*39*310*311*312*313rX
barjack._JackPositionT.bar
builtins.int"builtins.int*38*39*310*311*312*313rr
bar_start_tick"jack._JackPositionT.bar_start_tick 
builtins.float"builtins.float*38*39*310*311*312*313rf

bbt_offsetjack._JackPositionT.bbt_offset
builtins.int"builtins.int*38*39*310*311*312*313rZ
beatjack._JackPositionT.beat
builtins.int"builtins.int*38*39*310*311*312*313rh
	beat_typejack._JackPositionT.beat_type 
builtins.float"builtins.float*38*39*310*311*312*313rp
beats_per_bar!jack._JackPositionT.beats_per_bar 
builtins.float"builtins.float*38*39*310*311*312*313rv
beats_per_minute$jack._JackPositionT.beats_per_minute 
builtins.float"builtins.float*38*39*310*311*312*313r\
framejack._JackPositionT.frame
builtins.int"builtins.int*38*39*310*311*312*313rf

frame_ratejack._JackPositionT.frame_rate
builtins.int"builtins.int*38*39*310*311*312*313rj

frame_timejack._JackPositionT.frame_time 
builtins.float"builtins.float*38*39*310*311*312*313rh
	next_timejack._JackPositionT.next_time 
builtins.float"builtins.float*38*39*310*311*312*313rx
paddingjack._JackPositionT.padding4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*38*39*310*311*312*313rZ
tickjack._JackPositionT.tick
builtins.int"builtins.int*38*39*310*311*312*313rr
ticks_per_beat"jack._JackPositionT.ticks_per_beat 
builtins.float"builtins.float*38*39*310*311*312*313rb
unique_1jack._JackPositionT.unique_1
builtins.int"builtins.int*38*39*310*311*312*313rb
unique_2jack._JackPositionT.unique_2
builtins.int"builtins.int*38*39*310*311*312*313r\
usecsjack._JackPositionT.usecs
builtins.int"builtins.int*38*39*310*311*312*313r\
validjack._JackPositionT.valid
builtins.int"builtins.int*38*39*310*311*312*313rj
video_offset jack._JackPositionT.video_offset
builtins.int"builtins.int*38*39*310*311*312*313‚	
_CBufferTypejack._CBufferType"builtins.object*à
__len__jack._CBufferType.__len__"
builtins.int"builtins.int*(&
jack._CBufferType"jack._CBufferTypez38z39z310z311z312z313*ò
	__bytes__jack._CBufferType.__bytes__" 
builtins.bytes"builtins.bytes*0
self&
jack._CBufferType"jack._CBufferTypez38z39z310z311z312z3132®
__getitem__jack._CBufferType.__getitem__©
__getitem__jack._CBufferType.__getitem__"
builtins.str"builtins.str*(&
jack._CBufferType"jack._CBufferType*
builtins.int"builtins.int0:typing.overloadX±
__getitem__jack._CBufferType.__getitem__" 
builtins.bytes"builtins.bytes*(&
jack._CBufferType"jack._CBufferType*" 
builtins.slice"builtins.slice0:typing.overloadX"38"39"310"311"312"3132¿
__setitem__jack._CBufferType.__setitem__µ
__setitem__jack._CBufferType.__setitem__"
None*(&
jack._CBufferType"jack._CBufferType*
builtins.int"builtins.int*
builtins.str"builtins.str0:typing.overloadXΩ
__setitem__jack._CBufferType.__setitem__"
None*(&
jack._CBufferType"jack._CBufferType*" 
builtins.slice"builtins.slice*" 
builtins.bytes"builtins.bytes0:typing.overloadX"38"39"310"311"312"313j38j39j310j311j312j313K
	JackErrorjack.JackError"builtins.Exceptionj38j39j310j311j312j313‚
JackErrorCodejack.JackErrorCode"jack.JackError*‘
__init__jack.JackErrorCode.__init__"
None*2
self(
jack.JackErrorCode"jack.JackErrorCode*)
message
builtins.str"builtins.str*&
code
builtins.int"builtins.intz38z39z310z311z312z313j38j39j310j311j312j313r_
messagejack.JackErrorCode.message
builtins.str"builtins.str*38*39*310*311*312*313rY
codejack.JackErrorCode.code
builtins.int"builtins.int*38*39*310*311*312*313€
JackOpenErrorjack.JackOpenError"jack.JackError*—
__init__jack.JackOpenError.__init__"
None*2
self(
jack.JackOpenError"jack.JackOpenError*&
name
builtins.str"builtins.str*&
status
jack.Status"jack.Statusz38z39z310z311z312z313j38j39j310j311j312j313rY
namejack.JackOpenError.name
builtins.str"builtins.str*38*39*310*311*312*313r[
statusjack.JackOpenError.status
jack.Status"jack.Status*38*39*310*311*312*313≤e
Clientjack.Client"builtins.object*±
__init__jack.Client.__init__"
None*$
self
jack.Client"jack.Client*&
name
builtins.str"builtins.str*4
use_exact_name
builtins.bool"builtins.bool *5
no_start_server
builtins.bool"builtins.bool *V

servernameD
Union[builtins.str,None]
builtins.str"builtins.str
None *V

session_idD
Union[builtins.str,None]
builtins.str"builtins.str
None z38z39z310z311z312z313*æ
	__enter__jack.Client.__enter__"=
jack.Client.Self
jack.Client"jack.Client"jack.Client*?=
jack.Client.Self
jack.Client"jack.Client"jack.Clientz38z39z310z311z312z313*å
__exit__jack.Client.__exit__"
None*
jack.Client"jack.Client*&"
builtins.object"builtins.objectz38z39z310z311z312z313*è
namejack.Client.name"
builtins.str"builtins.str*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*è
uuidjack.Client.uuid"
builtins.str"builtins.str*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*õ

sampleratejack.Client.samplerate"
builtins.int"builtins.int*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*ë
statusjack.Client.status"
jack.Status"jack.Status*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*ô
realtimejack.Client.realtime"
builtins.bool"builtins.bool*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*∑
frames_since_cycle_start$jack.Client.frames_since_cycle_start"
builtins.int"builtins.int*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*õ

frame_timejack.Client.frame_time"
builtins.int"builtins.int*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*•
last_frame_timejack.Client.last_frame_time"
builtins.int"builtins.int*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*ë
inportsjack.Client.inports"

jack.Ports"
jack.Ports*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*ì
outportsjack.Client.outports"

jack.Ports"
jack.Ports*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*õ
midi_inportsjack.Client.midi_inports"

jack.Ports"
jack.Ports*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*ù
midi_outportsjack.Client.midi_outports"

jack.Ports"
jack.Ports*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*›
ownsjack.Client.owns"
builtins.bool"builtins.bool*$
self
jack.Client"jack.Client*a
portW
Union[builtins.str,jack.Port]
builtins.str"builtins.str
	jack.Port"	jack.Portz38z39z310z311z312z313*l
activatejack.Client.activate"
None*$
self
jack.Client"jack.Clientz38z39z310z311z312z313*•

deactivatejack.Client.deactivate"
None*$
self
jack.Client"jack.Client*3
ignore_errors
builtins.bool"builtins.bool z38z39z310z311z312z313*Ñ
cpu_loadjack.Client.cpu_load" 
builtins.float"builtins.float*$
self
jack.Client"jack.Clientz38z39z310z311z312z313*õ
closejack.Client.close"
None*$
self
jack.Client"jack.Client*3
ignore_errors
builtins.bool"builtins.bool z38z39z310z311z312z313*π
connectjack.Client.connect"
None*$
self
jack.Client"jack.Client*c
sourceW
Union[builtins.str,jack.Port]
builtins.str"builtins.str
	jack.Port"	jack.Port*h
destinationW
Union[builtins.str,jack.Port]
builtins.str"builtins.str
	jack.Port"	jack.Portz38z39z310z311z312z313*ø

disconnectjack.Client.disconnect"
None*$
self
jack.Client"jack.Client*c
sourceW
Union[builtins.str,jack.Port]
builtins.str"builtins.str
	jack.Port"	jack.Port*h
destinationW
Union[builtins.str,jack.Port]
builtins.str"builtins.str
	jack.Port"	jack.Portz38z39z310z311z312z313*z
transport_startjack.Client.transport_start"
None*$
self
jack.Client"jack.Clientz38z39z310z311z312z313*x
transport_stopjack.Client.transport_stop"
None*$
self
jack.Client"jack.Clientz38z39z310z311z312z313*≥
transport_statejack.Client.transport_state"*
jack.TransportState"jack.TransportState*$
self
jack.Client"jack.Client0:builtins.property`z38z39z310z311z312z313*•
transport_locatejack.Client.transport_locate"
None*$
self
jack.Client"jack.Client*'
frame
builtins.int"builtins.intz38z39z310z311z312z313*∂
transport_queryjack.Client.transport_query"√
:Tuple[jack.TransportState,builtins.dict[builtins.str,Any]]*
jack.TransportState"jack.TransportStateW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*$
self
jack.Client"jack.Clientz38z39z310z311z312z313*ã
transport_query_struct"jack.Client.transport_query_struct"ä
.Tuple[jack.TransportState,jack._JackPositionT]*
jack.TransportState"jack.TransportState*
jack._JackPositionT"jack._JackPositionT*$
self
jack.Client"jack.Clientz38z39z310z311z312z313*Ã
transport_reposition_struct'jack.Client.transport_reposition_struct"
None*$
self
jack.Client"jack.Client*8
position*
jack._JackPositionT"jack._JackPositionTz38z39z310z311z312z313*ß
set_sync_timeoutjack.Client.set_sync_timeout"
None*$
self
jack.Client"jack.Client*)
timeout
builtins.int"builtins.intz38z39z310z311z312z313*°
set_freewheeljack.Client.set_freewheel"
None*$
self
jack.Client"jack.Client*)
onoff
builtins.bool"builtins.boolz38z39z310z311z312z313*·
set_shutdown_callback!jack.Client.set_shutdown_callback"
None*$
self
jack.Client"jack.Client*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313*ﬂ
set_process_callback jack.Client.set_process_callback"
None*$
self
jack.Client"jack.Client*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313*„
set_freewheel_callback"jack.Client.set_freewheel_callback"
None*$
self
jack.Client"jack.Client*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313*„
set_blocksize_callback"jack.Client.set_blocksize_callback"
None*$
self
jack.Client"jack.Client*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313*Â
set_samplerate_callback#jack.Client.set_samplerate_callback"
None*$
self
jack.Client"jack.Client*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313*˜
 set_client_registration_callback,jack.Client.set_client_registration_callback"
None*$
self
jack.Client"jack.Client*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313*Ë
set_port_registration_callback*jack.Client.set_port_registration_callback"
None*$
self
jack.Client"jack.Client*ó
callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *4
only_available
builtins.bool"builtins.bool z38z39z310z311z312z313*ﬁ
set_port_connect_callback%jack.Client.set_port_connect_callback"
None*$
self
jack.Client"jack.Client*ó
callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *4
only_available
builtins.bool"builtins.bool z38z39z310z311z312z313*‹
set_port_rename_callback$jack.Client.set_port_rename_callback"
None*$
self
jack.Client"jack.Client*ó
callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *4
only_available
builtins.bool"builtins.bool z38z39z310z311z312z313*Á
set_graph_order_callback$jack.Client.set_graph_order_callback"
None*$
self
jack.Client"jack.Client*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313*Ÿ
set_xrun_callbackjack.Client.set_xrun_callback"
None*$
self
jack.Client"jack.Client*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313*ñ
set_sync_callbackjack.Client.set_sync_callback"
None*$
self
jack.Client"jack.Client*ï
callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
Nonez38z39z310z311z312z313*|
release_timebasejack.Client.release_timebase"
None*$
self
jack.Client"jack.Clientz38z39z310z311z312z313*È
set_timebase_callback!jack.Client.set_timebase_callback"
builtins.bool"builtins.bool*$
self
jack.Client"jack.Client*ó
callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None *1
conditional
builtins.bool"builtins.bool z38z39z310z311z312z313*Ô
set_property_change_callback(jack.Client.set_property_change_callback"
None*$
self
jack.Client"jack.Client*Y
callbackK
CallableType[builtins.function]&
builtins.function"builtins.functionz38z39z310z311z312z313*»
get_uuid_for_client_name$jack.Client.get_uuid_for_client_name"
builtins.str"builtins.str*$
self
jack.Client"jack.Client*&
name
builtins.str"builtins.strz38z39z310z311z312z313*∆
get_client_name_by_uuid#jack.Client.get_client_name_by_uuid"
builtins.str"builtins.str*$
self
jack.Client"jack.Client*&
uuid
builtins.str"builtins.strz38z39z310z311z312z313*≤
get_port_by_namejack.Client.get_port_by_name"
	jack.Port"	jack.Port*$
self
jack.Client"jack.Client*&
name
builtins.str"builtins.strz38z39z310z311z312z313*›
get_all_connectionsjack.Client.get_all_connections"A
builtins.list[jack.Port]
	jack.Port"	jack.Port"builtins.list*$
self
jack.Client"jack.Client* 
port
	jack.Port"	jack.Portz38z39z310z311z312z313*≤
	get_portsjack.Client.get_ports"A
builtins.list[jack.Port]
	jack.Port"	jack.Port"builtins.list*$
self
jack.Client"jack.Client*0
name_pattern
builtins.str"builtins.str *.
is_audio
builtins.bool"builtins.bool *-
is_midi
builtins.bool"builtins.bool *.
is_input
builtins.bool"builtins.bool */
	is_output
builtins.bool"builtins.bool *1
is_physical
builtins.bool"builtins.bool *1
can_monitor
builtins.bool"builtins.bool *1
is_terminal
builtins.bool"builtins.bool z38z39z310z311z312z313*ß
set_propertyjack.Client.set_property"
None*$
self
jack.Client"jack.Client*m
subject`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*%
key
builtins.str"builtins.str*q
valuef
"Union[builtins.str,builtins.bytes]
builtins.str"builtins.str 
builtins.bytes"builtins.bytes*(
type
builtins.str"builtins.str z38z39z310z311z312z313*ê
remove_propertyjack.Client.remove_property"
None*$
self
jack.Client"jack.Client*m
subject`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*%
key
builtins.str"builtins.strz38z39z310z311z312z313*Å
remove_propertiesjack.Client.remove_properties"
builtins.int"builtins.int*$
self
jack.Client"jack.Client*m
subject`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.strz38z39z310z311z312z313*Ü
remove_all_properties!jack.Client.remove_all_properties"
None*$
self
jack.Client"jack.Clientz38z39z310z311z312z3132Ã
	blocksizejack.Client.blocksize
	blocksizejack.Client.blocksize"
builtins.int"builtins.int*$
self
jack.Client"jack.Client0:builtins.propertyX`ä
	blocksizejack.Client.blocksize"
None*$
self
jack.Client"jack.Client*+
	blocksize
builtins.int"builtins.int0:.setter"38"39"310"311"312"3132Ì
transport_framejack.Client.transport_frameã
transport_framejack.Client.transport_frame"
builtins.int"builtins.int*$
self
jack.Client"jack.Client0:builtins.propertyX`í
transport_framejack.Client.transport_frame"
None*$
self
jack.Client"jack.Client*'
frame
builtins.int"builtins.int0:.setter"38"39"310"311"312"313j38j39j310j311j312j313ÿ
Port	jack.Port"builtins.object*“
__init__jack.Port.__init__"
None* 
self
	jack.Port"	jack.Port*B
port_ptr4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
client
jack.Client"jack.Clientz38z39z310z311z312z313*ñ
__eq__jack.Port.__eq__"
builtins.bool"builtins.bool*
	jack.Port"	jack.Port*$"
builtins.object"builtins.objectz38z39z310z311z312z313*ñ
__ne__jack.Port.__ne__"
builtins.bool"builtins.bool*
	jack.Port"	jack.Port*$"
builtins.object"builtins.objectz38z39z310z311z312z313*â
namejack.Port.name"
builtins.str"builtins.str* 
self
	jack.Port"	jack.Port0:builtins.property`z38z39z310z311z312z313*Ω
aliasesjack.Port.aliases"J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list* 
self
	jack.Port"	jack.Port0:builtins.property`z38z39z310z311z312z313*ë
	set_aliasjack.Port.set_alias"
None* 
self
	jack.Port"	jack.Port*'
alias
builtins.str"builtins.strz38z39z310z311z312z313*ï
unset_aliasjack.Port.unset_alias"
None* 
self
	jack.Port"	jack.Port*'
alias
builtins.str"builtins.strz38z39z310z311z312z313*â
uuidjack.Port.uuid"
builtins.str"builtins.str* 
self
	jack.Port"	jack.Port0:builtins.property`z38z39z310z311z312z313*ì
is_audiojack.Port.is_audio"
builtins.bool"builtins.bool* 
self
	jack.Port"	jack.Port0:builtins.property`z38z39z310z311z312z313*ë
is_midijack.Port.is_midi"
builtins.bool"builtins.bool* 
self
	jack.Port"	jack.Port0:builtins.property`z38z39z310z311z312z313*ì
is_inputjack.Port.is_input"
builtins.bool"builtins.bool* 
self
	jack.Port"	jack.Port0:builtins.property`z38z39z310z311z312z313*ï
	is_outputjack.Port.is_output"
builtins.bool"builtins.bool* 
self
	jack.Port"	jack.Port0:builtins.property`z38z39z310z311z312z313*ô
is_physicaljack.Port.is_physical"
builtins.bool"builtins.bool* 
self
	jack.Port"	jack.Port0:builtins.property`z38z39z310z311z312z313*ô
can_monitorjack.Port.can_monitor"
builtins.bool"builtins.bool* 
self
	jack.Port"	jack.Port0:builtins.property`z38z39z310z311z312z313*ô
is_terminaljack.Port.is_terminal"
builtins.bool"builtins.bool* 
self
	jack.Port"	jack.Port0:builtins.property`z38z39z310z311z312z313*ü
request_monitorjack.Port.request_monitor"
None* 
self
	jack.Port"	jack.Port*)
onoff
builtins.bool"builtins.boolz38z39z310z311z312z3132æ
	shortnamejack.Port.shortnamey
	shortnamejack.Port.shortname"
builtins.str"builtins.str* 
self
	jack.Port"	jack.Port0:builtins.propertyX`Ñ
	shortnamejack.Port.shortname"
None* 
self
	jack.Port"	jack.Port*+
	shortname
builtins.str"builtins.str0:.setter"38"39"310"311"312"313j38j39j310j311j312j313∫
MidiPortjack.MidiPort"	jack.Port*ª
is_audiojack.MidiPort.is_audio":
Literal[builtins.bool]	
builtins.bool"builtins.bool*(
self
jack.MidiPort"jack.MidiPort0:builtins.property`z38z39z310z311z312z313*π
is_midijack.MidiPort.is_midi":
Literal[builtins.bool]	
builtins.bool"builtins.bool*(
self
jack.MidiPort"jack.MidiPort0:builtins.property`z38z39z310z311z312z313j38j39j310j311j312j313Ì
OwnPortjack.OwnPort"	jack.Port*¥
number_of_connections"jack.OwnPort.number_of_connections"
builtins.int"builtins.int*&
self
jack.OwnPort"jack.OwnPort0:builtins.property`z38z39z310z311z312z313*≈
connectionsjack.OwnPort.connections"A
builtins.list[jack.Port]
	jack.Port"	jack.Port"builtins.list*&
self
jack.OwnPort"jack.OwnPort0:builtins.property`z38z39z310z311z312z313*ˆ
is_connected_tojack.OwnPort.is_connected_to"
builtins.bool"builtins.bool*&
self
jack.OwnPort"jack.OwnPort*a
portW
Union[builtins.str,jack.Port]
builtins.str"builtins.str
	jack.Port"	jack.Portz38z39z310z311z312z313*–
connectjack.OwnPort.connect"
None*&
self
jack.OwnPort"jack.OwnPort*a
portW
Union[builtins.str,jack.Port]
builtins.str"builtins.str
	jack.Port"	jack.Portz38z39z310z311z312z313*Ë

disconnectjack.OwnPort.disconnect"
None*&
self
jack.OwnPort"jack.OwnPort*s
otherf
"Union[builtins.str,jack.Port,None]
builtins.str"builtins.str
	jack.Port"	jack.Port
None z38z39z310z311z312z313*s

unregisterjack.OwnPort.unregister"
None*&
self
jack.OwnPort"jack.OwnPortz38z39z310z311z312z313*ë

get_bufferjack.OwnPort.get_buffer"&
jack._CBufferType"jack._CBufferType*&
self
jack.OwnPort"jack.OwnPortz38z39z310z311z312z313*Ì
	get_arrayjack.OwnPort.get_array"É
STypeAlias[numpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]]Ü
Hnumpy.ndarray[Any,numpy.dtype[numpy._typing._array_like._ScalarType_co]]
Any°
5numpy.dtype[numpy._typing._array_like._ScalarType_co][
(numpy._typing._array_like._ScalarType_co
numpy.generic"numpy.generic"numpy.generic"numpy.dtype"numpy.ndarray"!numpy._typing._array_like.NDArray*&
self
jack.OwnPort"jack.OwnPortz38z39z310z311z312z313j38j39j310j311j312j313—
OwnMidiPortjack.OwnMidiPort"jack.MidiPort"jack.OwnPort*Á
__init__jack.OwnMidiPort.__init__"
None*.
self$
jack.OwnMidiPort"jack.OwnMidiPort*B
port_ptr4
_cffi_backend._CDataBase"_cffi_backend._CDataBase*&
client
jack.Client"jack.Clientz38z39z310z311z312z313*É

get_bufferjack.OwnMidiPort.get_buffer"
NoReturn
*.
self$
jack.OwnMidiPort"jack.OwnMidiPortz38z39z310z311z312z313*Å
	get_arrayjack.OwnMidiPort.get_array"
NoReturn
*.
self$
jack.OwnMidiPort"jack.OwnMidiPortz38z39z310z311z312z313*≤
max_event_sizejack.OwnMidiPort.max_event_size"
builtins.int"builtins.int*.
self$
jack.OwnMidiPort"jack.OwnMidiPort0:builtins.property`z38z39z310z311z312z313*∂
lost_midi_events!jack.OwnMidiPort.lost_midi_events"
builtins.int"builtins.int*.
self$
jack.OwnMidiPort"jack.OwnMidiPort0:builtins.property`z38z39z310z311z312z313*Ê
incoming_midi_events%jack.OwnMidiPort.incoming_midi_events"⁄
Atyping.Generator[Tuple[builtins.int,jack._CBufferType],None,None]o
%Tuple[builtins.int,jack._CBufferType]
builtins.int"builtins.int&
jack._CBufferType"jack._CBufferType
None
None"typing.Generator*.
self$
jack.OwnMidiPort"jack.OwnMidiPortz38z39z310z311z312z313*É
clear_bufferjack.OwnMidiPort.clear_buffer"
None*.
self$
jack.OwnMidiPort"jack.OwnMidiPortz38z39z310z311z312z313*•
write_midi_event!jack.OwnMidiPort.write_midi_event"
None*.
self$
jack.OwnMidiPort"jack.OwnMidiPort*&
time
builtins.int"builtins.int*Ô
event„
EUnion[builtins.bytes,typing.Sequence[builtins.int],jack._CBufferType] 
builtins.bytes"builtins.bytesN
typing.Sequence[builtins.int]
builtins.int"builtins.int"typing.Sequence&
jack._CBufferType"jack._CBufferTypez38z39z310z311z312z313*˝
reserve_midi_event#jack.OwnMidiPort.reserve_midi_event"&
jack._CBufferType"jack._CBufferType*.
self$
jack.OwnMidiPort"jack.OwnMidiPort*&
time
builtins.int"builtins.int*&
size
builtins.int"builtins.intz38z39z310z311z312z313j38j39j310j311j312j313»
Ports
jack.Ports"builtins.object*Â
__init__jack.Ports.__init__"
None*"
self

jack.Ports"
jack.Ports*&
client
jack.Client"jack.Client**
porttype
builtins.str"builtins.str*&
flag
builtins.int"builtins.intz38z39z310z311z312z313*s
__len__jack.Ports.__len__"
builtins.int"builtins.int*

jack.Ports"
jack.Portsz38z39z310z311z312z313*ï
__getitem__jack.Ports.__getitem__"
	jack.Port"	jack.Port*

jack.Ports"
jack.Ports*
builtins.str"builtins.strz38z39z310z311z312z313*û
__iter__jack.Ports.__iter__"E
typing.Iterator[jack.Port]
	jack.Port"	jack.Port"typing.Iterator*

jack.Ports"
jack.Portsz38z39z310z311z312z313*ä
registerjack.Ports.register"
	jack.Port"	jack.Port*"
self

jack.Ports"
jack.Ports*+
	shortname
builtins.str"builtins.str*1
is_terminal
builtins.bool"builtins.bool *1
is_physical
builtins.bool"builtins.bool z38z39z310z311z312z313*c
clearjack.Ports.clear"
None*"
self

jack.Ports"
jack.Portsz38z39z310z311z312z313j38j39j310j311j312j313Ç

RingBufferjack.RingBuffer"builtins.object*†
__init__jack.RingBuffer.__init__"
None*,
self"
jack.RingBuffer"jack.RingBuffer*&
size
builtins.int"builtins.intz38z39z310z311z312z313*©
write_spacejack.RingBuffer.write_space"
builtins.int"builtins.int*,
self"
jack.RingBuffer"jack.RingBuffer0:builtins.property`z38z39z310z311z312z313*˜
writejack.RingBuffer.write"
builtins.int"builtins.int*,
self"
jack.RingBuffer"jack.RingBuffer*Ó
data„
EUnion[builtins.bytes,typing.Iterable[builtins.int],jack._CBufferType] 
builtins.bytes"builtins.bytesN
typing.Iterable[builtins.int]
builtins.int"builtins.int"typing.Iterable&
jack._CBufferType"jack._CBufferTypez38z39z310z311z312z313*è
write_buffersjack.RingBuffer.write_buffers"~
*Tuple[jack._CBufferType,jack._CBufferType]&
jack._CBufferType"jack._CBufferType&
jack._CBufferType"jack._CBufferType*,
self"
jack.RingBuffer"jack.RingBuffer0:builtins.property`z38z39z310z311z312z313*™
write_advancejack.RingBuffer.write_advance"
None*,
self"
jack.RingBuffer"jack.RingBuffer*&
size
builtins.int"builtins.intz38z39z310z311z312z313*ß

read_spacejack.RingBuffer.read_space"
builtins.int"builtins.int*,
self"
jack.RingBuffer"jack.RingBuffer0:builtins.property`z38z39z310z311z312z313*∂
readjack.RingBuffer.read"&
jack._CBufferType"jack._CBufferType*,
self"
jack.RingBuffer"jack.RingBuffer*&
size
builtins.int"builtins.intz38z39z310z311z312z313*∂
peekjack.RingBuffer.peek"&
jack._CBufferType"jack._CBufferType*,
self"
jack.RingBuffer"jack.RingBuffer*&
size
builtins.int"builtins.intz38z39z310z311z312z313*ç
read_buffersjack.RingBuffer.read_buffers"~
*Tuple[jack._CBufferType,jack._CBufferType]&
jack._CBufferType"jack._CBufferType&
jack._CBufferType"jack._CBufferType*,
self"
jack.RingBuffer"jack.RingBuffer0:builtins.property`z38z39z310z311z312z313*®
read_advancejack.RingBuffer.read_advance"
None*,
self"
jack.RingBuffer"jack.RingBuffer*&
size
builtins.int"builtins.intz38z39z310z311z312z313*r
mlockjack.RingBuffer.mlock"
None*,
self"
jack.RingBuffer"jack.RingBufferz38z39z310z311z312z313*ƒ
resetjack.RingBuffer.reset"
None*,
self"
jack.RingBuffer"jack.RingBuffer*P
sizeD
Union[builtins.int,None]
builtins.int"builtins.int
None z38z39z310z311z312z313*õ
sizejack.RingBuffer.size"
builtins.int"builtins.int*,
self"
jack.RingBuffer"jack.RingBuffer0:builtins.property`z38z39z310z311z312z313j38j39j310j311j312j313ª
Statusjack.Status"builtins.object*î
__init__jack.Status.__init__"
None*$
self
jack.Status"jack.Status*&
code
builtins.int"builtins.intz38z39z310z311z312z313*ó
failurejack.Status.failure"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*•
invalid_optionjack.Status.invalid_option"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*ß
name_not_uniquejack.Status.name_not_unique"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*•
server_startedjack.Status.server_started"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*£
server_failedjack.Status.server_failed"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*°
server_errorjack.Status.server_error"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*•
no_such_clientjack.Status.no_such_client"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*°
load_failurejack.Status.load_failure"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*°
init_failurejack.Status.init_failure"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*ü
shm_failurejack.Status.shm_failure"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*£
version_errorjack.Status.version_error"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*£
backend_errorjack.Status.backend_error"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313*£
client_zombiejack.Status.client_zombie"
builtins.bool"builtins.bool*$
self
jack.Status"jack.Status0:builtins.property`z38z39z310z311z312z313j38j39j310j311j312j313”
TransportStatejack.TransportState"builtins.object*¨
__init__jack.TransportState.__init__"
None*4
self*
jack.TransportState"jack.TransportState*&
code
builtins.int"builtins.intz38z39z310z311z312z313*¥
__eq__jack.TransportState.__eq__"
builtins.bool"builtins.bool*,*
jack.TransportState"jack.TransportState*$"
builtins.object"builtins.objectz38z39z310z311z312z313*ò
__hash__jack.TransportState.__hash__"
builtins.int"builtins.int*4
self*
jack.TransportState"jack.TransportStatez38z39z310z311z312z313j38j39j310j311j312j313Q
CallbackExitjack.CallbackExit"builtins.Exceptionj38j39j310j311j312j313˙
get_propertyjack.get_property"§
.Union[Tuple[builtins.bytes,builtins.str],None]f
"Tuple[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str
None*m
subject`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.str*%
key
builtins.str"builtins.strz38z39z310z311z312z313à
get_propertiesjack.get_properties"’
>builtins.dict[builtins.str,Tuple[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Tuple[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.dict*m
subject`
 Union[builtins.int,builtins.str]
builtins.int"builtins.int
builtins.str"builtins.strz38z39z310z311z312z313≠
get_all_propertiesjack.get_all_properties"·
Zbuiltins.dict[builtins.str,builtins.dict[builtins.str,Tuple[builtins.bytes,builtins.str]]]
builtins.str"builtins.str’
>builtins.dict[builtins.str,Tuple[builtins.bytes,builtins.str]]
builtins.str"builtins.strf
"Tuple[builtins.bytes,builtins.str] 
builtins.bytes"builtins.bytes
builtins.str"builtins.str"builtins.dict"builtins.dictz38z39z310z311z312z313Õ
position2dictjack.position2dict"W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*3
pos*
jack._JackPositionT"jack._JackPositionTz38z39z310z311z312z313Ï
versionjack.version"∂
:Tuple[builtins.int,builtins.int,builtins.int,builtins.int]
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.int
builtins.int"builtins.intz38z39z310z311z312z313_
version_stringjack.version_string"
builtins.str"builtins.strz38z39z310z311z312z313c
client_name_sizejack.client_name_size"
builtins.int"builtins.intz38z39z310z311z312z313_
port_name_sizejack.port_name_size"
builtins.int"builtins.intz38z39z310z311z312z313Ì
set_error_functionjack.set_error_function"
None*ó
callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z38z39z310z311z312z313Î
set_info_functionjack.set_info_function"
None*ó
callbackÜ
+Union[CallableType[builtins.function],None]K
CallableType[builtins.function]&
builtins.function"builtins.function
None z38z39z310z311z312z313

client_pidjack.client_pid"
builtins.int"builtins.int*&
name
builtins.str"builtins.strz38z39z310z311z312z313*Å
__path__jack.__path__J
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*38*39*310*311*312*313*ú
__annotations__jack.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*Q
STOPPEDjack.STOPPED
builtins.int"builtins.int*38*39*310*311*312*313*Q
ROLLINGjack.ROLLING
builtins.int"builtins.int*38*39*310*311*312*313*S
STARTINGjack.STARTING
builtins.int"builtins.int*38*39*310*311*312*313*Y
NETSTARTINGjack.NETSTARTING
builtins.int"builtins.int*38*39*310*311*312*313*c
PROPERTY_CREATEDjack.PROPERTY_CREATED
builtins.int"builtins.int*38*39*310*311*312*313*c
PROPERTY_CHANGEDjack.PROPERTY_CHANGED
builtins.int"builtins.int*38*39*310*311*312*313*c
PROPERTY_DELETEDjack.PROPERTY_DELETED
builtins.int"builtins.int*38*39*310*311*312*313*[
POSITION_BBTjack.POSITION_BBT
builtins.int"builtins.int*38*39*310*311*312*313*e
POSITION_TIMECODEjack.POSITION_TIMECODE
builtins.int"builtins.int*38*39*310*311*312*313*u
POSITION_BBT_FRAME_OFFSETjack.POSITION_BBT_FRAME_OFFSET
builtins.int"builtins.int*38*39*310*311*312*313*w
POSITION_AUDIO_VIDEO_RATIOjack.POSITION_AUDIO_VIDEO_RATIO
builtins.int"builtins.int*38*39*310*311*312*313*y
POSITION_VIDEO_FRAME_OFFSET jack.POSITION_VIDEO_FRAME_OFFSET
builtins.int"builtins.int*38*39*310*311*312*313*g
METADATA_CONNECTEDjack.METADATA_CONNECTED
builtins.str"builtins.str*38*39*310*311*312*313*e
METADATA_HARDWAREjack.METADATA_HARDWARE
builtins.str"builtins.str*38*39*310*311*312*313*i
METADATA_ICON_LARGEjack.METADATA_ICON_LARGE
builtins.str"builtins.str*38*39*310*311*312*313*i
METADATA_ICON_SMALLjack.METADATA_ICON_SMALL
builtins.str"builtins.str*38*39*310*311*312*313*i
METADATA_PORT_GROUPjack.METADATA_PORT_GROUP
builtins.str"builtins.str*38*39*310*311*312*313*k
METADATA_PRETTY_NAMEjack.METADATA_PRETTY_NAME
builtins.str"builtins.str*38*39*310*311*312*313