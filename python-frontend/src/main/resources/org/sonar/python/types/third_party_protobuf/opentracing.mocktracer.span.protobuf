
opentracing.mocktracer.span‘&
MockSpan$opentracing.mocktracer.span.MockSpan"opentracing.span.Span*‰
__init__-opentracing.mocktracer.span.MockSpan.__init__"
None*V
selfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan*B
tracer6
opentracing.tracer.Tracer"opentracing.tracer.Tracer*Z
operation_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None *Æ
contextû
6Union[opentracing.mocktracer.context.SpanContext,None]X
*opentracing.mocktracer.context.SpanContext"*opentracing.mocktracer.context.SpanContext
None *U
	parent_idD
Union[builtins.int,None]
builtins.int"builtins.int
None *ü
tagsí
+Union[builtins.dict[builtins.str,Any],None]W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict
None *\

start_timeJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z38z39z310z311z312z313z314*õ
tracer+opentracing.mocktracer.span.MockSpan.tracer"T
(opentracing.mocktracer.tracer.MockTracer"(opentracing.mocktracer.tracer.MockTracer*V
selfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan0:builtins.property`z38z39z310z311z312z313z314*°
context,opentracing.mocktracer.span.MockSpan.context"X
*opentracing.mocktracer.context.SpanContext"*opentracing.mocktracer.context.SpanContext*V
selfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan0:builtins.property`z38z39z310z311z312z313z314*Û
set_operation_name7opentracing.mocktracer.span.MockSpan.set_operation_name"°
)opentracing.mocktracer.span.MockSpan.SelfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan*¨
self°
)opentracing.mocktracer.span.MockSpan.SelfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan*0
operation_name
builtins.str"builtins.strz38z39z310z311z312z313z314*ı
set_tag,opentracing.mocktracer.span.MockSpan.set_tag"°
)opentracing.mocktracer.span.MockSpan.SelfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan*¨
self°
)opentracing.mocktracer.span.MockSpan.SelfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan*%
key
builtins.str"builtins.str*†
valueî
0Union[builtins.str,builtins.bool,builtins.float]
builtins.str"builtins.str
builtins.bool"builtins.bool 
builtins.float"builtins.floatz38z39z310z311z312z313z314*Ô
log_kv+opentracing.mocktracer.span.MockSpan.log_kv"°
)opentracing.mocktracer.span.MockSpan.SelfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan*¨
self°
)opentracing.mocktracer.span.MockSpan.SelfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan*g

key_valuesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*[
	timestampJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z38z39z310z311z312z313z314*ç
set_baggage_item5opentracing.mocktracer.span.MockSpan.set_baggage_item"°
)opentracing.mocktracer.span.MockSpan.SelfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan*¨
self°
)opentracing.mocktracer.span.MockSpan.SelfL
$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan"$opentracing.mocktracer.span.MockSpan*%
key
builtins.str"builtins.str*'
value
builtins.str"builtins.strz38z39z310z311z312z313z314j38j39j310j311j312j313j314r¨
operation_name3opentracing.mocktracer.span.MockSpan.operation_nameD
Union[builtins.str,None]
builtins.str"builtins.str
None*38*39*310*311*312*313*314rg

start_time/opentracing.mocktracer.span.MockSpan.start_time
Any*38*39*310*311*312*313*314r¢
	parent_id.opentracing.mocktracer.span.MockSpan.parent_idD
Union[builtins.int,None]
builtins.int"builtins.int
None*38*39*310*311*312*313*314r´
tags)opentracing.mocktracer.span.MockSpan.tagsW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314rÇ
finish_time0opentracing.mocktracer.span.MockSpan.finish_time 
builtins.float"builtins.float*38*39*310*311*312*313*314rz
finished-opentracing.mocktracer.span.MockSpan.finished
builtins.bool"builtins.bool*38*39*310*311*312*313*314r‰
logs)opentracing.mocktracer.span.MockSpan.logsè
2builtins.list[opentracing.mocktracer.span.LogData]J
#opentracing.mocktracer.span.LogData"#opentracing.mocktracer.span.LogData"builtins.list*38*39*310*311*312*313*314≈
LogData#opentracing.mocktracer.span.LogData"builtins.object*ˇ
__init__,opentracing.mocktracer.span.LogData.__init__"
None*T
selfJ
#opentracing.mocktracer.span.LogData"#opentracing.mocktracer.span.LogData*g

key_valuesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*[
	timestampJ
Union[builtins.float,None] 
builtins.float"builtins.float
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314r∂

key_values.opentracing.mocktracer.span.LogData.key_valuesW
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314rß
	timestamp-opentracing.mocktracer.span.LogData.timestampJ
Union[builtins.float,None] 
builtins.float"builtins.float
None*38*39*310*311*312*313*314*∏
__annotations__+opentracing.mocktracer.span.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314