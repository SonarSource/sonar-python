
sqlalchemy.dialects.mysql.baseÍ
BINARYsqlalchemy.sql.sqltypes.BINARY"sqlalchemy.sql.sqltypes._Binaryj38j39j310j311j312j313j314r~
__visit_name__-sqlalchemy.sql.sqltypes.BINARY.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ë
BLOBsqlalchemy.sql.sqltypes.BLOB"#sqlalchemy.sql.sqltypes.LargeBinaryj38j39j310j311j312j313j314r|
__visit_name__+sqlalchemy.sql.sqltypes.BLOB.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ì
BOOLEANsqlalchemy.sql.sqltypes.BOOLEAN"sqlalchemy.sql.sqltypes.Booleanj38j39j310j311j312j313j314r
__visit_name__.sqlalchemy.sql.sqltypes.BOOLEAN.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314·
DATEsqlalchemy.sql.sqltypes.DATE"sqlalchemy.sql.sqltypes.Datej38j39j310j311j312j313j314r|
__visit_name__+sqlalchemy.sql.sqltypes.DATE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ù
	VARBINARY!sqlalchemy.sql.sqltypes.VARBINARY"sqlalchemy.sql.sqltypes._Binaryj38j39j310j311j312j313j314rÅ
__visit_name__0sqlalchemy.sql.sqltypes.VARBINARY.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ü
ENUM)sqlalchemy.dialects.mysql.enumerated.ENUM")sqlalchemy.sql.type_api.NativeForEmulated"sqlalchemy.sql.sqltypes.Enum"+sqlalchemy.dialects.mysql.types._StringType*
__init__2sqlalchemy.dialects.mysql.enumerated.ENUM.__init__"
None*`
selfV
)sqlalchemy.dialects.mysql.enumerated.ENUM")sqlalchemy.dialects.mysql.enumerated.ENUM*
enums
Any*
kw
Anyz38z39z310z311z312z313z314*¥
adapt_emulated_to_nativeBsqlalchemy.dialects.mysql.enumerated.ENUM.adapt_emulated_to_native*
cls*
impl*
kw0:builtins.classmethodpz38z39z310z311z312z313z314j38j39j310j311j312j313j314râ
__visit_name__8sqlalchemy.dialects.mysql.enumerated.ENUM.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314rÖ
native_enum5sqlalchemy.dialects.mysql.enumerated.ENUM.native_enum
builtins.bool"builtins.bool*38*39*310*311*312*313*314˙	
SET(sqlalchemy.dialects.mysql.enumerated.SET"+sqlalchemy.dialects.mysql.types._StringType*Ó
__init__1sqlalchemy.dialects.mysql.enumerated.SET.__init__"
None*^
selfT
(sqlalchemy.dialects.mysql.enumerated.SET"(sqlalchemy.dialects.mysql.enumerated.SET*
values
Any*
kw
Anyz38z39z310z311z312z313z314*á
column_expression:sqlalchemy.dialects.mysql.enumerated.SET.column_expression*
self*
colexprz38z39z310z311z312z313z314*í
result_processor9sqlalchemy.dialects.mysql.enumerated.SET.result_processor*
self*
dialect*
coltypez38z39z310z311z312z313z314*Å
bind_processor7sqlalchemy.dialects.mysql.enumerated.SET.bind_processor*
self*
dialectz38z39z310z311z312z313z314*x
adapt.sqlalchemy.dialects.mysql.enumerated.SET.adapt*
self*
impltype*
kwz38z39z310z311z312z313z314j38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.mysql.enumerated.SET.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314r}
retrieve_as_bitwise<sqlalchemy.dialects.mysql.enumerated.SET.retrieve_as_bitwise
Any*38*39*310*311*312*313*314rc
values/sqlalchemy.dialects.mysql.enumerated.SET.values
Any*38*39*310*311*312*313*314j
JSON#sqlalchemy.dialects.mysql.json.JSON"sqlalchemy.sql.sqltypes.JSONj38j39j310j311j312j313j314
BIGINT&sqlalchemy.dialects.mysql.types.BIGINT",sqlalchemy.dialects.mysql.types._IntegerType"sqlalchemy.sql.sqltypes.BIGINT*≈
__init__/sqlalchemy.dialects.mysql.types.BIGINT.__init__"
None*Z
selfP
&sqlalchemy.dialects.mysql.types.BIGINT"&sqlalchemy.dialects.mysql.types.BIGINT*p
display_width[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rÜ
__visit_name__5sqlalchemy.dialects.mysql.types.BIGINT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314å
BIT#sqlalchemy.dialects.mysql.types.BIT""sqlalchemy.sql.type_api.TypeEngine*§
__init__,sqlalchemy.dialects.mysql.types.BIT.__init__"
None*T
selfJ
#sqlalchemy.dialects.mysql.types.BIT"#sqlalchemy.dialects.mysql.types.BIT*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314*ç
result_processor4sqlalchemy.dialects.mysql.types.BIT.result_processor*
self*
dialect*
coltypez38z39z310z311z312z313z314j38j39j310j311j312j313j314rÉ
__visit_name__2sqlalchemy.dialects.mysql.types.BIT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314r^
length*sqlalchemy.dialects.mysql.types.BIT.length
Any*38*39*310*311*312*313*314ﬁ
CHAR$sqlalchemy.dialects.mysql.types.CHAR"+sqlalchemy.dialects.mysql.types._StringType"sqlalchemy.sql.sqltypes.CHAR*º
__init__-sqlalchemy.dialects.mysql.types.CHAR.__init__"
None*V
selfL
$sqlalchemy.dialects.mysql.types.CHAR"$sqlalchemy.dialects.mysql.types.CHAR*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rÑ
__visit_name__3sqlalchemy.dialects.mysql.types.CHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314ƒ
DATETIME(sqlalchemy.dialects.mysql.types.DATETIME" sqlalchemy.sql.sqltypes.DATETIME*‡
__init__1sqlalchemy.dialects.mysql.types.DATETIME.__init__"
None*^
selfT
(sqlalchemy.dialects.mysql.types.DATETIME"(sqlalchemy.dialects.mysql.types.DATETIME*.
timezone
builtins.bool"builtins.bool *f
fsp[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.mysql.types.DATETIME.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314r]
fsp,sqlalchemy.dialects.mysql.types.DATETIME.fsp
Any*38*39*310*311*312*313*314é
DECIMAL'sqlalchemy.dialects.mysql.types.DECIMAL",sqlalchemy.dialects.mysql.types._NumericType"sqlalchemy.sql.sqltypes.DECIMAL*ﬂ
__init__0sqlalchemy.dialects.mysql.types.DECIMAL.__init__"
None*\
selfR
'sqlalchemy.dialects.mysql.types.DECIMAL"'sqlalchemy.dialects.mysql.types.DECIMAL*l
	precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
scale[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None */
	asdecimal
builtins.bool"builtins.bool *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rá
__visit_name__6sqlalchemy.dialects.mysql.types.DECIMAL.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Â
DOUBLE&sqlalchemy.dialects.mysql.types.DOUBLE"*sqlalchemy.dialects.mysql.types._FloatType*‹
__init__/sqlalchemy.dialects.mysql.types.DOUBLE.__init__"
None*Z
selfP
&sqlalchemy.dialects.mysql.types.DOUBLE"&sqlalchemy.dialects.mysql.types.DOUBLE*l
	precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
scale[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None */
	asdecimal
builtins.bool"builtins.bool *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rÜ
__visit_name__5sqlalchemy.dialects.mysql.types.DOUBLE.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314‚
FLOAT%sqlalchemy.dialects.mysql.types.FLOAT"*sqlalchemy.dialects.mysql.types._FloatType"sqlalchemy.sql.sqltypes.FLOAT*Ÿ
__init__.sqlalchemy.dialects.mysql.types.FLOAT.__init__"
None*X
selfN
%sqlalchemy.dialects.mysql.types.FLOAT"%sqlalchemy.dialects.mysql.types.FLOAT*l
	precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
scale[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None */
	asdecimal
builtins.bool"builtins.bool *
kw
Anyz38z39z310z311z312z313z314*·
bind_processor4sqlalchemy.dialects.mysql.types.FLOAT.bind_processor"
None*X
selfN
%sqlalchemy.dialects.mysql.types.FLOAT"%sqlalchemy.dialects.mysql.types.FLOAT*
dialect
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rÖ
__visit_name__4sqlalchemy.dialects.mysql.types.FLOAT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314˜
INTEGER'sqlalchemy.dialects.mysql.types.INTEGER",sqlalchemy.dialects.mysql.types._IntegerType"sqlalchemy.sql.sqltypes.INTEGER*»
__init__0sqlalchemy.dialects.mysql.types.INTEGER.__init__"
None*\
selfR
'sqlalchemy.dialects.mysql.types.INTEGER"'sqlalchemy.dialects.mysql.types.INTEGER*p
display_width[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rá
__visit_name__6sqlalchemy.dialects.mysql.types.INTEGER.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Å
LONGBLOB(sqlalchemy.dialects.mysql.types.LONGBLOB"sqlalchemy.sql.sqltypes._Binaryj38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.mysql.types.LONGBLOB.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ì
LONGTEXT(sqlalchemy.dialects.mysql.types.LONGTEXT"+sqlalchemy.dialects.mysql.types._StringType*›
__init__1sqlalchemy.dialects.mysql.types.LONGTEXT.__init__"
None*^
selfT
(sqlalchemy.dialects.mysql.types.LONGTEXT"(sqlalchemy.dialects.mysql.types.LONGTEXT*
kwargs
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.mysql.types.LONGTEXT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314á

MEDIUMBLOB*sqlalchemy.dialects.mysql.types.MEDIUMBLOB"sqlalchemy.sql.sqltypes._Binaryj38j39j310j311j312j313j314rä
__visit_name__9sqlalchemy.dialects.mysql.types.MEDIUMBLOB.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314‚
	MEDIUMINT)sqlalchemy.dialects.mysql.types.MEDIUMINT",sqlalchemy.dialects.mysql.types._IntegerType*Œ
__init__2sqlalchemy.dialects.mysql.types.MEDIUMINT.__init__"
None*`
selfV
)sqlalchemy.dialects.mysql.types.MEDIUMINT")sqlalchemy.dialects.mysql.types.MEDIUMINT*p
display_width[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314râ
__visit_name__8sqlalchemy.dialects.mysql.types.MEDIUMINT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314˘

MEDIUMTEXT*sqlalchemy.dialects.mysql.types.MEDIUMTEXT"+sqlalchemy.dialects.mysql.types._StringType*„
__init__3sqlalchemy.dialects.mysql.types.MEDIUMTEXT.__init__"
None*b
selfX
*sqlalchemy.dialects.mysql.types.MEDIUMTEXT"*sqlalchemy.dialects.mysql.types.MEDIUMTEXT*
kwargs
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rä
__visit_name__9sqlalchemy.dialects.mysql.types.MEDIUMTEXT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Â
NCHAR%sqlalchemy.dialects.mysql.types.NCHAR"+sqlalchemy.dialects.mysql.types._StringType"sqlalchemy.sql.sqltypes.NCHAR*ø
__init__.sqlalchemy.dialects.mysql.types.NCHAR.__init__"
None*X
selfN
%sqlalchemy.dialects.mysql.types.NCHAR"%sqlalchemy.dialects.mysql.types.NCHAR*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rÖ
__visit_name__4sqlalchemy.dialects.mysql.types.NCHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314é
NUMERIC'sqlalchemy.dialects.mysql.types.NUMERIC",sqlalchemy.dialects.mysql.types._NumericType"sqlalchemy.sql.sqltypes.NUMERIC*ﬂ
__init__0sqlalchemy.dialects.mysql.types.NUMERIC.__init__"
None*\
selfR
'sqlalchemy.dialects.mysql.types.NUMERIC"'sqlalchemy.dialects.mysql.types.NUMERIC*l
	precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
scale[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None */
	asdecimal
builtins.bool"builtins.bool *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rá
__visit_name__6sqlalchemy.dialects.mysql.types.NUMERIC.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314˙
NVARCHAR(sqlalchemy.dialects.mysql.types.NVARCHAR"+sqlalchemy.dialects.mysql.types._StringType" sqlalchemy.sql.sqltypes.NVARCHAR*»
__init__1sqlalchemy.dialects.mysql.types.NVARCHAR.__init__"
None*^
selfT
(sqlalchemy.dialects.mysql.types.NVARCHAR"(sqlalchemy.dialects.mysql.types.NVARCHAR*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.mysql.types.NVARCHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314˜
REAL$sqlalchemy.dialects.mysql.types.REAL"*sqlalchemy.dialects.mysql.types._FloatType"sqlalchemy.sql.sqltypes.REAL*÷
__init__-sqlalchemy.dialects.mysql.types.REAL.__init__"
None*V
selfL
$sqlalchemy.dialects.mysql.types.REAL"$sqlalchemy.dialects.mysql.types.REAL*l
	precision[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *h
scale[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None */
	asdecimal
builtins.bool"builtins.bool *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rÑ
__visit_name__3sqlalchemy.dialects.mysql.types.REAL.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314˛
SMALLINT(sqlalchemy.dialects.mysql.types.SMALLINT",sqlalchemy.dialects.mysql.types._IntegerType" sqlalchemy.sql.sqltypes.SMALLINT*À
__init__1sqlalchemy.dialects.mysql.types.SMALLINT.__init__"
None*^
selfT
(sqlalchemy.dialects.mysql.types.SMALLINT"(sqlalchemy.dialects.mysql.types.SMALLINT*p
display_width[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.mysql.types.SMALLINT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314⁄
TEXT$sqlalchemy.dialects.mysql.types.TEXT"+sqlalchemy.dialects.mysql.types._StringType"sqlalchemy.sql.sqltypes.TEXT*∏
__init__-sqlalchemy.dialects.mysql.types.TEXT.__init__"
None*V
selfL
$sqlalchemy.dialects.mysql.types.TEXT"$sqlalchemy.dialects.mysql.types.TEXT*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rÑ
__visit_name__3sqlalchemy.dialects.mysql.types.TEXT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314µ
TIME$sqlalchemy.dialects.mysql.types.TIME"sqlalchemy.sql.sqltypes.TIME*‘
__init__-sqlalchemy.dialects.mysql.types.TIME.__init__"
None*V
selfL
$sqlalchemy.dialects.mysql.types.TIME"$sqlalchemy.dialects.mysql.types.TIME*.
timezone
builtins.bool"builtins.bool *f
fsp[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314*é
result_processor5sqlalchemy.dialects.mysql.types.TIME.result_processor*
self*
dialect*
coltypez38z39z310z311z312z313z314j38j39j310j311j312j313j314rÑ
__visit_name__3sqlalchemy.dialects.mysql.types.TIME.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314rY
fsp(sqlalchemy.dialects.mysql.types.TIME.fsp
Any*38*39*310*311*312*313*314Ã
	TIMESTAMP)sqlalchemy.dialects.mysql.types.TIMESTAMP"!sqlalchemy.sql.sqltypes.TIMESTAMP*„
__init__2sqlalchemy.dialects.mysql.types.TIMESTAMP.__init__"
None*`
selfV
)sqlalchemy.dialects.mysql.types.TIMESTAMP")sqlalchemy.dialects.mysql.types.TIMESTAMP*.
timezone
builtins.bool"builtins.bool *f
fsp[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314râ
__visit_name__8sqlalchemy.dialects.mysql.types.TIMESTAMP.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314r^
fsp-sqlalchemy.dialects.mysql.types.TIMESTAMP.fsp
Any*38*39*310*311*312*313*314Å
TINYBLOB(sqlalchemy.dialects.mysql.types.TINYBLOB"sqlalchemy.sql.sqltypes._Binaryj38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.mysql.types.TINYBLOB.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314÷
TINYINT'sqlalchemy.dialects.mysql.types.TINYINT",sqlalchemy.dialects.mysql.types._IntegerType*»
__init__0sqlalchemy.dialects.mysql.types.TINYINT.__init__"
None*\
selfR
'sqlalchemy.dialects.mysql.types.TINYINT"'sqlalchemy.dialects.mysql.types.TINYINT*p
display_width[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rá
__visit_name__6sqlalchemy.dialects.mysql.types.TINYINT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Ì
TINYTEXT(sqlalchemy.dialects.mysql.types.TINYTEXT"+sqlalchemy.dialects.mysql.types._StringType*›
__init__1sqlalchemy.dialects.mysql.types.TINYTEXT.__init__"
None*^
selfT
(sqlalchemy.dialects.mysql.types.TINYTEXT"(sqlalchemy.dialects.mysql.types.TINYTEXT*
kwargs
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rà
__visit_name__7sqlalchemy.dialects.mysql.types.TINYTEXT.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314Û
VARCHAR'sqlalchemy.dialects.mysql.types.VARCHAR"+sqlalchemy.dialects.mysql.types._StringType"sqlalchemy.sql.sqltypes.VARCHAR*≈
__init__0sqlalchemy.dialects.mysql.types.VARCHAR.__init__"
None*\
selfR
'sqlalchemy.dialects.mysql.types.VARCHAR"'sqlalchemy.dialects.mysql.types.VARCHAR*i
length[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rá
__visit_name__6sqlalchemy.dialects.mysql.types.VARCHAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314ò
YEAR$sqlalchemy.dialects.mysql.types.YEAR""sqlalchemy.sql.type_api.TypeEngine*Æ
__init__-sqlalchemy.dialects.mysql.types.YEAR.__init__"
None*V
selfL
$sqlalchemy.dialects.mysql.types.YEAR"$sqlalchemy.dialects.mysql.types.YEAR*p
display_width[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314j38j39j310j311j312j313j314rÑ
__visit_name__3sqlalchemy.dialects.mysql.types.YEAR.__visit_name__
builtins.str"builtins.str*38*39*310*311*312*313*314rm
display_width2sqlalchemy.dialects.mysql.types.YEAR.display_width
Any*38*39*310*311*312*313*314Ò
MySQLExecutionContext4sqlalchemy.dialects.mysql.base.MySQLExecutionContext"1sqlalchemy.engine.default.DefaultExecutionContext*ü
should_autocommit_textKsqlalchemy.dialects.mysql.base.MySQLExecutionContext.should_autocommit_text*
self*
	statementz38z39z310z311z312z313z314*ñ
create_server_side_cursorNsqlalchemy.dialects.mysql.base.MySQLExecutionContext.create_server_side_cursor*
selfz38z39z310z311z312z313z314*í
fire_sequenceBsqlalchemy.dialects.mysql.base.MySQLExecutionContext.fire_sequence*
self*
seq*	
type_z38z39z310z311z312z313z314j38j39j310j311j312j313j314∑0
MySQLCompiler,sqlalchemy.dialects.mysql.base.MySQLCompiler"#sqlalchemy.sql.compiler.SQLCompiler*t
default_from9sqlalchemy.dialects.mysql.base.MySQLCompiler.default_from*
selfz38z39z310z311z312z313z314*é
visit_random_func>sqlalchemy.dialects.mysql.base.MySQLCompiler.visit_random_func*
self*
fn*
kwz38z39z310z311z312z313z314*â
visit_sequence;sqlalchemy.dialects.mysql.base.MySQLCompiler.visit_sequence*
self*
seq*
kwz38z39z310z311z312z313z314*ê
visit_sysdate_func?sqlalchemy.dialects.mysql.base.MySQLCompiler.visit_sysdate_func*
self*
fn*
kwz38z39z310z311z312z313z314*∂
visit_json_getitem_op_binaryIsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_json_getitem_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313z314*¿
!visit_json_path_getitem_op_binaryNsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_json_path_getitem_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313z314*∞
visit_on_duplicate_key_updateJsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_on_duplicate_key_update*
self*
on_duplicate*
kwz38z39z310z311z312z313z314*™
visit_concat_op_binaryCsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_concat_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313z314*ì
visit_mysql_match>sqlalchemy.dialects.mysql.base.MySQLCompiler.visit_mysql_match*
self*
element*
kwz38z39z310z311z312z313z314*®
visit_match_op_binaryBsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_match_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313z314*ï
get_from_hint_text?sqlalchemy.dialects.mysql.base.MySQLCompiler.get_from_hint_text*
self*	
table*
textz38z39z310z311z312z313z314*˜
visit_typeclause=sqlalchemy.dialects.mysql.base.MySQLCompiler.visit_typeclause"
Any*f
self\
,sqlalchemy.dialects.mysql.base.MySQLCompiler",sqlalchemy.dialects.mysql.base.MySQLCompiler*

typeclause
Any*h
type_[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*Ç

visit_cast7sqlalchemy.dialects.mysql.base.MySQLCompiler.visit_cast*
self*
cast*
kwz38z39z310z311z312z313z314*ö
render_literal_valueAsqlalchemy.dialects.mysql.base.MySQLCompiler.render_literal_value*
self*	
value*	
type_z38z39z310z311z312z313z314*Ö

visit_true7sqlalchemy.dialects.mysql.base.MySQLCompiler.visit_true*
self*
element*
kwz38z39z310z311z312z313z314*á
visit_false8sqlalchemy.dialects.mysql.base.MySQLCompiler.visit_false*
self*
element*
kwz38z39z310z311z312z313z314*ö
get_select_precolumnsBsqlalchemy.dialects.mysql.base.MySQLCompiler.get_select_precolumns*
self*

select*
kwz38z39z310z311z312z313z314*ù

visit_join7sqlalchemy.dialects.mysql.base.MySQLCompiler.visit_join"
Any*f
self\
,sqlalchemy.dialects.mysql.base.MySQLCompiler",sqlalchemy.dialects.mysql.base.MySQLCompiler*
join
Any*,
asfrom
builtins.bool"builtins.bool *n
from_linter[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313z314*í
for_update_clause>sqlalchemy.dialects.mysql.base.MySQLCompiler.for_update_clause*
self*

select*
kwz38z39z310z311z312z313z314*à
limit_clause9sqlalchemy.dialects.mysql.base.MySQLCompiler.limit_clause*
self*

select*
kwz38z39z310z311z312z313z314*ì
update_limit_clause@sqlalchemy.dialects.mysql.base.MySQLCompiler.update_limit_clause*
self*
update_stmtz38z39z310z311z312z313z314*æ
update_tables_clauseAsqlalchemy.dialects.mysql.base.MySQLCompiler.update_tables_clause*
self*
update_stmt*

from_table*
extra_froms*
kwz38z39z310z311z312z313z314*ﬂ
update_from_clause?sqlalchemy.dialects.mysql.base.MySQLCompiler.update_from_clause"
None*f
self\
,sqlalchemy.dialects.mysql.base.MySQLCompiler",sqlalchemy.dialects.mysql.base.MySQLCompiler*
update_stmt
Any*

from_table
Any*
extra_froms
Any*

from_hints
Any*
kw
Anyz38z39z310z311z312z313z314*¥
delete_table_clause@sqlalchemy.dialects.mysql.base.MySQLCompiler.delete_table_clause*
self*
delete_stmt*

from_table*
extra_fromsz38z39z310z311z312z313z314*÷
delete_extra_from_clauseEsqlalchemy.dialects.mysql.base.MySQLCompiler.delete_extra_from_clause*
self*
delete_stmt*

from_table*
extra_froms*

from_hints*
kwz38z39z310z311z312z313z314*ó
visit_empty_set_exprAsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_empty_set_expr*
self*
element_typesz38z39z310z311z312z313z314*∏
visit_is_distinct_from_binaryJsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_is_distinct_from_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313z314*¿
!visit_is_not_distinct_from_binaryNsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_is_not_distinct_from_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313z314*∂
visit_regexp_match_op_binaryIsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_regexp_match_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313z314*æ
 visit_not_regexp_match_op_binaryMsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_not_regexp_match_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313z314*∫
visit_regexp_replace_op_binaryKsqlalchemy.dialects.mysql.base.MySQLCompiler.visit_regexp_replace_op_binary*
self*

binary*
operator*
kwz38z39z310z311z312z313z314j38j39j310j311j312j313j314r¿
'render_table_with_column_in_update_fromTsqlalchemy.dialects.mysql.base.MySQLCompiler.render_table_with_column_in_update_from
builtins.bool"builtins.bool*38*39*310*311*312*313*314rq
extract_map8sqlalchemy.dialects.mysql.base.MySQLCompiler.extract_map
Any*38*39*310*311*312*313*314ú
MySQLDDLCompiler/sqlalchemy.dialects.mysql.base.MySQLDDLCompiler"#sqlalchemy.sql.compiler.DDLCompiler*£
get_column_specificationHsqlalchemy.dialects.mysql.base.MySQLDDLCompiler.get_column_specification*
self*

column*
kwz38z39z310z311z312z313z314*å
post_create_tableAsqlalchemy.dialects.mysql.base.MySQLDDLCompiler.post_create_table*
self*	
tablez38z39z310z311z312z313z314*ó
visit_create_indexBsqlalchemy.dialects.mysql.base.MySQLDDLCompiler.visit_create_index*
self*

create*
kwz38z39z310z311z312z313z314*ß
visit_primary_key_constraintLsqlalchemy.dialects.mysql.base.MySQLDDLCompiler.visit_primary_key_constraint*
self*

constraintz38z39z310z311z312z313z314*â
visit_drop_index@sqlalchemy.dialects.mysql.base.MySQLDDLCompiler.visit_drop_index*
self*
dropz38z39z310z311z312z313z314*ì
visit_drop_constraintEsqlalchemy.dialects.mysql.base.MySQLDDLCompiler.visit_drop_constraint*
self*
dropz38z39z310z311z312z313z314*ù
define_constraint_matchGsqlalchemy.dialects.mysql.base.MySQLDDLCompiler.define_constraint_match*
self*

constraintz38z39z310z311z312z313z314*ô
visit_set_table_commentGsqlalchemy.dialects.mysql.base.MySQLDDLCompiler.visit_set_table_comment*
self*

createz38z39z310z311z312z313z314*õ
visit_drop_table_commentHsqlalchemy.dialects.mysql.base.MySQLDDLCompiler.visit_drop_table_comment*
self*

createz38z39z310z311z312z313z314*õ
visit_set_column_commentHsqlalchemy.dialects.mysql.base.MySQLDDLCompiler.visit_set_column_comment*
self*

createz38z39z310z311z312z313z314j38j39j310j311j312j313j314õ(
MySQLTypeCompiler0sqlalchemy.dialects.mysql.base.MySQLTypeCompiler"+sqlalchemy.sql.compiler.GenericTypeCompiler*ç
visit_NUMERIC>sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_NUMERIC*
self*	
type_*
kwz38z39z310z311z312z313z314*ç
visit_DECIMAL>sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_DECIMAL*
self*	
type_*
kwz38z39z310z311z312z313z314*ã
visit_DOUBLE=sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_DOUBLE*
self*	
type_*
kwz38z39z310z311z312z313z314*á

visit_REAL;sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_REAL*
self*	
type_*
kwz38z39z310z311z312z313z314*â
visit_FLOAT<sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_FLOAT*
self*	
type_*
kwz38z39z310z311z312z313z314*ç
visit_INTEGER>sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_INTEGER*
self*	
type_*
kwz38z39z310z311z312z313z314*ã
visit_BIGINT=sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_BIGINT*
self*	
type_*
kwz38z39z310z311z312z313z314*ë
visit_MEDIUMINT@sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_MEDIUMINT*
self*	
type_*
kwz38z39z310z311z312z313z314*ç
visit_TINYINT>sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_TINYINT*
self*	
type_*
kwz38z39z310z311z312z313z314*è
visit_SMALLINT?sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_SMALLINT*
self*	
type_*
kwz38z39z310z311z312z313z314*Ö
	visit_BIT:sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_BIT*
self*	
type_*
kwz38z39z310z311z312z313z314*è
visit_DATETIME?sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_DATETIME*
self*	
type_*
kwz38z39z310z311z312z313z314*á

visit_DATE;sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_DATE*
self*	
type_*
kwz38z39z310z311z312z313z314*á

visit_TIME;sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_TIME*
self*	
type_*
kwz38z39z310z311z312z313z314*ë
visit_TIMESTAMP@sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_TIMESTAMP*
self*	
type_*
kwz38z39z310z311z312z313z314*á

visit_YEAR;sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_YEAR*
self*	
type_*
kwz38z39z310z311z312z313z314*á

visit_TEXT;sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_TEXT*
self*	
type_*
kwz38z39z310z311z312z313z314*è
visit_TINYTEXT?sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_TINYTEXT*
self*	
type_*
kwz38z39z310z311z312z313z314*ì
visit_MEDIUMTEXTAsqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_MEDIUMTEXT*
self*	
type_*
kwz38z39z310z311z312z313z314*è
visit_LONGTEXT?sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_LONGTEXT*
self*	
type_*
kwz38z39z310z311z312z313z314*ç
visit_VARCHAR>sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_VARCHAR*
self*	
type_*
kwz38z39z310z311z312z313z314*á

visit_CHAR;sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_CHAR*
self*	
type_*
kwz38z39z310z311z312z313z314*è
visit_NVARCHAR?sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_NVARCHAR*
self*	
type_*
kwz38z39z310z311z312z313z314*â
visit_NCHAR<sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_NCHAR*
self*	
type_*
kwz38z39z310z311z312z313z314*ë
visit_VARBINARY@sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_VARBINARY*
self*	
type_*
kwz38z39z310z311z312z313z314*á

visit_JSON;sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_JSON*
self*	
type_*
kwz38z39z310z311z312z313z314*ó
visit_large_binaryCsqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_large_binary*
self*	
type_*
kwz38z39z310z311z312z313z314*á

visit_enum;sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_enum*
self*	
type_*
kwz38z39z310z311z312z313z314*á

visit_BLOB;sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_BLOB*
self*	
type_*
kwz38z39z310z311z312z313z314*è
visit_TINYBLOB?sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_TINYBLOB*
self*	
type_*
kwz38z39z310z311z312z313z314*ì
visit_MEDIUMBLOBAsqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_MEDIUMBLOB*
self*	
type_*
kwz38z39z310z311z312z313z314*è
visit_LONGBLOB?sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_LONGBLOB*
self*	
type_*
kwz38z39z310z311z312z313z314*á

visit_ENUM;sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_ENUM*
self*	
type_*
kwz38z39z310z311z312z313z314*Ö
	visit_SET:sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_SET*
self*	
type_*
kwz38z39z310z311z312z313z314*ç
visit_BOOLEAN>sqlalchemy.dialects.mysql.base.MySQLTypeCompiler.visit_BOOLEAN*
self*	
type_*
kwz38z39z310z311z312z313z314j38j39j310j311j312j313j314˜
MySQLIdentifierPreparer6sqlalchemy.dialects.mysql.base.MySQLIdentifierPreparer"*sqlalchemy.sql.compiler.IdentifierPreparer*“
__init__?sqlalchemy.dialects.mysql.base.MySQLIdentifierPreparer.__init__"
None*z
selfp
6sqlalchemy.dialects.mysql.base.MySQLIdentifierPreparer"6sqlalchemy.dialects.mysql.base.MySQLIdentifierPreparer*
dialect
Any*7
server_ansiquotes
builtins.bool"builtins.bool *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rÅ
reserved_wordsEsqlalchemy.dialects.mysql.base.MySQLIdentifierPreparer.reserved_words
Any*38*39*310*311*312*313*314¥
MariaDBIdentifierPreparer8sqlalchemy.dialects.mysql.base.MariaDBIdentifierPreparer"6sqlalchemy.dialects.mysql.base.MySQLIdentifierPreparerj38j39j310j311j312j313j314rÉ
reserved_wordsGsqlalchemy.dialects.mysql.base.MariaDBIdentifierPreparer.reserved_words
Any*38*39*310*311*312*313*314Úg
MySQLDialect+sqlalchemy.dialects.mysql.base.MySQLDialect"(sqlalchemy.engine.default.DefaultDialect*≥
__init__4sqlalchemy.dialects.mysql.base.MySQLDialect.__init__"
None*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*r
isolation_level[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *r
json_serializer[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *t
json_deserializer[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *m

is_mariadb[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kwargs
Anyz38z39z310z311z312z313z314*o

on_connect6sqlalchemy.dialects.mysql.base.MySQLDialect.on_connect*
selfz38z39z310z311z312z313z314*î
set_isolation_level?sqlalchemy.dialects.mysql.base.MySQLDialect.set_isolation_level"
None*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*
level
Anyz38z39z310z311z312z313z314*ë
get_isolation_level?sqlalchemy.dialects.mysql.base.MySQLDialect.get_isolation_level*
self*

connectionz38z39z310z311z312z313z314*é
do_begin_twophase=sqlalchemy.dialects.mysql.base.MySQLDialect.do_begin_twophase"
None*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*
xid
Anyz38z39z310z311z312z313z314*í
do_prepare_twophase?sqlalchemy.dialects.mysql.base.MySQLDialect.do_prepare_twophase"
None*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*
xid
Anyz38z39z310z311z312z313z314*ˆ
do_rollback_twophase@sqlalchemy.dialects.mysql.base.MySQLDialect.do_rollback_twophase"
None*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*
xid
Any*1
is_prepared
builtins.bool"builtins.bool *-
recover
builtins.bool"builtins.bool z38z39z310z311z312z313z314*Ú
do_commit_twophase>sqlalchemy.dialects.mysql.base.MySQLDialect.do_commit_twophase"
None*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*
xid
Any*1
is_prepared
builtins.bool"builtins.bool *-
recover
builtins.bool"builtins.bool z38z39z310z311z312z313z314*ë
do_recover_twophase?sqlalchemy.dialects.mysql.base.MySQLDialect.do_recover_twophase*
self*

connectionz38z39z310z311z312z313z314*ò
is_disconnect9sqlalchemy.dialects.mysql.base.MySQLDialect.is_disconnect*
self*
e*

connection*

cursorz38z39z310z311z312z313z314*Ô
	has_table5sqlalchemy.dialects.mysql.base.MySQLDialect.has_table"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314*¯
has_sequence8sqlalchemy.dialects.mysql.base.MySQLDialect.has_sequence"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*
sequence_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None z38z39z310z311z312z313z314*˘
get_sequence_names>sqlalchemy.dialects.mysql.base.MySQLDialect.get_sequence_names"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*Ó

initialize6sqlalchemy.dialects.mysql.base.MySQLDialect.initialize"
None*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Anyz38z39z310z311z312z313z314*ì
get_schema_names<sqlalchemy.dialects.mysql.base.MySQLDialect.get_schema_names*
self*

connection*
kwz38z39z310z311z312z313z314*Û
get_table_names;sqlalchemy.dialects.mysql.base.MySQLDialect.get_table_names"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*Ò
get_view_names:sqlalchemy.dialects.mysql.base.MySQLDialect.get_view_names"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*ê
get_table_options=sqlalchemy.dialects.mysql.base.MySQLDialect.get_table_options"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*Ñ
get_columns7sqlalchemy.dialects.mysql.base.MySQLDialect.get_columns"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*ê
get_pk_constraint=sqlalchemy.dialects.mysql.base.MySQLDialect.get_pk_constraint"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*é
get_foreign_keys<sqlalchemy.dialects.mysql.base.MySQLDialect.get_foreign_keys"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*ò
get_check_constraintsAsqlalchemy.dialects.mysql.base.MySQLDialect.get_check_constraints"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*ê
get_table_comment=sqlalchemy.dialects.mysql.base.MySQLDialect.get_table_comment"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*Ñ
get_indexes7sqlalchemy.dialects.mysql.base.MySQLDialect.get_indexes"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*ö
get_unique_constraintsBsqlalchemy.dialects.mysql.base.MySQLDialect.get_unique_constraints"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*

table_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314*ì
get_view_definition?sqlalchemy.dialects.mysql.base.MySQLDialect.get_view_definition"
Any*d
selfZ
+sqlalchemy.dialects.mysql.base.MySQLDialect"+sqlalchemy.dialects.mysql.base.MySQLDialect*

connection
Any*
	view_name
Any*i
schema[
Union[TypeAlias[Any],None]1
TypeAlias[Any]
Any"_typeshed.Incomplete
None *
kw
Anyz38z39z310z311z312z313z314j38j39j310j311j312j313j314rf
logger2sqlalchemy.dialects.mysql.base.MySQLDialect.logger
Any*38*39*310*311*312*313*314rw
name0sqlalchemy.dialects.mysql.base.MySQLDialect.name
builtins.str"builtins.str*38*39*310*311*312*313*314r°
supports_statement_cacheDsqlalchemy.dialects.mysql.base.MySQLDialect.supports_statement_cache
builtins.bool"builtins.bool*38*39*310*311*312*313*314rç
supports_alter:sqlalchemy.dialects.mysql.base.MySQLDialect.supports_alter
builtins.bool"builtins.bool*38*39*310*311*312*313*314rü
supports_native_booleanCsqlalchemy.dialects.mysql.base.MySQLDialect.supports_native_boolean
builtins.bool"builtins.bool*38*39*310*311*312*313*314rô
max_identifier_lengthAsqlalchemy.dialects.mysql.base.MySQLDialect.max_identifier_length
builtins.int"builtins.int*38*39*310*311*312*313*314rô
max_index_name_lengthAsqlalchemy.dialects.mysql.base.MySQLDialect.max_index_name_length
builtins.int"builtins.int*38*39*310*311*312*313*314r£
max_constraint_name_lengthFsqlalchemy.dialects.mysql.base.MySQLDialect.max_constraint_name_length
builtins.int"builtins.int*38*39*310*311*312*313*314rô
supports_native_enum@sqlalchemy.dialects.mysql.base.MySQLDialect.supports_native_enum
builtins.bool"builtins.bool*38*39*310*311*312*313*314rï
supports_sequences>sqlalchemy.dialects.mysql.base.MySQLDialect.supports_sequences
builtins.bool"builtins.bool*38*39*310*311*312*313*314rï
sequences_optional>sqlalchemy.dialects.mysql.base.MySQLDialect.sequences_optional
builtins.bool"builtins.bool*38*39*310*311*312*313*314rù
supports_for_update_ofBsqlalchemy.dialects.mysql.base.MySQLDialect.supports_for_update_of
builtins.bool"builtins.bool*38*39*310*311*312*313*314rü
supports_default_valuesCsqlalchemy.dialects.mysql.base.MySQLDialect.supports_default_values
builtins.bool"builtins.bool*38*39*310*311*312*313*314r•
supports_default_metavalueFsqlalchemy.dialects.mysql.base.MySQLDialect.supports_default_metavalue
builtins.bool"builtins.bool*38*39*310*311*312*313*314rù
supports_sane_rowcountBsqlalchemy.dialects.mysql.base.MySQLDialect.supports_sane_rowcount
builtins.bool"builtins.bool*38*39*310*311*312*313*314r©
supports_sane_multi_rowcountHsqlalchemy.dialects.mysql.base.MySQLDialect.supports_sane_multi_rowcount
builtins.bool"builtins.bool*38*39*310*311*312*313*314rß
supports_multivalues_insertGsqlalchemy.dialects.mysql.base.MySQLDialect.supports_multivalues_insert
builtins.bool"builtins.bool*38*39*310*311*312*313*314rì
supports_comments=sqlalchemy.dialects.mysql.base.MySQLDialect.supports_comments
builtins.bool"builtins.bool*38*39*310*311*312*313*314rè
inline_comments;sqlalchemy.dialects.mysql.base.MySQLDialect.inline_comments
builtins.bool"builtins.bool*38*39*310*311*312*313*314rì
default_paramstyle>sqlalchemy.dialects.mysql.base.MySQLDialect.default_paramstyle
builtins.str"builtins.str*38*39*310*311*312*313*314rj
colspecs4sqlalchemy.dialects.mysql.base.MySQLDialect.colspecs
Any*38*39*310*311*312*313*314rï
cte_follows_insert>sqlalchemy.dialects.mysql.base.MySQLDialect.cte_follows_insert
builtins.bool"builtins.bool*38*39*310*311*312*313*314r~
statement_compiler>sqlalchemy.dialects.mysql.base.MySQLDialect.statement_compiler
Any*38*39*310*311*312*313*314rr
ddl_compiler8sqlalchemy.dialects.mysql.base.MySQLDialect.ddl_compiler
Any*38*39*310*311*312*313*314rt
type_compiler9sqlalchemy.dialects.mysql.base.MySQLDialect.type_compiler
Any*38*39*310*311*312*313*314rt
ischema_names9sqlalchemy.dialects.mysql.base.MySQLDialect.ischema_names
Any*38*39*310*311*312*313*314rj
preparer4sqlalchemy.dialects.mysql.base.MySQLDialect.preparer
Any*38*39*310*311*312*313*314rÖ

is_mariadb6sqlalchemy.dialects.mysql.base.MySQLDialect.is_mariadb
builtins.bool"builtins.bool*38*39*310*311*312*313*314rÄ
construct_arguments?sqlalchemy.dialects.mysql.base.MySQLDialect.construct_arguments
Any*38*39*310*311*312*313*314rx
isolation_level;sqlalchemy.dialects.mysql.base.MySQLDialect.isolation_level
Any*38*39*310*311*312*313*314rÄ
identifier_preparer?sqlalchemy.dialects.mysql.base.MySQLDialect.identifier_preparer
Any*38*39*310*311*312*313*314¢
_DecodingRow+sqlalchemy.dialects.mysql.base._DecodingRow"builtins.object*˛
__init__4sqlalchemy.dialects.mysql.base._DecodingRow.__init__"
None*d
selfZ
+sqlalchemy.dialects.mysql.base._DecodingRow"+sqlalchemy.dialects.mysql.base._DecodingRow*
rowproxy
Any*
charset
Anyz38z39z310z311z312z313z314*k
__getitem__7sqlalchemy.dialects.mysql.base._DecodingRow.__getitem__* * z38z39z310z311z312z313z314*Ó
__getattr__7sqlalchemy.dialects.mysql.base._DecodingRow.__getattr__"
Any*\Z
+sqlalchemy.dialects.mysql.base._DecodingRow"+sqlalchemy.dialects.mysql.base._DecodingRow*
builtins.str"builtins.strz38z39z310z311z312z313z314j38j39j310j311j312j313j314rj
rowproxy4sqlalchemy.dialects.mysql.base._DecodingRow.rowproxy
Any*38*39*310*311*312*313*314rh
charset3sqlalchemy.dialects.mysql.base._DecodingRow.charset
Any*38*39*310*311*312*313*314*ª
__annotations__.sqlalchemy.dialects.mysql.base.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*38*39*310*311*312*313*314*É
RESERVED_WORDS_MARIADB?sqlalchemy.dialects.mysql.reserved_words.RESERVED_WORDS_MARIADB
Any*38*39*310*311*312*313*314*
RESERVED_WORDS_MYSQL=sqlalchemy.dialects.mysql.reserved_words.RESERVED_WORDS_MYSQL
Any*38*39*310*311*312*313*314*g
AUTOCOMMIT_RE,sqlalchemy.dialects.mysql.base.AUTOCOMMIT_RE
Any*38*39*310*311*312*313*314*Y
SET_RE%sqlalchemy.dialects.mysql.base.SET_RE
Any*38*39*310*311*312*313*314*]
colspecs'sqlalchemy.dialects.mysql.base.colspecs
Any*38*39*310*311*312*313*314*g
ischema_names,sqlalchemy.dialects.mysql.base.ischema_names
Any*38*39*310*311*312*313*314