
pyspark.ml.connect.util¬
aggregate_dataframe+pyspark.ml.connect.util.aggregate_dataframe"
Any*Ö
	dataframeÆ
BUnion[pyspark.sql.dataframe.DataFrame,pandas.core.frame.DataFrame]B
pyspark.sql.dataframe.DataFrame"pyspark.sql.dataframe.DataFrame:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*_
input_col_namesJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*]
local_agg_fnK
CallableType[builtins.function]&
builtins.function"builtins.function*`
merge_agg_stateK
CallableType[builtins.function]&
builtins.function"builtins.function*d
agg_state_to_resultK
CallableType[builtins.function]&
builtins.function"builtins.functionä
transform_dataframe_column2pyspark.ml.connect.util.transform_dataframe_column"Æ
BUnion[pyspark.sql.dataframe.DataFrame,pandas.core.frame.DataFrame]B
pyspark.sql.dataframe.DataFrame"pyspark.sql.dataframe.DataFrame:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Ö
	dataframeÆ
BUnion[pyspark.sql.dataframe.DataFrame,pandas.core.frame.DataFrame]B
pyspark.sql.dataframe.DataFrame"pyspark.sql.dataframe.DataFrame:
pandas.core.frame.DataFrame"pandas.core.frame.DataFrame*Z

input_colsJ
builtins.list[builtins.str]
builtins.str"builtins.str"builtins.list*]
transform_fnK
CallableType[builtins.function]&
builtins.function"builtins.function*´
output_cols¢
/builtins.list[Tuple[builtins.str,builtins.str]]`
 Tuple[builtins.str,builtins.str]
builtins.str"builtins.str
builtins.str"builtins.str"builtins.list*“
__annotations__'pyspark.ml.connect.util.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*
pdpandas 