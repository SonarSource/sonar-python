
'pyspark.sql.connect.proto.base_pb2_grpcà
SparkConnectServiceStub?pyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub"builtins.object*k
__init__Hpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub.__init__*
self*
channelrc
ExecutePlanKpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub.ExecutePlan
Anyrc
AnalyzePlanKpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub.AnalyzePlan
AnyrY
ConfigFpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub.Config
Anyre
AddArtifactsLpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub.AddArtifacts
Anyri
ArtifactStatusNpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub.ArtifactStatus
Anyr_
	InterruptIpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub.Interrupt
Anyrk
ReattachExecuteOpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub.ReattachExecute
Anyri
ReleaseExecuteNpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceStub.ReleaseExecute
Any™	
SparkConnectServiceServicerCpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceServicer"builtins.object*Ç
ExecutePlanOpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceServicer.ExecutePlan*
self*
request*
context*Ç
AnalyzePlanOpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceServicer.AnalyzePlan*
self*
request*
context*x
ConfigJpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceServicer.Config*
self*
request*
context*ç
AddArtifactsPpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceServicer.AddArtifacts*
self*
request_iterator*
context*à
ArtifactStatusRpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceServicer.ArtifactStatus*
self*
request*
context*~
	InterruptMpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceServicer.Interrupt*
self*
request*
context*ä
ReattachExecuteSpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceServicer.ReattachExecute*
self*
request*
context*à
ReleaseExecuteRpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectServiceServicer.ReleaseExecute*
self*
request*
context‰
SparkConnectService;pyspark.sql.connect.proto.base_pb2_grpc.SparkConnectService"builtins.object*õ
ExecutePlanGpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectService.ExecutePlan*
request*

target*
options *
channel_credentials *
call_credentials *
insecure *
compression *
wait_for_ready *
timeout *
metadata 0:staticmethodh*õ
AnalyzePlanGpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectService.AnalyzePlan*
request*

target*
options *
channel_credentials *
call_credentials *
insecure *
compression *
wait_for_ready *
timeout *
metadata 0:staticmethodh*ë
ConfigBpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectService.Config*
request*

target*
options *
channel_credentials *
call_credentials *
insecure *
compression *
wait_for_ready *
timeout *
metadata 0:staticmethodh*¶
AddArtifactsHpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectService.AddArtifacts*
request_iterator*

target*
options *
channel_credentials *
call_credentials *
insecure *
compression *
wait_for_ready *
timeout *
metadata 0:staticmethodh*°
ArtifactStatusJpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectService.ArtifactStatus*
request*

target*
options *
channel_credentials *
call_credentials *
insecure *
compression *
wait_for_ready *
timeout *
metadata 0:staticmethodh*ó
	InterruptEpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectService.Interrupt*
request*

target*
options *
channel_credentials *
call_credentials *
insecure *
compression *
wait_for_ready *
timeout *
metadata 0:staticmethodh*£
ReattachExecuteKpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectService.ReattachExecute*
request*

target*
options *
channel_credentials *
call_credentials *
insecure *
compression *
wait_for_ready *
timeout *
metadata 0:staticmethodh*°
ReleaseExecuteJpyspark.sql.connect.proto.base_pb2_grpc.SparkConnectService.ReleaseExecute*
request*

target*
options *
channel_credentials *
call_credentials *
insecure *
compression *
wait_for_ready *
timeout *
metadata 0:staticmethodhò
)add_SparkConnectServiceServicer_to_serverQpyspark.sql.connect.proto.base_pb2_grpc.add_SparkConnectServiceServicer_to_server*
servicer*

server*£
__annotations__7pyspark.sql.connect.proto.base_pb2_grpc.__annotations__W
builtins.dict[builtins.str,Any]
builtins.str"builtins.str
Any"builtins.dict*=
grpc,pyspark.sql.connect.proto.base_pb2_grpc.grpc
Any*G
spark_dot_connect_dot_base__pb2"pyspark.sql.connect.proto.base_pb2 